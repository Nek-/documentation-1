### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry
  commentId: T:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry
  id: PersistentSubscriptionConsumerStrategyRegistry
  parent: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  children:
  - EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[])
  - EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.GetInstance(System.String,System.String)
  - EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.ValidateStrategy(System.String)
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionConsumerStrategyRegistry
  nameWithType: PersistentSubscriptionConsumerStrategyRegistry
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry
  type: Class
  source:
    id: PersistentSubscriptionConsumerStrategyRegistry
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/ConsumerStrategy/PersistentSubscriptionConsumerStrategyRegistry.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  syntax:
    content: public class PersistentSubscriptionConsumerStrategyRegistry
    content.vb: Public Class PersistentSubscriptionConsumerStrategyRegistry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[])
  commentId: M:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[])
  id: '#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[])'
  parent: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionConsumerStrategyRegistry(IPublisher, ISubscriber, IPersistentSubscriptionConsumerStrategyFactory[])
  nameWithType: PersistentSubscriptionConsumerStrategyRegistry.PersistentSubscriptionConsumerStrategyRegistry(IPublisher, ISubscriber, IPersistentSubscriptionConsumerStrategyFactory[])
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.PersistentSubscriptionConsumerStrategyRegistry(EventStore.Core.Bus.IPublisher, EventStore.Core.Bus.ISubscriber, EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[])
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/ConsumerStrategy/PersistentSubscriptionConsumerStrategyRegistry.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  syntax:
    content: public PersistentSubscriptionConsumerStrategyRegistry(IPublisher mainQueue, ISubscriber mainBus, IPersistentSubscriptionConsumerStrategyFactory[] additionalConsumerStrategies)
    parameters:
    - id: mainQueue
      type: EventStore.Core.Bus.IPublisher
    - id: mainBus
      type: EventStore.Core.Bus.ISubscriber
    - id: additionalConsumerStrategies
      type: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[]
    content.vb: Public Sub New(mainQueue As IPublisher, mainBus As ISubscriber, additionalConsumerStrategies As IPersistentSubscriptionConsumerStrategyFactory())
  overload: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.#ctor*
  nameWithType.vb: PersistentSubscriptionConsumerStrategyRegistry.PersistentSubscriptionConsumerStrategyRegistry(IPublisher, ISubscriber, IPersistentSubscriptionConsumerStrategyFactory())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.PersistentSubscriptionConsumerStrategyRegistry(EventStore.Core.Bus.IPublisher, EventStore.Core.Bus.ISubscriber, EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory())
  name.vb: PersistentSubscriptionConsumerStrategyRegistry(IPublisher, ISubscriber, IPersistentSubscriptionConsumerStrategyFactory())
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.GetInstance(System.String,System.String)
  commentId: M:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.GetInstance(System.String,System.String)
  id: GetInstance(System.String,System.String)
  parent: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry
  langs:
  - csharp
  - vb
  name: GetInstance(String, String)
  nameWithType: PersistentSubscriptionConsumerStrategyRegistry.GetInstance(String, String)
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.GetInstance(System.String, System.String)
  type: Method
  source:
    id: GetInstance
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/ConsumerStrategy/PersistentSubscriptionConsumerStrategyRegistry.cs
    startLine: 35
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  syntax:
    content: public IPersistentSubscriptionConsumerStrategy GetInstance(string namedConsumerStrategy, string subscriptionId)
    parameters:
    - id: namedConsumerStrategy
      type: System.String
    - id: subscriptionId
      type: System.String
    return:
      type: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
    content.vb: Public Function GetInstance(namedConsumerStrategy As String, subscriptionId As String) As IPersistentSubscriptionConsumerStrategy
  overload: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.GetInstance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.ValidateStrategy(System.String)
  commentId: M:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.ValidateStrategy(System.String)
  id: ValidateStrategy(System.String)
  parent: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry
  langs:
  - csharp
  - vb
  name: ValidateStrategy(String)
  nameWithType: PersistentSubscriptionConsumerStrategyRegistry.ValidateStrategy(String)
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.ValidateStrategy(System.String)
  type: Method
  source:
    id: ValidateStrategy
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/ConsumerStrategy/PersistentSubscriptionConsumerStrategyRegistry.cs
    startLine: 46
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  syntax:
    content: public bool ValidateStrategy(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ValidateStrategy(name As String) As Boolean
  overload: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.ValidateStrategy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  commentId: N:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  name: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  nameWithType: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersistentSubscriptionConsumerStrategyRegistry>()
  nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionConsumerStrategyRegistry>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersistentSubscriptionConsumerStrategyRegistry)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry)()
  name.vb: Serialize(Of PersistentSubscriptionConsumerStrategyRegistry)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersistentSubscriptionConsumerStrategyRegistry>
    nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionConsumerStrategyRegistry>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersistentSubscriptionConsumerStrategyRegistry)
    nameWithType: ProtobufExtensions.Serialize(Of PersistentSubscriptionConsumerStrategyRegistry)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersistentSubscriptionConsumerStrategyRegistry>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionConsumerStrategyRegistry>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionConsumerStrategyRegistry)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry)()
  name.vb: SerializeToArray(Of PersistentSubscriptionConsumerStrategyRegistry)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersistentSubscriptionConsumerStrategyRegistry>
    nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionConsumerStrategyRegistry>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersistentSubscriptionConsumerStrategyRegistry)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionConsumerStrategyRegistry)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.#ctor*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.#ctor
  name: PersistentSubscriptionConsumerStrategyRegistry
  nameWithType: PersistentSubscriptionConsumerStrategyRegistry.PersistentSubscriptionConsumerStrategyRegistry
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.PersistentSubscriptionConsumerStrategyRegistry
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus.ISubscriber
  commentId: T:EventStore.Core.Bus.ISubscriber
  parent: EventStore.Core.Bus
  name: ISubscriber
  nameWithType: ISubscriber
  fullName: EventStore.Core.Bus.ISubscriber
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[]
  isExternal: true
  name: IPersistentSubscriptionConsumerStrategyFactory[]
  nameWithType: IPersistentSubscriptionConsumerStrategyFactory[]
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[]
  nameWithType.vb: IPersistentSubscriptionConsumerStrategyFactory()
  fullName.vb: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory()
  name.vb: IPersistentSubscriptionConsumerStrategyFactory()
  spec.csharp:
  - uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
    name: IPersistentSubscriptionConsumerStrategyFactory
    nameWithType: IPersistentSubscriptionConsumerStrategyFactory
    fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
    name: IPersistentSubscriptionConsumerStrategyFactory
    nameWithType: IPersistentSubscriptionConsumerStrategyFactory
    fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.GetInstance*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.GetInstance
  name: GetInstance
  nameWithType: PersistentSubscriptionConsumerStrategyRegistry.GetInstance
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.GetInstance
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
  commentId: T:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
  parent: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  name: IPersistentSubscriptionConsumerStrategy
  nameWithType: IPersistentSubscriptionConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.ValidateStrategy*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.ValidateStrategy
  name: ValidateStrategy
  nameWithType: PersistentSubscriptionConsumerStrategyRegistry.ValidateStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.ValidateStrategy
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  commentId: T:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  id: IPersistentSubscriptionCheckpointWriter
  parent: EventStore.Core.Services.PersistentSubscription
  children:
  - EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginDelete(Action{EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter})
  - EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginWriteState(System.Int64)
  langs:
  - csharp
  - vb
  name: IPersistentSubscriptionCheckpointWriter
  nameWithType: IPersistentSubscriptionCheckpointWriter
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/IPersistentSubscriptionCheckpointWriter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IPersistentSubscriptionCheckpointWriter
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/IPersistentSubscriptionCheckpointWriter.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public interface IPersistentSubscriptionCheckpointWriter
    content.vb: Public Interface IPersistentSubscriptionCheckpointWriter
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginWriteState(System.Int64)
  commentId: M:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginWriteState(System.Int64)
  id: BeginWriteState(System.Int64)
  parent: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  langs:
  - csharp
  - vb
  name: BeginWriteState(Int64)
  nameWithType: IPersistentSubscriptionCheckpointWriter.BeginWriteState(Int64)
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginWriteState(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/IPersistentSubscriptionCheckpointWriter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: BeginWriteState
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/IPersistentSubscriptionCheckpointWriter.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: void BeginWriteState(long state)
    parameters:
    - id: state
      type: System.Int64
    content.vb: Sub BeginWriteState(state As Long)
  overload: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginWriteState*
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginDelete(Action{EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter})
  commentId: M:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginDelete(Action{EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter})
  id: BeginDelete(Action{EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter})
  parent: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  langs:
  - csharp
  - vb
  name: BeginDelete(Action<IPersistentSubscriptionCheckpointWriter>)
  nameWithType: IPersistentSubscriptionCheckpointWriter.BeginDelete(Action<IPersistentSubscriptionCheckpointWriter>)
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginDelete(Action<EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/IPersistentSubscriptionCheckpointWriter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: BeginDelete
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/IPersistentSubscriptionCheckpointWriter.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: void BeginDelete(Action<IPersistentSubscriptionCheckpointWriter> completed)
    parameters:
    - id: completed
      type: Action{EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter}
    content.vb: Sub BeginDelete(completed As Action(Of IPersistentSubscriptionCheckpointWriter))
  overload: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginDelete*
  nameWithType.vb: IPersistentSubscriptionCheckpointWriter.BeginDelete(Action(Of IPersistentSubscriptionCheckpointWriter))
  fullName.vb: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginDelete(Action(Of EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter))
  name.vb: BeginDelete(Action(Of IPersistentSubscriptionCheckpointWriter))
references:
- uid: EventStore.Core.Services.PersistentSubscription
  commentId: N:EventStore.Core.Services.PersistentSubscription
  name: EventStore.Core.Services.PersistentSubscription
  nameWithType: EventStore.Core.Services.PersistentSubscription
  fullName: EventStore.Core.Services.PersistentSubscription
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IPersistentSubscriptionCheckpointWriter>()
  nameWithType: ProtobufExtensions.Serialize<IPersistentSubscriptionCheckpointWriter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IPersistentSubscriptionCheckpointWriter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter)()
  name.vb: Serialize(Of IPersistentSubscriptionCheckpointWriter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IPersistentSubscriptionCheckpointWriter>
    nameWithType: ProtobufExtensions.Serialize<IPersistentSubscriptionCheckpointWriter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IPersistentSubscriptionCheckpointWriter)
    nameWithType: ProtobufExtensions.Serialize(Of IPersistentSubscriptionCheckpointWriter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IPersistentSubscriptionCheckpointWriter>()
  nameWithType: ProtobufExtensions.SerializeToArray<IPersistentSubscriptionCheckpointWriter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IPersistentSubscriptionCheckpointWriter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter)()
  name.vb: SerializeToArray(Of IPersistentSubscriptionCheckpointWriter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IPersistentSubscriptionCheckpointWriter>
    nameWithType: ProtobufExtensions.SerializeToArray<IPersistentSubscriptionCheckpointWriter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IPersistentSubscriptionCheckpointWriter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IPersistentSubscriptionCheckpointWriter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginWriteState*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginWriteState
  name: BeginWriteState
  nameWithType: IPersistentSubscriptionCheckpointWriter.BeginWriteState
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginWriteState
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginDelete*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginDelete
  name: BeginDelete
  nameWithType: IPersistentSubscriptionCheckpointWriter.BeginDelete
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.BeginDelete
- uid: Action{EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter}
  commentId: '!:Action{EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter}'
  definition: Action`1
  name: Action<IPersistentSubscriptionCheckpointWriter>
  nameWithType: Action<IPersistentSubscriptionCheckpointWriter>
  fullName: Action<EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter>
  nameWithType.vb: Action(Of IPersistentSubscriptionCheckpointWriter)
  fullName.vb: Action(Of EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter)
  name.vb: Action(Of IPersistentSubscriptionCheckpointWriter)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
    name: IPersistentSubscriptionCheckpointWriter
    nameWithType: IPersistentSubscriptionCheckpointWriter
    fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
    name: IPersistentSubscriptionCheckpointWriter
    nameWithType: IPersistentSubscriptionCheckpointWriter
    fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

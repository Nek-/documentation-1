### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader
  commentId: T:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader
  id: PersistentSubscriptionCheckpointReader
  parent: EventStore.Core.Services.PersistentSubscription
  children:
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.#ctor(EventStore.Core.Helpers.IODispatcher)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.BeginLoadState(System.String,Action{System.Nullable{System.Int64}})
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionCheckpointReader
  nameWithType: PersistentSubscriptionCheckpointReader
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionCheckpointReader.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PersistentSubscriptionCheckpointReader
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionCheckpointReader.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: 'public class PersistentSubscriptionCheckpointReader : object, IPersistentSubscriptionCheckpointReader'
    content.vb: >-
      Public Class PersistentSubscriptionCheckpointReader
          Inherits Object
          Implements IPersistentSubscriptionCheckpointReader
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.#ctor(EventStore.Core.Helpers.IODispatcher)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.#ctor(EventStore.Core.Helpers.IODispatcher)
  id: '#ctor(EventStore.Core.Helpers.IODispatcher)'
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionCheckpointReader(IODispatcher)
  nameWithType: PersistentSubscriptionCheckpointReader.PersistentSubscriptionCheckpointReader(IODispatcher)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.PersistentSubscriptionCheckpointReader(EventStore.Core.Helpers.IODispatcher)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionCheckpointReader.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionCheckpointReader.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public PersistentSubscriptionCheckpointReader(IODispatcher ioDispatcher)
    parameters:
    - id: ioDispatcher
      type: EventStore.Core.Helpers.IODispatcher
    content.vb: Public Sub New(ioDispatcher As IODispatcher)
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.BeginLoadState(System.String,Action{System.Nullable{System.Int64}})
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.BeginLoadState(System.String,Action{System.Nullable{System.Int64}})
  id: BeginLoadState(System.String,Action{System.Nullable{System.Int64}})
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader
  langs:
  - csharp
  - vb
  name: BeginLoadState(String, Action<Nullable<Int64>>)
  nameWithType: PersistentSubscriptionCheckpointReader.BeginLoadState(String, Action<Nullable<Int64>>)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.BeginLoadState(System.String, Action<System.Nullable<System.Int64>>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionCheckpointReader.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: BeginLoadState
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionCheckpointReader.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public void BeginLoadState(string subscriptionId, Action<long? > onStateLoaded)
    parameters:
    - id: subscriptionId
      type: System.String
    - id: onStateLoaded
      type: Action{System.Nullable{System.Int64}}
    content.vb: Public Sub BeginLoadState(subscriptionId As String, onStateLoaded As Action(Of Long?))
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.BeginLoadState*
  implements:
  - EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.BeginLoadState(System.String,Action{System.Nullable{System.Int64}})
  nameWithType.vb: PersistentSubscriptionCheckpointReader.BeginLoadState(String, Action(Of Nullable(Of Int64)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.BeginLoadState(System.String, Action(Of System.Nullable(Of System.Int64)))
  name.vb: BeginLoadState(String, Action(Of Nullable(Of Int64)))
references:
- uid: EventStore.Core.Services.PersistentSubscription
  commentId: N:EventStore.Core.Services.PersistentSubscription
  name: EventStore.Core.Services.PersistentSubscription
  nameWithType: EventStore.Core.Services.PersistentSubscription
  fullName: EventStore.Core.Services.PersistentSubscription
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
  commentId: T:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
  parent: EventStore.Core.Services.PersistentSubscription
  name: IPersistentSubscriptionCheckpointReader
  nameWithType: IPersistentSubscriptionCheckpointReader
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersistentSubscriptionCheckpointReader>()
  nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionCheckpointReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersistentSubscriptionCheckpointReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader)()
  name.vb: Serialize(Of PersistentSubscriptionCheckpointReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersistentSubscriptionCheckpointReader>
    nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionCheckpointReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersistentSubscriptionCheckpointReader)
    nameWithType: ProtobufExtensions.Serialize(Of PersistentSubscriptionCheckpointReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersistentSubscriptionCheckpointReader>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionCheckpointReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionCheckpointReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader)()
  name.vb: SerializeToArray(Of PersistentSubscriptionCheckpointReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersistentSubscriptionCheckpointReader>
    nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionCheckpointReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersistentSubscriptionCheckpointReader)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionCheckpointReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.#ctor*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.#ctor
  name: PersistentSubscriptionCheckpointReader
  nameWithType: PersistentSubscriptionCheckpointReader.PersistentSubscriptionCheckpointReader
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.PersistentSubscriptionCheckpointReader
- uid: EventStore.Core.Helpers.IODispatcher
  commentId: T:EventStore.Core.Helpers.IODispatcher
  parent: EventStore.Core.Helpers
  name: IODispatcher
  nameWithType: IODispatcher
  fullName: EventStore.Core.Helpers.IODispatcher
- uid: EventStore.Core.Helpers
  commentId: N:EventStore.Core.Helpers
  name: EventStore.Core.Helpers
  nameWithType: EventStore.Core.Helpers
  fullName: EventStore.Core.Helpers
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.BeginLoadState*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.BeginLoadState
  name: BeginLoadState
  nameWithType: PersistentSubscriptionCheckpointReader.BeginLoadState
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.BeginLoadState
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.BeginLoadState(System.String,Action{System.Nullable{System.Int64}})
  commentId: M:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.BeginLoadState(System.String,Action{System.Nullable{System.Int64}})
  parent: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
  isExternal: true
  name: BeginLoadState(String, Action<Nullable<Int64>>)
  nameWithType: IPersistentSubscriptionCheckpointReader.BeginLoadState(String, Action<Nullable<Int64>>)
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.BeginLoadState(System.String, Action<System.Nullable<System.Int64>>)
  nameWithType.vb: IPersistentSubscriptionCheckpointReader.BeginLoadState(String, Action(Of Nullable(Of Int64)))
  fullName.vb: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.BeginLoadState(System.String, Action(Of System.Nullable(Of System.Int64)))
  name.vb: BeginLoadState(String, Action(Of Nullable(Of Int64)))
  spec.csharp:
  - uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.BeginLoadState(System.String,Action{System.Nullable{System.Int64}})
    name: BeginLoadState
    nameWithType: IPersistentSubscriptionCheckpointReader.BeginLoadState
    fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.BeginLoadState
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.BeginLoadState(System.String,Action{System.Nullable{System.Int64}})
    name: BeginLoadState
    nameWithType: IPersistentSubscriptionCheckpointReader.BeginLoadState
    fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.BeginLoadState
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Action{System.Nullable{System.Int64}}
  commentId: '!:Action{System.Nullable{System.Int64}}'
  definition: Action`1
  name: Action<Nullable<Int64>>
  nameWithType: Action<Nullable<Int64>>
  fullName: Action<System.Nullable<System.Int64>>
  nameWithType.vb: Action(Of Nullable(Of Int64))
  fullName.vb: Action(Of System.Nullable(Of System.Int64))
  name.vb: Action(Of Nullable(Of Int64))
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

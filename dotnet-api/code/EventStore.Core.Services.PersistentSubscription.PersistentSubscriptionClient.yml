### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  commentId: T:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  id: PersistentSubscriptionClient
  parent: EventStore.Core.Services.PersistentSubscription
  children:
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.#ctor(System.Guid,System.Guid,EventStore.Core.Messaging.IEnvelope,System.Int32,System.String,System.String,System.Diagnostics.Stopwatch,System.Boolean)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.AvailableSlots
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.ConnectionId
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.CorrelationId
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.EventConfirmed
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.From
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.GetUnconfirmedEvents
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.InflightMessages
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.LastTotalItems
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.MaximumInFlightMessages
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Push(EventStore.Core.Data.ResolvedEvent,System.Int32)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.TotalItems
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Username
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionClient
  nameWithType: PersistentSubscriptionClient
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  type: Class
  source:
    id: PersistentSubscriptionClient
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public class PersistentSubscriptionClient
    content.vb: Public Class PersistentSubscriptionClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.MaximumInFlightMessages
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.MaximumInFlightMessages
  id: MaximumInFlightMessages
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: MaximumInFlightMessages
  nameWithType: PersistentSubscriptionClient.MaximumInFlightMessages
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.MaximumInFlightMessages
  type: Field
  source:
    id: MaximumInFlightMessages
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public readonly int MaximumInFlightMessages
    return:
      type: System.Int32
    content.vb: Public ReadOnly MaximumInFlightMessages As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Username
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Username
  id: Username
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: PersistentSubscriptionClient.Username
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Username
  type: Field
  source:
    id: Username
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public readonly string Username
    return:
      type: System.String
    content.vb: Public ReadOnly Username As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.From
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.From
  id: From
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: From
  nameWithType: PersistentSubscriptionClient.From
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.From
  type: Field
  source:
    id: From
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public readonly string From
    return:
      type: System.String
    content.vb: Public ReadOnly From As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.#ctor(System.Guid,System.Guid,EventStore.Core.Messaging.IEnvelope,System.Int32,System.String,System.String,System.Diagnostics.Stopwatch,System.Boolean)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.#ctor(System.Guid,System.Guid,EventStore.Core.Messaging.IEnvelope,System.Int32,System.String,System.String,System.Diagnostics.Stopwatch,System.Boolean)
  id: '#ctor(System.Guid,System.Guid,EventStore.Core.Messaging.IEnvelope,System.Int32,System.String,System.String,System.Diagnostics.Stopwatch,System.Boolean)'
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionClient(Guid, Guid, IEnvelope, Int32, String, String, Stopwatch, Boolean)
  nameWithType: PersistentSubscriptionClient.PersistentSubscriptionClient(Guid, Guid, IEnvelope, Int32, String, String, Stopwatch, Boolean)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.PersistentSubscriptionClient(System.Guid, System.Guid, EventStore.Core.Messaging.IEnvelope, System.Int32, System.String, System.String, System.Diagnostics.Stopwatch, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public PersistentSubscriptionClient(Guid correlationId, Guid connectionId, IEnvelope envelope, int inFlightMessages, string username, string from, Stopwatch watch, bool extraStatistics)
    parameters:
    - id: correlationId
      type: System.Guid
    - id: connectionId
      type: System.Guid
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: inFlightMessages
      type: System.Int32
    - id: username
      type: System.String
    - id: from
      type: System.String
    - id: watch
      type: System.Diagnostics.Stopwatch
    - id: extraStatistics
      type: System.Boolean
    content.vb: Public Sub New(correlationId As Guid, connectionId As Guid, envelope As IEnvelope, inFlightMessages As Integer, username As String, from As String, watch As Stopwatch, extraStatistics As Boolean)
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.EventConfirmed
  commentId: E:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.EventConfirmed
  id: EventConfirmed
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: EventConfirmed
  nameWithType: PersistentSubscriptionClient.EventConfirmed
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.EventConfirmed
  type: Event
  source:
    id: EventConfirmed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 45
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nRaised whenever an in-flight event has been confirmed. This could be because of ack, nak, timeout or disconnection.\n"
  example: []
  syntax:
    content: public event Action<PersistentSubscriptionClient, ResolvedEvent> EventConfirmed
    return:
      type: System.Action{EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient,EventStore.Core.Data.ResolvedEvent}
    content.vb: Public Event EventConfirmed As Action(Of PersistentSubscriptionClient, ResolvedEvent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.InflightMessages
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.InflightMessages
  id: InflightMessages
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: InflightMessages
  nameWithType: PersistentSubscriptionClient.InflightMessages
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.InflightMessages
  type: Property
  source:
    id: InflightMessages
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 47
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int InflightMessages { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property InflightMessages As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.InflightMessages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.AvailableSlots
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.AvailableSlots
  id: AvailableSlots
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: AvailableSlots
  nameWithType: PersistentSubscriptionClient.AvailableSlots
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.AvailableSlots
  type: Property
  source:
    id: AvailableSlots
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 51
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int AvailableSlots { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AvailableSlots As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.AvailableSlots*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.ConnectionId
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.ConnectionId
  id: ConnectionId
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: PersistentSubscriptionClient.ConnectionId
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.ConnectionId
  type: Property
  source:
    id: ConnectionId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 55
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public Guid ConnectionId { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property ConnectionId As Guid
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.ConnectionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.TotalItems
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.TotalItems
  id: TotalItems
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: TotalItems
  nameWithType: PersistentSubscriptionClient.TotalItems
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.TotalItems
  type: Property
  source:
    id: TotalItems
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 59
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public long TotalItems { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property TotalItems As Long
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.TotalItems*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.LastTotalItems
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.LastTotalItems
  id: LastTotalItems
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: LastTotalItems
  nameWithType: PersistentSubscriptionClient.LastTotalItems
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.LastTotalItems
  type: Property
  source:
    id: LastTotalItems
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 63
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public long LastTotalItems { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LastTotalItems As Long
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.LastTotalItems*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.CorrelationId
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.CorrelationId
  id: CorrelationId
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: PersistentSubscriptionClient.CorrelationId
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.CorrelationId
  type: Property
  source:
    id: CorrelationId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 65
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public Guid CorrelationId { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property CorrelationId As Guid
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.CorrelationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Push(EventStore.Core.Data.ResolvedEvent,System.Int32)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Push(EventStore.Core.Data.ResolvedEvent,System.Int32)
  id: Push(EventStore.Core.Data.ResolvedEvent,System.Int32)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: Push(ResolvedEvent, Int32)
  nameWithType: PersistentSubscriptionClient.Push(ResolvedEvent, Int32)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Push(EventStore.Core.Data.ResolvedEvent, System.Int32)
  type: Method
  source:
    id: Push
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 85
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public bool Push(ResolvedEvent evnt, int retryCount)
    parameters:
    - id: evnt
      type: EventStore.Core.Data.ResolvedEvent
    - id: retryCount
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Push(evnt As ResolvedEvent, retryCount As Integer) As Boolean
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Push*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.GetUnconfirmedEvents
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.GetUnconfirmedEvents
  id: GetUnconfirmedEvents
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  langs:
  - csharp
  - vb
  name: GetUnconfirmedEvents()
  nameWithType: PersistentSubscriptionClient.GetUnconfirmedEvents()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.GetUnconfirmedEvents()
  type: Method
  source:
    id: GetUnconfirmedEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionClient.cs
    startLine: 104
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public IEnumerable<ResolvedEvent> GetUnconfirmedEvents()
    return:
      type: System.Collections.Generic.IEnumerable{EventStore.Core.Data.ResolvedEvent}
    content.vb: Public Function GetUnconfirmedEvents As IEnumerable(Of ResolvedEvent)
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.GetUnconfirmedEvents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.PersistentSubscription
  commentId: N:EventStore.Core.Services.PersistentSubscription
  name: EventStore.Core.Services.PersistentSubscription
  nameWithType: EventStore.Core.Services.PersistentSubscription
  fullName: EventStore.Core.Services.PersistentSubscription
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersistentSubscriptionClient>()
  nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionClient>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersistentSubscriptionClient)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient)()
  name.vb: Serialize(Of PersistentSubscriptionClient)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersistentSubscriptionClient>
    nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionClient>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersistentSubscriptionClient)
    nameWithType: ProtobufExtensions.Serialize(Of PersistentSubscriptionClient)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersistentSubscriptionClient>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionClient>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionClient)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient)()
  name.vb: SerializeToArray(Of PersistentSubscriptionClient)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersistentSubscriptionClient>
    nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionClient>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersistentSubscriptionClient)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionClient)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.#ctor*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.#ctor
  name: PersistentSubscriptionClient
  nameWithType: PersistentSubscriptionClient.PersistentSubscriptionClient
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.PersistentSubscriptionClient
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: System.Diagnostics.Stopwatch
  commentId: T:System.Diagnostics.Stopwatch
  parent: System.Diagnostics
  isExternal: true
  name: Stopwatch
  nameWithType: Stopwatch
  fullName: System.Diagnostics.Stopwatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: true
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Action{EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient,EventStore.Core.Data.ResolvedEvent}
  commentId: T:System.Action{EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient,EventStore.Core.Data.ResolvedEvent}
  parent: System
  definition: System.Action`2
  name: Action<PersistentSubscriptionClient, ResolvedEvent>
  nameWithType: Action<PersistentSubscriptionClient, ResolvedEvent>
  fullName: System.Action<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient, EventStore.Core.Data.ResolvedEvent>
  nameWithType.vb: Action(Of PersistentSubscriptionClient, ResolvedEvent)
  fullName.vb: System.Action(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient, EventStore.Core.Data.ResolvedEvent)
  name.vb: Action(Of PersistentSubscriptionClient, ResolvedEvent)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
    name: PersistentSubscriptionClient
    nameWithType: PersistentSubscriptionClient
    fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Data.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Core.Data.ResolvedEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
    name: PersistentSubscriptionClient
    nameWithType: PersistentSubscriptionClient
    fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Data.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Core.Data.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.InflightMessages*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.InflightMessages
  name: InflightMessages
  nameWithType: PersistentSubscriptionClient.InflightMessages
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.InflightMessages
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.AvailableSlots*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.AvailableSlots
  name: AvailableSlots
  nameWithType: PersistentSubscriptionClient.AvailableSlots
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.AvailableSlots
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.ConnectionId*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.ConnectionId
  name: ConnectionId
  nameWithType: PersistentSubscriptionClient.ConnectionId
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.ConnectionId
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.TotalItems*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.TotalItems
  name: TotalItems
  nameWithType: PersistentSubscriptionClient.TotalItems
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.TotalItems
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.LastTotalItems*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.LastTotalItems
  name: LastTotalItems
  nameWithType: PersistentSubscriptionClient.LastTotalItems
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.LastTotalItems
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.CorrelationId*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.CorrelationId
  name: CorrelationId
  nameWithType: PersistentSubscriptionClient.CorrelationId
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.CorrelationId
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Push*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Push
  name: Push
  nameWithType: PersistentSubscriptionClient.Push
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.Push
- uid: EventStore.Core.Data.ResolvedEvent
  commentId: T:EventStore.Core.Data.ResolvedEvent
  parent: EventStore.Core.Data
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Core.Data.ResolvedEvent
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.GetUnconfirmedEvents*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.GetUnconfirmedEvents
  name: GetUnconfirmedEvents
  nameWithType: PersistentSubscriptionClient.GetUnconfirmedEvents
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.GetUnconfirmedEvents
- uid: System.Collections.Generic.IEnumerable{EventStore.Core.Data.ResolvedEvent}
  commentId: T:System.Collections.Generic.IEnumerable{EventStore.Core.Data.ResolvedEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ResolvedEvent>
  nameWithType: IEnumerable<ResolvedEvent>
  fullName: System.Collections.Generic.IEnumerable<EventStore.Core.Data.ResolvedEvent>
  nameWithType.vb: IEnumerable(Of ResolvedEvent)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EventStore.Core.Data.ResolvedEvent)
  name.vb: IEnumerable(Of ResolvedEvent)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Data.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Core.Data.ResolvedEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Data.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Core.Data.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

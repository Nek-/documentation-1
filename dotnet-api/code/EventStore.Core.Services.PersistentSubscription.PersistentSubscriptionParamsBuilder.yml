### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  commentId: T:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  id: PersistentSubscriptionParamsBuilder
  parent: EventStore.Core.Services.PersistentSubscription
  children:
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CheckPointAfter(System.TimeSpan)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CreateFor(System.String,System.String)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CustomConsumerStrategy(EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DoNotResolveLinkTos
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DontTimeoutMessages
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MaximumToCheckPoint(System.Int32)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MinimumToCheckPoint(System.Int32)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.op_Implicit(EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder)~EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferDispatchToSingle
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferRoundRobin
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.ResolveLinkTos
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFrom(System.Int32)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromBeginning
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromCurrent
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointReader(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointWriter(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithEventLoader(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithExtraStatistics
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithHistoryBufferSizeOf(System.Int32)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithLiveBufferSizeOf(System.Int32)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMaxRetriesOf(System.Int32)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageParker(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageTimeoutOf(System.TimeSpan)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithNamedConsumerStrategy(EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithReadBatchOf(System.Int32)
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionParamsBuilder
  nameWithType: PersistentSubscriptionParamsBuilder
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  type: Class
  source:
    id: PersistentSubscriptionParamsBuilder
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nBuilds a <xref href=\"EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public class PersistentSubscriptionParamsBuilder
    content.vb: Public Class PersistentSubscriptionParamsBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CreateFor(System.String,System.String)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CreateFor(System.String,System.String)
  id: CreateFor(System.String,System.String)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: CreateFor(String, String)
  nameWithType: PersistentSubscriptionParamsBuilder.CreateFor(String, String)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CreateFor(System.String, System.String)
  type: Method
  source:
    id: CreateFor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 36
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nCreates a new <xref href=\"EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder\" data-throw-if-not-resolved=\"false\"></xref> object\n"
  example: []
  syntax:
    content: public static PersistentSubscriptionParamsBuilder CreateFor(string streamName, string groupName)
    parameters:
    - id: streamName
      type: System.String
      description: The name of the stream for the subscription
    - id: groupName
      type: System.String
      description: The name of the group of the subscription
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: a new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref> object
    content.vb: Public Shared Function CreateFor(streamName As String, groupName As String) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CreateFor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointReader(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointReader(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader)
  id: WithCheckpointReader(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithCheckpointReader(IPersistentSubscriptionCheckpointReader)
  nameWithType: PersistentSubscriptionParamsBuilder.WithCheckpointReader(IPersistentSubscriptionCheckpointReader)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointReader(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader)
  type: Method
  source:
    id: WithCheckpointReader
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 84
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the checkpoint reader for the instance\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithCheckpointReader(IPersistentSubscriptionCheckpointReader reader)
    parameters:
    - id: reader
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
      description: ''
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: ''
    content.vb: Public Function WithCheckpointReader(reader As IPersistentSubscriptionCheckpointReader) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointReader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageParker(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageParker(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker)
  id: WithMessageParker(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithMessageParker(IPersistentSubscriptionMessageParker)
  nameWithType: PersistentSubscriptionParamsBuilder.WithMessageParker(IPersistentSubscriptionMessageParker)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageParker(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker)
  type: Method
  source:
    id: WithMessageParker
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 95
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the message parker for the instance\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithMessageParker(IPersistentSubscriptionMessageParker parker)
    parameters:
    - id: parker
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker
      description: ''
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: ''
    content.vb: Public Function WithMessageParker(parker As IPersistentSubscriptionMessageParker) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageParker*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointWriter(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointWriter(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter)
  id: WithCheckpointWriter(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithCheckpointWriter(IPersistentSubscriptionCheckpointWriter)
  nameWithType: PersistentSubscriptionParamsBuilder.WithCheckpointWriter(IPersistentSubscriptionCheckpointWriter)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointWriter(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter)
  type: Method
  source:
    id: WithCheckpointWriter
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 105
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the check point reader for the subscription\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithCheckpointWriter(IPersistentSubscriptionCheckpointWriter writer)
    parameters:
    - id: writer
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
      description: ''
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: ''
    content.vb: Public Function WithCheckpointWriter(writer As IPersistentSubscriptionCheckpointWriter) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointWriter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithEventLoader(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithEventLoader(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader)
  id: WithEventLoader(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithEventLoader(IPersistentSubscriptionStreamReader)
  nameWithType: PersistentSubscriptionParamsBuilder.WithEventLoader(IPersistentSubscriptionStreamReader)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithEventLoader(EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader)
  type: Method
  source:
    id: WithEventLoader
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 116
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the event loader for the subscription\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithEventLoader(IPersistentSubscriptionStreamReader loader)
    parameters:
    - id: loader
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader
      description: ''
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: ''
    content.vb: Public Function WithEventLoader(loader As IPersistentSubscriptionStreamReader) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithEventLoader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithExtraStatistics
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithExtraStatistics
  id: WithExtraStatistics
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithExtraStatistics()
  nameWithType: PersistentSubscriptionParamsBuilder.WithExtraStatistics()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithExtraStatistics()
  type: Method
  source:
    id: WithExtraStatistics
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 126
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the option to include further latency statistics. These statistics have a cost and should not be used\nin high performance situations.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithExtraStatistics()
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithExtraStatistics As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithExtraStatistics*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.ResolveLinkTos
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.ResolveLinkTos
  id: ResolveLinkTos
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: ResolveLinkTos()
  nameWithType: PersistentSubscriptionParamsBuilder.ResolveLinkTos()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.ResolveLinkTos()
  type: Method
  source:
    id: ResolveLinkTos
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 135
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the option to resolve linktos on events that are found for this subscription.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder ResolveLinkTos()
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ResolveLinkTos As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.ResolveLinkTos*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DoNotResolveLinkTos
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DoNotResolveLinkTos
  id: DoNotResolveLinkTos
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: DoNotResolveLinkTos()
  nameWithType: PersistentSubscriptionParamsBuilder.DoNotResolveLinkTos()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DoNotResolveLinkTos()
  type: Method
  source:
    id: DoNotResolveLinkTos
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 144
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the option to not resolve linktos on events that are found for this subscription.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder DoNotResolveLinkTos()
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function DoNotResolveLinkTos As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DoNotResolveLinkTos*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferRoundRobin
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferRoundRobin
  id: PreferRoundRobin
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: PreferRoundRobin()
  nameWithType: PersistentSubscriptionParamsBuilder.PreferRoundRobin()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferRoundRobin()
  type: Method
  source:
    id: PreferRoundRobin
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 154
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nIf set the subscription will prefer if possible to round robin between the clients that\nare connected.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder PreferRoundRobin()
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function PreferRoundRobin As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferRoundRobin*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferDispatchToSingle
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferDispatchToSingle
  id: PreferDispatchToSingle
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: PreferDispatchToSingle()
  nameWithType: PersistentSubscriptionParamsBuilder.PreferDispatchToSingle()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferDispatchToSingle()
  type: Method
  source:
    id: PreferDispatchToSingle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 165
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nIf set the subscription will prefer if possible to dispatch only to a single of the connected\nclients. If however the buffer limits are reached on that client it will begin sending to other \nclients.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder PreferDispatchToSingle()
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function PreferDispatchToSingle As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferDispatchToSingle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CustomConsumerStrategy(EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CustomConsumerStrategy(EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy)
  id: CustomConsumerStrategy(EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: CustomConsumerStrategy(IPersistentSubscriptionConsumerStrategy)
  nameWithType: PersistentSubscriptionParamsBuilder.CustomConsumerStrategy(IPersistentSubscriptionConsumerStrategy)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CustomConsumerStrategy(EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy)
  type: Method
  source:
    id: CustomConsumerStrategy
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 175
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the consumer strategy to the one provided.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder CustomConsumerStrategy(IPersistentSubscriptionConsumerStrategy consumerStrategy)
    parameters:
    - id: consumerStrategy
      type: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
      description: ''
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: ''
    content.vb: Public Function CustomConsumerStrategy(consumerStrategy As IPersistentSubscriptionConsumerStrategy) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CustomConsumerStrategy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromBeginning
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromBeginning
  id: StartFromBeginning
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: StartFromBeginning()
  nameWithType: PersistentSubscriptionParamsBuilder.StartFromBeginning()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromBeginning()
  type: Method
  source:
    id: StartFromBeginning
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 186
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets that the subscription should start from the beginning of the stream.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder StartFromBeginning()
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function StartFromBeginning As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromBeginning*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFrom(System.Int32)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFrom(System.Int32)
  id: StartFrom(System.Int32)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: StartFrom(Int32)
  nameWithType: PersistentSubscriptionParamsBuilder.StartFrom(Int32)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFrom(System.Int32)
  type: Method
  source:
    id: StartFrom
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 195
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets that the subscription should start from a specified location of the stream.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder StartFrom(int position)
    parameters:
    - id: position
      type: System.Int32
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function StartFrom(position As Integer) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DontTimeoutMessages
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DontTimeoutMessages
  id: DontTimeoutMessages
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: DontTimeoutMessages()
  nameWithType: PersistentSubscriptionParamsBuilder.DontTimeoutMessages()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DontTimeoutMessages()
  type: Method
  source:
    id: DontTimeoutMessages
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 204
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the timeout timespan to about 30k years.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder DontTimeoutMessages()
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function DontTimeoutMessages As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DontTimeoutMessages*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CheckPointAfter(System.TimeSpan)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CheckPointAfter(System.TimeSpan)
  id: CheckPointAfter(System.TimeSpan)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: CheckPointAfter(TimeSpan)
  nameWithType: PersistentSubscriptionParamsBuilder.CheckPointAfter(TimeSpan)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CheckPointAfter(System.TimeSpan)
  type: Method
  source:
    id: CheckPointAfter
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 213
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the time after which the subscription should be checkpointed\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder CheckPointAfter(TimeSpan time)
    parameters:
    - id: time
      type: System.TimeSpan
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CheckPointAfter(time As TimeSpan) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CheckPointAfter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MinimumToCheckPoint(System.Int32)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MinimumToCheckPoint(System.Int32)
  id: MinimumToCheckPoint(System.Int32)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: MinimumToCheckPoint(Int32)
  nameWithType: PersistentSubscriptionParamsBuilder.MinimumToCheckPoint(Int32)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MinimumToCheckPoint(System.Int32)
  type: Method
  source:
    id: MinimumToCheckPoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 222
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the minimum number of items to checkpoint\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder MinimumToCheckPoint(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function MinimumToCheckPoint(count As Integer) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MinimumToCheckPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MaximumToCheckPoint(System.Int32)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MaximumToCheckPoint(System.Int32)
  id: MaximumToCheckPoint(System.Int32)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: MaximumToCheckPoint(Int32)
  nameWithType: PersistentSubscriptionParamsBuilder.MaximumToCheckPoint(Int32)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MaximumToCheckPoint(System.Int32)
  type: Method
  source:
    id: MaximumToCheckPoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 231
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the maximum number of items to checkpoint\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder MaximumToCheckPoint(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function MaximumToCheckPoint(count As Integer) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MaximumToCheckPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageTimeoutOf(System.TimeSpan)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageTimeoutOf(System.TimeSpan)
  id: WithMessageTimeoutOf(System.TimeSpan)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithMessageTimeoutOf(TimeSpan)
  nameWithType: PersistentSubscriptionParamsBuilder.WithMessageTimeoutOf(TimeSpan)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageTimeoutOf(System.TimeSpan)
  type: Method
  source:
    id: WithMessageTimeoutOf
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 240
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the timeout for a message (will be retried if an ack is not received within this timespan)\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithMessageTimeoutOf(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithMessageTimeoutOf(timeout As TimeSpan) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageTimeoutOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMaxRetriesOf(System.Int32)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMaxRetriesOf(System.Int32)
  id: WithMaxRetriesOf(System.Int32)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithMaxRetriesOf(Int32)
  nameWithType: PersistentSubscriptionParamsBuilder.WithMaxRetriesOf(Int32)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMaxRetriesOf(System.Int32)
  type: Method
  source:
    id: WithMaxRetriesOf
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 249
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the number of times a message should be retried before being considered a bad message\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithMaxRetriesOf(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithMaxRetriesOf(count As Integer) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMaxRetriesOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithLiveBufferSizeOf(System.Int32)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithLiveBufferSizeOf(System.Int32)
  id: WithLiveBufferSizeOf(System.Int32)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithLiveBufferSizeOf(Int32)
  nameWithType: PersistentSubscriptionParamsBuilder.WithLiveBufferSizeOf(Int32)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithLiveBufferSizeOf(System.Int32)
  type: Method
  source:
    id: WithLiveBufferSizeOf
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 261
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the size of the live buffer for the subscription. This is the buffer used \nto cache messages while sending messages as they happen. The count is\nin terms of the number of messages to cache.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithLiveBufferSizeOf(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithLiveBufferSizeOf(count As Integer) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithLiveBufferSizeOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithReadBatchOf(System.Int32)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithReadBatchOf(System.Int32)
  id: WithReadBatchOf(System.Int32)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithReadBatchOf(Int32)
  nameWithType: PersistentSubscriptionParamsBuilder.WithReadBatchOf(Int32)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithReadBatchOf(System.Int32)
  type: Method
  source:
    id: WithReadBatchOf
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 273
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the size of the read batch used when paging in history for the subscription\nsizes should not be too big ...\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithReadBatchOf(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithReadBatchOf(count As Integer) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithReadBatchOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithHistoryBufferSizeOf(System.Int32)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithHistoryBufferSizeOf(System.Int32)
  id: WithHistoryBufferSizeOf(System.Int32)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithHistoryBufferSizeOf(Int32)
  nameWithType: PersistentSubscriptionParamsBuilder.WithHistoryBufferSizeOf(Int32)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithHistoryBufferSizeOf(System.Int32)
  type: Method
  source:
    id: WithHistoryBufferSizeOf
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 285
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the size of the read batch used when paging in history for the subscription\nsizes should not be too big ...\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithHistoryBufferSizeOf(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithHistoryBufferSizeOf(count As Integer) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithHistoryBufferSizeOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithNamedConsumerStrategy(EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithNamedConsumerStrategy(EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy)
  id: WithNamedConsumerStrategy(EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: WithNamedConsumerStrategy(IPersistentSubscriptionConsumerStrategy)
  nameWithType: PersistentSubscriptionParamsBuilder.WithNamedConsumerStrategy(IPersistentSubscriptionConsumerStrategy)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithNamedConsumerStrategy(EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy)
  type: Method
  source:
    id: WithNamedConsumerStrategy
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 296
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets the size of the read batch used when paging in history for the subscription\nsizes should not be too big ...\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder WithNamedConsumerStrategy(IPersistentSubscriptionConsumerStrategy consumerStrategy)
    parameters:
    - id: consumerStrategy
      type: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithNamedConsumerStrategy(consumerStrategy As IPersistentSubscriptionConsumerStrategy) As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithNamedConsumerStrategy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromCurrent
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromCurrent
  id: StartFromCurrent
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: StartFromCurrent()
  nameWithType: PersistentSubscriptionParamsBuilder.StartFromCurrent()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromCurrent()
  type: Method
  source:
    id: StartFromCurrent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 307
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nSets that the subscription should start from where the stream is when the subscription is first connected.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionParamsBuilder StartFromCurrent()
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: A new <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function StartFromCurrent As PersistentSubscriptionParamsBuilder
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromCurrent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.op_Implicit(EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder)~EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.op_Implicit(EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder)~EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  id: op_Implicit(EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder)~EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  langs:
  - csharp
  - vb
  name: Implicit(PersistentSubscriptionParamsBuilder to PersistentSubscriptionParams)
  nameWithType: PersistentSubscriptionParamsBuilder.Implicit(PersistentSubscriptionParamsBuilder to PersistentSubscriptionParams)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.Implicit(EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder to EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams)
  type: Operator
  source:
    id: op_Implicit
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParamsBuilder.cs
    startLine: 317
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  summary: "\nBuilds a <xref href=\"EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams\" data-throw-if-not-resolved=\"false\"></xref> object from a <xref href=\"EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static implicit operator PersistentSubscriptionParams(PersistentSubscriptionParamsBuilder builder)
    parameters:
    - id: builder
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
      description: <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref> from which to build a <xref href="EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder" data-throw-if-not-resolved="false"></xref>
    return:
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
      description: ''
    content.vb: Public Shared Widening Operator CType(builder As PersistentSubscriptionParamsBuilder) As PersistentSubscriptionParams
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.op_Implicit*
  nameWithType.vb: PersistentSubscriptionParamsBuilder.Widening(PersistentSubscriptionParamsBuilder to PersistentSubscriptionParams)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.Widening(EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder to EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams)
  name.vb: Widening(PersistentSubscriptionParamsBuilder to PersistentSubscriptionParams)
references:
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  commentId: T:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  parent: EventStore.Core.Services.PersistentSubscription
  name: PersistentSubscriptionParams
  nameWithType: PersistentSubscriptionParams
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
- uid: EventStore.Core.Services.PersistentSubscription
  commentId: N:EventStore.Core.Services.PersistentSubscription
  name: EventStore.Core.Services.PersistentSubscription
  nameWithType: EventStore.Core.Services.PersistentSubscription
  fullName: EventStore.Core.Services.PersistentSubscription
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersistentSubscriptionParamsBuilder>()
  nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionParamsBuilder>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersistentSubscriptionParamsBuilder)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder)()
  name.vb: Serialize(Of PersistentSubscriptionParamsBuilder)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersistentSubscriptionParamsBuilder>
    nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionParamsBuilder>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersistentSubscriptionParamsBuilder)
    nameWithType: ProtobufExtensions.Serialize(Of PersistentSubscriptionParamsBuilder)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersistentSubscriptionParamsBuilder>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionParamsBuilder>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionParamsBuilder)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder)()
  name.vb: SerializeToArray(Of PersistentSubscriptionParamsBuilder)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersistentSubscriptionParamsBuilder>
    nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionParamsBuilder>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersistentSubscriptionParamsBuilder)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionParamsBuilder)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  commentId: T:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
  parent: EventStore.Core.Services.PersistentSubscription
  name: PersistentSubscriptionParamsBuilder
  nameWithType: PersistentSubscriptionParamsBuilder
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CreateFor*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CreateFor
  name: CreateFor
  nameWithType: PersistentSubscriptionParamsBuilder.CreateFor
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CreateFor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointReader*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointReader
  name: WithCheckpointReader
  nameWithType: PersistentSubscriptionParamsBuilder.WithCheckpointReader
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointReader
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
  commentId: T:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
  parent: EventStore.Core.Services.PersistentSubscription
  name: IPersistentSubscriptionCheckpointReader
  nameWithType: IPersistentSubscriptionCheckpointReader
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageParker*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageParker
  name: WithMessageParker
  nameWithType: PersistentSubscriptionParamsBuilder.WithMessageParker
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageParker
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker
  commentId: T:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker
  parent: EventStore.Core.Services.PersistentSubscription
  name: IPersistentSubscriptionMessageParker
  nameWithType: IPersistentSubscriptionMessageParker
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointWriter*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointWriter
  name: WithCheckpointWriter
  nameWithType: PersistentSubscriptionParamsBuilder.WithCheckpointWriter
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithCheckpointWriter
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  commentId: T:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  parent: EventStore.Core.Services.PersistentSubscription
  name: IPersistentSubscriptionCheckpointWriter
  nameWithType: IPersistentSubscriptionCheckpointWriter
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithEventLoader*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithEventLoader
  name: WithEventLoader
  nameWithType: PersistentSubscriptionParamsBuilder.WithEventLoader
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithEventLoader
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader
  commentId: T:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader
  parent: EventStore.Core.Services.PersistentSubscription
  name: IPersistentSubscriptionStreamReader
  nameWithType: IPersistentSubscriptionStreamReader
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithExtraStatistics*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithExtraStatistics
  name: WithExtraStatistics
  nameWithType: PersistentSubscriptionParamsBuilder.WithExtraStatistics
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithExtraStatistics
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.ResolveLinkTos*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.ResolveLinkTos
  name: ResolveLinkTos
  nameWithType: PersistentSubscriptionParamsBuilder.ResolveLinkTos
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.ResolveLinkTos
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DoNotResolveLinkTos*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DoNotResolveLinkTos
  name: DoNotResolveLinkTos
  nameWithType: PersistentSubscriptionParamsBuilder.DoNotResolveLinkTos
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DoNotResolveLinkTos
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferRoundRobin*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferRoundRobin
  name: PreferRoundRobin
  nameWithType: PersistentSubscriptionParamsBuilder.PreferRoundRobin
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferRoundRobin
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferDispatchToSingle*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferDispatchToSingle
  name: PreferDispatchToSingle
  nameWithType: PersistentSubscriptionParamsBuilder.PreferDispatchToSingle
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.PreferDispatchToSingle
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CustomConsumerStrategy*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CustomConsumerStrategy
  name: CustomConsumerStrategy
  nameWithType: PersistentSubscriptionParamsBuilder.CustomConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CustomConsumerStrategy
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
  commentId: T:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
  parent: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  name: IPersistentSubscriptionConsumerStrategy
  nameWithType: IPersistentSubscriptionConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  commentId: N:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  name: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  nameWithType: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromBeginning*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromBeginning
  name: StartFromBeginning
  nameWithType: PersistentSubscriptionParamsBuilder.StartFromBeginning
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromBeginning
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFrom*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFrom
  name: StartFrom
  nameWithType: PersistentSubscriptionParamsBuilder.StartFrom
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFrom
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DontTimeoutMessages*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DontTimeoutMessages
  name: DontTimeoutMessages
  nameWithType: PersistentSubscriptionParamsBuilder.DontTimeoutMessages
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.DontTimeoutMessages
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CheckPointAfter*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CheckPointAfter
  name: CheckPointAfter
  nameWithType: PersistentSubscriptionParamsBuilder.CheckPointAfter
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.CheckPointAfter
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MinimumToCheckPoint*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MinimumToCheckPoint
  name: MinimumToCheckPoint
  nameWithType: PersistentSubscriptionParamsBuilder.MinimumToCheckPoint
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MinimumToCheckPoint
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MaximumToCheckPoint*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MaximumToCheckPoint
  name: MaximumToCheckPoint
  nameWithType: PersistentSubscriptionParamsBuilder.MaximumToCheckPoint
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.MaximumToCheckPoint
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageTimeoutOf*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageTimeoutOf
  name: WithMessageTimeoutOf
  nameWithType: PersistentSubscriptionParamsBuilder.WithMessageTimeoutOf
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMessageTimeoutOf
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMaxRetriesOf*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMaxRetriesOf
  name: WithMaxRetriesOf
  nameWithType: PersistentSubscriptionParamsBuilder.WithMaxRetriesOf
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithMaxRetriesOf
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithLiveBufferSizeOf*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithLiveBufferSizeOf
  name: WithLiveBufferSizeOf
  nameWithType: PersistentSubscriptionParamsBuilder.WithLiveBufferSizeOf
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithLiveBufferSizeOf
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithReadBatchOf*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithReadBatchOf
  name: WithReadBatchOf
  nameWithType: PersistentSubscriptionParamsBuilder.WithReadBatchOf
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithReadBatchOf
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithHistoryBufferSizeOf*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithHistoryBufferSizeOf
  name: WithHistoryBufferSizeOf
  nameWithType: PersistentSubscriptionParamsBuilder.WithHistoryBufferSizeOf
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithHistoryBufferSizeOf
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithNamedConsumerStrategy*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithNamedConsumerStrategy
  name: WithNamedConsumerStrategy
  nameWithType: PersistentSubscriptionParamsBuilder.WithNamedConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.WithNamedConsumerStrategy
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromCurrent*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromCurrent
  name: StartFromCurrent
  nameWithType: PersistentSubscriptionParamsBuilder.StartFromCurrent
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.StartFromCurrent
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.op_Implicit*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.op_Implicit
  name: Implicit
  nameWithType: PersistentSubscriptionParamsBuilder.Implicit
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.Implicit
  nameWithType.vb: PersistentSubscriptionParamsBuilder.Widening
  fullName.vb: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.Widening
  name.vb: Widening

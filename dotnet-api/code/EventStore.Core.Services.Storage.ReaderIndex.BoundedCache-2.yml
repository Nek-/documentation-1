### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  id: BoundedCache`2
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.#ctor(System.Int32,System.Int64,System.Func{`1,System.Int64})
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Clear
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Count
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.GetStatistics
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.PutRecord(`0,`1)
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.PutRecord(`0,`1,System.Boolean)
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.RemoveRecord(`0)
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryGetRecord(`0,`1@)
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryPutRecord(`0,`1)
  langs:
  - csharp
  - vb
  name: BoundedCache<TKey, TValue>
  nameWithType: BoundedCache<TKey, TValue>
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>
  type: Class
  source:
    id: BoundedCache
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/BoundedCache.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public class BoundedCache<TKey, TValue>
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: Public Class BoundedCache(Of TKey, TValue)
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Core.Services.Storage.ReaderIndex.DictionaryBasedCache
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  nameWithType.vb: BoundedCache(Of TKey, TValue)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue)
  name.vb: BoundedCache(Of TKey, TValue)
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Count
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Count
  id: Count
  parent: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: BoundedCache<TKey, TValue>.Count
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.Count
  type: Property
  source:
    id: Count
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/BoundedCache.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Count*
  nameWithType.vb: BoundedCache(Of TKey, TValue).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).Count
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.#ctor(System.Int32,System.Int64,System.Func{`1,System.Int64})
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.#ctor(System.Int32,System.Int64,System.Func{`1,System.Int64})
  id: '#ctor(System.Int32,System.Int64,System.Func{`1,System.Int64})'
  parent: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  langs:
  - csharp
  - vb
  name: BoundedCache(Int32, Int64, Func<TValue, Int64>)
  nameWithType: BoundedCache<TKey, TValue>.BoundedCache(Int32, Int64, Func<TValue, Int64>)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.BoundedCache(System.Int32, System.Int64, System.Func<TValue, System.Int64>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/BoundedCache.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public BoundedCache(int maxCachedEntries, long maxDataSize, Func<TValue, long> valueSize)
    parameters:
    - id: maxCachedEntries
      type: System.Int32
    - id: maxDataSize
      type: System.Int64
    - id: valueSize
      type: System.Func{{TValue},System.Int64}
    content.vb: Public Sub New(maxCachedEntries As Integer, maxDataSize As Long, valueSize As Func(Of TValue, Long))
  overload: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.#ctor*
  nameWithType.vb: BoundedCache(Of TKey, TValue).BoundedCache(Int32, Int64, Func(Of TValue, Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).BoundedCache(System.Int32, System.Int64, System.Func(Of TValue, System.Int64))
  name.vb: BoundedCache(Int32, Int64, Func(Of TValue, Int64))
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryGetRecord(`0,`1@)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryGetRecord(`0,`1@)
  id: TryGetRecord(`0,`1@)
  parent: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  langs:
  - csharp
  - vb
  name: TryGetRecord(TKey, out TValue)
  nameWithType: BoundedCache<TKey, TValue>.TryGetRecord(TKey, out TValue)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.TryGetRecord(TKey, out TValue)
  type: Method
  source:
    id: TryGetRecord
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/BoundedCache.cs
    startLine: 34
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public bool TryGetRecord(TKey key, out TValue value)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    return:
      type: System.Boolean
    content.vb: Public Function TryGetRecord(key As TKey, ByRef value As TValue) As Boolean
  overload: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryGetRecord*
  nameWithType.vb: BoundedCache(Of TKey, TValue).TryGetRecord(TKey, ByRef TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).TryGetRecord(TKey, ByRef TValue)
  name.vb: TryGetRecord(TKey, ByRef TValue)
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.PutRecord(`0,`1)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.PutRecord(`0,`1)
  id: PutRecord(`0,`1)
  parent: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  langs:
  - csharp
  - vb
  name: PutRecord(TKey, TValue)
  nameWithType: BoundedCache<TKey, TValue>.PutRecord(TKey, TValue)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.PutRecord(TKey, TValue)
  type: Method
  source:
    id: PutRecord
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/BoundedCache.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void PutRecord(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    content.vb: Public Sub PutRecord(key As TKey, value As TValue)
  overload: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.PutRecord*
  nameWithType.vb: BoundedCache(Of TKey, TValue).PutRecord(TKey, TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).PutRecord(TKey, TValue)
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.PutRecord(`0,`1,System.Boolean)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.PutRecord(`0,`1,System.Boolean)
  id: PutRecord(`0,`1,System.Boolean)
  parent: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  langs:
  - csharp
  - vb
  name: PutRecord(TKey, TValue, Boolean)
  nameWithType: BoundedCache<TKey, TValue>.PutRecord(TKey, TValue, Boolean)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.PutRecord(TKey, TValue, System.Boolean)
  type: Method
  source:
    id: PutRecord
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/BoundedCache.cs
    startLine: 47
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void PutRecord(TKey key, TValue value, bool throwOnDuplicate)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    - id: throwOnDuplicate
      type: System.Boolean
    content.vb: Public Sub PutRecord(key As TKey, value As TValue, throwOnDuplicate As Boolean)
  overload: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.PutRecord*
  nameWithType.vb: BoundedCache(Of TKey, TValue).PutRecord(TKey, TValue, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).PutRecord(TKey, TValue, System.Boolean)
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryPutRecord(`0,`1)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryPutRecord(`0,`1)
  id: TryPutRecord(`0,`1)
  parent: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  langs:
  - csharp
  - vb
  name: TryPutRecord(TKey, TValue)
  nameWithType: BoundedCache<TKey, TValue>.TryPutRecord(TKey, TValue)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.TryPutRecord(TKey, TValue)
  type: Method
  source:
    id: TryPutRecord
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/BoundedCache.cs
    startLine: 60
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public bool TryPutRecord(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    return:
      type: System.Boolean
    content.vb: Public Function TryPutRecord(key As TKey, value As TValue) As Boolean
  overload: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryPutRecord*
  nameWithType.vb: BoundedCache(Of TKey, TValue).TryPutRecord(TKey, TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).TryPutRecord(TKey, TValue)
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Clear
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Clear
  id: Clear
  parent: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BoundedCache<TKey, TValue>.Clear()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.Clear()
  type: Method
  source:
    id: Clear
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/BoundedCache.cs
    startLine: 70
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Clear*
  nameWithType.vb: BoundedCache(Of TKey, TValue).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).Clear()
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.RemoveRecord(`0)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.RemoveRecord(`0)
  id: RemoveRecord(`0)
  parent: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  langs:
  - csharp
  - vb
  name: RemoveRecord(TKey)
  nameWithType: BoundedCache<TKey, TValue>.RemoveRecord(TKey)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.RemoveRecord(TKey)
  type: Method
  source:
    id: RemoveRecord
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/BoundedCache.cs
    startLine: 81
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void RemoveRecord(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
    content.vb: Public Sub RemoveRecord(key As TKey)
  overload: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.RemoveRecord*
  nameWithType.vb: BoundedCache(Of TKey, TValue).RemoveRecord(TKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).RemoveRecord(TKey)
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.GetStatistics
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.GetStatistics
  id: GetStatistics
  parent: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2
  langs:
  - csharp
  - vb
  name: GetStatistics()
  nameWithType: BoundedCache<TKey, TValue>.GetStatistics()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.GetStatistics()
  type: Method
  source:
    id: GetStatistics
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/BoundedCache.cs
    startLine: 89
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public ReadCacheStats GetStatistics()
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.ReadCacheStats
    content.vb: Public Function GetStatistics As ReadCacheStats
  overload: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.GetStatistics*
  nameWithType.vb: BoundedCache(Of TKey, TValue).GetStatistics()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).GetStatistics()
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<BoundedCache<TKey, TValue>>()
  nameWithType: ProtobufExtensions.Serialize<BoundedCache<TKey, TValue>>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of BoundedCache(Of TKey, TValue))()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue))()
  name.vb: Serialize(Of BoundedCache(Of TKey, TValue))()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<BoundedCache<TKey, TValue>>
    nameWithType: ProtobufExtensions.Serialize<BoundedCache<TKey, TValue>>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of BoundedCache(Of TKey, TValue))
    nameWithType: ProtobufExtensions.Serialize(Of BoundedCache(Of TKey, TValue))
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<BoundedCache<TKey, TValue>>()
  nameWithType: ProtobufExtensions.SerializeToArray<BoundedCache<TKey, TValue>>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of BoundedCache(Of TKey, TValue))()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue))()
  name.vb: SerializeToArray(Of BoundedCache(Of TKey, TValue))()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<BoundedCache<TKey, TValue>>
    nameWithType: ProtobufExtensions.SerializeToArray<BoundedCache<TKey, TValue>>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of BoundedCache(Of TKey, TValue))
    nameWithType: ProtobufExtensions.SerializeToArray(Of BoundedCache(Of TKey, TValue))
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Count*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Count
  name: Count
  nameWithType: BoundedCache<TKey, TValue>.Count
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.Count
  nameWithType.vb: BoundedCache(Of TKey, TValue).Count
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.#ctor
  name: BoundedCache
  nameWithType: BoundedCache<TKey, TValue>.BoundedCache
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.BoundedCache
  nameWithType.vb: BoundedCache(Of TKey, TValue).BoundedCache
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).BoundedCache
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Func{{TValue},System.Int64}
  commentId: T:System.Func{`1,System.Int64}
  parent: System
  definition: System.Func`2
  name: Func<TValue, Int64>
  nameWithType: Func<TValue, Int64>
  fullName: System.Func<TValue, System.Int64>
  nameWithType.vb: Func(Of TValue, Int64)
  fullName.vb: System.Func(Of TValue, System.Int64)
  name.vb: Func(Of TValue, Int64)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryGetRecord*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryGetRecord
  name: TryGetRecord
  nameWithType: BoundedCache<TKey, TValue>.TryGetRecord
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.TryGetRecord
  nameWithType.vb: BoundedCache(Of TKey, TValue).TryGetRecord
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).TryGetRecord
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.PutRecord*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.PutRecord
  name: PutRecord
  nameWithType: BoundedCache<TKey, TValue>.PutRecord
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.PutRecord
  nameWithType.vb: BoundedCache(Of TKey, TValue).PutRecord
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).PutRecord
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryPutRecord*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.TryPutRecord
  name: TryPutRecord
  nameWithType: BoundedCache<TKey, TValue>.TryPutRecord
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.TryPutRecord
  nameWithType.vb: BoundedCache(Of TKey, TValue).TryPutRecord
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).TryPutRecord
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Clear*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.Clear
  name: Clear
  nameWithType: BoundedCache<TKey, TValue>.Clear
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.Clear
  nameWithType.vb: BoundedCache(Of TKey, TValue).Clear
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).Clear
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.RemoveRecord*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.RemoveRecord
  name: RemoveRecord
  nameWithType: BoundedCache<TKey, TValue>.RemoveRecord
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.RemoveRecord
  nameWithType.vb: BoundedCache(Of TKey, TValue).RemoveRecord
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).RemoveRecord
- uid: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.GetStatistics*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.BoundedCache`2.GetStatistics
  name: GetStatistics
  nameWithType: BoundedCache<TKey, TValue>.GetStatistics
  fullName: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache<TKey, TValue>.GetStatistics
  nameWithType.vb: BoundedCache(Of TKey, TValue).GetStatistics
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.BoundedCache(Of TKey, TValue).GetStatistics
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadCacheStats
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.ReadCacheStats
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: ReadCacheStats
  nameWithType: ReadCacheStats
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadCacheStats

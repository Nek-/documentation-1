### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  id: CommitCheckResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.#ctor(EventStore.Core.Services.Storage.ReaderIndex.CommitDecision,System.String,System.Int64,System.Int64,System.Int64,System.Boolean)
  - EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.CurrentVersion
  - EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.Decision
  - EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EndEventNumber
  - EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EventStreamId
  - EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.IsSoftDeleted
  - EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.StartEventNumber
  langs:
  - csharp
  - vb
  name: CommitCheckResult
  nameWithType: CommitCheckResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CommitCheckResult
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
    startLine: 1
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public struct CommitCheckResult
    content.vb: Public Structure CommitCheckResult
  extensionMethods:
  - EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.Decision
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.Decision
  id: Decision
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  langs:
  - csharp
  - vb
  name: Decision
  nameWithType: CommitCheckResult.Decision
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.Decision
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Decision
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly CommitDecision Decision
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
    content.vb: Public ReadOnly Decision As CommitDecision
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EventStreamId
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EventStreamId
  id: EventStreamId
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: CommitCheckResult.EventStreamId
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EventStreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStreamId
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly string EventStreamId
    return:
      type: System.String
    content.vb: Public ReadOnly EventStreamId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.CurrentVersion
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.CurrentVersion
  id: CurrentVersion
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  langs:
  - csharp
  - vb
  name: CurrentVersion
  nameWithType: CommitCheckResult.CurrentVersion
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.CurrentVersion
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CurrentVersion
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long CurrentVersion
    return:
      type: System.Int64
    content.vb: Public ReadOnly CurrentVersion As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.StartEventNumber
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.StartEventNumber
  id: StartEventNumber
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  langs:
  - csharp
  - vb
  name: StartEventNumber
  nameWithType: CommitCheckResult.StartEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.StartEventNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: StartEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long StartEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly StartEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EndEventNumber
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EndEventNumber
  id: EndEventNumber
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  langs:
  - csharp
  - vb
  name: EndEventNumber
  nameWithType: CommitCheckResult.EndEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EndEventNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EndEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long EndEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly EndEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.IsSoftDeleted
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.IsSoftDeleted
  id: IsSoftDeleted
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  langs:
  - csharp
  - vb
  name: IsSoftDeleted
  nameWithType: CommitCheckResult.IsSoftDeleted
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.IsSoftDeleted
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IsSoftDeleted
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly bool IsSoftDeleted
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsSoftDeleted As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.#ctor(EventStore.Core.Services.Storage.ReaderIndex.CommitDecision,System.String,System.Int64,System.Int64,System.Int64,System.Boolean)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.#ctor(EventStore.Core.Services.Storage.ReaderIndex.CommitDecision,System.String,System.Int64,System.Int64,System.Int64,System.Boolean)
  id: '#ctor(EventStore.Core.Services.Storage.ReaderIndex.CommitDecision,System.String,System.Int64,System.Int64,System.Int64,System.Boolean)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  langs:
  - csharp
  - vb
  name: CommitCheckResult(CommitDecision, String, Int64, Int64, Int64, Boolean)
  nameWithType: CommitCheckResult.CommitCheckResult(CommitDecision, String, Int64, Int64, Int64, Boolean)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.CommitCheckResult(EventStore.Core.Services.Storage.ReaderIndex.CommitDecision, System.String, System.Int64, System.Int64, System.Int64, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitCheckResult.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public CommitCheckResult(CommitDecision decision, string eventStreamId, long currentVersion, long startEventNumber, long endEventNumber, bool isSoftDeleted)
    parameters:
    - id: decision
      type: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
    - id: eventStreamId
      type: System.String
    - id: currentVersion
      type: System.Int64
    - id: startEventNumber
      type: System.Int64
    - id: endEventNumber
      type: System.Int64
    - id: isSoftDeleted
      type: System.Boolean
    content.vb: Public Sub New(decision As CommitDecision, eventStreamId As String, currentVersion As Long, startEventNumber As Long, endEventNumber As Long, isSoftDeleted As Boolean)
  overload: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<CommitCheckResult>()
  nameWithType: EnumExtensions.EnumValueName<CommitCheckResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of CommitCheckResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult)()
  name.vb: EnumValueName(Of CommitCheckResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<CommitCheckResult>
    nameWithType: EnumExtensions.EnumValueName<CommitCheckResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of CommitCheckResult)
    nameWithType: EnumExtensions.EnumValueName(Of CommitCheckResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<CommitCheckResult>()
  nameWithType: ProtobufExtensions.Serialize<CommitCheckResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of CommitCheckResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult)()
  name.vb: Serialize(Of CommitCheckResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<CommitCheckResult>
    nameWithType: ProtobufExtensions.Serialize<CommitCheckResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of CommitCheckResult)
    nameWithType: ProtobufExtensions.Serialize(Of CommitCheckResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<CommitCheckResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<CommitCheckResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of CommitCheckResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult)()
  name.vb: SerializeToArray(Of CommitCheckResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<CommitCheckResult>
    nameWithType: ProtobufExtensions.SerializeToArray<CommitCheckResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of CommitCheckResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of CommitCheckResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: CommitDecision
  nameWithType: CommitDecision
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.#ctor
  name: CommitCheckResult
  nameWithType: CommitCheckResult.CommitCheckResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.CommitCheckResult

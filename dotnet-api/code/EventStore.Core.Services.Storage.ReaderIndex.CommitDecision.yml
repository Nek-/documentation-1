### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  id: CommitDecision
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.CorruptedIdempotency
  - EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Deleted
  - EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Idempotent
  - EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.InvalidTransaction
  - EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Ok
  - EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.WrongExpectedVersion
  langs:
  - csharp
  - vb
  name: CommitDecision
  nameWithType: CommitDecision
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  type: Enum
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CommitDecision
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: 'public enum CommitDecision : int'
    content.vb: Public Enum CommitDecision As Integer
  extensionMethods:
  - EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Ok
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Ok
  id: Ok
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  langs:
  - csharp
  - vb
  name: Ok
  nameWithType: CommitDecision.Ok
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Ok
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Ok
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: Ok = 0
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.WrongExpectedVersion
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.WrongExpectedVersion
  id: WrongExpectedVersion
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  langs:
  - csharp
  - vb
  name: WrongExpectedVersion
  nameWithType: CommitDecision.WrongExpectedVersion
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.WrongExpectedVersion
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WrongExpectedVersion
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: WrongExpectedVersion = 1
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Deleted
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Deleted
  id: Deleted
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: CommitDecision.Deleted
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Deleted
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Deleted
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: Deleted = 2
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Idempotent
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Idempotent
  id: Idempotent
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  langs:
  - csharp
  - vb
  name: Idempotent
  nameWithType: CommitDecision.Idempotent
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.Idempotent
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Idempotent
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: Idempotent = 3
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.CorruptedIdempotency
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.CorruptedIdempotency
  id: CorruptedIdempotency
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  langs:
  - csharp
  - vb
  name: CorruptedIdempotency
  nameWithType: CommitDecision.CorruptedIdempotency
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.CorruptedIdempotency
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CorruptedIdempotency
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: CorruptedIdempotency = 4
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.InvalidTransaction
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.InvalidTransaction
  id: InvalidTransaction
  parent: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  langs:
  - csharp
  - vb
  name: InvalidTransaction
  nameWithType: CommitDecision.InvalidTransaction
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.InvalidTransaction
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: InvalidTransaction
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/CommitDecision.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: InvalidTransaction = 5
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<CommitDecision>()
  nameWithType: EnumExtensions.EnumValueName<CommitDecision>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.CommitDecision>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of CommitDecision)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.CommitDecision)()
  name.vb: EnumValueName(Of CommitDecision)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<CommitDecision>
    nameWithType: EnumExtensions.EnumValueName<CommitDecision>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.CommitDecision>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of CommitDecision)
    nameWithType: EnumExtensions.EnumValueName(Of CommitDecision)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.CommitDecision)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<CommitDecision>()
  nameWithType: ProtobufExtensions.Serialize<CommitDecision>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.CommitDecision>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of CommitDecision)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.CommitDecision)()
  name.vb: Serialize(Of CommitDecision)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<CommitDecision>
    nameWithType: ProtobufExtensions.Serialize<CommitDecision>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.CommitDecision>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of CommitDecision)
    nameWithType: ProtobufExtensions.Serialize(Of CommitDecision)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.CommitDecision)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<CommitDecision>()
  nameWithType: ProtobufExtensions.SerializeToArray<CommitDecision>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.CommitDecision>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of CommitDecision)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.CommitDecision)()
  name.vb: SerializeToArray(Of CommitDecision)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<CommitDecision>
    nameWithType: ProtobufExtensions.SerializeToArray<CommitDecision>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.CommitDecision>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of CommitDecision)
    nameWithType: ProtobufExtensions.SerializeToArray(Of CommitDecision)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.CommitDecision)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.CommitDecision
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: CommitDecision
  nameWithType: CommitDecision
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitDecision

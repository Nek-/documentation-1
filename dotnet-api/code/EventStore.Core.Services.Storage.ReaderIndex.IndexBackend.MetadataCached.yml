### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached
  id: IndexBackend.MetadataCached
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.#ctor(System.Int32,EventStore.Core.Data.StreamMetadata)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.Metadata
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.Version
  langs:
  - csharp
  - vb
  name: IndexBackend.MetadataCached
  nameWithType: IndexBackend.MetadataCached
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MetadataCached
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 122
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public struct MetadataCached
    content.vb: Public Structure MetadataCached
  extensionMethods:
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.Version
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.Version
  id: Version
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: IndexBackend.MetadataCached.Version
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.Version
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 124
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly int Version
    return:
      type: System.Int32
    content.vb: Public ReadOnly Version As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.Metadata
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.Metadata
  id: Metadata
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: IndexBackend.MetadataCached.Metadata
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.Metadata
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Metadata
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 125
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly StreamMetadata Metadata
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public ReadOnly Metadata As StreamMetadata
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.#ctor(System.Int32,EventStore.Core.Data.StreamMetadata)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.#ctor(System.Int32,EventStore.Core.Data.StreamMetadata)
  id: '#ctor(System.Int32,EventStore.Core.Data.StreamMetadata)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached
  langs:
  - csharp
  - vb
  name: MetadataCached(Int32, StreamMetadata)
  nameWithType: IndexBackend.MetadataCached.MetadataCached(Int32, StreamMetadata)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.MetadataCached(System.Int32, EventStore.Core.Data.StreamMetadata)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 127
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public MetadataCached(int version, StreamMetadata metadata)
    parameters:
    - id: version
      type: System.Int32
    - id: metadata
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public Sub New(version As Integer, metadata As StreamMetadata)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<IndexBackend.MetadataCached>()
  nameWithType: EnumExtensions.EnumValueName<IndexBackend.MetadataCached>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of IndexBackend.MetadataCached)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached)()
  name.vb: EnumValueName(Of IndexBackend.MetadataCached)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<IndexBackend.MetadataCached>
    nameWithType: EnumExtensions.EnumValueName<IndexBackend.MetadataCached>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of IndexBackend.MetadataCached)
    nameWithType: EnumExtensions.EnumValueName(Of IndexBackend.MetadataCached)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IndexBackend.MetadataCached>()
  nameWithType: ProtobufExtensions.Serialize<IndexBackend.MetadataCached>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IndexBackend.MetadataCached)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached)()
  name.vb: Serialize(Of IndexBackend.MetadataCached)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IndexBackend.MetadataCached>
    nameWithType: ProtobufExtensions.Serialize<IndexBackend.MetadataCached>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IndexBackend.MetadataCached)
    nameWithType: ProtobufExtensions.Serialize(Of IndexBackend.MetadataCached)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IndexBackend.MetadataCached>()
  nameWithType: ProtobufExtensions.SerializeToArray<IndexBackend.MetadataCached>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IndexBackend.MetadataCached)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached)()
  name.vb: SerializeToArray(Of IndexBackend.MetadataCached)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IndexBackend.MetadataCached>
    nameWithType: ProtobufExtensions.SerializeToArray<IndexBackend.MetadataCached>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IndexBackend.MetadataCached)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IndexBackend.MetadataCached)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  parent: EventStore.Core.Data
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.#ctor
  name: MetadataCached
  nameWithType: IndexBackend.MetadataCached.MetadataCached
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.MetadataCached

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  id: IndexReadAllResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.#ctor(System.Collections.Generic.List{EventStore.Core.Data.CommitEventRecord},EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.CurrentPos
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.NextPos
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.PrevPos
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.Records
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.ToString
  langs:
  - csharp
  - vb
  name: IndexReadAllResult
  nameWithType: IndexReadAllResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  type: Struct
  source:
    id: IndexReadAllResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadAllResult.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public struct IndexReadAllResult
    content.vb: Public Structure IndexReadAllResult
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.Records
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.Records
  id: Records
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  langs:
  - csharp
  - vb
  name: Records
  nameWithType: IndexReadAllResult.Records
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.Records
  type: Field
  source:
    id: Records
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadAllResult.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly List<CommitEventRecord> Records
    return:
      type: System.Collections.Generic.List{EventStore.Core.Data.CommitEventRecord}
    content.vb: Public ReadOnly Records As List(Of CommitEventRecord)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.CurrentPos
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.CurrentPos
  id: CurrentPos
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  langs:
  - csharp
  - vb
  name: CurrentPos
  nameWithType: IndexReadAllResult.CurrentPos
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.CurrentPos
  type: Field
  source:
    id: CurrentPos
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadAllResult.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly TFPos CurrentPos
    return:
      type: EventStore.Core.Data.TFPos
    content.vb: Public ReadOnly CurrentPos As TFPos
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.NextPos
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.NextPos
  id: NextPos
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  langs:
  - csharp
  - vb
  name: NextPos
  nameWithType: IndexReadAllResult.NextPos
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.NextPos
  type: Field
  source:
    id: NextPos
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadAllResult.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly TFPos NextPos
    return:
      type: EventStore.Core.Data.TFPos
    content.vb: Public ReadOnly NextPos As TFPos
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.PrevPos
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.PrevPos
  id: PrevPos
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  langs:
  - csharp
  - vb
  name: PrevPos
  nameWithType: IndexReadAllResult.PrevPos
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.PrevPos
  type: Field
  source:
    id: PrevPos
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadAllResult.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly TFPos PrevPos
    return:
      type: EventStore.Core.Data.TFPos
    content.vb: Public ReadOnly PrevPos As TFPos
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.#ctor(System.Collections.Generic.List{EventStore.Core.Data.CommitEventRecord},EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.#ctor(System.Collections.Generic.List{EventStore.Core.Data.CommitEventRecord},EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos)
  id: '#ctor(System.Collections.Generic.List{EventStore.Core.Data.CommitEventRecord},EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  langs:
  - csharp
  - vb
  name: IndexReadAllResult(List<CommitEventRecord>, TFPos, TFPos, TFPos)
  nameWithType: IndexReadAllResult.IndexReadAllResult(List<CommitEventRecord>, TFPos, TFPos, TFPos)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.IndexReadAllResult(System.Collections.Generic.List<EventStore.Core.Data.CommitEventRecord>, EventStore.Core.Data.TFPos, EventStore.Core.Data.TFPos, EventStore.Core.Data.TFPos)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadAllResult.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public IndexReadAllResult(List<CommitEventRecord> records, TFPos currentPos, TFPos nextPos, TFPos prevPos)
    parameters:
    - id: records
      type: System.Collections.Generic.List{EventStore.Core.Data.CommitEventRecord}
    - id: currentPos
      type: EventStore.Core.Data.TFPos
    - id: nextPos
      type: EventStore.Core.Data.TFPos
    - id: prevPos
      type: EventStore.Core.Data.TFPos
    content.vb: Public Sub New(records As List(Of CommitEventRecord), currentPos As TFPos, nextPos As TFPos, prevPos As TFPos)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.#ctor*
  nameWithType.vb: IndexReadAllResult.IndexReadAllResult(List(Of CommitEventRecord), TFPos, TFPos, TFPos)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.IndexReadAllResult(System.Collections.Generic.List(Of EventStore.Core.Data.CommitEventRecord), EventStore.Core.Data.TFPos, EventStore.Core.Data.TFPos, EventStore.Core.Data.TFPos)
  name.vb: IndexReadAllResult(List(Of CommitEventRecord), TFPos, TFPos, TFPos)
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.ToString
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.ToString
  id: ToString
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IndexReadAllResult.ToString()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadAllResult.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<IndexReadAllResult>()
  nameWithType: EnumExtensions.EnumValueName<IndexReadAllResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of IndexReadAllResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult)()
  name.vb: EnumValueName(Of IndexReadAllResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<IndexReadAllResult>
    nameWithType: EnumExtensions.EnumValueName<IndexReadAllResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of IndexReadAllResult)
    nameWithType: EnumExtensions.EnumValueName(Of IndexReadAllResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IndexReadAllResult>()
  nameWithType: ProtobufExtensions.Serialize<IndexReadAllResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IndexReadAllResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult)()
  name.vb: Serialize(Of IndexReadAllResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IndexReadAllResult>
    nameWithType: ProtobufExtensions.Serialize<IndexReadAllResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IndexReadAllResult)
    nameWithType: ProtobufExtensions.Serialize(Of IndexReadAllResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IndexReadAllResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<IndexReadAllResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IndexReadAllResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult)()
  name.vb: SerializeToArray(Of IndexReadAllResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IndexReadAllResult>
    nameWithType: ProtobufExtensions.SerializeToArray<IndexReadAllResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IndexReadAllResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IndexReadAllResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Collections.Generic.List{EventStore.Core.Data.CommitEventRecord}
  commentId: T:System.Collections.Generic.List{EventStore.Core.Data.CommitEventRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CommitEventRecord>
  nameWithType: List<CommitEventRecord>
  fullName: System.Collections.Generic.List<EventStore.Core.Data.CommitEventRecord>
  nameWithType.vb: List(Of CommitEventRecord)
  fullName.vb: System.Collections.Generic.List(Of EventStore.Core.Data.CommitEventRecord)
  name.vb: List(Of CommitEventRecord)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Data.CommitEventRecord
    name: CommitEventRecord
    nameWithType: CommitEventRecord
    fullName: EventStore.Core.Data.CommitEventRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Data.CommitEventRecord
    name: CommitEventRecord
    nameWithType: CommitEventRecord
    fullName: EventStore.Core.Data.CommitEventRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EventStore.Core.Data.TFPos
  commentId: T:EventStore.Core.Data.TFPos
  parent: EventStore.Core.Data
  name: TFPos
  nameWithType: TFPos
  fullName: EventStore.Core.Data.TFPos
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.#ctor
  name: IndexReadAllResult
  nameWithType: IndexReadAllResult.IndexReadAllResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.IndexReadAllResult
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.ToString*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.ToString
  name: ToString
  nameWithType: IndexReadAllResult.ToString
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

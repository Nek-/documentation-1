### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  id: IndexReadEventResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.#ctor(EventStore.Core.Data.ReadEventResult,EventStore.Core.Data.EventRecord,EventStore.Core.Data.StreamMetadata,System.Int64,System.Boolean)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.#ctor(EventStore.Core.Data.ReadEventResult,EventStore.Core.Data.StreamMetadata,System.Int64,System.Boolean)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.LastEventNumber
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Metadata
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.OriginalStreamExists
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Record
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Result
  langs:
  - csharp
  - vb
  name: IndexReadEventResult
  nameWithType: IndexReadEventResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IndexReadEventResult
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public struct IndexReadEventResult
    content.vb: Public Structure IndexReadEventResult
  extensionMethods:
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Result
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Result
  id: Result
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: IndexReadEventResult.Result
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Result
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Result
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly ReadEventResult Result
    return:
      type: EventStore.Core.Data.ReadEventResult
    content.vb: Public ReadOnly Result As ReadEventResult
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Record
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Record
  id: Record
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  langs:
  - csharp
  - vb
  name: Record
  nameWithType: IndexReadEventResult.Record
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Record
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Record
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly EventRecord Record
    return:
      type: EventStore.Core.Data.EventRecord
    content.vb: Public ReadOnly Record As EventRecord
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Metadata
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Metadata
  id: Metadata
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: IndexReadEventResult.Metadata
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.Metadata
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Metadata
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly StreamMetadata Metadata
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public ReadOnly Metadata As StreamMetadata
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.LastEventNumber
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.LastEventNumber
  id: LastEventNumber
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  langs:
  - csharp
  - vb
  name: LastEventNumber
  nameWithType: IndexReadEventResult.LastEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.LastEventNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LastEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long LastEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly LastEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.OriginalStreamExists
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.OriginalStreamExists
  id: OriginalStreamExists
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  langs:
  - csharp
  - vb
  name: OriginalStreamExists
  nameWithType: IndexReadEventResult.OriginalStreamExists
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.OriginalStreamExists
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: OriginalStreamExists
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly bool OriginalStreamExists
    return:
      type: System.Boolean
    content.vb: Public ReadOnly OriginalStreamExists As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.#ctor(EventStore.Core.Data.ReadEventResult,EventStore.Core.Data.StreamMetadata,System.Int64,System.Boolean)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.#ctor(EventStore.Core.Data.ReadEventResult,EventStore.Core.Data.StreamMetadata,System.Int64,System.Boolean)
  id: '#ctor(EventStore.Core.Data.ReadEventResult,EventStore.Core.Data.StreamMetadata,System.Int64,System.Boolean)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  langs:
  - csharp
  - vb
  name: IndexReadEventResult(ReadEventResult, StreamMetadata, Int64, Boolean)
  nameWithType: IndexReadEventResult.IndexReadEventResult(ReadEventResult, StreamMetadata, Int64, Boolean)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.IndexReadEventResult(EventStore.Core.Data.ReadEventResult, EventStore.Core.Data.StreamMetadata, System.Int64, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public IndexReadEventResult(ReadEventResult result, StreamMetadata metadata, long lastEventNumber, bool originalStreamExists)
    parameters:
    - id: result
      type: EventStore.Core.Data.ReadEventResult
    - id: metadata
      type: EventStore.Core.Data.StreamMetadata
    - id: lastEventNumber
      type: System.Int64
    - id: originalStreamExists
      type: System.Boolean
    content.vb: Public Sub New(result As ReadEventResult, metadata As StreamMetadata, lastEventNumber As Long, originalStreamExists As Boolean)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.#ctor(EventStore.Core.Data.ReadEventResult,EventStore.Core.Data.EventRecord,EventStore.Core.Data.StreamMetadata,System.Int64,System.Boolean)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.#ctor(EventStore.Core.Data.ReadEventResult,EventStore.Core.Data.EventRecord,EventStore.Core.Data.StreamMetadata,System.Int64,System.Boolean)
  id: '#ctor(EventStore.Core.Data.ReadEventResult,EventStore.Core.Data.EventRecord,EventStore.Core.Data.StreamMetadata,System.Int64,System.Boolean)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  langs:
  - csharp
  - vb
  name: IndexReadEventResult(ReadEventResult, EventRecord, StreamMetadata, Int64, Boolean)
  nameWithType: IndexReadEventResult.IndexReadEventResult(ReadEventResult, EventRecord, StreamMetadata, Int64, Boolean)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.IndexReadEventResult(EventStore.Core.Data.ReadEventResult, EventStore.Core.Data.EventRecord, EventStore.Core.Data.StreamMetadata, System.Int64, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadEventResult.cs
    startLine: 24
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public IndexReadEventResult(ReadEventResult result, EventRecord record, StreamMetadata metadata, long lastEventNumber, bool originalStreamExists)
    parameters:
    - id: result
      type: EventStore.Core.Data.ReadEventResult
    - id: record
      type: EventStore.Core.Data.EventRecord
    - id: metadata
      type: EventStore.Core.Data.StreamMetadata
    - id: lastEventNumber
      type: System.Int64
    - id: originalStreamExists
      type: System.Boolean
    content.vb: Public Sub New(result As ReadEventResult, record As EventRecord, metadata As StreamMetadata, lastEventNumber As Long, originalStreamExists As Boolean)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<IndexReadEventResult>()
  nameWithType: EnumExtensions.EnumValueName<IndexReadEventResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of IndexReadEventResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult)()
  name.vb: EnumValueName(Of IndexReadEventResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<IndexReadEventResult>
    nameWithType: EnumExtensions.EnumValueName<IndexReadEventResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of IndexReadEventResult)
    nameWithType: EnumExtensions.EnumValueName(Of IndexReadEventResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IndexReadEventResult>()
  nameWithType: ProtobufExtensions.Serialize<IndexReadEventResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IndexReadEventResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult)()
  name.vb: Serialize(Of IndexReadEventResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IndexReadEventResult>
    nameWithType: ProtobufExtensions.Serialize<IndexReadEventResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IndexReadEventResult)
    nameWithType: ProtobufExtensions.Serialize(Of IndexReadEventResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IndexReadEventResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<IndexReadEventResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IndexReadEventResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult)()
  name.vb: SerializeToArray(Of IndexReadEventResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IndexReadEventResult>
    nameWithType: ProtobufExtensions.SerializeToArray<IndexReadEventResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IndexReadEventResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IndexReadEventResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Data.ReadEventResult
  commentId: T:EventStore.Core.Data.ReadEventResult
  parent: EventStore.Core.Data
  name: ReadEventResult
  nameWithType: ReadEventResult
  fullName: EventStore.Core.Data.ReadEventResult
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Data.EventRecord
  commentId: T:EventStore.Core.Data.EventRecord
  parent: EventStore.Core.Data
  name: EventRecord
  nameWithType: EventRecord
  fullName: EventStore.Core.Data.EventRecord
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  parent: EventStore.Core.Data
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.#ctor
  name: IndexReadEventResult
  nameWithType: IndexReadEventResult.IndexReadEventResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.IndexReadEventResult

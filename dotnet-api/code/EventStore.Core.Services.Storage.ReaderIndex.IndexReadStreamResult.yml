### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  id: IndexReadStreamResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.#ctor(System.Int64,System.Int32,EventStore.Core.Data.EventRecord[],EventStore.Core.Data.StreamMetadata,System.Int64,System.Int64,System.Boolean)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.#ctor(System.Int64,System.Int32,EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult,EventStore.Core.Data.StreamMetadata,System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.FromEventNumber
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.IsEndOfStream
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.LastEventNumber
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.MaxCount
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Metadata
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.NextEventNumber
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Records
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Result
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.ToString
  langs:
  - csharp
  - vb
  name: IndexReadStreamResult
  nameWithType: IndexReadStreamResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  type: Struct
  source:
    id: IndexReadStreamResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public struct IndexReadStreamResult
    content.vb: Public Structure IndexReadStreamResult
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.FromEventNumber
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.FromEventNumber
  id: FromEventNumber
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: FromEventNumber
  nameWithType: IndexReadStreamResult.FromEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.FromEventNumber
  type: Field
  source:
    id: FromEventNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long FromEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly FromEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.MaxCount
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.MaxCount
  id: MaxCount
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: MaxCount
  nameWithType: IndexReadStreamResult.MaxCount
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.MaxCount
  type: Field
  source:
    id: MaxCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly int MaxCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly MaxCount As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Result
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Result
  id: Result
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: IndexReadStreamResult.Result
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Result
  type: Field
  source:
    id: Result
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly ReadStreamResult Result
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult
    content.vb: Public ReadOnly Result As ReadStreamResult
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.NextEventNumber
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.NextEventNumber
  id: NextEventNumber
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: NextEventNumber
  nameWithType: IndexReadStreamResult.NextEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.NextEventNumber
  type: Field
  source:
    id: NextEventNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long NextEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly NextEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.LastEventNumber
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.LastEventNumber
  id: LastEventNumber
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: LastEventNumber
  nameWithType: IndexReadStreamResult.LastEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.LastEventNumber
  type: Field
  source:
    id: LastEventNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long LastEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly LastEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.IsEndOfStream
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.IsEndOfStream
  id: IsEndOfStream
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: IsEndOfStream
  nameWithType: IndexReadStreamResult.IsEndOfStream
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.IsEndOfStream
  type: Field
  source:
    id: IsEndOfStream
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly bool IsEndOfStream
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsEndOfStream As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Records
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Records
  id: Records
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: Records
  nameWithType: IndexReadStreamResult.Records
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Records
  type: Field
  source:
    id: Records
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly EventRecord[] Records
    return:
      type: EventStore.Core.Data.EventRecord[]
    content.vb: Public ReadOnly Records As EventRecord()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Metadata
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Metadata
  id: Metadata
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: IndexReadStreamResult.Metadata
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.Metadata
  type: Field
  source:
    id: Metadata
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly StreamMetadata Metadata
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public ReadOnly Metadata As StreamMetadata
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.#ctor(System.Int64,System.Int32,EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult,EventStore.Core.Data.StreamMetadata,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.#ctor(System.Int64,System.Int32,EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult,EventStore.Core.Data.StreamMetadata,System.Int64)
  id: '#ctor(System.Int64,System.Int32,EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult,EventStore.Core.Data.StreamMetadata,System.Int64)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: IndexReadStreamResult(Int64, Int32, ReadStreamResult, StreamMetadata, Int64)
  nameWithType: IndexReadStreamResult.IndexReadStreamResult(Int64, Int32, ReadStreamResult, StreamMetadata, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.IndexReadStreamResult(System.Int64, System.Int32, EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult, EventStore.Core.Data.StreamMetadata, System.Int64)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public IndexReadStreamResult(long fromEventNumber, int maxCount, ReadStreamResult result, StreamMetadata metadata, long lastEventNumber)
    parameters:
    - id: fromEventNumber
      type: System.Int64
    - id: maxCount
      type: System.Int32
    - id: result
      type: EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult
    - id: metadata
      type: EventStore.Core.Data.StreamMetadata
    - id: lastEventNumber
      type: System.Int64
    content.vb: Public Sub New(fromEventNumber As Long, maxCount As Integer, result As ReadStreamResult, metadata As StreamMetadata, lastEventNumber As Long)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.#ctor(System.Int64,System.Int32,EventStore.Core.Data.EventRecord[],EventStore.Core.Data.StreamMetadata,System.Int64,System.Int64,System.Boolean)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.#ctor(System.Int64,System.Int32,EventStore.Core.Data.EventRecord[],EventStore.Core.Data.StreamMetadata,System.Int64,System.Int64,System.Boolean)
  id: '#ctor(System.Int64,System.Int32,EventStore.Core.Data.EventRecord[],EventStore.Core.Data.StreamMetadata,System.Int64,System.Int64,System.Boolean)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: IndexReadStreamResult(Int64, Int32, EventRecord[], StreamMetadata, Int64, Int64, Boolean)
  nameWithType: IndexReadStreamResult.IndexReadStreamResult(Int64, Int32, EventRecord[], StreamMetadata, Int64, Int64, Boolean)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.IndexReadStreamResult(System.Int64, System.Int32, EventStore.Core.Data.EventRecord[], EventStore.Core.Data.StreamMetadata, System.Int64, System.Int64, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 36
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public IndexReadStreamResult(long fromEventNumber, int maxCount, EventRecord[] records, StreamMetadata metadata, long nextEventNumber, long lastEventNumber, bool isEndOfStream)
    parameters:
    - id: fromEventNumber
      type: System.Int64
    - id: maxCount
      type: System.Int32
    - id: records
      type: EventStore.Core.Data.EventRecord[]
    - id: metadata
      type: EventStore.Core.Data.StreamMetadata
    - id: nextEventNumber
      type: System.Int64
    - id: lastEventNumber
      type: System.Int64
    - id: isEndOfStream
      type: System.Boolean
    content.vb: Public Sub New(fromEventNumber As Long, maxCount As Integer, records As EventRecord(), metadata As StreamMetadata, nextEventNumber As Long, lastEventNumber As Long, isEndOfStream As Boolean)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.#ctor*
  nameWithType.vb: IndexReadStreamResult.IndexReadStreamResult(Int64, Int32, EventRecord(), StreamMetadata, Int64, Int64, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.IndexReadStreamResult(System.Int64, System.Int32, EventStore.Core.Data.EventRecord(), EventStore.Core.Data.StreamMetadata, System.Int64, System.Int64, System.Boolean)
  name.vb: IndexReadStreamResult(Int64, Int32, EventRecord(), StreamMetadata, Int64, Int64, Boolean)
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.ToString
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.ToString
  id: ToString
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IndexReadStreamResult.ToString()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReadStreamResult.cs
    startLine: 56
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<IndexReadStreamResult>()
  nameWithType: EnumExtensions.EnumValueName<IndexReadStreamResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of IndexReadStreamResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult)()
  name.vb: EnumValueName(Of IndexReadStreamResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<IndexReadStreamResult>
    nameWithType: EnumExtensions.EnumValueName<IndexReadStreamResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of IndexReadStreamResult)
    nameWithType: EnumExtensions.EnumValueName(Of IndexReadStreamResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IndexReadStreamResult>()
  nameWithType: ProtobufExtensions.Serialize<IndexReadStreamResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IndexReadStreamResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult)()
  name.vb: Serialize(Of IndexReadStreamResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IndexReadStreamResult>
    nameWithType: ProtobufExtensions.Serialize<IndexReadStreamResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IndexReadStreamResult)
    nameWithType: ProtobufExtensions.Serialize(Of IndexReadStreamResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IndexReadStreamResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<IndexReadStreamResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IndexReadStreamResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult)()
  name.vb: SerializeToArray(Of IndexReadStreamResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IndexReadStreamResult>
    nameWithType: ProtobufExtensions.SerializeToArray<IndexReadStreamResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IndexReadStreamResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IndexReadStreamResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: ReadStreamResult
  nameWithType: ReadStreamResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Data.EventRecord[]
  isExternal: true
  name: EventRecord[]
  nameWithType: EventRecord[]
  fullName: EventStore.Core.Data.EventRecord[]
  nameWithType.vb: EventRecord()
  fullName.vb: EventStore.Core.Data.EventRecord()
  name.vb: EventRecord()
  spec.csharp:
  - uid: EventStore.Core.Data.EventRecord
    name: EventRecord
    nameWithType: EventRecord
    fullName: EventStore.Core.Data.EventRecord
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Data.EventRecord
    name: EventRecord
    nameWithType: EventRecord
    fullName: EventStore.Core.Data.EventRecord
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  parent: EventStore.Core.Data
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.#ctor
  name: IndexReadStreamResult
  nameWithType: IndexReadStreamResult.IndexReadStreamResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.IndexReadStreamResult
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.ToString*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.ToString
  name: ToString
  nameWithType: IndexReadStreamResult.ToString
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

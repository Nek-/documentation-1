### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  id: IndexWriter
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.#ctor(EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend,EventStore.Core.Services.Storage.ReaderIndex.IIndexReader)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CachedTransInfo
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommit(System.String,System.Int64,System.Collections.Generic.IEnumerable{System.Guid})
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommitStartingAt(System.Int64,System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamLastEventNumber(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamMetadata(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamRawMeta(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetTransactionInfo(System.Int64,System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.IsSoftDeleted(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.NotCachedTransInfo
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit(System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord})
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedCommitsTill(System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedTransactions(System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.Reset
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.UpdateTransactionInfo(System.Int64,System.Int64,EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
  langs:
  - csharp
  - vb
  name: IndexWriter
  nameWithType: IndexWriter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  type: Class
  source:
    id: IndexWriter
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 44
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: 'public class IndexWriter : IIndexWriter'
    content.vb: >-
      Public Class IndexWriter
          Implements IIndexWriter
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CachedTransInfo
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CachedTransInfo
  id: CachedTransInfo
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: CachedTransInfo
  nameWithType: IndexWriter.CachedTransInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CachedTransInfo
  type: Property
  source:
    id: CachedTransInfo
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 47
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public long CachedTransInfo { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property CachedTransInfo As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CachedTransInfo*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CachedTransInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.NotCachedTransInfo
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.NotCachedTransInfo
  id: NotCachedTransInfo
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: NotCachedTransInfo
  nameWithType: IndexWriter.NotCachedTransInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.NotCachedTransInfo
  type: Property
  source:
    id: NotCachedTransInfo
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 51
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public long NotCachedTransInfo { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property NotCachedTransInfo As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.NotCachedTransInfo*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.NotCachedTransInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.#ctor(EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend,EventStore.Core.Services.Storage.ReaderIndex.IIndexReader)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.#ctor(EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend,EventStore.Core.Services.Storage.ReaderIndex.IIndexReader)
  id: '#ctor(EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend,EventStore.Core.Services.Storage.ReaderIndex.IIndexReader)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: IndexWriter(IIndexBackend, IIndexReader)
  nameWithType: IndexWriter.IndexWriter(IIndexBackend, IIndexReader)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.IndexWriter(EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend, EventStore.Core.Services.Storage.ReaderIndex.IIndexReader)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 79
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public IndexWriter(IIndexBackend indexBackend, IIndexReader indexReader)
    parameters:
    - id: indexBackend
      type: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
    - id: indexReader
      type: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
    content.vb: Public Sub New(indexBackend As IIndexBackend, indexReader As IIndexReader)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.Reset
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.Reset
  id: Reset
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: IndexWriter.Reset()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.Reset()
  type: Method
  source:
    id: Reset
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 87
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.Reset*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommitStartingAt(System.Int64,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommitStartingAt(System.Int64,System.Int64)
  id: CheckCommitStartingAt(System.Int64,System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: CheckCommitStartingAt(Int64, Int64)
  nameWithType: IndexWriter.CheckCommitStartingAt(Int64, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommitStartingAt(System.Int64, System.Int64)
  type: Method
  source:
    id: CheckCommitStartingAt
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 95
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public CommitCheckResult CheckCommitStartingAt(long transactionPosition, long commitPosition)
    parameters:
    - id: transactionPosition
      type: System.Int64
    - id: commitPosition
      type: System.Int64
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
    content.vb: Public Function CheckCommitStartingAt(transactionPosition As Long, commitPosition As Long) As CommitCheckResult
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommitStartingAt*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommitStartingAt(System.Int64,System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommit(System.String,System.Int64,System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommit(System.String,System.Int64,System.Collections.Generic.IEnumerable{System.Guid})
  id: CheckCommit(System.String,System.Int64,System.Collections.Generic.IEnumerable{System.Guid})
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: CheckCommit(String, Int64, IEnumerable<Guid>)
  nameWithType: IndexWriter.CheckCommit(String, Int64, IEnumerable<Guid>)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommit(System.String, System.Int64, System.Collections.Generic.IEnumerable<System.Guid>)
  type: Method
  source:
    id: CheckCommit
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 136
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public CommitCheckResult CheckCommit(string streamId, long expectedVersion, IEnumerable<Guid> eventIds)
    parameters:
    - id: streamId
      type: System.String
    - id: expectedVersion
      type: System.Int64
    - id: eventIds
      type: System.Collections.Generic.IEnumerable{System.Guid}
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
    content.vb: Public Function CheckCommit(streamId As String, expectedVersion As Long, eventIds As IEnumerable(Of Guid)) As CommitCheckResult
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommit*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommit(System.String,System.Int64,System.Collections.Generic.IEnumerable{System.Guid})
  nameWithType.vb: IndexWriter.CheckCommit(String, Int64, IEnumerable(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommit(System.String, System.Int64, System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: CheckCommit(String, Int64, IEnumerable(Of Guid))
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  id: PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: PreCommit(CommitLogRecord)
  nameWithType: IndexWriter.PreCommit(CommitLogRecord)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  type: Method
  source:
    id: PreCommit
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 227
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void PreCommit(CommitLogRecord commit)
    parameters:
    - id: commit
      type: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    content.vb: Public Sub PreCommit(commit As CommitLogRecord)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit(System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord})
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit(System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord})
  id: PreCommit(System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord})
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: PreCommit(IList<PrepareLogRecord>)
  nameWithType: IndexWriter.PreCommit(IList<PrepareLogRecord>)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit(System.Collections.Generic.IList<EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord>)
  type: Method
  source:
    id: PreCommit
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 260
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void PreCommit(IList<PrepareLogRecord> commitedPrepares)
    parameters:
    - id: commitedPrepares
      type: System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord}
    content.vb: Public Sub PreCommit(commitedPrepares As IList(Of PrepareLogRecord))
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord})
  nameWithType.vb: IndexWriter.PreCommit(IList(Of PrepareLogRecord))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit(System.Collections.Generic.IList(Of EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord))
  name.vb: PreCommit(IList(Of PrepareLogRecord))
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.UpdateTransactionInfo(System.Int64,System.Int64,EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.UpdateTransactionInfo(System.Int64,System.Int64,EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
  id: UpdateTransactionInfo(System.Int64,System.Int64,EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: UpdateTransactionInfo(Int64, Int64, TransactionInfo)
  nameWithType: IndexWriter.UpdateTransactionInfo(Int64, Int64, TransactionInfo)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.UpdateTransactionInfo(System.Int64, System.Int64, EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
  type: Method
  source:
    id: UpdateTransactionInfo
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 289
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void UpdateTransactionInfo(long transactionId, long logPosition, TransactionInfo transactionInfo)
    parameters:
    - id: transactionId
      type: System.Int64
    - id: logPosition
      type: System.Int64
    - id: transactionInfo
      type: EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo
    content.vb: Public Sub UpdateTransactionInfo(transactionId As Long, logPosition As Long, transactionInfo As TransactionInfo)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.UpdateTransactionInfo*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.UpdateTransactionInfo(System.Int64,System.Int64,EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetTransactionInfo(System.Int64,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetTransactionInfo(System.Int64,System.Int64)
  id: GetTransactionInfo(System.Int64,System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: GetTransactionInfo(Int64, Int64)
  nameWithType: IndexWriter.GetTransactionInfo(Int64, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetTransactionInfo(System.Int64, System.Int64)
  type: Method
  source:
    id: GetTransactionInfo
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 294
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public TransactionInfo GetTransactionInfo(long writerCheckpoint, long transactionId)
    parameters:
    - id: writerCheckpoint
      type: System.Int64
    - id: transactionId
      type: System.Int64
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo
    content.vb: Public Function GetTransactionInfo(writerCheckpoint As Long, transactionId As Long) As TransactionInfo
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetTransactionInfo*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetTransactionInfo(System.Int64,System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedCommitsTill(System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedCommitsTill(System.Int64)
  id: PurgeNotProcessedCommitsTill(System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: PurgeNotProcessedCommitsTill(Int64)
  nameWithType: IndexWriter.PurgeNotProcessedCommitsTill(Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedCommitsTill(System.Int64)
  type: Method
  source:
    id: PurgeNotProcessedCommitsTill
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 331
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void PurgeNotProcessedCommitsTill(long checkpoint)
    parameters:
    - id: checkpoint
      type: System.Int64
    content.vb: Public Sub PurgeNotProcessedCommitsTill(checkpoint As Long)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedCommitsTill*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedCommitsTill(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedTransactions(System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedTransactions(System.Int64)
  id: PurgeNotProcessedTransactions(System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: PurgeNotProcessedTransactions(Int64)
  nameWithType: IndexWriter.PurgeNotProcessedTransactions(Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedTransactions(System.Int64)
  type: Method
  source:
    id: PurgeNotProcessedTransactions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 360
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void PurgeNotProcessedTransactions(long checkpoint)
    parameters:
    - id: checkpoint
      type: System.Int64
    content.vb: Public Sub PurgeNotProcessedTransactions(checkpoint As Long)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedTransactions*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedTransactions(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.IsSoftDeleted(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.IsSoftDeleted(System.String)
  id: IsSoftDeleted(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: IsSoftDeleted(String)
  nameWithType: IndexWriter.IsSoftDeleted(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.IsSoftDeleted(System.String)
  type: Method
  source:
    id: IsSoftDeleted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 392
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public bool IsSoftDeleted(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsSoftDeleted(streamId As String) As Boolean
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.IsSoftDeleted*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.IsSoftDeleted(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamLastEventNumber(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamLastEventNumber(System.String)
  id: GetStreamLastEventNumber(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: GetStreamLastEventNumber(String)
  nameWithType: IndexWriter.GetStreamLastEventNumber(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamLastEventNumber(System.String)
  type: Method
  source:
    id: GetStreamLastEventNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 396
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public long GetStreamLastEventNumber(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: System.Int64
    content.vb: Public Function GetStreamLastEventNumber(streamId As String) As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamLastEventNumber*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamLastEventNumber(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamMetadata(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamMetadata(System.String)
  id: GetStreamMetadata(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: GetStreamMetadata(String)
  nameWithType: IndexWriter.GetStreamMetadata(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamMetadata(System.String)
  type: Method
  source:
    id: GetStreamMetadata
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 403
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public StreamMetadata GetStreamMetadata(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public Function GetStreamMetadata(streamId As String) As StreamMetadata
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamMetadata*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamMetadata(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamRawMeta(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamRawMeta(System.String)
  id: GetStreamRawMeta(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: GetStreamRawMeta(String)
  nameWithType: IndexWriter.GetStreamRawMeta(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamRawMeta(System.String)
  type: Method
  source:
    id: GetStreamRawMeta
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexWriter.cs
    startLine: 416
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public RawMetaInfo GetStreamRawMeta(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.RawMetaInfo
    content.vb: Public Function GetStreamRawMeta(streamId As String) As RawMetaInfo
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamRawMeta*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamRawMeta(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IIndexWriter
  nameWithType: IIndexWriter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IndexWriter>()
  nameWithType: ProtobufExtensions.Serialize<IndexWriter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexWriter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IndexWriter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexWriter)()
  name.vb: Serialize(Of IndexWriter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IndexWriter>
    nameWithType: ProtobufExtensions.Serialize<IndexWriter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IndexWriter)
    nameWithType: ProtobufExtensions.Serialize(Of IndexWriter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IndexWriter>()
  nameWithType: ProtobufExtensions.SerializeToArray<IndexWriter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexWriter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IndexWriter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexWriter)()
  name.vb: SerializeToArray(Of IndexWriter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IndexWriter>
    nameWithType: ProtobufExtensions.SerializeToArray<IndexWriter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IndexWriter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IndexWriter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CachedTransInfo*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CachedTransInfo
  name: CachedTransInfo
  nameWithType: IndexWriter.CachedTransInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CachedTransInfo
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CachedTransInfo
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CachedTransInfo
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  name: CachedTransInfo
  nameWithType: IIndexWriter.CachedTransInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CachedTransInfo
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.NotCachedTransInfo*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.NotCachedTransInfo
  name: NotCachedTransInfo
  nameWithType: IndexWriter.NotCachedTransInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.NotCachedTransInfo
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.NotCachedTransInfo
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.NotCachedTransInfo
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  name: NotCachedTransInfo
  nameWithType: IIndexWriter.NotCachedTransInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.NotCachedTransInfo
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.#ctor
  name: IndexWriter
  nameWithType: IndexWriter.IndexWriter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.IndexWriter
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IIndexBackend
  nameWithType: IIndexBackend
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IIndexReader
  nameWithType: IIndexReader
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.Reset*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.Reset
  name: Reset
  nameWithType: IndexWriter.Reset
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.Reset
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.Reset
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.Reset
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  name: Reset()
  nameWithType: IIndexWriter.Reset()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.Reset()
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.Reset
    name: Reset
    nameWithType: IIndexWriter.Reset
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.Reset
    name: Reset
    nameWithType: IIndexWriter.Reset
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommitStartingAt*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommitStartingAt
  name: CheckCommitStartingAt
  nameWithType: IndexWriter.CheckCommitStartingAt
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommitStartingAt
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommitStartingAt(System.Int64,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommitStartingAt(System.Int64,System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: CheckCommitStartingAt(Int64, Int64)
  nameWithType: IIndexWriter.CheckCommitStartingAt(Int64, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommitStartingAt(System.Int64, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommitStartingAt(System.Int64,System.Int64)
    name: CheckCommitStartingAt
    nameWithType: IIndexWriter.CheckCommitStartingAt
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommitStartingAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommitStartingAt(System.Int64,System.Int64)
    name: CheckCommitStartingAt
    nameWithType: IIndexWriter.CheckCommitStartingAt
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommitStartingAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: CommitCheckResult
  nameWithType: CommitCheckResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommit*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommit
  name: CheckCommit
  nameWithType: IndexWriter.CheckCommit
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.CheckCommit
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommit(System.String,System.Int64,System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommit(System.String,System.Int64,System.Collections.Generic.IEnumerable{System.Guid})
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: CheckCommit(String, Int64, IEnumerable<Guid>)
  nameWithType: IIndexWriter.CheckCommit(String, Int64, IEnumerable<Guid>)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommit(System.String, System.Int64, System.Collections.Generic.IEnumerable<System.Guid>)
  nameWithType.vb: IIndexWriter.CheckCommit(String, Int64, IEnumerable(Of Guid))
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommit(System.String, System.Int64, System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: CheckCommit(String, Int64, IEnumerable(Of Guid))
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommit(System.String,System.Int64,System.Collections.Generic.IEnumerable{System.Guid})
    name: CheckCommit
    nameWithType: IIndexWriter.CheckCommit
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommit(System.String,System.Int64,System.Collections.Generic.IEnumerable{System.Guid})
    name: CheckCommit
    nameWithType: IIndexWriter.CheckCommit
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.CheckCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Guid}
  commentId: T:System.Collections.Generic.IEnumerable{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Guid>
  nameWithType: IEnumerable<Guid>
  fullName: System.Collections.Generic.IEnumerable<System.Guid>
  nameWithType.vb: IEnumerable(Of Guid)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Guid)
  name.vb: IEnumerable(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit
  name: PreCommit
  nameWithType: IndexWriter.PreCommit
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PreCommit
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  name: PreCommit(CommitLogRecord)
  nameWithType: IIndexWriter.PreCommit(CommitLogRecord)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
    name: PreCommit
    nameWithType: IIndexWriter.PreCommit
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    name: CommitLogRecord
    nameWithType: CommitLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
    name: PreCommit
    nameWithType: IIndexWriter.PreCommit
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    name: CommitLogRecord
    nameWithType: CommitLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  name: CommitLogRecord
  nameWithType: CommitLogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord})
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord})
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: PreCommit(IList<PrepareLogRecord>)
  nameWithType: IIndexWriter.PreCommit(IList<PrepareLogRecord>)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(System.Collections.Generic.IList<EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord>)
  nameWithType.vb: IIndexWriter.PreCommit(IList(Of PrepareLogRecord))
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(System.Collections.Generic.IList(Of EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord))
  name.vb: PreCommit(IList(Of PrepareLogRecord))
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord})
    name: PreCommit
    nameWithType: IIndexWriter.PreCommit
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
    name: PrepareLogRecord
    nameWithType: PrepareLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit(System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord})
    name: PreCommit
    nameWithType: IIndexWriter.PreCommit
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PreCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
    name: PrepareLogRecord
    nameWithType: PrepareLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord}
  commentId: T:System.Collections.Generic.IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PrepareLogRecord>
  nameWithType: IList<PrepareLogRecord>
  fullName: System.Collections.Generic.IList<EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord>
  nameWithType.vb: IList(Of PrepareLogRecord)
  fullName.vb: System.Collections.Generic.IList(Of EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord)
  name.vb: IList(Of PrepareLogRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
    name: PrepareLogRecord
    nameWithType: PrepareLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
    name: PrepareLogRecord
    nameWithType: PrepareLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.UpdateTransactionInfo*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.UpdateTransactionInfo
  name: UpdateTransactionInfo
  nameWithType: IndexWriter.UpdateTransactionInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.UpdateTransactionInfo
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.UpdateTransactionInfo(System.Int64,System.Int64,EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.UpdateTransactionInfo(System.Int64,System.Int64,EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: UpdateTransactionInfo(Int64, Int64, TransactionInfo)
  nameWithType: IIndexWriter.UpdateTransactionInfo(Int64, Int64, TransactionInfo)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.UpdateTransactionInfo(System.Int64, System.Int64, EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.UpdateTransactionInfo(System.Int64,System.Int64,EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
    name: UpdateTransactionInfo
    nameWithType: IIndexWriter.UpdateTransactionInfo
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.UpdateTransactionInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo
    name: TransactionInfo
    nameWithType: TransactionInfo
    fullName: EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.UpdateTransactionInfo(System.Int64,System.Int64,EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo)
    name: UpdateTransactionInfo
    nameWithType: IIndexWriter.UpdateTransactionInfo
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.UpdateTransactionInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo
    name: TransactionInfo
    nameWithType: TransactionInfo
    fullName: EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: TransactionInfo
  nameWithType: TransactionInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetTransactionInfo*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetTransactionInfo
  name: GetTransactionInfo
  nameWithType: IndexWriter.GetTransactionInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetTransactionInfo
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetTransactionInfo(System.Int64,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetTransactionInfo(System.Int64,System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: GetTransactionInfo(Int64, Int64)
  nameWithType: IIndexWriter.GetTransactionInfo(Int64, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetTransactionInfo(System.Int64, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetTransactionInfo(System.Int64,System.Int64)
    name: GetTransactionInfo
    nameWithType: IIndexWriter.GetTransactionInfo
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetTransactionInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetTransactionInfo(System.Int64,System.Int64)
    name: GetTransactionInfo
    nameWithType: IIndexWriter.GetTransactionInfo
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetTransactionInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedCommitsTill*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedCommitsTill
  name: PurgeNotProcessedCommitsTill
  nameWithType: IndexWriter.PurgeNotProcessedCommitsTill
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedCommitsTill
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedCommitsTill(System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedCommitsTill(System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: PurgeNotProcessedCommitsTill(Int64)
  nameWithType: IIndexWriter.PurgeNotProcessedCommitsTill(Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedCommitsTill(System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedCommitsTill(System.Int64)
    name: PurgeNotProcessedCommitsTill
    nameWithType: IIndexWriter.PurgeNotProcessedCommitsTill
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedCommitsTill
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedCommitsTill(System.Int64)
    name: PurgeNotProcessedCommitsTill
    nameWithType: IIndexWriter.PurgeNotProcessedCommitsTill
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedCommitsTill
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedTransactions*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedTransactions
  name: PurgeNotProcessedTransactions
  nameWithType: IndexWriter.PurgeNotProcessedTransactions
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.PurgeNotProcessedTransactions
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedTransactions(System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedTransactions(System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: PurgeNotProcessedTransactions(Int64)
  nameWithType: IIndexWriter.PurgeNotProcessedTransactions(Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedTransactions(System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedTransactions(System.Int64)
    name: PurgeNotProcessedTransactions
    nameWithType: IIndexWriter.PurgeNotProcessedTransactions
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedTransactions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedTransactions(System.Int64)
    name: PurgeNotProcessedTransactions
    nameWithType: IIndexWriter.PurgeNotProcessedTransactions
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.PurgeNotProcessedTransactions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.IsSoftDeleted*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.IsSoftDeleted
  name: IsSoftDeleted
  nameWithType: IndexWriter.IsSoftDeleted
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.IsSoftDeleted
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.IsSoftDeleted(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.IsSoftDeleted(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: IsSoftDeleted(String)
  nameWithType: IIndexWriter.IsSoftDeleted(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.IsSoftDeleted(System.String)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.IsSoftDeleted(System.String)
    name: IsSoftDeleted
    nameWithType: IIndexWriter.IsSoftDeleted
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.IsSoftDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.IsSoftDeleted(System.String)
    name: IsSoftDeleted
    nameWithType: IIndexWriter.IsSoftDeleted
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.IsSoftDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamLastEventNumber*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamLastEventNumber
  name: GetStreamLastEventNumber
  nameWithType: IndexWriter.GetStreamLastEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamLastEventNumber
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamLastEventNumber(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamLastEventNumber(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: GetStreamLastEventNumber(String)
  nameWithType: IIndexWriter.GetStreamLastEventNumber(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamLastEventNumber(System.String)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamLastEventNumber(System.String)
    name: GetStreamLastEventNumber
    nameWithType: IIndexWriter.GetStreamLastEventNumber
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamLastEventNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamLastEventNumber(System.String)
    name: GetStreamLastEventNumber
    nameWithType: IIndexWriter.GetStreamLastEventNumber
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamLastEventNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamMetadata*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamMetadata
  name: GetStreamMetadata
  nameWithType: IndexWriter.GetStreamMetadata
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamMetadata
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamMetadata(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamMetadata(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: GetStreamMetadata(String)
  nameWithType: IIndexWriter.GetStreamMetadata(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamMetadata(System.String)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamMetadata(System.String)
    name: GetStreamMetadata
    nameWithType: IIndexWriter.GetStreamMetadata
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamMetadata
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamMetadata(System.String)
    name: GetStreamMetadata
    nameWithType: IIndexWriter.GetStreamMetadata
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamMetadata
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  parent: EventStore.Core.Data
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamRawMeta*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamRawMeta
  name: GetStreamRawMeta
  nameWithType: IndexWriter.GetStreamRawMeta
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.GetStreamRawMeta
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamRawMeta(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamRawMeta(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  isExternal: true
  name: GetStreamRawMeta(String)
  nameWithType: IIndexWriter.GetStreamRawMeta(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamRawMeta(System.String)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamRawMeta(System.String)
    name: GetStreamRawMeta
    nameWithType: IIndexWriter.GetStreamRawMeta
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamRawMeta
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamRawMeta(System.String)
    name: GetStreamRawMeta
    nameWithType: IIndexWriter.GetStreamRawMeta
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.GetStreamRawMeta
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.RawMetaInfo
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.RawMetaInfo
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: RawMetaInfo
  nameWithType: RawMetaInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.RawMetaInfo

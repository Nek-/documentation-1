### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  id: ReadIndex
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.DataStructures.ObjectPool{EventStore.Core.TransactionLog.ITransactionFileReader},EventStore.Core.Index.ITableIndex,System.Int32,System.Boolean,System.Int64,System.Int32,System.Boolean,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Close
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Dispose
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStatistics
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamLastEventNumber(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamMetadata(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#Init(System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#IsStreamDeleted(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadEvent(System.String,System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.GetEventStreamIdByTransactionId(System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexCommitter
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexWriter
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastCommitPosition
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastReplicatedPosition
  langs:
  - csharp
  - vb
  name: ReadIndex
  nameWithType: ReadIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadIndex
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: 'public class ReadIndex : IDisposable, IReadIndex'
    content.vb: >-
      Public Class ReadIndex
          Inherits IDisposable
          Implements IReadIndex
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastCommitPosition
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastCommitPosition
  id: LastCommitPosition
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: LastCommitPosition
  nameWithType: ReadIndex.LastCommitPosition
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastCommitPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LastCommitPosition
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public long LastCommitPosition { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property LastCommitPosition As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastCommitPosition*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.LastCommitPosition
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastReplicatedPosition
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastReplicatedPosition
  id: LastReplicatedPosition
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: LastReplicatedPosition
  nameWithType: ReadIndex.LastReplicatedPosition
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastReplicatedPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LastReplicatedPosition
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public long LastReplicatedPosition { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property LastReplicatedPosition As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastReplicatedPosition*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.LastReplicatedPosition
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexWriter
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexWriter
  id: IndexWriter
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IndexWriter
  nameWithType: ReadIndex.IndexWriter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexWriter
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IndexWriter
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public IIndexWriter IndexWriter { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
    content.vb: Public ReadOnly Property IndexWriter As IIndexWriter
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexWriter*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IndexWriter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexCommitter
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexCommitter
  id: IndexCommitter
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IndexCommitter
  nameWithType: ReadIndex.IndexCommitter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexCommitter
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IndexCommitter
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public IIndexCommitter IndexCommitter { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
    content.vb: Public ReadOnly Property IndexCommitter As IIndexCommitter
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexCommitter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.DataStructures.ObjectPool{EventStore.Core.TransactionLog.ITransactionFileReader},EventStore.Core.Index.ITableIndex,System.Int32,System.Boolean,System.Int64,System.Int32,System.Boolean,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.DataStructures.ObjectPool{EventStore.Core.TransactionLog.ITransactionFileReader},EventStore.Core.Index.ITableIndex,System.Int32,System.Boolean,System.Int64,System.Int32,System.Boolean,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  id: '#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.DataStructures.ObjectPool{EventStore.Core.TransactionLog.ITransactionFileReader},EventStore.Core.Index.ITableIndex,System.Int32,System.Boolean,System.Int64,System.Int32,System.Boolean,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: ReadIndex(IPublisher, ObjectPool<ITransactionFileReader>, ITableIndex, Int32, Boolean, Int64, Int32, Boolean, ICheckpoint)
  nameWithType: ReadIndex.ReadIndex(IPublisher, ObjectPool<ITransactionFileReader>, ITableIndex, Int32, Boolean, Int64, Int32, Boolean, ICheckpoint)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.ReadIndex(EventStore.Core.Bus.IPublisher, EventStore.Core.DataStructures.ObjectPool<EventStore.Core.TransactionLog.ITransactionFileReader>, EventStore.Core.Index.ITableIndex, System.Int32, System.Boolean, System.Int64, System.Int32, System.Boolean, EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public ReadIndex(IPublisher bus, ObjectPool<ITransactionFileReader> readerPool, ITableIndex tableIndex, int streamInfoCacheCapacity, bool additionalCommitChecks, long metastreamMaxCount, int hashCollisionReadLimit, bool skipIndexScanOnReads, ICheckpoint replicationCheckpoint)
    parameters:
    - id: bus
      type: EventStore.Core.Bus.IPublisher
    - id: readerPool
      type: EventStore.Core.DataStructures.ObjectPool{EventStore.Core.TransactionLog.ITransactionFileReader}
    - id: tableIndex
      type: EventStore.Core.Index.ITableIndex
    - id: streamInfoCacheCapacity
      type: System.Int32
    - id: additionalCommitChecks
      type: System.Boolean
    - id: metastreamMaxCount
      type: System.Int64
    - id: hashCollisionReadLimit
      type: System.Int32
    - id: skipIndexScanOnReads
      type: System.Boolean
    - id: replicationCheckpoint
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Public Sub New(bus As IPublisher, readerPool As ObjectPool(Of ITransactionFileReader), tableIndex As ITableIndex, streamInfoCacheCapacity As Integer, additionalCommitChecks As Boolean, metastreamMaxCount As Long, hashCollisionReadLimit As Integer, skipIndexScanOnReads As Boolean, replicationCheckpoint As ICheckpoint)
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.#ctor*
  nameWithType.vb: ReadIndex.ReadIndex(IPublisher, ObjectPool(Of ITransactionFileReader), ITableIndex, Int32, Boolean, Int64, Int32, Boolean, ICheckpoint)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.ReadIndex(EventStore.Core.Bus.IPublisher, EventStore.Core.DataStructures.ObjectPool(Of EventStore.Core.TransactionLog.ITransactionFileReader), EventStore.Core.Index.ITableIndex, System.Int32, System.Boolean, System.Int64, System.Int32, System.Boolean, EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  name.vb: ReadIndex(IPublisher, ObjectPool(Of ITransactionFileReader), ITableIndex, Int32, Boolean, Int64, Int32, Boolean, ICheckpoint)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#Init(System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#Init(System.Int64)
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#Init(System.Int64)
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.Init(Int64)
  nameWithType: ReadIndex.IReadIndex.Init(Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 55
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: void IReadIndex.Init(long buildToPosition)
    parameters:
    - id: buildToPosition
      type: System.Int64
    content.vb: Sub EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init(buildToPosition As Long) Implements IReadIndex.Init
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#Init*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init(System.Int64)
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init(Int64)
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init(Int64)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadEvent(System.String,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadEvent(System.String,System.Int64)
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadEvent(System.String,System.Int64)
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.ReadEvent(String, Int64)
  nameWithType: ReadIndex.IReadIndex.ReadEvent(String, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 60
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: IndexReadEventResult IReadIndex.ReadEvent(string streamId, long eventNumber)
    parameters:
    - id: streamId
      type: System.String
    - id: eventNumber
      type: System.Int64
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
    content.vb: Function EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent(streamId As String, eventNumber As Long) As IndexReadEventResult Implements IReadIndex.ReadEvent
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadEvent*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent(System.String,System.Int64)
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent(String, Int64)
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent(String, Int64)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.ReadStreamEventsForward(String, Int64, Int32)
  nameWithType: ReadIndex.IReadIndex.ReadStreamEventsForward(String, Int64, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward(System.String, System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 65
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: IndexReadStreamResult IReadIndex.ReadStreamEventsForward(string streamId, long fromEventNumber, int maxCount)
    parameters:
    - id: streamId
      type: System.String
    - id: fromEventNumber
      type: System.Int64
    - id: maxCount
      type: System.Int32
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
    content.vb: Function EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward(streamId As String, fromEventNumber As Long, maxCount As Integer) As IndexReadStreamResult Implements IReadIndex.ReadStreamEventsForward
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsForward*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward(String, Int64, Int32)
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward(String, Int64, Int32)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.ReadStreamEventsBackward(String, Int64, Int32)
  nameWithType: ReadIndex.IReadIndex.ReadStreamEventsBackward(String, Int64, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward(System.String, System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 70
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: IndexReadStreamResult IReadIndex.ReadStreamEventsBackward(string streamId, long fromEventNumber, int maxCount)
    parameters:
    - id: streamId
      type: System.String
    - id: fromEventNumber
      type: System.Int64
    - id: maxCount
      type: System.Int32
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
    content.vb: Function EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward(streamId As String, fromEventNumber As Long, maxCount As Integer) As IndexReadStreamResult Implements IReadIndex.ReadStreamEventsBackward
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsBackward*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward(String, Int64, Int32)
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward(String, Int64, Int32)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#IsStreamDeleted(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#IsStreamDeleted(System.String)
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#IsStreamDeleted(System.String)
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.IsStreamDeleted(String)
  nameWithType: ReadIndex.IReadIndex.IsStreamDeleted(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 75
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: bool IReadIndex.IsStreamDeleted(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted(streamId As String) As Boolean Implements IReadIndex.IsStreamDeleted
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#IsStreamDeleted*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted(System.String)
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted(String)
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted(String)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamLastEventNumber(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamLastEventNumber(System.String)
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamLastEventNumber(System.String)
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.GetStreamLastEventNumber(String)
  nameWithType: ReadIndex.IReadIndex.GetStreamLastEventNumber(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 80
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long IReadIndex.GetStreamLastEventNumber(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: System.Int64
    content.vb: Function EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber(streamId As String) As Long Implements IReadIndex.GetStreamLastEventNumber
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamLastEventNumber*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber(System.String)
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber(String)
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber(String)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamMetadata(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamMetadata(System.String)
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamMetadata(System.String)
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.GetStreamMetadata(String)
  nameWithType: ReadIndex.IReadIndex.GetStreamMetadata(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 85
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: StreamMetadata IReadIndex.GetStreamMetadata(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Function EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata(streamId As String) As StreamMetadata Implements IReadIndex.GetStreamMetadata
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamMetadata*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata(System.String)
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata(String)
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata(String)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.GetEventStreamIdByTransactionId(System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.GetEventStreamIdByTransactionId(System.Int64)
  id: GetEventStreamIdByTransactionId(System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: GetEventStreamIdByTransactionId(Int64)
  nameWithType: ReadIndex.GetEventStreamIdByTransactionId(Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.GetEventStreamIdByTransactionId(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetEventStreamIdByTransactionId
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 90
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public string GetEventStreamIdByTransactionId(long transactionId)
    parameters:
    - id: transactionId
      type: System.Int64
    return:
      type: System.String
    content.vb: Public Function GetEventStreamIdByTransactionId(transactionId As Long) As String
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.GetEventStreamIdByTransactionId*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetEventStreamIdByTransactionId(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.CheckStreamAccess(String, StreamAccessType, IPrincipal)
  nameWithType: ReadIndex.IReadIndex.CheckStreamAccess(String, StreamAccessType, IPrincipal)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess(System.String, EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType, IPrincipal)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 95
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: StreamAccess IReadIndex.CheckStreamAccess(string streamId, StreamAccessType streamAccessType, IPrincipal user)
    parameters:
    - id: streamId
      type: System.String
    - id: streamAccessType
      type: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
    - id: user
      type: IPrincipal
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
    content.vb: Function EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess(streamId As String, streamAccessType As StreamAccessType, user As IPrincipal) As StreamAccess Implements IReadIndex.CheckStreamAccess
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#CheckStreamAccess*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess(String, StreamAccessType, IPrincipal)
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess(String, StreamAccessType, IPrincipal)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.ReadAllEventsForward(TFPos, Int32)
  nameWithType: ReadIndex.IReadIndex.ReadAllEventsForward(TFPos, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward(EventStore.Core.Data.TFPos, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 100
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: IndexReadAllResult IReadIndex.ReadAllEventsForward(TFPos pos, int maxCount)
    parameters:
    - id: pos
      type: EventStore.Core.Data.TFPos
    - id: maxCount
      type: System.Int32
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
    content.vb: Function EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward(pos As TFPos, maxCount As Integer) As IndexReadAllResult Implements IReadIndex.ReadAllEventsForward
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsForward*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward(TFPos, Int32)
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward(TFPos, Int32)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.ReadAllEventsBackward(TFPos, Int32)
  nameWithType: ReadIndex.IReadIndex.ReadAllEventsBackward(TFPos, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward(EventStore.Core.Data.TFPos, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 105
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: IndexReadAllResult IReadIndex.ReadAllEventsBackward(TFPos pos, int maxCount)
    parameters:
    - id: pos
      type: EventStore.Core.Data.TFPos
    - id: maxCount
      type: System.Int32
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
    content.vb: Function EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward(pos As TFPos, maxCount As Integer) As IndexReadAllResult Implements IReadIndex.ReadAllEventsBackward
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsBackward*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward(TFPos, Int32)
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward(TFPos, Int32)
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStatistics
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStatistics
  id: EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStatistics
  isEii: true
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: IReadIndex.GetStatistics()
  nameWithType: ReadIndex.IReadIndex.GetStatistics()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 110
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: ReadIndexStats IReadIndex.GetStatistics()
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
    content.vb: Function EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics As ReadIndexStats Implements IReadIndex.GetStatistics
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStatistics*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics()
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics()
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Close
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Close
  id: Close
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: ReadIndex.Close()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Close()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Close
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 121
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Close*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Close
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Dispose
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Dispose
  id: Dispose
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ReadIndex.Dispose()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Dispose()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Dispose
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndex.cs
    startLine: 126
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Dispose*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IReadIndex
  nameWithType: IReadIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReadIndex>()
  nameWithType: ProtobufExtensions.Serialize<ReadIndex>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.ReadIndex>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReadIndex)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.ReadIndex)()
  name.vb: Serialize(Of ReadIndex)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReadIndex>
    nameWithType: ProtobufExtensions.Serialize<ReadIndex>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.ReadIndex>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReadIndex)
    nameWithType: ProtobufExtensions.Serialize(Of ReadIndex)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.ReadIndex)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReadIndex>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReadIndex>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.ReadIndex>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReadIndex)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.ReadIndex)()
  name.vb: SerializeToArray(Of ReadIndex)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReadIndex>
    nameWithType: ProtobufExtensions.SerializeToArray<ReadIndex>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.ReadIndex>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReadIndex)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReadIndex)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.ReadIndex)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastCommitPosition*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastCommitPosition
  name: LastCommitPosition
  nameWithType: ReadIndex.LastCommitPosition
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastCommitPosition
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.LastCommitPosition
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.LastCommitPosition
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  name: LastCommitPosition
  nameWithType: IReadIndex.LastCommitPosition
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.LastCommitPosition
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastReplicatedPosition*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastReplicatedPosition
  name: LastReplicatedPosition
  nameWithType: ReadIndex.LastReplicatedPosition
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.LastReplicatedPosition
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.LastReplicatedPosition
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.LastReplicatedPosition
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  name: LastReplicatedPosition
  nameWithType: IReadIndex.LastReplicatedPosition
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.LastReplicatedPosition
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexWriter*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexWriter
  name: IndexWriter
  nameWithType: ReadIndex.IndexWriter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexWriter
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IndexWriter
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IndexWriter
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  name: IndexWriter
  nameWithType: IReadIndex.IndexWriter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IndexWriter
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IIndexWriter
  nameWithType: IIndexWriter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexCommitter*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexCommitter
  name: IndexCommitter
  nameWithType: ReadIndex.IndexCommitter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.IndexCommitter
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IIndexCommitter
  nameWithType: IIndexCommitter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.#ctor
  name: ReadIndex
  nameWithType: ReadIndex.ReadIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.ReadIndex
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.DataStructures.ObjectPool{EventStore.Core.TransactionLog.ITransactionFileReader}
  commentId: T:EventStore.Core.DataStructures.ObjectPool{EventStore.Core.TransactionLog.ITransactionFileReader}
  parent: EventStore.Core.DataStructures
  definition: EventStore.Core.DataStructures.ObjectPool`1
  name: ObjectPool<ITransactionFileReader>
  nameWithType: ObjectPool<ITransactionFileReader>
  fullName: EventStore.Core.DataStructures.ObjectPool<EventStore.Core.TransactionLog.ITransactionFileReader>
  nameWithType.vb: ObjectPool(Of ITransactionFileReader)
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of EventStore.Core.TransactionLog.ITransactionFileReader)
  name.vb: ObjectPool(Of ITransactionFileReader)
  spec.csharp:
  - uid: EventStore.Core.DataStructures.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: EventStore.Core.DataStructures.ObjectPool
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader
    name: ITransactionFileReader
    nameWithType: ITransactionFileReader
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.DataStructures.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: EventStore.Core.DataStructures.ObjectPool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader
    name: ITransactionFileReader
    nameWithType: ITransactionFileReader
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Index.ITableIndex
  commentId: T:EventStore.Core.Index.ITableIndex
  parent: EventStore.Core.Index
  name: ITableIndex
  nameWithType: ITableIndex
  fullName: EventStore.Core.Index.ITableIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.DataStructures.ObjectPool`1
  commentId: T:EventStore.Core.DataStructures.ObjectPool`1
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: EventStore.Core.DataStructures.ObjectPool<T>
  nameWithType.vb: ObjectPool(Of T)
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
  spec.csharp:
  - uid: EventStore.Core.DataStructures.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: EventStore.Core.DataStructures.ObjectPool
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.DataStructures.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: EventStore.Core.DataStructures.ObjectPool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures
  commentId: N:EventStore.Core.DataStructures
  name: EventStore.Core.DataStructures
  nameWithType: EventStore.Core.DataStructures
  fullName: EventStore.Core.DataStructures
- uid: EventStore.Core.Index
  commentId: N:EventStore.Core.Index
  name: EventStore.Core.Index
  nameWithType: EventStore.Core.Index
  fullName: EventStore.Core.Index
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#Init*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#Init
  name: IReadIndex.Init
  nameWithType: ReadIndex.IReadIndex.Init
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init(System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init(System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: Init(Int64)
  nameWithType: IReadIndex.Init(Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init(System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init(System.Int64)
    name: Init
    nameWithType: IReadIndex.Init
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init(System.Int64)
    name: Init
    nameWithType: IReadIndex.Init
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadEvent*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadEvent
  name: IReadIndex.ReadEvent
  nameWithType: ReadIndex.IReadIndex.ReadEvent
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent(System.String,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent(System.String,System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: ReadEvent(String, Int64)
  nameWithType: IReadIndex.ReadEvent(String, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent(System.String, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent(System.String,System.Int64)
    name: ReadEvent
    nameWithType: IReadIndex.ReadEvent
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent(System.String,System.Int64)
    name: ReadEvent
    nameWithType: IReadIndex.ReadEvent
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IndexReadEventResult
  nameWithType: IndexReadEventResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsForward*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsForward
  name: IReadIndex.ReadStreamEventsForward
  nameWithType: ReadIndex.IReadIndex.ReadStreamEventsForward
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: ReadStreamEventsForward(String, Int64, Int32)
  nameWithType: IReadIndex.ReadStreamEventsForward(String, Int64, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward(System.String, System.Int64, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward(System.String,System.Int64,System.Int32)
    name: ReadStreamEventsForward
    nameWithType: IReadIndex.ReadStreamEventsForward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward(System.String,System.Int64,System.Int32)
    name: ReadStreamEventsForward
    nameWithType: IReadIndex.ReadStreamEventsForward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IndexReadStreamResult
  nameWithType: IndexReadStreamResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsBackward*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadStreamEventsBackward
  name: IReadIndex.ReadStreamEventsBackward
  nameWithType: ReadIndex.IReadIndex.ReadStreamEventsBackward
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: ReadStreamEventsBackward(String, Int64, Int32)
  nameWithType: IReadIndex.ReadStreamEventsBackward(String, Int64, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward(System.String, System.Int64, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
    name: ReadStreamEventsBackward
    nameWithType: IReadIndex.ReadStreamEventsBackward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
    name: ReadStreamEventsBackward
    nameWithType: IReadIndex.ReadStreamEventsBackward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadStreamEventsBackward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#IsStreamDeleted*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#IsStreamDeleted
  name: IReadIndex.IsStreamDeleted
  nameWithType: ReadIndex.IReadIndex.IsStreamDeleted
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: IsStreamDeleted(String)
  nameWithType: IReadIndex.IsStreamDeleted(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted(System.String)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted(System.String)
    name: IsStreamDeleted
    nameWithType: IReadIndex.IsStreamDeleted
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted(System.String)
    name: IsStreamDeleted
    nameWithType: IReadIndex.IsStreamDeleted
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.IsStreamDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamLastEventNumber*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamLastEventNumber
  name: IReadIndex.GetStreamLastEventNumber
  nameWithType: ReadIndex.IReadIndex.GetStreamLastEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: GetStreamLastEventNumber(String)
  nameWithType: IReadIndex.GetStreamLastEventNumber(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber(System.String)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber(System.String)
    name: GetStreamLastEventNumber
    nameWithType: IReadIndex.GetStreamLastEventNumber
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber(System.String)
    name: GetStreamLastEventNumber
    nameWithType: IReadIndex.GetStreamLastEventNumber
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamLastEventNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamMetadata*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStreamMetadata
  name: IReadIndex.GetStreamMetadata
  nameWithType: ReadIndex.IReadIndex.GetStreamMetadata
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: GetStreamMetadata(String)
  nameWithType: IReadIndex.GetStreamMetadata(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata(System.String)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata(System.String)
    name: GetStreamMetadata
    nameWithType: IReadIndex.GetStreamMetadata
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata(System.String)
    name: GetStreamMetadata
    nameWithType: IReadIndex.GetStreamMetadata
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStreamMetadata
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  parent: EventStore.Core.Data
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.GetEventStreamIdByTransactionId*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.GetEventStreamIdByTransactionId
  name: GetEventStreamIdByTransactionId
  nameWithType: ReadIndex.GetEventStreamIdByTransactionId
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.GetEventStreamIdByTransactionId
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetEventStreamIdByTransactionId(System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetEventStreamIdByTransactionId(System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: GetEventStreamIdByTransactionId(Int64)
  nameWithType: IReadIndex.GetEventStreamIdByTransactionId(Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetEventStreamIdByTransactionId(System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetEventStreamIdByTransactionId(System.Int64)
    name: GetEventStreamIdByTransactionId
    nameWithType: IReadIndex.GetEventStreamIdByTransactionId
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetEventStreamIdByTransactionId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetEventStreamIdByTransactionId(System.Int64)
    name: GetEventStreamIdByTransactionId
    nameWithType: IReadIndex.GetEventStreamIdByTransactionId
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetEventStreamIdByTransactionId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#CheckStreamAccess*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#CheckStreamAccess
  name: IReadIndex.CheckStreamAccess
  nameWithType: ReadIndex.IReadIndex.CheckStreamAccess
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: CheckStreamAccess(String, StreamAccessType, IPrincipal)
  nameWithType: IReadIndex.CheckStreamAccess(String, StreamAccessType, IPrincipal)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess(System.String, EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType, IPrincipal)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
    name: CheckStreamAccess
    nameWithType: IReadIndex.CheckStreamAccess
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
    name: StreamAccessType
    nameWithType: StreamAccessType
    fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
    name: CheckStreamAccess
    nameWithType: IReadIndex.CheckStreamAccess
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.CheckStreamAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
    name: StreamAccessType
    nameWithType: StreamAccessType
    fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: StreamAccessType
  nameWithType: StreamAccessType
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: StreamAccess
  nameWithType: StreamAccess
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsForward*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsForward
  name: IReadIndex.ReadAllEventsForward
  nameWithType: ReadIndex.IReadIndex.ReadAllEventsForward
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: ReadAllEventsForward(TFPos, Int32)
  nameWithType: IReadIndex.ReadAllEventsForward(TFPos, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward(EventStore.Core.Data.TFPos, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
    name: ReadAllEventsForward
    nameWithType: IReadIndex.ReadAllEventsForward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Data.TFPos
    name: TFPos
    nameWithType: TFPos
    fullName: EventStore.Core.Data.TFPos
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
    name: ReadAllEventsForward
    nameWithType: IReadIndex.ReadAllEventsForward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Data.TFPos
    name: TFPos
    nameWithType: TFPos
    fullName: EventStore.Core.Data.TFPos
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.TFPos
  commentId: T:EventStore.Core.Data.TFPos
  parent: EventStore.Core.Data
  name: TFPos
  nameWithType: TFPos
  fullName: EventStore.Core.Data.TFPos
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IndexReadAllResult
  nameWithType: IndexReadAllResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsBackward*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#ReadAllEventsBackward
  name: IReadIndex.ReadAllEventsBackward
  nameWithType: ReadIndex.IReadIndex.ReadAllEventsBackward
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  isExternal: true
  name: ReadAllEventsBackward(TFPos, Int32)
  nameWithType: IReadIndex.ReadAllEventsBackward(TFPos, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward(EventStore.Core.Data.TFPos, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
    name: ReadAllEventsBackward
    nameWithType: IReadIndex.ReadAllEventsBackward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Data.TFPos
    name: TFPos
    nameWithType: TFPos
    fullName: EventStore.Core.Data.TFPos
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
    name: ReadAllEventsBackward
    nameWithType: IReadIndex.ReadAllEventsBackward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.ReadAllEventsBackward
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Data.TFPos
    name: TFPos
    nameWithType: TFPos
    fullName: EventStore.Core.Data.TFPos
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStatistics*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore#Core#Services#Storage#ReaderIndex#IReadIndex#GetStatistics
  name: IReadIndex.GetStatistics
  nameWithType: ReadIndex.IReadIndex.GetStatistics
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
  nameWithType.vb: ReadIndex.EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
  name.vb: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  name: GetStatistics()
  nameWithType: IReadIndex.GetStatistics()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics()
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
    name: GetStatistics
    nameWithType: IReadIndex.GetStatistics
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
    name: GetStatistics
    nameWithType: IReadIndex.GetStatistics
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: ReadIndexStats
  nameWithType: ReadIndexStats
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Close*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Close
  name: Close
  nameWithType: ReadIndex.Close
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Close
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Close
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Close
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  name: Close()
  nameWithType: IReadIndex.Close()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Close()
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Close
    name: Close
    nameWithType: IReadIndex.Close
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Close
    name: Close
    nameWithType: IReadIndex.Close
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Dispose*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Dispose
  name: Dispose
  nameWithType: ReadIndex.Dispose
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.Dispose
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Dispose
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Dispose
  parent: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  name: Dispose()
  nameWithType: IReadIndex.Dispose()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Dispose()
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Dispose
    name: Dispose
    nameWithType: IReadIndex.Dispose
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Dispose
    name: Dispose
    nameWithType: IReadIndex.Dispose
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )

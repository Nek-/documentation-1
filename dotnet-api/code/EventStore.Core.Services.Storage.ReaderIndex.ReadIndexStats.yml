### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  id: ReadIndexStats
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedRecordReads
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedStreamInfoReads
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedTransInfoReads
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.HashCollisions
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedRecordReads
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedStreamInfoReads
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedTransInfoReads
  langs:
  - csharp
  - vb
  name: ReadIndexStats
  nameWithType: ReadIndexStats
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadIndexStats
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
    startLine: 1
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: 'public class ReadIndexStats : object'
    content.vb: >-
      Public Class ReadIndexStats
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedRecordReads
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedRecordReads
  id: CachedRecordReads
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  langs:
  - csharp
  - vb
  name: CachedRecordReads
  nameWithType: ReadIndexStats.CachedRecordReads
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedRecordReads
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CachedRecordReads
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long CachedRecordReads
    return:
      type: System.Int64
    content.vb: Public ReadOnly CachedRecordReads As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedRecordReads
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedRecordReads
  id: NotCachedRecordReads
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  langs:
  - csharp
  - vb
  name: NotCachedRecordReads
  nameWithType: ReadIndexStats.NotCachedRecordReads
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedRecordReads
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NotCachedRecordReads
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long NotCachedRecordReads
    return:
      type: System.Int64
    content.vb: Public ReadOnly NotCachedRecordReads As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedStreamInfoReads
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedStreamInfoReads
  id: CachedStreamInfoReads
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  langs:
  - csharp
  - vb
  name: CachedStreamInfoReads
  nameWithType: ReadIndexStats.CachedStreamInfoReads
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedStreamInfoReads
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CachedStreamInfoReads
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long CachedStreamInfoReads
    return:
      type: System.Int64
    content.vb: Public ReadOnly CachedStreamInfoReads As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedStreamInfoReads
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedStreamInfoReads
  id: NotCachedStreamInfoReads
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  langs:
  - csharp
  - vb
  name: NotCachedStreamInfoReads
  nameWithType: ReadIndexStats.NotCachedStreamInfoReads
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedStreamInfoReads
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NotCachedStreamInfoReads
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long NotCachedStreamInfoReads
    return:
      type: System.Int64
    content.vb: Public ReadOnly NotCachedStreamInfoReads As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.HashCollisions
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.HashCollisions
  id: HashCollisions
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  langs:
  - csharp
  - vb
  name: HashCollisions
  nameWithType: ReadIndexStats.HashCollisions
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.HashCollisions
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: HashCollisions
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long HashCollisions
    return:
      type: System.Int64
    content.vb: Public ReadOnly HashCollisions As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedTransInfoReads
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedTransInfoReads
  id: CachedTransInfoReads
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  langs:
  - csharp
  - vb
  name: CachedTransInfoReads
  nameWithType: ReadIndexStats.CachedTransInfoReads
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.CachedTransInfoReads
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CachedTransInfoReads
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long CachedTransInfoReads
    return:
      type: System.Int64
    content.vb: Public ReadOnly CachedTransInfoReads As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedTransInfoReads
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedTransInfoReads
  id: NotCachedTransInfoReads
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  langs:
  - csharp
  - vb
  name: NotCachedTransInfoReads
  nameWithType: ReadIndexStats.NotCachedTransInfoReads
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.NotCachedTransInfoReads
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NotCachedTransInfoReads
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long NotCachedTransInfoReads
    return:
      type: System.Int64
    content.vb: Public ReadOnly NotCachedTransInfoReads As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats
  langs:
  - csharp
  - vb
  name: ReadIndexStats(Int64, Int64, Int64, Int64, Int64, Int64, Int64)
  nameWithType: ReadIndexStats.ReadIndexStats(Int64, Int64, Int64, Int64, Int64, Int64, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.ReadIndexStats(System.Int64, System.Int64, System.Int64, System.Int64, System.Int64, System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/ReadIndexStats.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public ReadIndexStats(long cachedRecordReads, long notCachedRecordReads, long cachedStreamInfoReads, long notCachedStreamInfoReads, long hashCollisions, long cachedTransInfoReads, long notCachedTransInfoReads)
    parameters:
    - id: cachedRecordReads
      type: System.Int64
    - id: notCachedRecordReads
      type: System.Int64
    - id: cachedStreamInfoReads
      type: System.Int64
    - id: notCachedStreamInfoReads
      type: System.Int64
    - id: hashCollisions
      type: System.Int64
    - id: cachedTransInfoReads
      type: System.Int64
    - id: notCachedTransInfoReads
      type: System.Int64
    content.vb: Public Sub New(cachedRecordReads As Long, notCachedRecordReads As Long, cachedStreamInfoReads As Long, notCachedStreamInfoReads As Long, hashCollisions As Long, cachedTransInfoReads As Long, notCachedTransInfoReads As Long)
  overload: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReadIndexStats>()
  nameWithType: ProtobufExtensions.Serialize<ReadIndexStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReadIndexStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats)()
  name.vb: Serialize(Of ReadIndexStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReadIndexStats>
    nameWithType: ProtobufExtensions.Serialize<ReadIndexStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReadIndexStats)
    nameWithType: ProtobufExtensions.Serialize(Of ReadIndexStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReadIndexStats>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReadIndexStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReadIndexStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats)()
  name.vb: SerializeToArray(Of ReadIndexStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReadIndexStats>
    nameWithType: ProtobufExtensions.SerializeToArray<ReadIndexStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReadIndexStats)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReadIndexStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.#ctor
  name: ReadIndexStats
  nameWithType: ReadIndexStats.ReadIndexStats
  fullName: EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.ReadIndexStats

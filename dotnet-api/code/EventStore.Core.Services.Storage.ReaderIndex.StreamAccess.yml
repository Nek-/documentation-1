### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  id: StreamAccess
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.#ctor(System.Boolean)
  - EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.#ctor(System.Boolean,System.Boolean)
  - EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.Granted
  - EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.Public
  langs:
  - csharp
  - vb
  name: StreamAccess
  nameWithType: StreamAccess
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/StreamAccess.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: StreamAccess
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/StreamAccess.cs
    startLine: 1
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public struct StreamAccess
    content.vb: Public Structure StreamAccess
  extensionMethods:
  - EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.Granted
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.Granted
  id: Granted
  parent: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  langs:
  - csharp
  - vb
  name: Granted
  nameWithType: StreamAccess.Granted
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.Granted
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/StreamAccess.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Granted
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/StreamAccess.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly bool Granted
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Granted As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.Public
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.Public
  id: Public
  parent: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  langs:
  - csharp
  - vb
  name: Public
  nameWithType: StreamAccess.Public
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.Public
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/StreamAccess.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Public
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/StreamAccess.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly bool Public
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Public As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.#ctor(System.Boolean)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  langs:
  - csharp
  - vb
  name: StreamAccess(Boolean)
  nameWithType: StreamAccess.StreamAccess(Boolean)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.StreamAccess(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/StreamAccess.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/StreamAccess.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public StreamAccess(bool granted)
    parameters:
    - id: granted
      type: System.Boolean
    content.vb: Public Sub New(granted As Boolean)
  overload: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.#ctor(System.Boolean,System.Boolean)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  langs:
  - csharp
  - vb
  name: StreamAccess(Boolean, Boolean)
  nameWithType: StreamAccess.StreamAccess(Boolean, Boolean)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.StreamAccess(System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/StreamAccess.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/StreamAccess.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public StreamAccess(bool granted, bool public)
    parameters:
    - id: granted
      type: System.Boolean
    - id: public
      type: System.Boolean
    content.vb: Public Sub New(granted As Boolean, public As Boolean)
  overload: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<StreamAccess>()
  nameWithType: EnumExtensions.EnumValueName<StreamAccess>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.StreamAccess>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of StreamAccess)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)()
  name.vb: EnumValueName(Of StreamAccess)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<StreamAccess>
    nameWithType: EnumExtensions.EnumValueName<StreamAccess>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.StreamAccess>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of StreamAccess)
    nameWithType: EnumExtensions.EnumValueName(Of StreamAccess)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<StreamAccess>()
  nameWithType: ProtobufExtensions.Serialize<StreamAccess>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.StreamAccess>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of StreamAccess)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)()
  name.vb: Serialize(Of StreamAccess)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<StreamAccess>
    nameWithType: ProtobufExtensions.Serialize<StreamAccess>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.StreamAccess>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of StreamAccess)
    nameWithType: ProtobufExtensions.Serialize(Of StreamAccess)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<StreamAccess>()
  nameWithType: ProtobufExtensions.SerializeToArray<StreamAccess>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.StreamAccess>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of StreamAccess)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)()
  name.vb: SerializeToArray(Of StreamAccess)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<StreamAccess>
    nameWithType: ProtobufExtensions.SerializeToArray<StreamAccess>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.StreamAccess>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of StreamAccess)
    nameWithType: ProtobufExtensions.SerializeToArray(Of StreamAccess)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.#ctor
  name: StreamAccess
  nameWithType: StreamAccess.StreamAccess
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.StreamAccess

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.StorageReaderService
  commentId: T:EventStore.Core.Services.Storage.StorageReaderService
  id: StorageReaderService
  parent: EventStore.Core.Services.Storage
  children:
  - EventStore.Core.Services.Storage.StorageReaderService.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.Storage.ReaderIndex.IReadIndex,System.Int32,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  - EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#MonitoringMessage#InternalStatsRequest}#Handle(EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  - EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShutdown}#Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  - EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShuttingDown}#Handle(EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  - EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#SystemInit}#Handle(EventStore.Core.Messages.SystemMessage.SystemInit)
  langs:
  - csharp
  - vb
  name: StorageReaderService
  nameWithType: StorageReaderService
  fullName: EventStore.Core.Services.Storage.StorageReaderService
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/StorageReaderService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: StorageReaderService
    path: ../EventStore/src/EventStore.Core/Services/Storage/StorageReaderService.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage
  syntax:
    content: 'public class StorageReaderService : object, IHandle<SystemMessage.SystemInit>, IHandle<SystemMessage.BecomeShuttingDown>, IHandle<SystemMessage.BecomeShutdown>, IHandle<MonitoringMessage.InternalStatsRequest>'
    content.vb: >-
      Public Class StorageReaderService
          Inherits Object
          Implements IHandle(Of SystemMessage.SystemInit), IHandle(Of SystemMessage.BecomeShuttingDown), IHandle(Of SystemMessage.BecomeShutdown), IHandle(Of MonitoringMessage.InternalStatsRequest)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemInit}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShuttingDown}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest}
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Storage.StorageReaderService.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.Storage.ReaderIndex.IReadIndex,System.Int32,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  commentId: M:EventStore.Core.Services.Storage.StorageReaderService.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.Storage.ReaderIndex.IReadIndex,System.Int32,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  id: '#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.Storage.ReaderIndex.IReadIndex,System.Int32,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)'
  parent: EventStore.Core.Services.Storage.StorageReaderService
  langs:
  - csharp
  - vb
  name: StorageReaderService(IPublisher, ISubscriber, IReadIndex, Int32, ICheckpoint)
  nameWithType: StorageReaderService.StorageReaderService(IPublisher, ISubscriber, IReadIndex, Int32, ICheckpoint)
  fullName: EventStore.Core.Services.Storage.StorageReaderService.StorageReaderService(EventStore.Core.Bus.IPublisher, EventStore.Core.Bus.ISubscriber, EventStore.Core.Services.Storage.ReaderIndex.IReadIndex, System.Int32, EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/StorageReaderService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/StorageReaderService.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage
  syntax:
    content: public StorageReaderService(IPublisher bus, ISubscriber subscriber, IReadIndex readIndex, int threadCount, ICheckpoint writerCheckpoint)
    parameters:
    - id: bus
      type: EventStore.Core.Bus.IPublisher
    - id: subscriber
      type: EventStore.Core.Bus.ISubscriber
    - id: readIndex
      type: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
    - id: threadCount
      type: System.Int32
    - id: writerCheckpoint
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Public Sub New(bus As IPublisher, subscriber As ISubscriber, readIndex As IReadIndex, threadCount As Integer, writerCheckpoint As ICheckpoint)
  overload: EventStore.Core.Services.Storage.StorageReaderService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#SystemInit}#Handle(EventStore.Core.Messages.SystemMessage.SystemInit)
  commentId: M:EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#SystemInit}#Handle(EventStore.Core.Messages.SystemMessage.SystemInit)
  id: EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#SystemInit}#Handle(EventStore.Core.Messages.SystemMessage.SystemInit)
  isEii: true
  parent: EventStore.Core.Services.Storage.StorageReaderService
  langs:
  - csharp
  - vb
  name: IHandle<SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit)
  nameWithType: StorageReaderService.IHandle<SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit)
  fullName: EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>.Handle(EventStore.Core.Messages.SystemMessage.SystemInit)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/StorageReaderService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>.Handle
    path: ../EventStore/src/EventStore.Core/Services/Storage/StorageReaderService.cs
    startLine: 63
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage
  syntax:
    content: void IHandle<SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.SystemInit
    content.vb: Sub EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>.Handle(message As SystemMessage.SystemInit) Implements IHandle(Of SystemMessage.SystemInit).Handle
  overload: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#SystemInit}#Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemInit}.Handle(EventStore.Core.Messages.SystemMessage.SystemInit)
  nameWithType.vb: StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit)
  name.vb: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit)
- uid: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShuttingDown}#Handle(EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  commentId: M:EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShuttingDown}#Handle(EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  id: EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShuttingDown}#Handle(EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  isEii: true
  parent: EventStore.Core.Services.Storage.StorageReaderService
  langs:
  - csharp
  - vb
  name: IHandle<SystemMessage.BecomeShuttingDown>.Handle(SystemMessage.BecomeShuttingDown)
  nameWithType: StorageReaderService.IHandle<SystemMessage.BecomeShuttingDown>.Handle(SystemMessage.BecomeShuttingDown)
  fullName: EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>.Handle(EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/StorageReaderService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>.Handle
    path: ../EventStore/src/EventStore.Core/Services/Storage/StorageReaderService.cs
    startLine: 68
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage
  syntax:
    content: void IHandle<SystemMessage.BecomeShuttingDown>.Handle(SystemMessage.BecomeShuttingDown message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
    content.vb: Sub EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>.Handle(message As SystemMessage.BecomeShuttingDown) Implements IHandle(Of SystemMessage.BecomeShuttingDown).Handle
  overload: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShuttingDown}#Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShuttingDown}.Handle(EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  nameWithType.vb: StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>.Handle(SystemMessage.BecomeShuttingDown)
  name.vb: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>.Handle(SystemMessage.BecomeShuttingDown)
- uid: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShutdown}#Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  commentId: M:EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShutdown}#Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  id: EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShutdown}#Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  isEii: true
  parent: EventStore.Core.Services.Storage.StorageReaderService
  langs:
  - csharp
  - vb
  name: IHandle<SystemMessage.BecomeShutdown>.Handle(SystemMessage.BecomeShutdown)
  nameWithType: StorageReaderService.IHandle<SystemMessage.BecomeShutdown>.Handle(SystemMessage.BecomeShutdown)
  fullName: EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/StorageReaderService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle
    path: ../EventStore/src/EventStore.Core/Services/Storage/StorageReaderService.cs
    startLine: 82
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage
  syntax:
    content: void IHandle<SystemMessage.BecomeShutdown>.Handle(SystemMessage.BecomeShutdown message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.BecomeShutdown
    content.vb: Sub EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle(message As SystemMessage.BecomeShutdown) Implements IHandle(Of SystemMessage.BecomeShutdown).Handle
  overload: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShutdown}#Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  nameWithType.vb: StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle(SystemMessage.BecomeShutdown)
  name.vb: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle(SystemMessage.BecomeShutdown)
- uid: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#MonitoringMessage#InternalStatsRequest}#Handle(EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  commentId: M:EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#MonitoringMessage#InternalStatsRequest}#Handle(EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  id: EventStore#Core#Bus#IHandle{EventStore#Core#Messages#MonitoringMessage#InternalStatsRequest}#Handle(EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  isEii: true
  parent: EventStore.Core.Services.Storage.StorageReaderService
  langs:
  - csharp
  - vb
  name: IHandle<MonitoringMessage.InternalStatsRequest>.Handle(MonitoringMessage.InternalStatsRequest)
  nameWithType: StorageReaderService.IHandle<MonitoringMessage.InternalStatsRequest>.Handle(MonitoringMessage.InternalStatsRequest)
  fullName: EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>.Handle(EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/StorageReaderService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>.Handle
    path: ../EventStore/src/EventStore.Core/Services/Storage/StorageReaderService.cs
    startLine: 88
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage
  syntax:
    content: void IHandle<MonitoringMessage.InternalStatsRequest>.Handle(MonitoringMessage.InternalStatsRequest message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
    content.vb: Sub EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>.Handle(message As MonitoringMessage.InternalStatsRequest) Implements IHandle(Of MonitoringMessage.InternalStatsRequest).Handle
  overload: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#MonitoringMessage#InternalStatsRequest}#Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest}.Handle(EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  nameWithType.vb: StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>.Handle(MonitoringMessage.InternalStatsRequest)
  name.vb: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>.Handle(MonitoringMessage.InternalStatsRequest)
references:
- uid: EventStore.Core.Services.Storage
  commentId: N:EventStore.Core.Services.Storage
  name: EventStore.Core.Services.Storage
  nameWithType: EventStore.Core.Services.Storage
  fullName: EventStore.Core.Services.Storage
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemInit}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemInit}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.SystemInit>
  nameWithType: IHandle<SystemMessage.SystemInit>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>
  nameWithType.vb: IHandle(Of SystemMessage.SystemInit)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemInit)
  name.vb: IHandle(Of SystemMessage.SystemInit)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.SystemInit
    name: SystemMessage.SystemInit
    nameWithType: SystemMessage.SystemInit
    fullName: EventStore.Core.Messages.SystemMessage.SystemInit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.SystemInit
    name: SystemMessage.SystemInit
    nameWithType: SystemMessage.SystemInit
    fullName: EventStore.Core.Messages.SystemMessage.SystemInit
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShuttingDown}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShuttingDown}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.BecomeShuttingDown>
  nameWithType: IHandle<SystemMessage.BecomeShuttingDown>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>
  nameWithType.vb: IHandle(Of SystemMessage.BecomeShuttingDown)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  name.vb: IHandle(Of SystemMessage.BecomeShuttingDown)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
    name: SystemMessage.BecomeShuttingDown
    nameWithType: SystemMessage.BecomeShuttingDown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
    name: SystemMessage.BecomeShuttingDown
    nameWithType: SystemMessage.BecomeShuttingDown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.BecomeShutdown>
  nameWithType: IHandle<SystemMessage.BecomeShutdown>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>
  nameWithType.vb: IHandle(Of SystemMessage.BecomeShutdown)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  name.vb: IHandle(Of SystemMessage.BecomeShutdown)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShutdown
    name: SystemMessage.BecomeShutdown
    nameWithType: SystemMessage.BecomeShutdown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShutdown
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShutdown
    name: SystemMessage.BecomeShutdown
    nameWithType: SystemMessage.BecomeShutdown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShutdown
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<MonitoringMessage.InternalStatsRequest>
  nameWithType: IHandle<MonitoringMessage.InternalStatsRequest>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>
  nameWithType.vb: IHandle(Of MonitoringMessage.InternalStatsRequest)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  name.vb: IHandle(Of MonitoringMessage.InternalStatsRequest)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
    name: MonitoringMessage.InternalStatsRequest
    nameWithType: MonitoringMessage.InternalStatsRequest
    fullName: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
    name: MonitoringMessage.InternalStatsRequest
    nameWithType: MonitoringMessage.InternalStatsRequest
    fullName: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<StorageReaderService>()
  nameWithType: ProtobufExtensions.Serialize<StorageReaderService>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.StorageReaderService>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of StorageReaderService)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.StorageReaderService)()
  name.vb: Serialize(Of StorageReaderService)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<StorageReaderService>
    nameWithType: ProtobufExtensions.Serialize<StorageReaderService>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.StorageReaderService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of StorageReaderService)
    nameWithType: ProtobufExtensions.Serialize(Of StorageReaderService)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.StorageReaderService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<StorageReaderService>()
  nameWithType: ProtobufExtensions.SerializeToArray<StorageReaderService>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.StorageReaderService>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of StorageReaderService)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.StorageReaderService)()
  name.vb: SerializeToArray(Of StorageReaderService)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<StorageReaderService>
    nameWithType: ProtobufExtensions.SerializeToArray<StorageReaderService>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.StorageReaderService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of StorageReaderService)
    nameWithType: ProtobufExtensions.SerializeToArray(Of StorageReaderService)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.StorageReaderService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.StorageReaderService.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.StorageReaderService.#ctor
  name: StorageReaderService
  nameWithType: StorageReaderService.StorageReaderService
  fullName: EventStore.Core.Services.Storage.StorageReaderService.StorageReaderService
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus.ISubscriber
  commentId: T:EventStore.Core.Bus.ISubscriber
  parent: EventStore.Core.Bus
  name: ISubscriber
  nameWithType: ISubscriber
  fullName: EventStore.Core.Bus.ISubscriber
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IReadIndex
  nameWithType: IReadIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#SystemInit}#Handle*
  commentId: Overload:EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#SystemInit}#Handle
  name: IHandle<SystemMessage.SystemInit>.Handle
  nameWithType: StorageReaderService.IHandle<SystemMessage.SystemInit>.Handle
  fullName: EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>.Handle
  nameWithType.vb: StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>.Handle
  name.vb: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemInit}.Handle(EventStore.Core.Messages.SystemMessage.SystemInit)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemInit}.Handle(EventStore.Core.Messages.SystemMessage.SystemInit)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemInit}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.SystemInit)
  nameWithType: IHandle<SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>.Handle(EventStore.Core.Messages.SystemMessage.SystemInit)
  nameWithType.vb: IHandle(Of SystemMessage.SystemInit).Handle(SystemMessage.SystemInit)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemInit).Handle(EventStore.Core.Messages.SystemMessage.SystemInit)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.SystemInit>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemInit>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.SystemInit
    name: SystemMessage.SystemInit
    nameWithType: SystemMessage.SystemInit
    fullName: EventStore.Core.Messages.SystemMessage.SystemInit
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.SystemInit).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemInit).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.SystemInit
    name: SystemMessage.SystemInit
    nameWithType: SystemMessage.SystemInit
    fullName: EventStore.Core.Messages.SystemMessage.SystemInit
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.SystemInit
  commentId: T:EventStore.Core.Messages.SystemMessage.SystemInit
  parent: EventStore.Core.Messages
  name: SystemMessage.SystemInit
  nameWithType: SystemMessage.SystemInit
  fullName: EventStore.Core.Messages.SystemMessage.SystemInit
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShuttingDown}#Handle*
  commentId: Overload:EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShuttingDown}#Handle
  name: IHandle<SystemMessage.BecomeShuttingDown>.Handle
  nameWithType: StorageReaderService.IHandle<SystemMessage.BecomeShuttingDown>.Handle
  fullName: EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>.Handle
  nameWithType.vb: StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>.Handle
  name.vb: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShuttingDown}.Handle(EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShuttingDown}.Handle(EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShuttingDown}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.BecomeShuttingDown)
  nameWithType: IHandle<SystemMessage.BecomeShuttingDown>.Handle(SystemMessage.BecomeShuttingDown)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>.Handle(EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  nameWithType.vb: IHandle(Of SystemMessage.BecomeShuttingDown).Handle(SystemMessage.BecomeShuttingDown)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.BecomeShuttingDown).Handle(EventStore.Core.Messages.SystemMessage.BecomeShuttingDown)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.BecomeShuttingDown>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShuttingDown>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
    name: SystemMessage.BecomeShuttingDown
    nameWithType: SystemMessage.BecomeShuttingDown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.BecomeShuttingDown).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.BecomeShuttingDown).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
    name: SystemMessage.BecomeShuttingDown
    nameWithType: SystemMessage.BecomeShuttingDown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
  commentId: T:EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
  parent: EventStore.Core.Messages
  name: SystemMessage.BecomeShuttingDown
  nameWithType: SystemMessage.BecomeShuttingDown
  fullName: EventStore.Core.Messages.SystemMessage.BecomeShuttingDown
- uid: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShutdown}#Handle*
  commentId: Overload:EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#SystemMessage#BecomeShutdown}#Handle
  name: IHandle<SystemMessage.BecomeShutdown>.Handle
  nameWithType: StorageReaderService.IHandle<SystemMessage.BecomeShutdown>.Handle
  fullName: EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle
  nameWithType.vb: StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle
  name.vb: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.BecomeShutdown)
  nameWithType: IHandle<SystemMessage.BecomeShutdown>.Handle(SystemMessage.BecomeShutdown)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  nameWithType.vb: IHandle(Of SystemMessage.BecomeShutdown).Handle(SystemMessage.BecomeShutdown)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.BecomeShutdown).Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.BecomeShutdown>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShutdown
    name: SystemMessage.BecomeShutdown
    nameWithType: SystemMessage.BecomeShutdown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShutdown
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.BecomeShutdown).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.BecomeShutdown).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShutdown
    name: SystemMessage.BecomeShutdown
    nameWithType: SystemMessage.BecomeShutdown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShutdown
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.BecomeShutdown
  commentId: T:EventStore.Core.Messages.SystemMessage.BecomeShutdown
  parent: EventStore.Core.Messages
  name: SystemMessage.BecomeShutdown
  nameWithType: SystemMessage.BecomeShutdown
  fullName: EventStore.Core.Messages.SystemMessage.BecomeShutdown
- uid: EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#MonitoringMessage#InternalStatsRequest}#Handle*
  commentId: Overload:EventStore.Core.Services.Storage.StorageReaderService.EventStore#Core#Bus#IHandle{EventStore#Core#Messages#MonitoringMessage#InternalStatsRequest}#Handle
  name: IHandle<MonitoringMessage.InternalStatsRequest>.Handle
  nameWithType: StorageReaderService.IHandle<MonitoringMessage.InternalStatsRequest>.Handle
  fullName: EventStore.Core.Services.Storage.StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>.Handle
  nameWithType.vb: StorageReaderService.EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>.Handle
  name.vb: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest}.Handle(EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest}.Handle(EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(MonitoringMessage.InternalStatsRequest)
  nameWithType: IHandle<MonitoringMessage.InternalStatsRequest>.Handle(MonitoringMessage.InternalStatsRequest)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>.Handle(EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  nameWithType.vb: IHandle(Of MonitoringMessage.InternalStatsRequest).Handle(MonitoringMessage.InternalStatsRequest)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest).Handle(EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<MonitoringMessage.InternalStatsRequest>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
    name: MonitoringMessage.InternalStatsRequest
    nameWithType: MonitoringMessage.InternalStatsRequest
    fullName: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of MonitoringMessage.InternalStatsRequest).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
    name: MonitoringMessage.InternalStatsRequest
    nameWithType: MonitoringMessage.InternalStatsRequest
    fullName: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
  commentId: T:EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
  parent: EventStore.Core.Messages
  name: MonitoringMessage.InternalStatsRequest
  nameWithType: MonitoringMessage.InternalStatsRequest
  fullName: EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.SubscriptionDropReason
  commentId: T:EventStore.Core.Services.SubscriptionDropReason
  id: SubscriptionDropReason
  parent: EventStore.Core.Services
  children:
  - EventStore.Core.Services.SubscriptionDropReason.AccessDenied
  - EventStore.Core.Services.SubscriptionDropReason.NotFound
  - EventStore.Core.Services.SubscriptionDropReason.PersistentSubscriptionDeleted
  - EventStore.Core.Services.SubscriptionDropReason.SubscriberMaxCountReached
  - EventStore.Core.Services.SubscriptionDropReason.Unsubscribed
  langs:
  - csharp
  - vb
  name: SubscriptionDropReason
  nameWithType: SubscriptionDropReason
  fullName: EventStore.Core.Services.SubscriptionDropReason
  type: Enum
  source:
    remote:
      path: src/EventStore.Core/Services/SubscriptionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SubscriptionDropReason
    path: ../EventStore/src/EventStore.Core/Services/SubscriptionsService.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: 'public enum SubscriptionDropReason : int'
    content.vb: Public Enum SubscriptionDropReason As Integer
  extensionMethods:
  - EventStore.Core.Services.SubscriptionDropReason.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.SubscriptionDropReason.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.SubscriptionDropReason.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.Services.SubscriptionDropReason.Unsubscribed
  commentId: F:EventStore.Core.Services.SubscriptionDropReason.Unsubscribed
  id: Unsubscribed
  parent: EventStore.Core.Services.SubscriptionDropReason
  langs:
  - csharp
  - vb
  name: Unsubscribed
  nameWithType: SubscriptionDropReason.Unsubscribed
  fullName: EventStore.Core.Services.SubscriptionDropReason.Unsubscribed
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/SubscriptionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Unsubscribed
    path: ../EventStore/src/EventStore.Core/Services/SubscriptionsService.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: Unsubscribed = null
    return:
      type: EventStore.Core.Services.SubscriptionDropReason
    content.vb: Unsubscribed = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.SubscriptionDropReason.AccessDenied
  commentId: F:EventStore.Core.Services.SubscriptionDropReason.AccessDenied
  id: AccessDenied
  parent: EventStore.Core.Services.SubscriptionDropReason
  langs:
  - csharp
  - vb
  name: AccessDenied
  nameWithType: SubscriptionDropReason.AccessDenied
  fullName: EventStore.Core.Services.SubscriptionDropReason.AccessDenied
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/SubscriptionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AccessDenied
    path: ../EventStore/src/EventStore.Core/Services/SubscriptionsService.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: AccessDenied = null
    return:
      type: EventStore.Core.Services.SubscriptionDropReason
    content.vb: AccessDenied = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.SubscriptionDropReason.NotFound
  commentId: F:EventStore.Core.Services.SubscriptionDropReason.NotFound
  id: NotFound
  parent: EventStore.Core.Services.SubscriptionDropReason
  langs:
  - csharp
  - vb
  name: NotFound
  nameWithType: SubscriptionDropReason.NotFound
  fullName: EventStore.Core.Services.SubscriptionDropReason.NotFound
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/SubscriptionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: NotFound
    path: ../EventStore/src/EventStore.Core/Services/SubscriptionsService.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: NotFound = null
    return:
      type: EventStore.Core.Services.SubscriptionDropReason
    content.vb: NotFound = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.SubscriptionDropReason.PersistentSubscriptionDeleted
  commentId: F:EventStore.Core.Services.SubscriptionDropReason.PersistentSubscriptionDeleted
  id: PersistentSubscriptionDeleted
  parent: EventStore.Core.Services.SubscriptionDropReason
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionDeleted
  nameWithType: SubscriptionDropReason.PersistentSubscriptionDeleted
  fullName: EventStore.Core.Services.SubscriptionDropReason.PersistentSubscriptionDeleted
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/SubscriptionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: PersistentSubscriptionDeleted
    path: ../EventStore/src/EventStore.Core/Services/SubscriptionsService.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: PersistentSubscriptionDeleted = null
    return:
      type: EventStore.Core.Services.SubscriptionDropReason
    content.vb: PersistentSubscriptionDeleted = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.SubscriptionDropReason.SubscriberMaxCountReached
  commentId: F:EventStore.Core.Services.SubscriptionDropReason.SubscriberMaxCountReached
  id: SubscriberMaxCountReached
  parent: EventStore.Core.Services.SubscriptionDropReason
  langs:
  - csharp
  - vb
  name: SubscriberMaxCountReached
  nameWithType: SubscriptionDropReason.SubscriberMaxCountReached
  fullName: EventStore.Core.Services.SubscriptionDropReason.SubscriberMaxCountReached
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/SubscriptionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SubscriberMaxCountReached
    path: ../EventStore/src/EventStore.Core/Services/SubscriptionsService.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: SubscriberMaxCountReached = null
    return:
      type: EventStore.Core.Services.SubscriptionDropReason
    content.vb: SubscriberMaxCountReached = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Services
  commentId: N:EventStore.Core.Services
  name: EventStore.Core.Services
  nameWithType: EventStore.Core.Services
  fullName: EventStore.Core.Services
- uid: EventStore.Core.Services.SubscriptionDropReason.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<SubscriptionDropReason>()
  nameWithType: EnumExtensions.EnumValueName<SubscriptionDropReason>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.SubscriptionDropReason>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of SubscriptionDropReason)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.SubscriptionDropReason)()
  name.vb: EnumValueName(Of SubscriptionDropReason)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<SubscriptionDropReason>
    nameWithType: EnumExtensions.EnumValueName<SubscriptionDropReason>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.SubscriptionDropReason>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of SubscriptionDropReason)
    nameWithType: EnumExtensions.EnumValueName(Of SubscriptionDropReason)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.SubscriptionDropReason)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.SubscriptionDropReason.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SubscriptionDropReason>()
  nameWithType: ProtobufExtensions.Serialize<SubscriptionDropReason>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.SubscriptionDropReason>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SubscriptionDropReason)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.SubscriptionDropReason)()
  name.vb: Serialize(Of SubscriptionDropReason)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SubscriptionDropReason>
    nameWithType: ProtobufExtensions.Serialize<SubscriptionDropReason>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.SubscriptionDropReason>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SubscriptionDropReason)
    nameWithType: ProtobufExtensions.Serialize(Of SubscriptionDropReason)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.SubscriptionDropReason)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.SubscriptionDropReason.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SubscriptionDropReason>()
  nameWithType: ProtobufExtensions.SerializeToArray<SubscriptionDropReason>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.SubscriptionDropReason>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SubscriptionDropReason)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.SubscriptionDropReason)()
  name.vb: SerializeToArray(Of SubscriptionDropReason)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SubscriptionDropReason>
    nameWithType: ProtobufExtensions.SerializeToArray<SubscriptionDropReason>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.SubscriptionDropReason>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SubscriptionDropReason)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SubscriptionDropReason)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.SubscriptionDropReason)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.SubscriptionDropReason
  commentId: T:EventStore.Core.Services.SubscriptionDropReason
  parent: EventStore.Core.Services
  name: SubscriptionDropReason
  nameWithType: SubscriptionDropReason
  fullName: EventStore.Core.Services.SubscriptionDropReason

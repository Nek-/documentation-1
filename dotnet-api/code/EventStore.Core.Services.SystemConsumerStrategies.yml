### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.SystemConsumerStrategies
  commentId: T:EventStore.Core.Services.SystemConsumerStrategies
  id: SystemConsumerStrategies
  parent: EventStore.Core.Services
  children:
  - EventStore.Core.Services.SystemConsumerStrategies.DispatchToSingle
  - EventStore.Core.Services.SystemConsumerStrategies.Pinned
  - EventStore.Core.Services.SystemConsumerStrategies.RoundRobin
  langs:
  - csharp
  - vb
  name: SystemConsumerStrategies
  nameWithType: SystemConsumerStrategies
  fullName: EventStore.Core.Services.SystemConsumerStrategies
  type: Class
  source:
    id: SystemConsumerStrategies
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/SystemNames.cs
    startLine: 142
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  summary: "\nSystem supported consumer strategies for use with persistent subscriptions.\n"
  example: []
  syntax:
    content: public static class SystemConsumerStrategies
    content.vb: Public Module SystemConsumerStrategies
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.Services.SystemConsumerStrategies.DispatchToSingle
  commentId: F:EventStore.Core.Services.SystemConsumerStrategies.DispatchToSingle
  id: DispatchToSingle
  parent: EventStore.Core.Services.SystemConsumerStrategies
  langs:
  - csharp
  - vb
  name: DispatchToSingle
  nameWithType: SystemConsumerStrategies.DispatchToSingle
  fullName: EventStore.Core.Services.SystemConsumerStrategies.DispatchToSingle
  type: Field
  source:
    id: DispatchToSingle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/SystemNames.cs
    startLine: 146
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  summary: "\nDistributes events to a single client until it is full. Then round robin to the next client.\n"
  example: []
  syntax:
    content: public const string DispatchToSingle = "DispatchToSingle"
    return:
      type: System.String
    content.vb: Public Const DispatchToSingle As String = "DispatchToSingle"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.SystemConsumerStrategies.RoundRobin
  commentId: F:EventStore.Core.Services.SystemConsumerStrategies.RoundRobin
  id: RoundRobin
  parent: EventStore.Core.Services.SystemConsumerStrategies
  langs:
  - csharp
  - vb
  name: RoundRobin
  nameWithType: SystemConsumerStrategies.RoundRobin
  fullName: EventStore.Core.Services.SystemConsumerStrategies.RoundRobin
  type: Field
  source:
    id: RoundRobin
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/SystemNames.cs
    startLine: 151
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  summary: "\nDistribute events to each client in a round robin fashion.\n"
  example: []
  syntax:
    content: public const string RoundRobin = "RoundRobin"
    return:
      type: System.String
    content.vb: Public Const RoundRobin As String = "RoundRobin"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.SystemConsumerStrategies.Pinned
  commentId: F:EventStore.Core.Services.SystemConsumerStrategies.Pinned
  id: Pinned
  parent: EventStore.Core.Services.SystemConsumerStrategies
  langs:
  - csharp
  - vb
  name: Pinned
  nameWithType: SystemConsumerStrategies.Pinned
  fullName: EventStore.Core.Services.SystemConsumerStrategies.Pinned
  type: Field
  source:
    id: Pinned
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/SystemNames.cs
    startLine: 157
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  summary: "\nDistribute events of the same streamId to the same client until it disconnects on a best efforts basis. \nDesigned to be used with indexes such as the category projection.\n"
  example: []
  syntax:
    content: public const string Pinned = "Pinned"
    return:
      type: System.String
    content.vb: Public Const Pinned As String = "Pinned"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Services
  commentId: N:EventStore.Core.Services
  name: EventStore.Core.Services
  nameWithType: EventStore.Core.Services
  fullName: EventStore.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader
  commentId: T:EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader
  id: PasswordChangeNotificationReader
  parent: EventStore.Core.Services.Transport.Http.Authentication
  children:
  - EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher)
  - EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  - EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle(EventStore.Core.Messages.SystemMessage.SystemStart)
  langs:
  - csharp
  - vb
  name: PasswordChangeNotificationReader
  nameWithType: PasswordChangeNotificationReader
  fullName: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Authentication/PasswordChangeNotificationReader.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PasswordChangeNotificationReader
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Authentication/PasswordChangeNotificationReader.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Authentication
  syntax:
    content: 'public class PasswordChangeNotificationReader : object, IHandle<SystemMessage.SystemStart>, IHandle<SystemMessage.BecomeShutdown>'
    content.vb: >-
      Public Class PasswordChangeNotificationReader
          Inherits Object
          Implements IHandle(Of SystemMessage.SystemStart), IHandle(Of SystemMessage.BecomeShutdown)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemStart}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher)
  commentId: M:EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher)
  id: '#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher)'
  parent: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader
  langs:
  - csharp
  - vb
  name: PasswordChangeNotificationReader(IPublisher, IODispatcher)
  nameWithType: PasswordChangeNotificationReader.PasswordChangeNotificationReader(IPublisher, IODispatcher)
  fullName: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.PasswordChangeNotificationReader(EventStore.Core.Bus.IPublisher, EventStore.Core.Helpers.IODispatcher)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Authentication/PasswordChangeNotificationReader.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Authentication/PasswordChangeNotificationReader.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Authentication
  syntax:
    content: public PasswordChangeNotificationReader(IPublisher publisher, IODispatcher ioDispatcher)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: ioDispatcher
      type: EventStore.Core.Helpers.IODispatcher
    content.vb: Public Sub New(publisher As IPublisher, ioDispatcher As IODispatcher)
  overload: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle(EventStore.Core.Messages.SystemMessage.SystemStart)
  commentId: M:EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle(EventStore.Core.Messages.SystemMessage.SystemStart)
  id: Handle(EventStore.Core.Messages.SystemMessage.SystemStart)
  parent: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader
  langs:
  - csharp
  - vb
  name: Handle(SystemMessage.SystemStart)
  nameWithType: PasswordChangeNotificationReader.Handle(SystemMessage.SystemStart)
  fullName: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle(EventStore.Core.Messages.SystemMessage.SystemStart)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Authentication/PasswordChangeNotificationReader.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Authentication/PasswordChangeNotificationReader.cs
    startLine: 102
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Authentication
  syntax:
    content: public void Handle(SystemMessage.SystemStart message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.SystemStart
    content.vb: Public Sub Handle(message As SystemMessage.SystemStart)
  overload: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemStart}.Handle(EventStore.Core.Messages.SystemMessage.SystemStart)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  commentId: M:EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  id: Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  parent: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader
  langs:
  - csharp
  - vb
  name: Handle(SystemMessage.BecomeShutdown)
  nameWithType: PasswordChangeNotificationReader.Handle(SystemMessage.BecomeShutdown)
  fullName: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Authentication/PasswordChangeNotificationReader.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Authentication/PasswordChangeNotificationReader.cs
    startLine: 106
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Authentication
  syntax:
    content: public void Handle(SystemMessage.BecomeShutdown message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.BecomeShutdown
    content.vb: Public Sub Handle(message As SystemMessage.BecomeShutdown)
  overload: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Transport.Http.Authentication
  commentId: N:EventStore.Core.Services.Transport.Http.Authentication
  name: EventStore.Core.Services.Transport.Http.Authentication
  nameWithType: EventStore.Core.Services.Transport.Http.Authentication
  fullName: EventStore.Core.Services.Transport.Http.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemStart}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemStart}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.SystemStart>
  nameWithType: IHandle<SystemMessage.SystemStart>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemStart>
  nameWithType.vb: IHandle(Of SystemMessage.SystemStart)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemStart)
  name.vb: IHandle(Of SystemMessage.SystemStart)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.SystemStart
    name: SystemMessage.SystemStart
    nameWithType: SystemMessage.SystemStart
    fullName: EventStore.Core.Messages.SystemMessage.SystemStart
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.SystemStart
    name: SystemMessage.SystemStart
    nameWithType: SystemMessage.SystemStart
    fullName: EventStore.Core.Messages.SystemMessage.SystemStart
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.BecomeShutdown>
  nameWithType: IHandle<SystemMessage.BecomeShutdown>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>
  nameWithType.vb: IHandle(Of SystemMessage.BecomeShutdown)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  name.vb: IHandle(Of SystemMessage.BecomeShutdown)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShutdown
    name: SystemMessage.BecomeShutdown
    nameWithType: SystemMessage.BecomeShutdown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShutdown
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShutdown
    name: SystemMessage.BecomeShutdown
    nameWithType: SystemMessage.BecomeShutdown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShutdown
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PasswordChangeNotificationReader>()
  nameWithType: ProtobufExtensions.Serialize<PasswordChangeNotificationReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PasswordChangeNotificationReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader)()
  name.vb: Serialize(Of PasswordChangeNotificationReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PasswordChangeNotificationReader>
    nameWithType: ProtobufExtensions.Serialize<PasswordChangeNotificationReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PasswordChangeNotificationReader)
    nameWithType: ProtobufExtensions.Serialize(Of PasswordChangeNotificationReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PasswordChangeNotificationReader>()
  nameWithType: ProtobufExtensions.SerializeToArray<PasswordChangeNotificationReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PasswordChangeNotificationReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader)()
  name.vb: SerializeToArray(Of PasswordChangeNotificationReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PasswordChangeNotificationReader>
    nameWithType: ProtobufExtensions.SerializeToArray<PasswordChangeNotificationReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PasswordChangeNotificationReader)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PasswordChangeNotificationReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.#ctor
  name: PasswordChangeNotificationReader
  nameWithType: PasswordChangeNotificationReader.PasswordChangeNotificationReader
  fullName: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.PasswordChangeNotificationReader
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Helpers.IODispatcher
  commentId: T:EventStore.Core.Helpers.IODispatcher
  parent: EventStore.Core.Helpers
  name: IODispatcher
  nameWithType: IODispatcher
  fullName: EventStore.Core.Helpers.IODispatcher
- uid: EventStore.Core.Helpers
  commentId: N:EventStore.Core.Helpers
  name: EventStore.Core.Helpers
  nameWithType: EventStore.Core.Helpers
  fullName: EventStore.Core.Helpers
- uid: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle
  name: Handle
  nameWithType: PasswordChangeNotificationReader.Handle
  fullName: EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemStart}.Handle(EventStore.Core.Messages.SystemMessage.SystemStart)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemStart}.Handle(EventStore.Core.Messages.SystemMessage.SystemStart)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemStart}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.SystemStart)
  nameWithType: IHandle<SystemMessage.SystemStart>.Handle(SystemMessage.SystemStart)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemStart>.Handle(EventStore.Core.Messages.SystemMessage.SystemStart)
  nameWithType.vb: IHandle(Of SystemMessage.SystemStart).Handle(SystemMessage.SystemStart)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemStart).Handle(EventStore.Core.Messages.SystemMessage.SystemStart)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.SystemStart>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemStart>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.SystemStart
    name: SystemMessage.SystemStart
    nameWithType: SystemMessage.SystemStart
    fullName: EventStore.Core.Messages.SystemMessage.SystemStart
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.SystemStart).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemStart).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.SystemStart
    name: SystemMessage.SystemStart
    nameWithType: SystemMessage.SystemStart
    fullName: EventStore.Core.Messages.SystemMessage.SystemStart
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.SystemStart
  commentId: T:EventStore.Core.Messages.SystemMessage.SystemStart
  parent: EventStore.Core.Messages
  name: SystemMessage.SystemStart
  nameWithType: SystemMessage.SystemStart
  fullName: EventStore.Core.Messages.SystemMessage.SystemStart
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.BecomeShutdown}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.BecomeShutdown)
  nameWithType: IHandle<SystemMessage.BecomeShutdown>.Handle(SystemMessage.BecomeShutdown)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  nameWithType.vb: IHandle(Of SystemMessage.BecomeShutdown).Handle(SystemMessage.BecomeShutdown)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.BecomeShutdown).Handle(EventStore.Core.Messages.SystemMessage.BecomeShutdown)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.BecomeShutdown>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.BecomeShutdown>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShutdown
    name: SystemMessage.BecomeShutdown
    nameWithType: SystemMessage.BecomeShutdown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShutdown
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.BecomeShutdown).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.BecomeShutdown).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.BecomeShutdown
    name: SystemMessage.BecomeShutdown
    nameWithType: SystemMessage.BecomeShutdown
    fullName: EventStore.Core.Messages.SystemMessage.BecomeShutdown
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.BecomeShutdown
  commentId: T:EventStore.Core.Messages.SystemMessage.BecomeShutdown
  parent: EventStore.Core.Messages
  name: SystemMessage.BecomeShutdown
  nameWithType: SystemMessage.BecomeShutdown
  fullName: EventStore.Core.Messages.SystemMessage.BecomeShutdown

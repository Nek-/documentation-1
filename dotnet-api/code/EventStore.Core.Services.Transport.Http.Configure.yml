### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.Configure
  commentId: T:EventStore.Core.Services.Transport.Http.Configure
  id: Configure
  parent: EventStore.Core.Services.Transport.Http
  children:
  - EventStore.Core.Services.Transport.Http.Configure.BadRequest(System.String)
  - EventStore.Core.Services.Transport.Http.Configure.DeleteStreamCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Configure.DisableHTTPCaching
  - EventStore.Core.Services.Transport.Http.Configure.EventEntry(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  - EventStore.Core.Services.Transport.Http.Configure.EventMetadata(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs)
  - EventStore.Core.Services.Transport.Http.Configure.GetFreshStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Configure.GetFreshTcpConnectionStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Configure.GetPositionETag(System.Int64,System.String)
  - EventStore.Core.Services.Transport.Http.Configure.GetReplicationStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsBackward(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  - EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsForward(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Configure.Gone(System.String)
  - EventStore.Core.Services.Transport.Http.Configure.InternalServerError(System.String)
  - EventStore.Core.Services.Transport.Http.Configure.NotFound
  - EventStore.Core.Services.Transport.Http.Configure.NotFound(System.String,System.Nullable{System.Int32},System.Boolean,System.String)
  - EventStore.Core.Services.Transport.Http.Configure.NotImplemented(System.String)
  - EventStore.Core.Services.Transport.Http.Configure.NotModified
  - EventStore.Core.Services.Transport.Http.Configure.Ok(System.String)
  - EventStore.Core.Services.Transport.Http.Configure.Ok(System.String,Encoding,System.String,System.Nullable{System.Int32},System.Boolean,KeyValuePair{System.String,System.String}[])
  - EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsBackwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  - EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsForwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  - EventStore.Core.Services.Transport.Http.Configure.ServiceUnavailable(System.String)
  - EventStore.Core.Services.Transport.Http.Configure.TemporaryRedirect(Uri,System.String,System.Int32)
  - EventStore.Core.Services.Transport.Http.Configure.Unauthorized(System.String)
  - EventStore.Core.Services.Transport.Http.Configure.WriteEventsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.String)
  langs:
  - csharp
  - vb
  name: Configure
  nameWithType: Configure
  fullName: EventStore.Core.Services.Transport.Http.Configure
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Configure
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: 'public static class Configure : object'
    content.vb: >-
      Public Module Configure
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.Services.Transport.Http.Configure.DisableHTTPCaching
  commentId: F:EventStore.Core.Services.Transport.Http.Configure.DisableHTTPCaching
  id: DisableHTTPCaching
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: DisableHTTPCaching
  nameWithType: Configure.DisableHTTPCaching
  fullName: EventStore.Core.Services.Transport.Http.Configure.DisableHTTPCaching
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DisableHTTPCaching
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static bool DisableHTTPCaching
    return:
      type: System.Boolean
    content.vb: Public Shared DisableHTTPCaching As Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.Ok(System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.Ok(System.String)
  id: Ok(System.String)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: Ok(String)
  nameWithType: Configure.Ok(String)
  fullName: EventStore.Core.Services.Transport.Http.Configure.Ok(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Ok
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration Ok(string contentType)
    parameters:
    - id: contentType
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function Ok(contentType As String) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.Ok*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.Ok(System.String,Encoding,System.String,System.Nullable{System.Int32},System.Boolean,KeyValuePair{System.String,System.String}[])
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.Ok(System.String,Encoding,System.String,System.Nullable{System.Int32},System.Boolean,KeyValuePair{System.String,System.String}[])
  id: Ok(System.String,Encoding,System.String,System.Nullable{System.Int32},System.Boolean,KeyValuePair{System.String,System.String}[])
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: Ok(String, Encoding, String, Nullable<Int32>, Boolean, KeyValuePair<String, String>[])
  nameWithType: Configure.Ok(String, Encoding, String, Nullable<Int32>, Boolean, KeyValuePair<String, String>[])
  fullName: EventStore.Core.Services.Transport.Http.Configure.Ok(System.String, Encoding, System.String, System.Nullable<System.Int32>, System.Boolean, KeyValuePair<System.String, System.String>[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Ok
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration Ok(string contentType, Encoding encoding, string etag, int? cacheSeconds, bool isCachePublic, params KeyValuePair<string, string>[] headers)
    parameters:
    - id: contentType
      type: System.String
    - id: encoding
      type: Encoding
    - id: etag
      type: System.String
    - id: cacheSeconds
      type: System.Nullable{System.Int32}
    - id: isCachePublic
      type: System.Boolean
    - id: headers
      type: KeyValuePair{System.String,System.String}[]
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function Ok(contentType As String, encoding As Encoding, etag As String, cacheSeconds As Integer?, isCachePublic As Boolean, ParamArray headers As KeyValuePair(Of String, String)()) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.Ok*
  nameWithType.vb: Configure.Ok(String, Encoding, String, Nullable(Of Int32), Boolean, KeyValuePair(Of String, String)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Transport.Http.Configure.Ok(System.String, Encoding, System.String, System.Nullable(Of System.Int32), System.Boolean, KeyValuePair(Of System.String, System.String)())
  name.vb: Ok(String, Encoding, String, Nullable(Of Int32), Boolean, KeyValuePair(Of String, String)())
- uid: EventStore.Core.Services.Transport.Http.Configure.TemporaryRedirect(Uri,System.String,System.Int32)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.TemporaryRedirect(Uri,System.String,System.Int32)
  id: TemporaryRedirect(Uri,System.String,System.Int32)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: TemporaryRedirect(Uri, String, Int32)
  nameWithType: Configure.TemporaryRedirect(Uri, String, Int32)
  fullName: EventStore.Core.Services.Transport.Http.Configure.TemporaryRedirect(Uri, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TemporaryRedirect
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 46
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration TemporaryRedirect(Uri originalUrl, string targetHost, int targetPort)
    parameters:
    - id: originalUrl
      type: Uri
    - id: targetHost
      type: System.String
    - id: targetPort
      type: System.Int32
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function TemporaryRedirect(originalUrl As Uri, targetHost As String, targetPort As Integer) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.TemporaryRedirect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.NotFound
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.NotFound
  id: NotFound
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: NotFound()
  nameWithType: Configure.NotFound()
  fullName: EventStore.Core.Services.Transport.Http.Configure.NotFound()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NotFound
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 58
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration NotFound()
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function NotFound As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.NotFound*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.NotFound(System.String,System.Nullable{System.Int32},System.Boolean,System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.NotFound(System.String,System.Nullable{System.Int32},System.Boolean,System.String)
  id: NotFound(System.String,System.Nullable{System.Int32},System.Boolean,System.String)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: NotFound(String, Nullable<Int32>, Boolean, String)
  nameWithType: Configure.NotFound(String, Nullable<Int32>, Boolean, String)
  fullName: EventStore.Core.Services.Transport.Http.Configure.NotFound(System.String, System.Nullable<System.Int32>, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NotFound
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 62
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration NotFound(string etag, int? cacheSeconds, bool isCachePublic, string contentType)
    parameters:
    - id: etag
      type: System.String
    - id: cacheSeconds
      type: System.Nullable{System.Int32}
    - id: isCachePublic
      type: System.Boolean
    - id: contentType
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function NotFound(etag As String, cacheSeconds As Integer?, isCachePublic As Boolean, contentType As String) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.NotFound*
  nameWithType.vb: Configure.NotFound(String, Nullable(Of Int32), Boolean, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Transport.Http.Configure.NotFound(System.String, System.Nullable(Of System.Int32), System.Boolean, System.String)
  name.vb: NotFound(String, Nullable(Of Int32), Boolean, String)
- uid: EventStore.Core.Services.Transport.Http.Configure.Gone(System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.Gone(System.String)
  id: Gone(System.String)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: Gone(String)
  nameWithType: Configure.Gone(String)
  fullName: EventStore.Core.Services.Transport.Http.Configure.Gone(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Gone
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 77
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration Gone(string description = null)
    parameters:
    - id: description
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function Gone(description As String = Nothing) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.Gone*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.NotModified
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.NotModified
  id: NotModified
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: NotModified()
  nameWithType: Configure.NotModified()
  fullName: EventStore.Core.Services.Transport.Http.Configure.NotModified()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NotModified
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 82
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration NotModified()
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function NotModified As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.NotModified*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.BadRequest(System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.BadRequest(System.String)
  id: BadRequest(System.String)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: BadRequest(String)
  nameWithType: Configure.BadRequest(String)
  fullName: EventStore.Core.Services.Transport.Http.Configure.BadRequest(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: BadRequest
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 87
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration BadRequest(string description = null)
    parameters:
    - id: description
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function BadRequest(description As String = Nothing) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.BadRequest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.InternalServerError(System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.InternalServerError(System.String)
  id: InternalServerError(System.String)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: InternalServerError(String)
  nameWithType: Configure.InternalServerError(String)
  fullName: EventStore.Core.Services.Transport.Http.Configure.InternalServerError(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: InternalServerError
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 92
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration InternalServerError(string description = null)
    parameters:
    - id: description
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function InternalServerError(description As String = Nothing) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.InternalServerError*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.ServiceUnavailable(System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.ServiceUnavailable(System.String)
  id: ServiceUnavailable(System.String)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: ServiceUnavailable(String)
  nameWithType: Configure.ServiceUnavailable(String)
  fullName: EventStore.Core.Services.Transport.Http.Configure.ServiceUnavailable(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ServiceUnavailable
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 97
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration ServiceUnavailable(string description = null)
    parameters:
    - id: description
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function ServiceUnavailable(description As String = Nothing) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.ServiceUnavailable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.NotImplemented(System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.NotImplemented(System.String)
  id: NotImplemented(System.String)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: NotImplemented(String)
  nameWithType: Configure.NotImplemented(String)
  fullName: EventStore.Core.Services.Transport.Http.Configure.NotImplemented(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NotImplemented
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 102
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration NotImplemented(string description = null)
    parameters:
    - id: description
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function NotImplemented(description As String = Nothing) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.NotImplemented*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.Unauthorized(System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.Unauthorized(System.String)
  id: Unauthorized(System.String)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: Unauthorized(String)
  nameWithType: Configure.Unauthorized(String)
  fullName: EventStore.Core.Services.Transport.Http.Configure.Unauthorized(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Unauthorized
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 107
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration Unauthorized(string description = null)
    parameters:
    - id: description
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function Unauthorized(description As String = Nothing) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.Unauthorized*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.EventEntry(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.EventEntry(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  id: EventEntry(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: EventEntry(HttpResponseConfiguratorArgs, Message, Boolean)
  nameWithType: Configure.EventEntry(HttpResponseConfiguratorArgs, Message, Boolean)
  fullName: EventStore.Core.Services.Transport.Http.Configure.EventEntry(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs, EventStore.Core.Messaging.Message, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventEntry
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 112
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration EventEntry(HttpResponseConfiguratorArgs entity, Message message, bool headEvent)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: headEvent
      type: System.Boolean
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function EventEntry(entity As HttpResponseConfiguratorArgs, message As Message, headEvent As Boolean) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.EventEntry*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.EventMetadata(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.EventMetadata(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs)
  id: EventMetadata(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: EventMetadata(HttpResponseConfiguratorArgs)
  nameWithType: Configure.EventMetadata(HttpResponseConfiguratorArgs)
  fullName: EventStore.Core.Services.Transport.Http.Configure.EventMetadata(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventMetadata
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 152
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration EventMetadata(HttpResponseConfiguratorArgs entity)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function EventMetadata(entity As HttpResponseConfiguratorArgs) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.EventMetadata*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsBackward(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsBackward(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  id: GetStreamEventsBackward(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: GetStreamEventsBackward(HttpResponseConfiguratorArgs, Message, Boolean)
  nameWithType: Configure.GetStreamEventsBackward(HttpResponseConfiguratorArgs, Message, Boolean)
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsBackward(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs, EventStore.Core.Messaging.Message, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetStreamEventsBackward
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 156
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration GetStreamEventsBackward(HttpResponseConfiguratorArgs entity, Message message, bool headOfStream)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: headOfStream
      type: System.Boolean
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function GetStreamEventsBackward(entity As HttpResponseConfiguratorArgs, message As Message, headOfStream As Boolean) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsBackward*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsForward(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsForward(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  id: GetStreamEventsForward(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: GetStreamEventsForward(HttpResponseConfiguratorArgs, Message)
  nameWithType: Configure.GetStreamEventsForward(HttpResponseConfiguratorArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsForward(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetStreamEventsForward
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 189
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration GetStreamEventsForward(HttpResponseConfiguratorArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function GetStreamEventsForward(entity As HttpResponseConfiguratorArgs, message As Message) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsForward*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsBackwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsBackwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  id: ReadAllEventsBackwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: ReadAllEventsBackwardCompleted(HttpResponseConfiguratorArgs, Message, Boolean)
  nameWithType: Configure.ReadAllEventsBackwardCompleted(HttpResponseConfiguratorArgs, Message, Boolean)
  fullName: EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsBackwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs, EventStore.Core.Messaging.Message, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadAllEventsBackwardCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 222
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration ReadAllEventsBackwardCompleted(HttpResponseConfiguratorArgs entity, Message message, bool headOfTf)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: headOfTf
      type: System.Boolean
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function ReadAllEventsBackwardCompleted(entity As HttpResponseConfiguratorArgs, message As Message, headOfTf As Boolean) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsBackwardCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsForwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsForwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  id: ReadAllEventsForwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.Boolean)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: ReadAllEventsForwardCompleted(HttpResponseConfiguratorArgs, Message, Boolean)
  nameWithType: Configure.ReadAllEventsForwardCompleted(HttpResponseConfiguratorArgs, Message, Boolean)
  fullName: EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsForwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs, EventStore.Core.Messaging.Message, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadAllEventsForwardCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 251
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration ReadAllEventsForwardCompleted(HttpResponseConfiguratorArgs entity, Message message, bool headOfTf)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: headOfTf
      type: System.Boolean
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function ReadAllEventsForwardCompleted(entity As HttpResponseConfiguratorArgs, message As Message, headOfTf As Boolean) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsForwardCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.GetPositionETag(System.Int64,System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.GetPositionETag(System.Int64,System.String)
  id: GetPositionETag(System.Int64,System.String)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: GetPositionETag(Int64, String)
  nameWithType: Configure.GetPositionETag(Int64, String)
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetPositionETag(System.Int64, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetPositionETag
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 280
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string GetPositionETag(long position, string contentType)
    parameters:
    - id: position
      type: System.Int64
    - id: contentType
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetPositionETag(position As Long, contentType As String) As String
  overload: EventStore.Core.Services.Transport.Http.Configure.GetPositionETag*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.WriteEventsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.WriteEventsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.String)
  id: WriteEventsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message,System.String)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: WriteEventsCompleted(HttpResponseConfiguratorArgs, Message, String)
  nameWithType: Configure.WriteEventsCompleted(HttpResponseConfiguratorArgs, Message, String)
  fullName: EventStore.Core.Services.Transport.Http.Configure.WriteEventsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs, EventStore.Core.Messaging.Message, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WriteEventsCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 290
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration WriteEventsCompleted(HttpResponseConfiguratorArgs entity, Message message, string eventStreamId)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: eventStreamId
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function WriteEventsCompleted(entity As HttpResponseConfiguratorArgs, message As Message, eventStreamId As String) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.WriteEventsCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.DeleteStreamCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.DeleteStreamCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  id: DeleteStreamCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: DeleteStreamCompleted(HttpResponseConfiguratorArgs, Message)
  nameWithType: Configure.DeleteStreamCompleted(HttpResponseConfiguratorArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Configure.DeleteStreamCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DeleteStreamCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 327
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration DeleteStreamCompleted(HttpResponseConfiguratorArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function DeleteStreamCompleted(entity As HttpResponseConfiguratorArgs, message As Message) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.DeleteStreamCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.GetFreshStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.GetFreshStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  id: GetFreshStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: GetFreshStatsCompleted(HttpResponseConfiguratorArgs, Message)
  nameWithType: Configure.GetFreshStatsCompleted(HttpResponseConfiguratorArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetFreshStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetFreshStatsCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 375
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration GetFreshStatsCompleted(HttpResponseConfiguratorArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function GetFreshStatsCompleted(entity As HttpResponseConfiguratorArgs, message As Message) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.GetFreshStatsCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.GetReplicationStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.GetReplicationStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  id: GetReplicationStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: GetReplicationStatsCompleted(HttpResponseConfiguratorArgs, Message)
  nameWithType: Configure.GetReplicationStatsCompleted(HttpResponseConfiguratorArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetReplicationStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetReplicationStatsCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 387
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration GetReplicationStatsCompleted(HttpResponseConfiguratorArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function GetReplicationStatsCompleted(entity As HttpResponseConfiguratorArgs, message As Message) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.GetReplicationStatsCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Configure.GetFreshTcpConnectionStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Configure.GetFreshTcpConnectionStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  id: GetFreshTcpConnectionStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Configure
  langs:
  - csharp
  - vb
  name: GetFreshTcpConnectionStatsCompleted(HttpResponseConfiguratorArgs, Message)
  nameWithType: Configure.GetFreshTcpConnectionStatsCompleted(HttpResponseConfiguratorArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetFreshTcpConnectionStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Configure.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetFreshTcpConnectionStatsCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Configure.cs
    startLine: 397
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static ResponseConfiguration GetFreshTcpConnectionStatsCompleted(HttpResponseConfiguratorArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Shared Function GetFreshTcpConnectionStatsCompleted(entity As HttpResponseConfiguratorArgs, message As Message) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.Configure.GetFreshTcpConnectionStatsCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Services.Transport.Http.Configure.Ok*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.Ok
  name: Ok
  nameWithType: Configure.Ok
  fullName: EventStore.Core.Services.Transport.Http.Configure.Ok
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  commentId: T:EventStore.Core.Services.Transport.Http.ResponseConfiguration
  parent: EventStore.Core.Services.Transport.Http
  name: ResponseConfiguration
  nameWithType: ResponseConfiguration
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration
- uid: Encoding
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: Encoding
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: KeyValuePair{System.String,System.String}[]
  isExternal: true
  name: KeyValuePair<String, String>[]
  nameWithType: KeyValuePair<String, String>[]
  fullName: KeyValuePair<System.String, System.String>[]
  nameWithType.vb: KeyValuePair(Of String, String)()
  fullName.vb: KeyValuePair(Of System.String, System.String)()
  name.vb: KeyValuePair(Of String, String)()
  spec.csharp:
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Configure.TemporaryRedirect*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.TemporaryRedirect
  name: TemporaryRedirect
  nameWithType: Configure.TemporaryRedirect
  fullName: EventStore.Core.Services.Transport.Http.Configure.TemporaryRedirect
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Transport.Http.Configure.NotFound*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.NotFound
  name: NotFound
  nameWithType: Configure.NotFound
  fullName: EventStore.Core.Services.Transport.Http.Configure.NotFound
- uid: EventStore.Core.Services.Transport.Http.Configure.Gone*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.Gone
  name: Gone
  nameWithType: Configure.Gone
  fullName: EventStore.Core.Services.Transport.Http.Configure.Gone
- uid: EventStore.Core.Services.Transport.Http.Configure.NotModified*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.NotModified
  name: NotModified
  nameWithType: Configure.NotModified
  fullName: EventStore.Core.Services.Transport.Http.Configure.NotModified
- uid: EventStore.Core.Services.Transport.Http.Configure.BadRequest*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.BadRequest
  name: BadRequest
  nameWithType: Configure.BadRequest
  fullName: EventStore.Core.Services.Transport.Http.Configure.BadRequest
- uid: EventStore.Core.Services.Transport.Http.Configure.InternalServerError*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.InternalServerError
  name: InternalServerError
  nameWithType: Configure.InternalServerError
  fullName: EventStore.Core.Services.Transport.Http.Configure.InternalServerError
- uid: EventStore.Core.Services.Transport.Http.Configure.ServiceUnavailable*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.ServiceUnavailable
  name: ServiceUnavailable
  nameWithType: Configure.ServiceUnavailable
  fullName: EventStore.Core.Services.Transport.Http.Configure.ServiceUnavailable
- uid: EventStore.Core.Services.Transport.Http.Configure.NotImplemented*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.NotImplemented
  name: NotImplemented
  nameWithType: Configure.NotImplemented
  fullName: EventStore.Core.Services.Transport.Http.Configure.NotImplemented
- uid: EventStore.Core.Services.Transport.Http.Configure.Unauthorized*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.Unauthorized
  name: Unauthorized
  nameWithType: Configure.Unauthorized
  fullName: EventStore.Core.Services.Transport.Http.Configure.Unauthorized
- uid: EventStore.Core.Services.Transport.Http.Configure.EventEntry*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.EventEntry
  name: EventEntry
  nameWithType: Configure.EventEntry
  fullName: EventStore.Core.Services.Transport.Http.Configure.EventEntry
- uid: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
  commentId: T:EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
  parent: EventStore.Core.Services.Transport.Http
  name: HttpResponseConfiguratorArgs
  nameWithType: HttpResponseConfiguratorArgs
  fullName: EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Services.Transport.Http.Configure.EventMetadata*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.EventMetadata
  name: EventMetadata
  nameWithType: Configure.EventMetadata
  fullName: EventStore.Core.Services.Transport.Http.Configure.EventMetadata
- uid: EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsBackward*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsBackward
  name: GetStreamEventsBackward
  nameWithType: Configure.GetStreamEventsBackward
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsBackward
- uid: EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsForward*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsForward
  name: GetStreamEventsForward
  nameWithType: Configure.GetStreamEventsForward
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetStreamEventsForward
- uid: EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsBackwardCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsBackwardCompleted
  name: ReadAllEventsBackwardCompleted
  nameWithType: Configure.ReadAllEventsBackwardCompleted
  fullName: EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsBackwardCompleted
- uid: EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsForwardCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsForwardCompleted
  name: ReadAllEventsForwardCompleted
  nameWithType: Configure.ReadAllEventsForwardCompleted
  fullName: EventStore.Core.Services.Transport.Http.Configure.ReadAllEventsForwardCompleted
- uid: EventStore.Core.Services.Transport.Http.Configure.GetPositionETag*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.GetPositionETag
  name: GetPositionETag
  nameWithType: Configure.GetPositionETag
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetPositionETag
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.Transport.Http.Configure.WriteEventsCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.WriteEventsCompleted
  name: WriteEventsCompleted
  nameWithType: Configure.WriteEventsCompleted
  fullName: EventStore.Core.Services.Transport.Http.Configure.WriteEventsCompleted
- uid: EventStore.Core.Services.Transport.Http.Configure.DeleteStreamCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.DeleteStreamCompleted
  name: DeleteStreamCompleted
  nameWithType: Configure.DeleteStreamCompleted
  fullName: EventStore.Core.Services.Transport.Http.Configure.DeleteStreamCompleted
- uid: EventStore.Core.Services.Transport.Http.Configure.GetFreshStatsCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.GetFreshStatsCompleted
  name: GetFreshStatsCompleted
  nameWithType: Configure.GetFreshStatsCompleted
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetFreshStatsCompleted
- uid: EventStore.Core.Services.Transport.Http.Configure.GetReplicationStatsCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.GetReplicationStatsCompleted
  name: GetReplicationStatsCompleted
  nameWithType: Configure.GetReplicationStatsCompleted
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetReplicationStatsCompleted
- uid: EventStore.Core.Services.Transport.Http.Configure.GetFreshTcpConnectionStatsCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Configure.GetFreshTcpConnectionStatsCompleted
  name: GetFreshTcpConnectionStatsCompleted
  nameWithType: Configure.GetFreshTcpConnectionStatsCompleted
  fullName: EventStore.Core.Services.Transport.Http.Configure.GetFreshTcpConnectionStatsCompleted

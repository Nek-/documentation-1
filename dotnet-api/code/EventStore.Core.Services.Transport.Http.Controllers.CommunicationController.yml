### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  commentId: T:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  id: CommunicationController
  parent: EventStore.Core.Services.Transport.Http.Controllers
  children:
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.#ctor(EventStore.Core.Bus.IPublisher)
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.MakeUrl(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String)
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Publish(EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Register(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch},EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterCustom(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams},EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterUrlBased(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch})
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendBadRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String)
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendOk(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendTooBig(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SubscribeCore(EventStore.Core.Services.Transport.Http.IHttpService)
  langs:
  - csharp
  - vb
  name: CommunicationController
  nameWithType: CommunicationController
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  type: Class
  source:
    id: CommunicationController
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: 'public abstract class CommunicationController : IHttpController'
    content.vb: >-
      Public MustInherit Class CommunicationController
          Implements IHttpController
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Core.Services.Transport.Http.Controllers.AdminController
  - EventStore.Core.Services.Transport.Http.Controllers.AtomController
  - EventStore.Core.Services.Transport.Http.Controllers.ClusterWebUiController
  - EventStore.Core.Services.Transport.Http.Controllers.ElectController
  - EventStore.Core.Services.Transport.Http.Controllers.GossipController
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController
  - EventStore.Core.Services.Transport.Http.Controllers.StatController
  - EventStore.Core.Services.Transport.Http.Controllers.UsersController
  - EventStore.Projections.Core.Services.Http.ProjectionsController
  implements:
  - EventStore.Core.Services.Transport.Http.IHttpController
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.#ctor(EventStore.Core.Bus.IPublisher)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.#ctor(EventStore.Core.Bus.IPublisher)
  id: '#ctor(EventStore.Core.Bus.IPublisher)'
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: CommunicationController(IPublisher)
  nameWithType: CommunicationController.CommunicationController(IPublisher)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.CommunicationController(EventStore.Core.Bus.IPublisher)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: protected CommunicationController(IPublisher publisher)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    content.vb: Protected Sub New(publisher As IPublisher)
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Publish(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Publish(EventStore.Core.Messaging.Message)
  id: Publish(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: Publish(Message)
  nameWithType: CommunicationController.Publish(Message)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Publish(EventStore.Core.Messaging.Message)
  type: Method
  source:
    id: Publish
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public void Publish(Message message)
    parameters:
    - id: message
      type: EventStore.Core.Messaging.Message
    content.vb: Public Sub Publish(message As Message)
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Publish*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  id: Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: Subscribe(IHttpService)
  nameWithType: CommunicationController.Subscribe(IHttpService)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  type: Method
  source:
    id: Subscribe
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 27
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public void Subscribe(IHttpService service)
    parameters:
    - id: service
      type: EventStore.Core.Services.Transport.Http.IHttpService
    content.vb: Public Sub Subscribe(service As IHttpService)
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Subscribe*
  implements:
  - EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SubscribeCore(EventStore.Core.Services.Transport.Http.IHttpService)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SubscribeCore(EventStore.Core.Services.Transport.Http.IHttpService)
  id: SubscribeCore(EventStore.Core.Services.Transport.Http.IHttpService)
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: SubscribeCore(IHttpService)
  nameWithType: CommunicationController.SubscribeCore(IHttpService)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SubscribeCore(EventStore.Core.Services.Transport.Http.IHttpService)
  type: Method
  source:
    id: SubscribeCore
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 32
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: protected abstract void SubscribeCore(IHttpService service)
    parameters:
    - id: service
      type: EventStore.Core.Services.Transport.Http.IHttpService
    content.vb: Protected MustOverride Sub SubscribeCore(service As IHttpService)
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SubscribeCore*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendBadRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendBadRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String)
  id: SendBadRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String)
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: SendBadRequest(HttpEntityManager, String)
  nameWithType: CommunicationController.SendBadRequest(HttpEntityManager, String)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendBadRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String)
  type: Method
  source:
    id: SendBadRequest
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 34
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: protected RequestParams SendBadRequest(HttpEntityManager httpEntityManager, string reason)
    parameters:
    - id: httpEntityManager
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: reason
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.RequestParams
    content.vb: Protected Function SendBadRequest(httpEntityManager As HttpEntityManager, reason As String) As RequestParams
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendBadRequest*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendTooBig(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendTooBig(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  id: SendTooBig(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: SendTooBig(HttpEntityManager)
  nameWithType: CommunicationController.SendTooBig(HttpEntityManager)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendTooBig(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  type: Method
  source:
    id: SendTooBig
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 41
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: protected RequestParams SendTooBig(HttpEntityManager httpEntityManager)
    parameters:
    - id: httpEntityManager
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    return:
      type: EventStore.Core.Services.Transport.Http.RequestParams
    content.vb: Protected Function SendTooBig(httpEntityManager As HttpEntityManager) As RequestParams
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendTooBig*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendOk(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendOk(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  id: SendOk(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: SendOk(HttpEntityManager)
  nameWithType: CommunicationController.SendOk(HttpEntityManager)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendOk(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  type: Method
  source:
    id: SendOk
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 48
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: protected RequestParams SendOk(HttpEntityManager httpEntityManager)
    parameters:
    - id: httpEntityManager
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    return:
      type: EventStore.Core.Services.Transport.Http.RequestParams
    content.vb: Protected Function SendOk(httpEntityManager As HttpEntityManager) As RequestParams
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendOk*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Register(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch},EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Register(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch},EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  id: Register(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch},EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[])
  nameWithType: CommunicationController.Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[])
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Register(EventStore.Core.Services.Transport.Http.IHttpService, System.String, System.String, System.Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.UriTemplateMatch>, EventStore.Transport.Http.ICodec[], EventStore.Transport.Http.ICodec[])
  type: Method
  source:
    id: Register
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 55
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: protected void Register(IHttpService service, string uriTemplate, string httpMethod, Action<HttpEntityManager, UriTemplateMatch> handler, ICodec[] requestCodecs, ICodec[] responseCodecs)
    parameters:
    - id: service
      type: EventStore.Core.Services.Transport.Http.IHttpService
    - id: uriTemplate
      type: System.String
    - id: httpMethod
      type: System.String
    - id: handler
      type: System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch}
    - id: requestCodecs
      type: EventStore.Transport.Http.ICodec[]
    - id: responseCodecs
      type: EventStore.Transport.Http.ICodec[]
    content.vb: Protected Sub Register(service As IHttpService, uriTemplate As String, httpMethod As String, handler As Action(Of HttpEntityManager, UriTemplateMatch), requestCodecs As ICodec(), responseCodecs As ICodec())
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Register*
  nameWithType.vb: CommunicationController.Register(IHttpService, String, String, Action(Of HttpEntityManager, UriTemplateMatch), ICodec(), ICodec())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Register(EventStore.Core.Services.Transport.Http.IHttpService, System.String, System.String, System.Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.UriTemplateMatch), EventStore.Transport.Http.ICodec(), EventStore.Transport.Http.ICodec())
  name.vb: Register(IHttpService, String, String, Action(Of HttpEntityManager, UriTemplateMatch), ICodec(), ICodec())
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterCustom(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams},EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterCustom(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams},EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  id: RegisterCustom(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams},EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[])
  nameWithType: CommunicationController.RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[])
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterCustom(EventStore.Core.Services.Transport.Http.IHttpService, System.String, System.String, System.Func<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.UriTemplateMatch, EventStore.Core.Services.Transport.Http.RequestParams>, EventStore.Transport.Http.ICodec[], EventStore.Transport.Http.ICodec[])
  type: Method
  source:
    id: RegisterCustom
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 61
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: protected void RegisterCustom(IHttpService service, string uriTemplate, string httpMethod, Func<HttpEntityManager, UriTemplateMatch, RequestParams> handler, ICodec[] requestCodecs, ICodec[] responseCodecs)
    parameters:
    - id: service
      type: EventStore.Core.Services.Transport.Http.IHttpService
    - id: uriTemplate
      type: System.String
    - id: httpMethod
      type: System.String
    - id: handler
      type: System.Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams}
    - id: requestCodecs
      type: EventStore.Transport.Http.ICodec[]
    - id: responseCodecs
      type: EventStore.Transport.Http.ICodec[]
    content.vb: Protected Sub RegisterCustom(service As IHttpService, uriTemplate As String, httpMethod As String, handler As Func(Of HttpEntityManager, UriTemplateMatch, RequestParams), requestCodecs As ICodec(), responseCodecs As ICodec())
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterCustom*
  nameWithType.vb: CommunicationController.RegisterCustom(IHttpService, String, String, Func(Of HttpEntityManager, UriTemplateMatch, RequestParams), ICodec(), ICodec())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterCustom(EventStore.Core.Services.Transport.Http.IHttpService, System.String, System.String, System.Func(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.UriTemplateMatch, EventStore.Core.Services.Transport.Http.RequestParams), EventStore.Transport.Http.ICodec(), EventStore.Transport.Http.ICodec())
  name.vb: RegisterCustom(IHttpService, String, String, Func(Of HttpEntityManager, UriTemplateMatch, RequestParams), ICodec(), ICodec())
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterUrlBased(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch})
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterUrlBased(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch})
  id: RegisterUrlBased(EventStore.Core.Services.Transport.Http.IHttpService,System.String,System.String,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch})
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>)
  nameWithType: CommunicationController.RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterUrlBased(EventStore.Core.Services.Transport.Http.IHttpService, System.String, System.String, System.Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.UriTemplateMatch>)
  type: Method
  source:
    id: RegisterUrlBased
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 68
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: protected void RegisterUrlBased(IHttpService service, string uriTemplate, string httpMethod, Action<HttpEntityManager, UriTemplateMatch> action)
    parameters:
    - id: service
      type: EventStore.Core.Services.Transport.Http.IHttpService
    - id: uriTemplate
      type: System.String
    - id: httpMethod
      type: System.String
    - id: action
      type: System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch}
    content.vb: Protected Sub RegisterUrlBased(service As IHttpService, uriTemplate As String, httpMethod As String, action As Action(Of HttpEntityManager, UriTemplateMatch))
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterUrlBased*
  nameWithType.vb: CommunicationController.RegisterUrlBased(IHttpService, String, String, Action(Of HttpEntityManager, UriTemplateMatch))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterUrlBased(EventStore.Core.Services.Transport.Http.IHttpService, System.String, System.String, System.Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.UriTemplateMatch))
  name.vb: RegisterUrlBased(IHttpService, String, String, Action(Of HttpEntityManager, UriTemplateMatch))
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.MakeUrl(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.MakeUrl(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String)
  id: MakeUrl(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String)
  parent: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController
  langs:
  - csharp
  - vb
  name: MakeUrl(HttpEntityManager, String)
  nameWithType: CommunicationController.MakeUrl(HttpEntityManager, String)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.MakeUrl(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String)
  type: Method
  source:
    id: MakeUrl
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/CommunicationController.cs
    startLine: 73
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: protected static string MakeUrl(HttpEntityManager http, string path)
    parameters:
    - id: http
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Protected Shared Function MakeUrl(http As HttpEntityManager, path As String) As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.MakeUrl*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
references:
- uid: EventStore.Core.Services.Transport.Http.Controllers
  commentId: N:EventStore.Core.Services.Transport.Http.Controllers
  name: EventStore.Core.Services.Transport.Http.Controllers
  nameWithType: EventStore.Core.Services.Transport.Http.Controllers
  fullName: EventStore.Core.Services.Transport.Http.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.Transport.Http.IHttpController
  commentId: T:EventStore.Core.Services.Transport.Http.IHttpController
  parent: EventStore.Core.Services.Transport.Http
  name: IHttpController
  nameWithType: IHttpController
  fullName: EventStore.Core.Services.Transport.Http.IHttpController
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<CommunicationController>()
  nameWithType: ProtobufExtensions.Serialize<CommunicationController>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Controllers.CommunicationController>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of CommunicationController)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Controllers.CommunicationController)()
  name.vb: Serialize(Of CommunicationController)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<CommunicationController>
    nameWithType: ProtobufExtensions.Serialize<CommunicationController>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Controllers.CommunicationController>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of CommunicationController)
    nameWithType: ProtobufExtensions.Serialize(Of CommunicationController)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Controllers.CommunicationController)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<CommunicationController>()
  nameWithType: ProtobufExtensions.SerializeToArray<CommunicationController>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Controllers.CommunicationController>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of CommunicationController)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Controllers.CommunicationController)()
  name.vb: SerializeToArray(Of CommunicationController)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<CommunicationController>
    nameWithType: ProtobufExtensions.SerializeToArray<CommunicationController>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Controllers.CommunicationController>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of CommunicationController)
    nameWithType: ProtobufExtensions.SerializeToArray(Of CommunicationController)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Controllers.CommunicationController)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.#ctor
  name: CommunicationController
  nameWithType: CommunicationController.CommunicationController
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.CommunicationController
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Publish*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Publish
  name: Publish
  nameWithType: CommunicationController.Publish
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Publish
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Subscribe*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Subscribe
  name: Subscribe
  nameWithType: CommunicationController.Subscribe
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Subscribe
- uid: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  commentId: M:EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  parent: EventStore.Core.Services.Transport.Http.IHttpController
  name: Subscribe(IHttpService)
  nameWithType: IHttpController.Subscribe(IHttpService)
  fullName: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
    name: Subscribe
    nameWithType: IHttpController.Subscribe
    fullName: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Http.IHttpService
    name: IHttpService
    nameWithType: IHttpService
    fullName: EventStore.Core.Services.Transport.Http.IHttpService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
    name: Subscribe
    nameWithType: IHttpController.Subscribe
    fullName: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Http.IHttpService
    name: IHttpService
    nameWithType: IHttpService
    fullName: EventStore.Core.Services.Transport.Http.IHttpService
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.IHttpService
  commentId: T:EventStore.Core.Services.Transport.Http.IHttpService
  parent: EventStore.Core.Services.Transport.Http
  name: IHttpService
  nameWithType: IHttpService
  fullName: EventStore.Core.Services.Transport.Http.IHttpService
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SubscribeCore*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SubscribeCore
  name: SubscribeCore
  nameWithType: CommunicationController.SubscribeCore
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SubscribeCore
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendBadRequest*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendBadRequest
  name: SendBadRequest
  nameWithType: CommunicationController.SendBadRequest
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendBadRequest
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManager
  parent: EventStore.Transport.Http.EntityManagement
  name: HttpEntityManager
  nameWithType: HttpEntityManager
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.Transport.Http.RequestParams
  commentId: T:EventStore.Core.Services.Transport.Http.RequestParams
  parent: EventStore.Core.Services.Transport.Http
  name: RequestParams
  nameWithType: RequestParams
  fullName: EventStore.Core.Services.Transport.Http.RequestParams
- uid: EventStore.Transport.Http.EntityManagement
  commentId: N:EventStore.Transport.Http.EntityManagement
  name: EventStore.Transport.Http.EntityManagement
  nameWithType: EventStore.Transport.Http.EntityManagement
  fullName: EventStore.Transport.Http.EntityManagement
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendTooBig*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendTooBig
  name: SendTooBig
  nameWithType: CommunicationController.SendTooBig
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendTooBig
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendOk*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendOk
  name: SendOk
  nameWithType: CommunicationController.SendOk
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.SendOk
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Register*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Register
  name: Register
  nameWithType: CommunicationController.Register
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.Register
- uid: System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch}
  commentId: T:System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch}
  parent: System
  definition: System.Action`2
  name: Action<HttpEntityManager, UriTemplateMatch>
  nameWithType: Action<HttpEntityManager, UriTemplateMatch>
  fullName: System.Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.UriTemplateMatch>
  nameWithType.vb: Action(Of HttpEntityManager, UriTemplateMatch)
  fullName.vb: System.Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.UriTemplateMatch)
  name.vb: Action(Of HttpEntityManager, UriTemplateMatch)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UriTemplateMatch
    name: UriTemplateMatch
    nameWithType: UriTemplateMatch
    fullName: System.UriTemplateMatch
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UriTemplateMatch
    name: UriTemplateMatch
    nameWithType: UriTemplateMatch
    fullName: System.UriTemplateMatch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.ICodec[]
  isExternal: true
  name: ICodec[]
  nameWithType: ICodec[]
  fullName: EventStore.Transport.Http.ICodec[]
  nameWithType.vb: ICodec()
  fullName.vb: EventStore.Transport.Http.ICodec()
  name.vb: ICodec()
  spec.csharp:
  - uid: EventStore.Transport.Http.ICodec
    name: ICodec
    nameWithType: ICodec
    fullName: EventStore.Transport.Http.ICodec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Transport.Http.ICodec
    name: ICodec
    nameWithType: ICodec
    fullName: EventStore.Transport.Http.ICodec
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterCustom*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterCustom
  name: RegisterCustom
  nameWithType: CommunicationController.RegisterCustom
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterCustom
- uid: System.Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams}
  commentId: T:System.Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams}
  parent: System
  definition: System.Func`3
  name: Func<HttpEntityManager, UriTemplateMatch, RequestParams>
  nameWithType: Func<HttpEntityManager, UriTemplateMatch, RequestParams>
  fullName: System.Func<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.UriTemplateMatch, EventStore.Core.Services.Transport.Http.RequestParams>
  nameWithType.vb: Func(Of HttpEntityManager, UriTemplateMatch, RequestParams)
  fullName.vb: System.Func(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.UriTemplateMatch, EventStore.Core.Services.Transport.Http.RequestParams)
  name.vb: Func(Of HttpEntityManager, UriTemplateMatch, RequestParams)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UriTemplateMatch
    name: UriTemplateMatch
    nameWithType: UriTemplateMatch
    fullName: System.UriTemplateMatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Http.RequestParams
    name: RequestParams
    nameWithType: RequestParams
    fullName: EventStore.Core.Services.Transport.Http.RequestParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UriTemplateMatch
    name: UriTemplateMatch
    nameWithType: UriTemplateMatch
    fullName: System.UriTemplateMatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Http.RequestParams
    name: RequestParams
    nameWithType: RequestParams
    fullName: EventStore.Core.Services.Transport.Http.RequestParams
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterUrlBased*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterUrlBased
  name: RegisterUrlBased
  nameWithType: CommunicationController.RegisterUrlBased
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.RegisterUrlBased
- uid: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.MakeUrl*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.MakeUrl
  name: MakeUrl
  nameWithType: CommunicationController.MakeUrl
  fullName: EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.MakeUrl

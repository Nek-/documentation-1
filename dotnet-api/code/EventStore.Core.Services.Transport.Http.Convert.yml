### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.Convert
  commentId: T:EventStore.Core.Services.Transport.Http.Convert
  id: Convert
  parent: EventStore.Core.Services.Transport.Http
  children:
  - EventStore.Core.Services.Transport.Http.Convert.ToAllEventsBackwardFeed(EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  - EventStore.Core.Services.Transport.Http.Convert.ToAllEventsForwardFeed(EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  - EventStore.Core.Services.Transport.Http.Convert.ToDescriptionDocument(System.Uri,System.String,System.String[])
  - EventStore.Core.Services.Transport.Http.Convert.ToEntry(EventStore.Core.Data.ResolvedEvent,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  - EventStore.Core.Services.Transport.Http.Convert.ToNextNPersistentMessagesFeed(EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted,System.Uri,System.String,System.String,System.Int32,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  - EventStore.Core.Services.Transport.Http.Convert.ToStreamEventBackwardFeed(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  - EventStore.Core.Services.Transport.Http.Convert.ToStreamEventForwardFeed(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  langs:
  - csharp
  - vb
  name: Convert
  nameWithType: Convert
  fullName: EventStore.Core.Services.Transport.Http.Convert
  type: Class
  source:
    id: Convert
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static class Convert
    content.vb: Public Module Convert
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.Services.Transport.Http.Convert.ToStreamEventForwardFeed(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  commentId: M:EventStore.Core.Services.Transport.Http.Convert.ToStreamEventForwardFeed(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  id: ToStreamEventForwardFeed(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  parent: EventStore.Core.Services.Transport.Http.Convert
  langs:
  - csharp
  - vb
  name: ToStreamEventForwardFeed(ClientMessage.ReadStreamEventsForwardCompleted, Uri, EmbedLevel)
  nameWithType: Convert.ToStreamEventForwardFeed(ClientMessage.ReadStreamEventsForwardCompleted, Uri, EmbedLevel)
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToStreamEventForwardFeed(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted, System.Uri, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  type: Method
  source:
    id: ToStreamEventForwardFeed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static FeedElement ToStreamEventForwardFeed(ClientMessage.ReadStreamEventsForwardCompleted msg, Uri requestedUrl, EmbedLevel embedContent)
    parameters:
    - id: msg
      type: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
    - id: requestedUrl
      type: System.Uri
    - id: embedContent
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    return:
      type: EventStore.Transport.Http.Atom.FeedElement
    content.vb: Public Shared Function ToStreamEventForwardFeed(msg As ClientMessage.ReadStreamEventsForwardCompleted, requestedUrl As Uri, embedContent As EmbedLevel) As FeedElement
  overload: EventStore.Core.Services.Transport.Http.Convert.ToStreamEventForwardFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Convert.ToStreamEventBackwardFeed(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  commentId: M:EventStore.Core.Services.Transport.Http.Convert.ToStreamEventBackwardFeed(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  id: ToStreamEventBackwardFeed(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  parent: EventStore.Core.Services.Transport.Http.Convert
  langs:
  - csharp
  - vb
  name: ToStreamEventBackwardFeed(ClientMessage.ReadStreamEventsBackwardCompleted, Uri, EmbedLevel, Boolean)
  nameWithType: Convert.ToStreamEventBackwardFeed(ClientMessage.ReadStreamEventsBackwardCompleted, Uri, EmbedLevel, Boolean)
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToStreamEventBackwardFeed(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted, System.Uri, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel, System.Boolean)
  type: Method
  source:
    id: ToStreamEventBackwardFeed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 64
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static FeedElement ToStreamEventBackwardFeed(ClientMessage.ReadStreamEventsBackwardCompleted msg, Uri requestedUrl, EmbedLevel embedContent, bool headOfStream)
    parameters:
    - id: msg
      type: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
    - id: requestedUrl
      type: System.Uri
    - id: embedContent
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    - id: headOfStream
      type: System.Boolean
    return:
      type: EventStore.Transport.Http.Atom.FeedElement
    content.vb: Public Shared Function ToStreamEventBackwardFeed(msg As ClientMessage.ReadStreamEventsBackwardCompleted, requestedUrl As Uri, embedContent As EmbedLevel, headOfStream As Boolean) As FeedElement
  overload: EventStore.Core.Services.Transport.Http.Convert.ToStreamEventBackwardFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Convert.ToAllEventsForwardFeed(EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  commentId: M:EventStore.Core.Services.Transport.Http.Convert.ToAllEventsForwardFeed(EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  id: ToAllEventsForwardFeed(EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  parent: EventStore.Core.Services.Transport.Http.Convert
  langs:
  - csharp
  - vb
  name: ToAllEventsForwardFeed(ClientMessage.ReadAllEventsForwardCompleted, Uri, EmbedLevel)
  nameWithType: Convert.ToAllEventsForwardFeed(ClientMessage.ReadAllEventsForwardCompleted, Uri, EmbedLevel)
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToAllEventsForwardFeed(EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted, System.Uri, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  type: Method
  source:
    id: ToAllEventsForwardFeed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 112
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static FeedElement ToAllEventsForwardFeed(ClientMessage.ReadAllEventsForwardCompleted msg, Uri requestedUrl, EmbedLevel embedContent)
    parameters:
    - id: msg
      type: EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted
    - id: requestedUrl
      type: System.Uri
    - id: embedContent
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    return:
      type: EventStore.Transport.Http.Atom.FeedElement
    content.vb: Public Shared Function ToAllEventsForwardFeed(msg As ClientMessage.ReadAllEventsForwardCompleted, requestedUrl As Uri, embedContent As EmbedLevel) As FeedElement
  overload: EventStore.Core.Services.Transport.Http.Convert.ToAllEventsForwardFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Convert.ToAllEventsBackwardFeed(EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  commentId: M:EventStore.Core.Services.Transport.Http.Convert.ToAllEventsBackwardFeed(EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  id: ToAllEventsBackwardFeed(EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  parent: EventStore.Core.Services.Transport.Http.Convert
  langs:
  - csharp
  - vb
  name: ToAllEventsBackwardFeed(ClientMessage.ReadAllEventsBackwardCompleted, Uri, EmbedLevel)
  nameWithType: Convert.ToAllEventsBackwardFeed(ClientMessage.ReadAllEventsBackwardCompleted, Uri, EmbedLevel)
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToAllEventsBackwardFeed(EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted, System.Uri, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  type: Method
  source:
    id: ToAllEventsBackwardFeed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 147
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static FeedElement ToAllEventsBackwardFeed(ClientMessage.ReadAllEventsBackwardCompleted msg, Uri requestedUrl, EmbedLevel embedContent)
    parameters:
    - id: msg
      type: EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted
    - id: requestedUrl
      type: System.Uri
    - id: embedContent
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    return:
      type: EventStore.Transport.Http.Atom.FeedElement
    content.vb: Public Shared Function ToAllEventsBackwardFeed(msg As ClientMessage.ReadAllEventsBackwardCompleted, requestedUrl As Uri, embedContent As EmbedLevel) As FeedElement
  overload: EventStore.Core.Services.Transport.Http.Convert.ToAllEventsBackwardFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Convert.ToNextNPersistentMessagesFeed(EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted,System.Uri,System.String,System.String,System.Int32,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  commentId: M:EventStore.Core.Services.Transport.Http.Convert.ToNextNPersistentMessagesFeed(EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted,System.Uri,System.String,System.String,System.Int32,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  id: ToNextNPersistentMessagesFeed(EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted,System.Uri,System.String,System.String,System.Int32,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  parent: EventStore.Core.Services.Transport.Http.Convert
  langs:
  - csharp
  - vb
  name: ToNextNPersistentMessagesFeed(ClientMessage.ReadNextNPersistentMessagesCompleted, Uri, String, String, Int32, EmbedLevel)
  nameWithType: Convert.ToNextNPersistentMessagesFeed(ClientMessage.ReadNextNPersistentMessagesCompleted, Uri, String, String, Int32, EmbedLevel)
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToNextNPersistentMessagesFeed(EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted, System.Uri, System.String, System.String, System.Int32, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  type: Method
  source:
    id: ToNextNPersistentMessagesFeed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 181
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static FeedElement ToNextNPersistentMessagesFeed(ClientMessage.ReadNextNPersistentMessagesCompleted msg, Uri requestedUrl, string streamId, string groupName, int count, EmbedLevel embedContent)
    parameters:
    - id: msg
      type: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
    - id: requestedUrl
      type: System.Uri
    - id: streamId
      type: System.String
    - id: groupName
      type: System.String
    - id: count
      type: System.Int32
    - id: embedContent
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    return:
      type: EventStore.Transport.Http.Atom.FeedElement
    content.vb: Public Shared Function ToNextNPersistentMessagesFeed(msg As ClientMessage.ReadNextNPersistentMessagesCompleted, requestedUrl As Uri, streamId As String, groupName As String, count As Integer, embedContent As EmbedLevel) As FeedElement
  overload: EventStore.Core.Services.Transport.Http.Convert.ToNextNPersistentMessagesFeed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Convert.ToDescriptionDocument(System.Uri,System.String,System.String[])
  commentId: M:EventStore.Core.Services.Transport.Http.Convert.ToDescriptionDocument(System.Uri,System.String,System.String[])
  id: ToDescriptionDocument(System.Uri,System.String,System.String[])
  parent: EventStore.Core.Services.Transport.Http.Convert
  langs:
  - csharp
  - vb
  name: ToDescriptionDocument(Uri, String, String[])
  nameWithType: Convert.ToDescriptionDocument(Uri, String, String[])
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToDescriptionDocument(System.Uri, System.String, System.String[])
  type: Method
  source:
    id: ToDescriptionDocument
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 229
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static DescriptionDocument ToDescriptionDocument(Uri requestedUrl, string streamId, string[] subscriptions)
    parameters:
    - id: requestedUrl
      type: System.Uri
    - id: streamId
      type: System.String
    - id: subscriptions
      type: System.String[]
    return:
      type: EventStore.Core.Services.Transport.Http.DescriptionDocument
    content.vb: Public Shared Function ToDescriptionDocument(requestedUrl As Uri, streamId As String, subscriptions As String()) As DescriptionDocument
  overload: EventStore.Core.Services.Transport.Http.Convert.ToDescriptionDocument*
  nameWithType.vb: Convert.ToDescriptionDocument(Uri, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Transport.Http.Convert.ToDescriptionDocument(System.Uri, System.String, System.String())
  name.vb: ToDescriptionDocument(Uri, String, String())
- uid: EventStore.Core.Services.Transport.Http.Convert.ToEntry(EventStore.Core.Data.ResolvedEvent,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  commentId: M:EventStore.Core.Services.Transport.Http.Convert.ToEntry(EventStore.Core.Data.ResolvedEvent,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  id: ToEntry(EventStore.Core.Data.ResolvedEvent,System.Uri,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  parent: EventStore.Core.Services.Transport.Http.Convert
  langs:
  - csharp
  - vb
  name: ToEntry(ResolvedEvent, Uri, EmbedLevel, Boolean)
  nameWithType: Convert.ToEntry(ResolvedEvent, Uri, EmbedLevel, Boolean)
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToEntry(EventStore.Core.Data.ResolvedEvent, System.Uri, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel, System.Boolean)
  type: Method
  source:
    id: ToEntry
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 256
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static EntryElement ToEntry(ResolvedEvent eventLinkPair, Uri requestedUrl, EmbedLevel embedContent, bool singleEntry = false)
    parameters:
    - id: eventLinkPair
      type: EventStore.Core.Data.ResolvedEvent
    - id: requestedUrl
      type: System.Uri
    - id: embedContent
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    - id: singleEntry
      type: System.Boolean
    return:
      type: EventStore.Transport.Http.Atom.EntryElement
    content.vb: Public Shared Function ToEntry(eventLinkPair As ResolvedEvent, requestedUrl As Uri, embedContent As EmbedLevel, singleEntry As Boolean = False) As EntryElement
  overload: EventStore.Core.Services.Transport.Http.Convert.ToEntry*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.Transport.Http.Convert.ToStreamEventForwardFeed*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Convert.ToStreamEventForwardFeed
  name: ToStreamEventForwardFeed
  nameWithType: Convert.ToStreamEventForwardFeed
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToStreamEventForwardFeed
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
  parent: EventStore.Core.Messages
  name: ClientMessage.ReadStreamEventsForwardCompleted
  nameWithType: ClientMessage.ReadStreamEventsForwardCompleted
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
  commentId: T:EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
  parent: EventStore.Core.Services.Transport.Http.Controllers
  name: EmbedLevel
  nameWithType: EmbedLevel
  fullName: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
- uid: EventStore.Transport.Http.Atom.FeedElement
  commentId: T:EventStore.Transport.Http.Atom.FeedElement
  parent: EventStore.Transport.Http.Atom
  name: FeedElement
  nameWithType: FeedElement
  fullName: EventStore.Transport.Http.Atom.FeedElement
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: EventStore.Core.Services.Transport.Http.Controllers
  commentId: N:EventStore.Core.Services.Transport.Http.Controllers
  name: EventStore.Core.Services.Transport.Http.Controllers
  nameWithType: EventStore.Core.Services.Transport.Http.Controllers
  fullName: EventStore.Core.Services.Transport.Http.Controllers
- uid: EventStore.Transport.Http.Atom
  commentId: N:EventStore.Transport.Http.Atom
  name: EventStore.Transport.Http.Atom
  nameWithType: EventStore.Transport.Http.Atom
  fullName: EventStore.Transport.Http.Atom
- uid: EventStore.Core.Services.Transport.Http.Convert.ToStreamEventBackwardFeed*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Convert.ToStreamEventBackwardFeed
  name: ToStreamEventBackwardFeed
  nameWithType: Convert.ToStreamEventBackwardFeed
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToStreamEventBackwardFeed
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
  parent: EventStore.Core.Messages
  name: ClientMessage.ReadStreamEventsBackwardCompleted
  nameWithType: ClientMessage.ReadStreamEventsBackwardCompleted
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Services.Transport.Http.Convert.ToAllEventsForwardFeed*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Convert.ToAllEventsForwardFeed
  name: ToAllEventsForwardFeed
  nameWithType: Convert.ToAllEventsForwardFeed
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToAllEventsForwardFeed
- uid: EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted
  parent: EventStore.Core.Messages
  name: ClientMessage.ReadAllEventsForwardCompleted
  nameWithType: ClientMessage.ReadAllEventsForwardCompleted
  fullName: EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted
- uid: EventStore.Core.Services.Transport.Http.Convert.ToAllEventsBackwardFeed*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Convert.ToAllEventsBackwardFeed
  name: ToAllEventsBackwardFeed
  nameWithType: Convert.ToAllEventsBackwardFeed
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToAllEventsBackwardFeed
- uid: EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted
  parent: EventStore.Core.Messages
  name: ClientMessage.ReadAllEventsBackwardCompleted
  nameWithType: ClientMessage.ReadAllEventsBackwardCompleted
  fullName: EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted
- uid: EventStore.Core.Services.Transport.Http.Convert.ToNextNPersistentMessagesFeed*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Convert.ToNextNPersistentMessagesFeed
  name: ToNextNPersistentMessagesFeed
  nameWithType: Convert.ToNextNPersistentMessagesFeed
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToNextNPersistentMessagesFeed
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  parent: EventStore.Core.Messages
  name: ClientMessage.ReadNextNPersistentMessagesCompleted
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Transport.Http.Convert.ToDescriptionDocument*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Convert.ToDescriptionDocument
  name: ToDescriptionDocument
  nameWithType: Convert.ToDescriptionDocument
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToDescriptionDocument
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument
  commentId: T:EventStore.Core.Services.Transport.Http.DescriptionDocument
  parent: EventStore.Core.Services.Transport.Http
  name: DescriptionDocument
  nameWithType: DescriptionDocument
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument
- uid: EventStore.Core.Services.Transport.Http.Convert.ToEntry*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Convert.ToEntry
  name: ToEntry
  nameWithType: Convert.ToEntry
  fullName: EventStore.Core.Services.Transport.Http.Convert.ToEntry
- uid: EventStore.Core.Data.ResolvedEvent
  commentId: T:EventStore.Core.Data.ResolvedEvent
  parent: EventStore.Core.Data
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Core.Data.ResolvedEvent
- uid: EventStore.Transport.Http.Atom.EntryElement
  commentId: T:EventStore.Transport.Http.Atom.EntryElement
  parent: EventStore.Transport.Http.Atom
  name: EntryElement
  nameWithType: EntryElement
  fullName: EventStore.Transport.Http.Atom.EntryElement
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data

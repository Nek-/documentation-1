### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.Format
  commentId: T:EventStore.Core.Services.Transport.Http.Format
  id: Format
  parent: EventStore.Core.Services.Transport.Http
  children:
  - EventStore.Core.Services.Transport.Http.Format.DeleteStreamCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Format.EventEntry(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  - EventStore.Core.Services.Transport.Http.Format.GetDescriptionDocument(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,System.String,System.String[])
  - EventStore.Core.Services.Transport.Http.Format.GetFreshStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Format.GetFreshTcpConnectionStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Format.GetReplicationStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Format.GetStreamEventsBackward(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  - EventStore.Core.Services.Transport.Http.Format.GetStreamEventsForward(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  - EventStore.Core.Services.Transport.Http.Format.ReadAllEventsBackwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  - EventStore.Core.Services.Transport.Http.Format.ReadAllEventsForwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  - EventStore.Core.Services.Transport.Http.Format.ReadNextNPersistentMessagesCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,System.String,System.String,System.Int32,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  - EventStore.Core.Services.Transport.Http.Format.SendGossip(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Format.TextMessage(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  - EventStore.Core.Services.Transport.Http.Format.WriteEventsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: Format
  fullName: EventStore.Core.Services.Transport.Http.Format
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Format
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: 'public static class Format : object'
    content.vb: >-
      Public Module Format
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.Services.Transport.Http.Format.TextMessage(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.TextMessage(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  id: TextMessage(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: TextMessage(HttpResponseFormatterArgs, Message)
  nameWithType: Format.TextMessage(HttpResponseFormatterArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Format.TextMessage(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TextMessage
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string TextMessage(HttpResponseFormatterArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: System.String
    content.vb: Public Shared Function TextMessage(entity As HttpResponseFormatterArgs, message As Message) As String
  overload: EventStore.Core.Services.Transport.Http.Format.TextMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.EventEntry(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.EventEntry(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  id: EventEntry(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: EventEntry(HttpResponseFormatterArgs, Message, EmbedLevel)
  nameWithType: Format.EventEntry(HttpResponseFormatterArgs, Message, EmbedLevel)
  fullName: EventStore.Core.Services.Transport.Http.Format.EventEntry(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventEntry
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static object EventEntry(HttpResponseFormatterArgs entity, Message message, EmbedLevel embed)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: embed
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    return:
      type: System.Object
    content.vb: Public Shared Function EventEntry(entity As HttpResponseFormatterArgs, message As Message, embed As EmbedLevel) As Object
  overload: EventStore.Core.Services.Transport.Http.Format.EventEntry*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.GetStreamEventsBackward(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.GetStreamEventsBackward(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  id: GetStreamEventsBackward(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel,System.Boolean)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: GetStreamEventsBackward(HttpResponseFormatterArgs, Message, EmbedLevel, Boolean)
  nameWithType: Format.GetStreamEventsBackward(HttpResponseFormatterArgs, Message, EmbedLevel, Boolean)
  fullName: EventStore.Core.Services.Transport.Http.Format.GetStreamEventsBackward(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetStreamEventsBackward
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 36
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string GetStreamEventsBackward(HttpResponseFormatterArgs entity, Message message, EmbedLevel embed, bool headOfStream)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: embed
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    - id: headOfStream
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Shared Function GetStreamEventsBackward(entity As HttpResponseFormatterArgs, message As Message, embed As EmbedLevel, headOfStream As Boolean) As String
  overload: EventStore.Core.Services.Transport.Http.Format.GetStreamEventsBackward*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.GetStreamEventsForward(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.GetStreamEventsForward(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  id: GetStreamEventsForward(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: GetStreamEventsForward(HttpResponseFormatterArgs, Message, EmbedLevel)
  nameWithType: Format.GetStreamEventsForward(HttpResponseFormatterArgs, Message, EmbedLevel)
  fullName: EventStore.Core.Services.Transport.Http.Format.GetStreamEventsForward(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetStreamEventsForward
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 45
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string GetStreamEventsForward(HttpResponseFormatterArgs entity, Message message, EmbedLevel embed)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: embed
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    return:
      type: System.String
    content.vb: Public Shared Function GetStreamEventsForward(entity As HttpResponseFormatterArgs, message As Message, embed As EmbedLevel) As String
  overload: EventStore.Core.Services.Transport.Http.Format.GetStreamEventsForward*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.ReadAllEventsBackwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.ReadAllEventsBackwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  id: ReadAllEventsBackwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: ReadAllEventsBackwardCompleted(HttpResponseFormatterArgs, Message, EmbedLevel)
  nameWithType: Format.ReadAllEventsBackwardCompleted(HttpResponseFormatterArgs, Message, EmbedLevel)
  fullName: EventStore.Core.Services.Transport.Http.Format.ReadAllEventsBackwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadAllEventsBackwardCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 54
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string ReadAllEventsBackwardCompleted(HttpResponseFormatterArgs entity, Message message, EmbedLevel embed)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: embed
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    return:
      type: System.String
    content.vb: Public Shared Function ReadAllEventsBackwardCompleted(entity As HttpResponseFormatterArgs, message As Message, embed As EmbedLevel) As String
  overload: EventStore.Core.Services.Transport.Http.Format.ReadAllEventsBackwardCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.ReadAllEventsForwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.ReadAllEventsForwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  id: ReadAllEventsForwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: ReadAllEventsForwardCompleted(HttpResponseFormatterArgs, Message, EmbedLevel)
  nameWithType: Format.ReadAllEventsForwardCompleted(HttpResponseFormatterArgs, Message, EmbedLevel)
  fullName: EventStore.Core.Services.Transport.Http.Format.ReadAllEventsForwardCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadAllEventsForwardCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 63
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string ReadAllEventsForwardCompleted(HttpResponseFormatterArgs entity, Message message, EmbedLevel embed)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: embed
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    return:
      type: System.String
    content.vb: Public Shared Function ReadAllEventsForwardCompleted(entity As HttpResponseFormatterArgs, message As Message, embed As EmbedLevel) As String
  overload: EventStore.Core.Services.Transport.Http.Format.ReadAllEventsForwardCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.WriteEventsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.WriteEventsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  id: WriteEventsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: WriteEventsCompleted(HttpResponseFormatterArgs, Message)
  nameWithType: Format.WriteEventsCompleted(HttpResponseFormatterArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Format.WriteEventsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WriteEventsCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 72
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string WriteEventsCompleted(HttpResponseFormatterArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: System.String
    content.vb: Public Shared Function WriteEventsCompleted(entity As HttpResponseFormatterArgs, message As Message) As String
  overload: EventStore.Core.Services.Transport.Http.Format.WriteEventsCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.DeleteStreamCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.DeleteStreamCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  id: DeleteStreamCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: DeleteStreamCompleted(HttpResponseFormatterArgs, Message)
  nameWithType: Format.DeleteStreamCompleted(HttpResponseFormatterArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Format.DeleteStreamCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DeleteStreamCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 77
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string DeleteStreamCompleted(HttpResponseFormatterArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: System.String
    content.vb: Public Shared Function DeleteStreamCompleted(entity As HttpResponseFormatterArgs, message As Message) As String
  overload: EventStore.Core.Services.Transport.Http.Format.DeleteStreamCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.GetFreshStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.GetFreshStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  id: GetFreshStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: GetFreshStatsCompleted(HttpResponseFormatterArgs, Message)
  nameWithType: Format.GetFreshStatsCompleted(HttpResponseFormatterArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Format.GetFreshStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetFreshStatsCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 82
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string GetFreshStatsCompleted(HttpResponseFormatterArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: System.String
    content.vb: Public Shared Function GetFreshStatsCompleted(entity As HttpResponseFormatterArgs, message As Message) As String
  overload: EventStore.Core.Services.Transport.Http.Format.GetFreshStatsCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.GetReplicationStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.GetReplicationStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  id: GetReplicationStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: GetReplicationStatsCompleted(HttpResponseFormatterArgs, Message)
  nameWithType: Format.GetReplicationStatsCompleted(HttpResponseFormatterArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Format.GetReplicationStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetReplicationStatsCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 91
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string GetReplicationStatsCompleted(HttpResponseFormatterArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: System.String
    content.vb: Public Shared Function GetReplicationStatsCompleted(entity As HttpResponseFormatterArgs, message As Message) As String
  overload: EventStore.Core.Services.Transport.Http.Format.GetReplicationStatsCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.GetFreshTcpConnectionStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.GetFreshTcpConnectionStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  id: GetFreshTcpConnectionStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: GetFreshTcpConnectionStatsCompleted(HttpResponseFormatterArgs, Message)
  nameWithType: Format.GetFreshTcpConnectionStatsCompleted(HttpResponseFormatterArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Format.GetFreshTcpConnectionStatsCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetFreshTcpConnectionStatsCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 101
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string GetFreshTcpConnectionStatsCompleted(HttpResponseFormatterArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: System.String
    content.vb: Public Shared Function GetFreshTcpConnectionStatsCompleted(entity As HttpResponseFormatterArgs, message As Message) As String
  overload: EventStore.Core.Services.Transport.Http.Format.GetFreshTcpConnectionStatsCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.SendGossip(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.SendGossip(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  id: SendGossip(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: SendGossip(HttpResponseFormatterArgs, Message)
  nameWithType: Format.SendGossip(HttpResponseFormatterArgs, Message)
  fullName: EventStore.Core.Services.Transport.Http.Format.SendGossip(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SendGossip
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 110
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string SendGossip(HttpResponseFormatterArgs entity, Message message)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    return:
      type: System.String
    content.vb: Public Shared Function SendGossip(entity As HttpResponseFormatterArgs, message As Message) As String
  overload: EventStore.Core.Services.Transport.Http.Format.SendGossip*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.ReadNextNPersistentMessagesCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,System.String,System.String,System.Int32,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  commentId: M:EventStore.Core.Services.Transport.Http.Format.ReadNextNPersistentMessagesCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,System.String,System.String,System.Int32,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  id: ReadNextNPersistentMessagesCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,EventStore.Core.Messaging.Message,System.String,System.String,System.Int32,EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: ReadNextNPersistentMessagesCompleted(HttpResponseFormatterArgs, Message, String, String, Int32, EmbedLevel)
  nameWithType: Format.ReadNextNPersistentMessagesCompleted(HttpResponseFormatterArgs, Message, String, String, Int32, EmbedLevel)
  fullName: EventStore.Core.Services.Transport.Http.Format.ReadNextNPersistentMessagesCompleted(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, EventStore.Core.Messaging.Message, System.String, System.String, System.Int32, EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadNextNPersistentMessagesCompleted
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 123
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string ReadNextNPersistentMessagesCompleted(HttpResponseFormatterArgs entity, Message message, string streamId, string groupName, int count, EmbedLevel embed)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: streamId
      type: System.String
    - id: groupName
      type: System.String
    - id: count
      type: System.Int32
    - id: embed
      type: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
    return:
      type: System.String
    content.vb: Public Shared Function ReadNextNPersistentMessagesCompleted(entity As HttpResponseFormatterArgs, message As Message, streamId As String, groupName As String, count As Integer, embed As EmbedLevel) As String
  overload: EventStore.Core.Services.Transport.Http.Format.ReadNextNPersistentMessagesCompleted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Services.Transport.Http.Format.GetDescriptionDocument(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,System.String,System.String[])
  commentId: M:EventStore.Core.Services.Transport.Http.Format.GetDescriptionDocument(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,System.String,System.String[])
  id: GetDescriptionDocument(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs,System.String,System.String[])
  parent: EventStore.Core.Services.Transport.Http.Format
  langs:
  - csharp
  - vb
  name: GetDescriptionDocument(HttpResponseFormatterArgs, String, String[])
  nameWithType: Format.GetDescriptionDocument(HttpResponseFormatterArgs, String, String[])
  fullName: EventStore.Core.Services.Transport.Http.Format.GetDescriptionDocument(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Format.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetDescriptionDocument
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Format.cs
    startLine: 132
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static string GetDescriptionDocument(HttpResponseFormatterArgs entity, string streamId, string[] persistentSubscriptionStats)
    parameters:
    - id: entity
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    - id: streamId
      type: System.String
    - id: persistentSubscriptionStats
      type: System.String[]
    return:
      type: System.String
    content.vb: Public Shared Function GetDescriptionDocument(entity As HttpResponseFormatterArgs, streamId As String, persistentSubscriptionStats As String()) As String
  overload: EventStore.Core.Services.Transport.Http.Format.GetDescriptionDocument*
  nameWithType.vb: Format.GetDescriptionDocument(HttpResponseFormatterArgs, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Transport.Http.Format.GetDescriptionDocument(EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs, System.String, System.String())
  name.vb: GetDescriptionDocument(HttpResponseFormatterArgs, String, String())
references:
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.Transport.Http.Format.TextMessage*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.TextMessage
  name: TextMessage
  nameWithType: Format.TextMessage
  fullName: EventStore.Core.Services.Transport.Http.Format.TextMessage
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  commentId: T:EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  parent: EventStore.Core.Services.Transport.Http
  name: HttpResponseFormatterArgs
  nameWithType: HttpResponseFormatterArgs
  fullName: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Services.Transport.Http.Format.EventEntry*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.EventEntry
  name: EventEntry
  nameWithType: Format.EventEntry
  fullName: EventStore.Core.Services.Transport.Http.Format.EventEntry
- uid: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
  commentId: T:EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
  parent: EventStore.Core.Services.Transport.Http.Controllers
  name: EmbedLevel
  nameWithType: EmbedLevel
  fullName: EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel
- uid: EventStore.Core.Services.Transport.Http.Controllers
  commentId: N:EventStore.Core.Services.Transport.Http.Controllers
  name: EventStore.Core.Services.Transport.Http.Controllers
  nameWithType: EventStore.Core.Services.Transport.Http.Controllers
  fullName: EventStore.Core.Services.Transport.Http.Controllers
- uid: EventStore.Core.Services.Transport.Http.Format.GetStreamEventsBackward*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.GetStreamEventsBackward
  name: GetStreamEventsBackward
  nameWithType: Format.GetStreamEventsBackward
  fullName: EventStore.Core.Services.Transport.Http.Format.GetStreamEventsBackward
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Services.Transport.Http.Format.GetStreamEventsForward*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.GetStreamEventsForward
  name: GetStreamEventsForward
  nameWithType: Format.GetStreamEventsForward
  fullName: EventStore.Core.Services.Transport.Http.Format.GetStreamEventsForward
- uid: EventStore.Core.Services.Transport.Http.Format.ReadAllEventsBackwardCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.ReadAllEventsBackwardCompleted
  name: ReadAllEventsBackwardCompleted
  nameWithType: Format.ReadAllEventsBackwardCompleted
  fullName: EventStore.Core.Services.Transport.Http.Format.ReadAllEventsBackwardCompleted
- uid: EventStore.Core.Services.Transport.Http.Format.ReadAllEventsForwardCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.ReadAllEventsForwardCompleted
  name: ReadAllEventsForwardCompleted
  nameWithType: Format.ReadAllEventsForwardCompleted
  fullName: EventStore.Core.Services.Transport.Http.Format.ReadAllEventsForwardCompleted
- uid: EventStore.Core.Services.Transport.Http.Format.WriteEventsCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.WriteEventsCompleted
  name: WriteEventsCompleted
  nameWithType: Format.WriteEventsCompleted
  fullName: EventStore.Core.Services.Transport.Http.Format.WriteEventsCompleted
- uid: EventStore.Core.Services.Transport.Http.Format.DeleteStreamCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.DeleteStreamCompleted
  name: DeleteStreamCompleted
  nameWithType: Format.DeleteStreamCompleted
  fullName: EventStore.Core.Services.Transport.Http.Format.DeleteStreamCompleted
- uid: EventStore.Core.Services.Transport.Http.Format.GetFreshStatsCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.GetFreshStatsCompleted
  name: GetFreshStatsCompleted
  nameWithType: Format.GetFreshStatsCompleted
  fullName: EventStore.Core.Services.Transport.Http.Format.GetFreshStatsCompleted
- uid: EventStore.Core.Services.Transport.Http.Format.GetReplicationStatsCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.GetReplicationStatsCompleted
  name: GetReplicationStatsCompleted
  nameWithType: Format.GetReplicationStatsCompleted
  fullName: EventStore.Core.Services.Transport.Http.Format.GetReplicationStatsCompleted
- uid: EventStore.Core.Services.Transport.Http.Format.GetFreshTcpConnectionStatsCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.GetFreshTcpConnectionStatsCompleted
  name: GetFreshTcpConnectionStatsCompleted
  nameWithType: Format.GetFreshTcpConnectionStatsCompleted
  fullName: EventStore.Core.Services.Transport.Http.Format.GetFreshTcpConnectionStatsCompleted
- uid: EventStore.Core.Services.Transport.Http.Format.SendGossip*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.SendGossip
  name: SendGossip
  nameWithType: Format.SendGossip
  fullName: EventStore.Core.Services.Transport.Http.Format.SendGossip
- uid: EventStore.Core.Services.Transport.Http.Format.ReadNextNPersistentMessagesCompleted*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.ReadNextNPersistentMessagesCompleted
  name: ReadNextNPersistentMessagesCompleted
  nameWithType: Format.ReadNextNPersistentMessagesCompleted
  fullName: EventStore.Core.Services.Transport.Http.Format.ReadNextNPersistentMessagesCompleted
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Transport.Http.Format.GetDescriptionDocument*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Format.GetDescriptionDocument
  name: GetDescriptionDocument
  nameWithType: Format.GetDescriptionDocument
  fullName: EventStore.Core.Services.Transport.Http.Format.GetDescriptionDocument
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

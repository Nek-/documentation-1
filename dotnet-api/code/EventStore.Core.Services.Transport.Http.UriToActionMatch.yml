### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.UriToActionMatch
  commentId: T:EventStore.Core.Services.Transport.Http.UriToActionMatch
  id: UriToActionMatch
  parent: EventStore.Core.Services.Transport.Http
  children:
  - EventStore.Core.Services.Transport.Http.UriToActionMatch.#ctor(UriTemplateMatch,EventStore.Core.Services.Transport.Http.ControllerAction,Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams})
  - EventStore.Core.Services.Transport.Http.UriToActionMatch.ControllerAction
  - EventStore.Core.Services.Transport.Http.UriToActionMatch.RequestHandler
  - EventStore.Core.Services.Transport.Http.UriToActionMatch.TemplateMatch
  langs:
  - csharp
  - vb
  name: UriToActionMatch
  nameWithType: UriToActionMatch
  fullName: EventStore.Core.Services.Transport.Http.UriToActionMatch
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/UriToActionMatch.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: UriToActionMatch
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/UriToActionMatch.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: 'public class UriToActionMatch : object'
    content.vb: >-
      Public Class UriToActionMatch
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Transport.Http.UriToActionMatch.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.UriToActionMatch.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.UriToActionMatch.TemplateMatch
  commentId: F:EventStore.Core.Services.Transport.Http.UriToActionMatch.TemplateMatch
  id: TemplateMatch
  parent: EventStore.Core.Services.Transport.Http.UriToActionMatch
  langs:
  - csharp
  - vb
  name: TemplateMatch
  nameWithType: UriToActionMatch.TemplateMatch
  fullName: EventStore.Core.Services.Transport.Http.UriToActionMatch.TemplateMatch
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/UriToActionMatch.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TemplateMatch
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/UriToActionMatch.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly UriTemplateMatch TemplateMatch
    return:
      type: UriTemplateMatch
    content.vb: Public ReadOnly TemplateMatch As UriTemplateMatch
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.UriToActionMatch.ControllerAction
  commentId: F:EventStore.Core.Services.Transport.Http.UriToActionMatch.ControllerAction
  id: ControllerAction
  parent: EventStore.Core.Services.Transport.Http.UriToActionMatch
  langs:
  - csharp
  - vb
  name: ControllerAction
  nameWithType: UriToActionMatch.ControllerAction
  fullName: EventStore.Core.Services.Transport.Http.UriToActionMatch.ControllerAction
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/UriToActionMatch.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ControllerAction
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/UriToActionMatch.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly ControllerAction ControllerAction
    return:
      type: EventStore.Core.Services.Transport.Http.ControllerAction
    content.vb: Public ReadOnly ControllerAction As ControllerAction
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.UriToActionMatch.RequestHandler
  commentId: F:EventStore.Core.Services.Transport.Http.UriToActionMatch.RequestHandler
  id: RequestHandler
  parent: EventStore.Core.Services.Transport.Http.UriToActionMatch
  langs:
  - csharp
  - vb
  name: RequestHandler
  nameWithType: UriToActionMatch.RequestHandler
  fullName: EventStore.Core.Services.Transport.Http.UriToActionMatch.RequestHandler
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/UriToActionMatch.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: RequestHandler
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/UriToActionMatch.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly Func<HttpEntityManager, UriTemplateMatch, RequestParams> RequestHandler
    return:
      type: Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams}
    content.vb: Public ReadOnly RequestHandler As Func(Of HttpEntityManager, UriTemplateMatch, RequestParams)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.UriToActionMatch.#ctor(UriTemplateMatch,EventStore.Core.Services.Transport.Http.ControllerAction,Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams})
  commentId: M:EventStore.Core.Services.Transport.Http.UriToActionMatch.#ctor(UriTemplateMatch,EventStore.Core.Services.Transport.Http.ControllerAction,Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams})
  id: '#ctor(UriTemplateMatch,EventStore.Core.Services.Transport.Http.ControllerAction,Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams})'
  parent: EventStore.Core.Services.Transport.Http.UriToActionMatch
  langs:
  - csharp
  - vb
  name: UriToActionMatch(UriTemplateMatch, ControllerAction, Func<HttpEntityManager, UriTemplateMatch, RequestParams>)
  nameWithType: UriToActionMatch.UriToActionMatch(UriTemplateMatch, ControllerAction, Func<HttpEntityManager, UriTemplateMatch, RequestParams>)
  fullName: EventStore.Core.Services.Transport.Http.UriToActionMatch.UriToActionMatch(UriTemplateMatch, EventStore.Core.Services.Transport.Http.ControllerAction, Func<EventStore.Transport.Http.EntityManagement.HttpEntityManager, UriTemplateMatch, EventStore.Core.Services.Transport.Http.RequestParams>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/UriToActionMatch.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/UriToActionMatch.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public UriToActionMatch(UriTemplateMatch templateMatch, ControllerAction controllerAction, Func<HttpEntityManager, UriTemplateMatch, RequestParams> requestHandler)
    parameters:
    - id: templateMatch
      type: UriTemplateMatch
    - id: controllerAction
      type: EventStore.Core.Services.Transport.Http.ControllerAction
    - id: requestHandler
      type: Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams}
    content.vb: Public Sub New(templateMatch As UriTemplateMatch, controllerAction As ControllerAction, requestHandler As Func(Of HttpEntityManager, UriTemplateMatch, RequestParams))
  overload: EventStore.Core.Services.Transport.Http.UriToActionMatch.#ctor*
  nameWithType.vb: UriToActionMatch.UriToActionMatch(UriTemplateMatch, ControllerAction, Func(Of HttpEntityManager, UriTemplateMatch, RequestParams))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.UriToActionMatch.UriToActionMatch(UriTemplateMatch, EventStore.Core.Services.Transport.Http.ControllerAction, Func(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, UriTemplateMatch, EventStore.Core.Services.Transport.Http.RequestParams))
  name.vb: UriToActionMatch(UriTemplateMatch, ControllerAction, Func(Of HttpEntityManager, UriTemplateMatch, RequestParams))
references:
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.UriToActionMatch.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<UriToActionMatch>()
  nameWithType: ProtobufExtensions.Serialize<UriToActionMatch>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.UriToActionMatch>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of UriToActionMatch)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.UriToActionMatch)()
  name.vb: Serialize(Of UriToActionMatch)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<UriToActionMatch>
    nameWithType: ProtobufExtensions.Serialize<UriToActionMatch>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.UriToActionMatch>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of UriToActionMatch)
    nameWithType: ProtobufExtensions.Serialize(Of UriToActionMatch)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.UriToActionMatch)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.UriToActionMatch.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<UriToActionMatch>()
  nameWithType: ProtobufExtensions.SerializeToArray<UriToActionMatch>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.UriToActionMatch>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of UriToActionMatch)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.UriToActionMatch)()
  name.vb: SerializeToArray(Of UriToActionMatch)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<UriToActionMatch>
    nameWithType: ProtobufExtensions.SerializeToArray<UriToActionMatch>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.UriToActionMatch>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of UriToActionMatch)
    nameWithType: ProtobufExtensions.SerializeToArray(Of UriToActionMatch)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.UriToActionMatch)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: UriTemplateMatch
  isExternal: true
  name: UriTemplateMatch
  nameWithType: UriTemplateMatch
  fullName: UriTemplateMatch
- uid: EventStore.Core.Services.Transport.Http.ControllerAction
  commentId: T:EventStore.Core.Services.Transport.Http.ControllerAction
  parent: EventStore.Core.Services.Transport.Http
  name: ControllerAction
  nameWithType: ControllerAction
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction
- uid: Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams}
  commentId: '!:Func{EventStore.Transport.Http.EntityManagement.HttpEntityManager,UriTemplateMatch,EventStore.Core.Services.Transport.Http.RequestParams}'
  definition: Func`3
  name: Func<HttpEntityManager, UriTemplateMatch, RequestParams>
  nameWithType: Func<HttpEntityManager, UriTemplateMatch, RequestParams>
  fullName: Func<EventStore.Transport.Http.EntityManagement.HttpEntityManager, UriTemplateMatch, EventStore.Core.Services.Transport.Http.RequestParams>
  nameWithType.vb: Func(Of HttpEntityManager, UriTemplateMatch, RequestParams)
  fullName.vb: Func(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, UriTemplateMatch, EventStore.Core.Services.Transport.Http.RequestParams)
  name.vb: Func(Of HttpEntityManager, UriTemplateMatch, RequestParams)
  spec.csharp:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UriTemplateMatch
    name: UriTemplateMatch
    nameWithType: UriTemplateMatch
    fullName: UriTemplateMatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Http.RequestParams
    name: RequestParams
    nameWithType: RequestParams
    fullName: EventStore.Core.Services.Transport.Http.RequestParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UriTemplateMatch
    name: UriTemplateMatch
    nameWithType: UriTemplateMatch
    fullName: UriTemplateMatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Http.RequestParams
    name: RequestParams
    nameWithType: RequestParams
    fullName: EventStore.Core.Services.Transport.Http.RequestParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`3
  isExternal: true
  name: Func<, , >
  nameWithType: Func<, , >
  fullName: Func<, , >
  nameWithType.vb: Func(Of , , )
  fullName.vb: Func(Of , , )
  name.vb: Func(Of , , )
  spec.csharp:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.UriToActionMatch.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Http.UriToActionMatch.#ctor
  name: UriToActionMatch
  nameWithType: UriToActionMatch.UriToActionMatch
  fullName: EventStore.Core.Services.Transport.Http.UriToActionMatch.UriToActionMatch

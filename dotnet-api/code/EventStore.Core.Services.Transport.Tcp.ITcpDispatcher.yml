### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher
  commentId: T:EventStore.Core.Services.Transport.Tcp.ITcpDispatcher
  id: ITcpDispatcher
  parent: EventStore.Core.Services.Transport.Tcp
  children:
  - EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Byte)
  - EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.WrapMessage(EventStore.Core.Messaging.Message,System.Byte)
  langs:
  - csharp
  - vb
  name: ITcpDispatcher
  nameWithType: ITcpDispatcher
  fullName: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/ITcpDispatcher.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ITcpDispatcher
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/ITcpDispatcher.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public interface ITcpDispatcher
    content.vb: Public Interface ITcpDispatcher
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.WrapMessage(EventStore.Core.Messaging.Message,System.Byte)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.WrapMessage(EventStore.Core.Messaging.Message,System.Byte)
  id: WrapMessage(EventStore.Core.Messaging.Message,System.Byte)
  parent: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher
  langs:
  - csharp
  - vb
  name: WrapMessage(Message, Byte)
  nameWithType: ITcpDispatcher.WrapMessage(Message, Byte)
  fullName: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.WrapMessage(EventStore.Core.Messaging.Message, System.Byte)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/ITcpDispatcher.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WrapMessage
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/ITcpDispatcher.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: TcpPackage? WrapMessage(Message message, byte version)
    parameters:
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: version
      type: System.Byte
    return:
      type: System.Nullable{EventStore.Core.Services.Transport.Tcp.TcpPackage}
    content.vb: Function WrapMessage(message As Message, version As Byte) As TcpPackage?
  overload: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.WrapMessage*
- uid: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Byte)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Byte)
  id: UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Byte)
  parent: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher
  langs:
  - csharp
  - vb
  name: UnwrapPackage(TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, Byte)
  nameWithType: ITcpDispatcher.UnwrapPackage(TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, Byte)
  fullName: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, System.String, System.String, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, System.Byte)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/ITcpDispatcher.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: UnwrapPackage
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/ITcpDispatcher.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: Message UnwrapPackage(TcpPackage package, IEnvelope envelope, IPrincipal user, string login, string pass, TcpConnectionManager connection, byte version)
    parameters:
    - id: package
      type: EventStore.Core.Services.Transport.Tcp.TcpPackage
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: user
      type: IPrincipal
    - id: login
      type: System.String
    - id: pass
      type: System.String
    - id: connection
      type: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    - id: version
      type: System.Byte
    return:
      type: EventStore.Core.Messaging.Message
    content.vb: Function UnwrapPackage(package As TcpPackage, envelope As IEnvelope, user As IPrincipal, login As String, pass As String, connection As TcpConnectionManager, version As Byte) As Message
  overload: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.UnwrapPackage*
references:
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ITcpDispatcher>()
  nameWithType: ProtobufExtensions.Serialize<ITcpDispatcher>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Tcp.ITcpDispatcher>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ITcpDispatcher)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Tcp.ITcpDispatcher)()
  name.vb: Serialize(Of ITcpDispatcher)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ITcpDispatcher>
    nameWithType: ProtobufExtensions.Serialize<ITcpDispatcher>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Tcp.ITcpDispatcher>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ITcpDispatcher)
    nameWithType: ProtobufExtensions.Serialize(Of ITcpDispatcher)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Tcp.ITcpDispatcher)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ITcpDispatcher>()
  nameWithType: ProtobufExtensions.SerializeToArray<ITcpDispatcher>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Tcp.ITcpDispatcher>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ITcpDispatcher)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Tcp.ITcpDispatcher)()
  name.vb: SerializeToArray(Of ITcpDispatcher)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ITcpDispatcher>
    nameWithType: ProtobufExtensions.SerializeToArray<ITcpDispatcher>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Tcp.ITcpDispatcher>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ITcpDispatcher)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ITcpDispatcher)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Tcp.ITcpDispatcher)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.WrapMessage*
  commentId: Overload:EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.WrapMessage
  name: WrapMessage
  nameWithType: ITcpDispatcher.WrapMessage
  fullName: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.WrapMessage
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Nullable{EventStore.Core.Services.Transport.Tcp.TcpPackage}
  commentId: '!:System.Nullable{EventStore.Core.Services.Transport.Tcp.TcpPackage}'
  definition: System.Nullable`1
  name: Nullable<TcpPackage>
  nameWithType: Nullable<TcpPackage>
  fullName: System.Nullable<EventStore.Core.Services.Transport.Tcp.TcpPackage>
  nameWithType.vb: Nullable(Of TcpPackage)
  fullName.vb: System.Nullable(Of EventStore.Core.Services.Transport.Tcp.TcpPackage)
  name.vb: Nullable(Of TcpPackage)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.UnwrapPackage*
  commentId: Overload:EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.UnwrapPackage
  name: UnwrapPackage
  nameWithType: ITcpDispatcher.UnwrapPackage
  fullName: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.UnwrapPackage
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
  commentId: T:EventStore.Core.Services.Transport.Tcp.TcpPackage
  parent: EventStore.Core.Services.Transport.Tcp
  name: TcpPackage
  nameWithType: TcpPackage
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  commentId: T:EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  parent: EventStore.Core.Services.Transport.Tcp
  name: TcpConnectionManager
  nameWithType: TcpConnectionManager
  fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher
  commentId: T:EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher
  id: InternalTcpDispatcher
  parent: EventStore.Core.Services.Transport.Tcp
  children:
  - EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.#ctor
  langs:
  - csharp
  - vb
  name: InternalTcpDispatcher
  nameWithType: InternalTcpDispatcher
  fullName: EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/InternalTcpDispatcher.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: InternalTcpDispatcher
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/InternalTcpDispatcher.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: 'public class InternalTcpDispatcher : ClientTcpDispatcher, ITcpDispatcher'
    content.vb: >-
      Public Class InternalTcpDispatcher
          Inherits ClientTcpDispatcher
          Implements ITcpDispatcher
  inheritance:
  - System.Object
  - EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  - EventStore.Core.Services.Transport.Tcp.ClientTcpDispatcher
  implements:
  - EventStore.Core.Services.Transport.Tcp.ITcpDispatcher
  inheritedMembers:
  - EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper``1(Func{{T},EventStore.Core.Services.Transport.Tcp.TcpPackage},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  - EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,{T}},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  - EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,{T}},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  - EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,{T}},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  - EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,{T}},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  - EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,{T}},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  - EventStore.Core.Services.Transport.Tcp.TcpDispatcher.WrapMessage(EventStore.Core.Messaging.Message,System.Byte)
  - EventStore.Core.Services.Transport.Tcp.TcpDispatcher.UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Byte)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.#ctor
  commentId: M:EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.#ctor
  id: '#ctor'
  parent: EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher
  langs:
  - csharp
  - vb
  name: InternalTcpDispatcher()
  nameWithType: InternalTcpDispatcher.InternalTcpDispatcher()
  fullName: EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.InternalTcpDispatcher()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/InternalTcpDispatcher.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/InternalTcpDispatcher.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public InternalTcpDispatcher()
    content.vb: Public Sub New
  overload: EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  commentId: T:EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  parent: EventStore.Core.Services.Transport.Tcp
  name: TcpDispatcher
  nameWithType: TcpDispatcher
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher
- uid: EventStore.Core.Services.Transport.Tcp.ClientTcpDispatcher
  commentId: T:EventStore.Core.Services.Transport.Tcp.ClientTcpDispatcher
  parent: EventStore.Core.Services.Transport.Tcp
  name: ClientTcpDispatcher
  nameWithType: ClientTcpDispatcher
  fullName: EventStore.Core.Services.Transport.Tcp.ClientTcpDispatcher
- uid: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher
  commentId: T:EventStore.Core.Services.Transport.Tcp.ITcpDispatcher
  parent: EventStore.Core.Services.Transport.Tcp
  name: ITcpDispatcher
  nameWithType: ITcpDispatcher
  fullName: EventStore.Core.Services.Transport.Tcp.ITcpDispatcher
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper``1(Func{{T},EventStore.Core.Services.Transport.Tcp.TcpPackage},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper``1(Func{``0,EventStore.Core.Services.Transport.Tcp.TcpPackage},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  parent: EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  definition: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper``1(Func{``0,EventStore.Core.Services.Transport.Tcp.TcpPackage},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name: AddWrapper<T>(Func<T, TcpPackage>, ClientVersion)
  nameWithType: TcpDispatcher.AddWrapper<T>(Func<T, TcpPackage>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper<T>(Func<T, EventStore.Core.Services.Transport.Tcp.TcpPackage>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddWrapper(Of T)(Func(Of T, TcpPackage), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper(Of T)(Func(Of T, EventStore.Core.Services.Transport.Tcp.TcpPackage), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddWrapper(Of T)(Func(Of T, TcpPackage), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper``1(Func{``0,EventStore.Core.Services.Transport.Tcp.TcpPackage},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddWrapper<T>
    nameWithType: TcpDispatcher.AddWrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper``1(Func{``0,EventStore.Core.Services.Transport.Tcp.TcpPackage},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddWrapper(Of T)
    nameWithType: TcpDispatcher.AddWrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,{T}},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  parent: EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  definition: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name: AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, T>, ClientVersion)
  nameWithType: TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, T>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func<EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, T>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, T), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func(Of EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, T), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, T), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper<T>
    nameWithType: TcpDispatcher.AddUnwrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper(Of T)
    nameWithType: TcpDispatcher.AddUnwrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,{T}},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  parent: EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  definition: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name: AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, TcpConnectionManager, T>, ClientVersion)
  nameWithType: TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, TcpConnectionManager, T>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func<EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, T>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, TcpConnectionManager, T), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func(Of EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, T), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, TcpConnectionManager, T), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper<T>
    nameWithType: TcpDispatcher.AddUnwrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    name: TcpConnectionManager
    nameWithType: TcpConnectionManager
    fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper(Of T)
    nameWithType: TcpDispatcher.AddUnwrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    name: TcpConnectionManager
    nameWithType: TcpConnectionManager
    fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,{T}},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  parent: EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  definition: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name: AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, T>, ClientVersion)
  nameWithType: TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, T>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func<EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, T>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, T), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func(Of EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, T), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, T), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper<T>
    nameWithType: TcpDispatcher.AddUnwrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper(Of T)
    nameWithType: TcpDispatcher.AddUnwrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,{T}},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  parent: EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  definition: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name: AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, T>, ClientVersion)
  nameWithType: TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, T>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func<EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, System.String, System.String, T>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, String, String, T), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func(Of EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, System.String, System.String, T), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, String, String, T), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper<T>
    nameWithType: TcpDispatcher.AddUnwrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`6
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper(Of T)
    nameWithType: TcpDispatcher.AddUnwrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`6
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,{T}},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  parent: EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  definition: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name: AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T>, ClientVersion)
  nameWithType: TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func<EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, System.String, System.String, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, T>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func(Of EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, System.String, System.String, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, T), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper<T>
    nameWithType: TcpDispatcher.AddUnwrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`7
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    name: TcpConnectionManager
    nameWithType: TcpConnectionManager
    fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper(Of T)
    nameWithType: TcpDispatcher.AddUnwrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`7
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    name: TcpConnectionManager
    nameWithType: TcpConnectionManager
    fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.WrapMessage(EventStore.Core.Messaging.Message,System.Byte)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.WrapMessage(EventStore.Core.Messaging.Message,System.Byte)
  parent: EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  isExternal: true
  name: WrapMessage(Message, Byte)
  nameWithType: TcpDispatcher.WrapMessage(Message, Byte)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.WrapMessage(EventStore.Core.Messaging.Message, System.Byte)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.WrapMessage(EventStore.Core.Messaging.Message,System.Byte)
    name: WrapMessage
    nameWithType: TcpDispatcher.WrapMessage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.WrapMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.WrapMessage(EventStore.Core.Messaging.Message,System.Byte)
    name: WrapMessage
    nameWithType: TcpDispatcher.WrapMessage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.WrapMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Byte)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Byte)
  parent: EventStore.Core.Services.Transport.Tcp.TcpDispatcher
  isExternal: true
  name: UnwrapPackage(TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, Byte)
  nameWithType: TcpDispatcher.UnwrapPackage(TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, Byte)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, System.String, System.String, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, System.Byte)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Byte)
    name: UnwrapPackage
    nameWithType: TcpDispatcher.UnwrapPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.UnwrapPackage
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    name: TcpConnectionManager
    nameWithType: TcpConnectionManager
    fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.UnwrapPackage(EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Byte)
    name: UnwrapPackage
    nameWithType: TcpDispatcher.UnwrapPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.UnwrapPackage
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    name: TcpConnectionManager
    nameWithType: TcpConnectionManager
    fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<InternalTcpDispatcher>()
  nameWithType: ProtobufExtensions.Serialize<InternalTcpDispatcher>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of InternalTcpDispatcher)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher)()
  name.vb: Serialize(Of InternalTcpDispatcher)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<InternalTcpDispatcher>
    nameWithType: ProtobufExtensions.Serialize<InternalTcpDispatcher>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of InternalTcpDispatcher)
    nameWithType: ProtobufExtensions.Serialize(Of InternalTcpDispatcher)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<InternalTcpDispatcher>()
  nameWithType: ProtobufExtensions.SerializeToArray<InternalTcpDispatcher>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of InternalTcpDispatcher)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher)()
  name.vb: SerializeToArray(Of InternalTcpDispatcher)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<InternalTcpDispatcher>
    nameWithType: ProtobufExtensions.SerializeToArray<InternalTcpDispatcher>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of InternalTcpDispatcher)
    nameWithType: ProtobufExtensions.SerializeToArray(Of InternalTcpDispatcher)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper``1(Func{``0,EventStore.Core.Services.Transport.Tcp.TcpPackage},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper``1(Func{``0,EventStore.Core.Services.Transport.Tcp.TcpPackage},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  isExternal: true
  name: AddWrapper<T>(Func<T, TcpPackage>, ClientVersion)
  nameWithType: TcpDispatcher.AddWrapper<T>(Func<T, TcpPackage>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper<T>(Func<T, EventStore.Core.Services.Transport.Tcp.TcpPackage>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddWrapper(Of T)(Func(Of T, TcpPackage), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper(Of T)(Func(Of T, EventStore.Core.Services.Transport.Tcp.TcpPackage), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddWrapper(Of T)(Func(Of T, TcpPackage), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper``1(Func{``0,EventStore.Core.Services.Transport.Tcp.TcpPackage},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddWrapper<T>
    nameWithType: TcpDispatcher.AddWrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper``1(Func{``0,EventStore.Core.Services.Transport.Tcp.TcpPackage},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddWrapper(Of T)
    nameWithType: TcpDispatcher.AddWrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddWrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  isExternal: true
  name: AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, T>, ClientVersion)
  nameWithType: TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, T>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func<EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, T>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, T), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func(Of EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, T), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, T), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper<T>
    nameWithType: TcpDispatcher.AddUnwrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper(Of T)
    nameWithType: TcpDispatcher.AddUnwrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  isExternal: true
  name: AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, TcpConnectionManager, T>, ClientVersion)
  nameWithType: TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, TcpConnectionManager, T>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func<EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, T>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, TcpConnectionManager, T), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func(Of EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, T), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, TcpConnectionManager, T), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper<T>
    nameWithType: TcpDispatcher.AddUnwrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    name: TcpConnectionManager
    nameWithType: TcpConnectionManager
    fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper(Of T)
    nameWithType: TcpDispatcher.AddUnwrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    name: TcpConnectionManager
    nameWithType: TcpConnectionManager
    fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  isExternal: true
  name: AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, T>, ClientVersion)
  nameWithType: TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, T>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func<EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, T>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, T), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func(Of EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, T), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, T), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper<T>
    nameWithType: TcpDispatcher.AddUnwrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper(Of T)
    nameWithType: TcpDispatcher.AddUnwrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  isExternal: true
  name: AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, T>, ClientVersion)
  nameWithType: TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, T>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func<EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, System.String, System.String, T>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, String, String, T), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func(Of EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, System.String, System.String, T), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, String, String, T), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper<T>
    nameWithType: TcpDispatcher.AddUnwrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`6
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper(Of T)
    nameWithType: TcpDispatcher.AddUnwrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`6
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
  isExternal: true
  name: AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T>, ClientVersion)
  nameWithType: TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T>, ClientVersion)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func<EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, System.String, System.String, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, T>, EventStore.Core.Services.Transport.Tcp.ClientVersion)
  nameWithType.vb: TcpDispatcher.AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T), ClientVersion)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)(EventStore.Core.Services.Transport.Tcp.TcpCommand, Func(Of EventStore.Core.Services.Transport.Tcp.TcpPackage, EventStore.Core.Messaging.IEnvelope, IPrincipal, System.String, System.String, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, T), EventStore.Core.Services.Transport.Tcp.ClientVersion)
  name.vb: AddUnwrapper(Of T)(TcpCommand, Func(Of TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T), ClientVersion)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper<T>
    nameWithType: TcpDispatcher.AddUnwrapper<T>
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`7
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    name: TcpConnectionManager
    nameWithType: TcpConnectionManager
    fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper``1(EventStore.Core.Services.Transport.Tcp.TcpCommand,Func{EventStore.Core.Services.Transport.Tcp.TcpPackage,EventStore.Core.Messaging.IEnvelope,IPrincipal,System.String,System.String,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,``0},EventStore.Core.Services.Transport.Tcp.ClientVersion)
    name: AddUnwrapper(Of T)
    nameWithType: TcpDispatcher.AddUnwrapper(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.TcpDispatcher.AddUnwrapper(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
    name: TcpCommand
    nameWithType: TcpCommand
    fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`7
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
    name: TcpPackage
    nameWithType: TcpPackage
    fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messaging.IEnvelope
    name: IEnvelope
    nameWithType: IEnvelope
    fullName: EventStore.Core.Messaging.IEnvelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: IPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    name: TcpConnectionManager
    nameWithType: TcpConnectionManager
    fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Services.Transport.Tcp.ClientVersion
    name: ClientVersion
    nameWithType: ClientVersion
    fullName: EventStore.Core.Services.Transport.Tcp.ClientVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.#ctor
  name: InternalTcpDispatcher
  nameWithType: InternalTcpDispatcher.InternalTcpDispatcher
  fullName: EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.InternalTcpDispatcher

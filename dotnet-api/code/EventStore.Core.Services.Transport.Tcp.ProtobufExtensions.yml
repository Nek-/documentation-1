### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  id: ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  children:
  - EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize``1(System.ArraySegment{System.Byte})
  - EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize``1(System.Byte[])
  - EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  - EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  langs:
  - csharp
  - vb
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  type: Class
  source:
    id: ProtobufExtensions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Tcp/ProtobufExtensions.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public static class ProtobufExtensions
    content.vb: Public Module ProtobufExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize``1(System.Byte[])
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize``1(System.Byte[])
  id: Deserialize``1(System.Byte[])
  isExtensionMethod: true
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  langs:
  - csharp
  - vb
  name: Deserialize<T>(Byte[])
  nameWithType: ProtobufExtensions.Deserialize<T>(Byte[])
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize<T>(System.Byte[])
  type: Method
  source:
    id: Deserialize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Tcp/ProtobufExtensions.cs
    startLine: 39
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public static T Deserialize<T>(this byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Deserialize(Of T)(data As Byte()) As T
  overload: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize*
  nameWithType.vb: ProtobufExtensions.Deserialize(Of T)(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize(Of T)(System.Byte())
  name.vb: Deserialize(Of T)(Byte())
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize``1(System.ArraySegment{System.Byte})
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize``1(System.ArraySegment{System.Byte})
  id: Deserialize``1(System.ArraySegment{System.Byte})
  isExtensionMethod: true
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  langs:
  - csharp
  - vb
  name: Deserialize<T>(ArraySegment<Byte>)
  nameWithType: ProtobufExtensions.Deserialize<T>(ArraySegment<Byte>)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize<T>(System.ArraySegment<System.Byte>)
  type: Method
  source:
    id: Deserialize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Tcp/ProtobufExtensions.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public static T Deserialize<T>(this ArraySegment<byte> data)
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Deserialize(Of T)(data As ArraySegment(Of Byte)) As T
  overload: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize*
  nameWithType.vb: ProtobufExtensions.Deserialize(Of T)(ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize(Of T)(System.ArraySegment(Of System.Byte))
  name.vb: Deserialize(Of T)(ArraySegment(Of Byte))
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  id: Serialize``1(``0)
  isExtensionMethod: true
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  langs:
  - csharp
  - vb
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  type: Method
  source:
    id: Serialize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Tcp/ProtobufExtensions.cs
    startLine: 57
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public static ArraySegment<byte> Serialize<T>(this T protoContract)
    parameters:
    - id: protoContract
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.ArraySegment{System.Byte}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Serialize(Of T)(protoContract As T) As ArraySegment(Of Byte)
  overload: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize*
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  id: SerializeToArray``1(``0)
  isExtensionMethod: true
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  langs:
  - csharp
  - vb
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  type: Method
  source:
    id: SerializeToArray
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Transport/Tcp/ProtobufExtensions.cs
    startLine: 71
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public static byte[] SerializeToArray<T>(this T protoContract)
    parameters:
    - id: protoContract
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SerializeToArray(Of T)(protoContract As T) As Byte()
  overload: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray*
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
references:
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize*
  commentId: Overload:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize
  name: Deserialize
  nameWithType: ProtobufExtensions.Deserialize
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Deserialize
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize*
  commentId: Overload:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize
  name: Serialize
  nameWithType: ProtobufExtensions.Serialize
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray*
  commentId: Overload:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray
  name: SerializeToArray
  nameWithType: ProtobufExtensions.SerializeToArray
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray

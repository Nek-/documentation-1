### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
  commentId: T:EventStore.Core.Services.Transport.Tcp.TcpPackage
  id: TcpPackage
  parent: EventStore.Core.Services.Transport.Tcp
  children:
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,EventStore.Core.Services.Transport.Tcp.TcpFlags,Guid,System.String,System.String,ArraySegment{System.Byte})
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,EventStore.Core.Services.Transport.Tcp.TcpFlags,Guid,System.String,System.String,System.Byte[])
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,Guid,ArraySegment{System.Byte})
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,Guid,System.Byte[])
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.AsArraySegment
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.AsByteArray
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.AuthOffset
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.Command
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.CommandOffset
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.CorrelationId
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.CorrelationOffset
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.Data
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.Flags
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.FlagsOffset
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.FromArraySegment(ArraySegment{System.Byte})
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.Login
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.MandatorySize
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.Password
  langs:
  - csharp
  - vb
  name: TcpPackage
  nameWithType: TcpPackage
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TcpPackage
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public struct TcpPackage
    content.vb: Public Structure TcpPackage
  extensionMethods:
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Tcp.TcpPackage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.CommandOffset
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.CommandOffset
  id: CommandOffset
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: CommandOffset
  nameWithType: TcpPackage.CommandOffset
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.CommandOffset
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CommandOffset
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public const int CommandOffset = null
    return:
      type: System.Int32
    content.vb: Public Const CommandOffset As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.FlagsOffset
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.FlagsOffset
  id: FlagsOffset
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: FlagsOffset
  nameWithType: TcpPackage.FlagsOffset
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.FlagsOffset
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: FlagsOffset
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public const int FlagsOffset = null
    return:
      type: System.Int32
    content.vb: Public Const FlagsOffset As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.CorrelationOffset
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.CorrelationOffset
  id: CorrelationOffset
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: CorrelationOffset
  nameWithType: TcpPackage.CorrelationOffset
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.CorrelationOffset
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CorrelationOffset
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public const int CorrelationOffset = null
    return:
      type: System.Int32
    content.vb: Public Const CorrelationOffset As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.AuthOffset
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.AuthOffset
  id: AuthOffset
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: AuthOffset
  nameWithType: TcpPackage.AuthOffset
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.AuthOffset
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: AuthOffset
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public const int AuthOffset = null
    return:
      type: System.Int32
    content.vb: Public Const AuthOffset As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.MandatorySize
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.MandatorySize
  id: MandatorySize
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: MandatorySize
  nameWithType: TcpPackage.MandatorySize
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.MandatorySize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MandatorySize
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public const int MandatorySize = null
    return:
      type: System.Int32
    content.vb: Public Const MandatorySize As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.Command
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.Command
  id: Command
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: Command
  nameWithType: TcpPackage.Command
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.Command
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Command
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public readonly TcpCommand Command
    return:
      type: EventStore.Core.Services.Transport.Tcp.TcpCommand
    content.vb: Public ReadOnly Command As TcpCommand
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.Flags
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.Flags
  id: Flags
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: TcpPackage.Flags
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.Flags
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Flags
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 24
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public readonly TcpFlags Flags
    return:
      type: EventStore.Core.Services.Transport.Tcp.TcpFlags
    content.vb: Public ReadOnly Flags As TcpFlags
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.CorrelationId
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.CorrelationId
  id: CorrelationId
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: TcpPackage.CorrelationId
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.CorrelationId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CorrelationId
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public readonly Guid CorrelationId
    return:
      type: Guid
    content.vb: Public ReadOnly CorrelationId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.Login
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.Login
  id: Login
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: Login
  nameWithType: TcpPackage.Login
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.Login
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Login
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public readonly string Login
    return:
      type: System.String
    content.vb: Public ReadOnly Login As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.Password
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.Password
  id: Password
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: TcpPackage.Password
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.Password
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Password
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 27
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public readonly string Password
    return:
      type: System.String
    content.vb: Public ReadOnly Password As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.Data
  commentId: F:EventStore.Core.Services.Transport.Tcp.TcpPackage.Data
  id: Data
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: TcpPackage.Data
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.Data
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Data
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public readonly ArraySegment<byte> Data
    return:
      type: ArraySegment{System.Byte}
    content.vb: Public ReadOnly Data As ArraySegment(Of Byte)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.FromArraySegment(ArraySegment{System.Byte})
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpPackage.FromArraySegment(ArraySegment{System.Byte})
  id: FromArraySegment(ArraySegment{System.Byte})
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: FromArraySegment(ArraySegment<Byte>)
  nameWithType: TcpPackage.FromArraySegment(ArraySegment<Byte>)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.FromArraySegment(ArraySegment<System.Byte>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: FromArraySegment
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public static TcpPackage FromArraySegment(ArraySegment<byte> data)
    parameters:
    - id: data
      type: ArraySegment{System.Byte}
    return:
      type: EventStore.Core.Services.Transport.Tcp.TcpPackage
    content.vb: Public Shared Function FromArraySegment(data As ArraySegment(Of Byte)) As TcpPackage
  overload: EventStore.Core.Services.Transport.Tcp.TcpPackage.FromArraySegment*
  nameWithType.vb: TcpPackage.FromArraySegment(ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpPackage.FromArraySegment(ArraySegment(Of System.Byte))
  name.vb: FromArraySegment(ArraySegment(Of Byte))
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,Guid,System.Byte[])
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,Guid,System.Byte[])
  id: '#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,Guid,System.Byte[])'
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: TcpPackage(TcpCommand, Guid, Byte[])
  nameWithType: TcpPackage.TcpPackage(TcpCommand, Guid, Byte[])
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.TcpPackage(EventStore.Core.Services.Transport.Tcp.TcpCommand, Guid, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 68
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public TcpPackage(TcpCommand command, Guid correlationId, byte[] data)
    parameters:
    - id: command
      type: EventStore.Core.Services.Transport.Tcp.TcpCommand
    - id: correlationId
      type: Guid
    - id: data
      type: System.Byte[]
    content.vb: Public Sub New(command As TcpCommand, correlationId As Guid, data As Byte())
  overload: EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor*
  nameWithType.vb: TcpPackage.TcpPackage(TcpCommand, Guid, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpPackage.TcpPackage(EventStore.Core.Services.Transport.Tcp.TcpCommand, Guid, System.Byte())
  name.vb: TcpPackage(TcpCommand, Guid, Byte())
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,Guid,ArraySegment{System.Byte})
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,Guid,ArraySegment{System.Byte})
  id: '#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,Guid,ArraySegment{System.Byte})'
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: TcpPackage(TcpCommand, Guid, ArraySegment<Byte>)
  nameWithType: TcpPackage.TcpPackage(TcpCommand, Guid, ArraySegment<Byte>)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.TcpPackage(EventStore.Core.Services.Transport.Tcp.TcpCommand, Guid, ArraySegment<System.Byte>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 73
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public TcpPackage(TcpCommand command, Guid correlationId, ArraySegment<byte> data)
    parameters:
    - id: command
      type: EventStore.Core.Services.Transport.Tcp.TcpCommand
    - id: correlationId
      type: Guid
    - id: data
      type: ArraySegment{System.Byte}
    content.vb: Public Sub New(command As TcpCommand, correlationId As Guid, data As ArraySegment(Of Byte))
  overload: EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor*
  nameWithType.vb: TcpPackage.TcpPackage(TcpCommand, Guid, ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpPackage.TcpPackage(EventStore.Core.Services.Transport.Tcp.TcpCommand, Guid, ArraySegment(Of System.Byte))
  name.vb: TcpPackage(TcpCommand, Guid, ArraySegment(Of Byte))
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,EventStore.Core.Services.Transport.Tcp.TcpFlags,Guid,System.String,System.String,System.Byte[])
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,EventStore.Core.Services.Transport.Tcp.TcpFlags,Guid,System.String,System.String,System.Byte[])
  id: '#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,EventStore.Core.Services.Transport.Tcp.TcpFlags,Guid,System.String,System.String,System.Byte[])'
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: TcpPackage(TcpCommand, TcpFlags, Guid, String, String, Byte[])
  nameWithType: TcpPackage.TcpPackage(TcpCommand, TcpFlags, Guid, String, String, Byte[])
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.TcpPackage(EventStore.Core.Services.Transport.Tcp.TcpCommand, EventStore.Core.Services.Transport.Tcp.TcpFlags, Guid, System.String, System.String, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 78
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public TcpPackage(TcpCommand command, TcpFlags flags, Guid correlationId, string login, string password, byte[] data)
    parameters:
    - id: command
      type: EventStore.Core.Services.Transport.Tcp.TcpCommand
    - id: flags
      type: EventStore.Core.Services.Transport.Tcp.TcpFlags
    - id: correlationId
      type: Guid
    - id: login
      type: System.String
    - id: password
      type: System.String
    - id: data
      type: System.Byte[]
    content.vb: Public Sub New(command As TcpCommand, flags As TcpFlags, correlationId As Guid, login As String, password As String, data As Byte())
  overload: EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor*
  nameWithType.vb: TcpPackage.TcpPackage(TcpCommand, TcpFlags, Guid, String, String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpPackage.TcpPackage(EventStore.Core.Services.Transport.Tcp.TcpCommand, EventStore.Core.Services.Transport.Tcp.TcpFlags, Guid, System.String, System.String, System.Byte())
  name.vb: TcpPackage(TcpCommand, TcpFlags, Guid, String, String, Byte())
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,EventStore.Core.Services.Transport.Tcp.TcpFlags,Guid,System.String,System.String,ArraySegment{System.Byte})
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,EventStore.Core.Services.Transport.Tcp.TcpFlags,Guid,System.String,System.String,ArraySegment{System.Byte})
  id: '#ctor(EventStore.Core.Services.Transport.Tcp.TcpCommand,EventStore.Core.Services.Transport.Tcp.TcpFlags,Guid,System.String,System.String,ArraySegment{System.Byte})'
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: TcpPackage(TcpCommand, TcpFlags, Guid, String, String, ArraySegment<Byte>)
  nameWithType: TcpPackage.TcpPackage(TcpCommand, TcpFlags, Guid, String, String, ArraySegment<Byte>)
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.TcpPackage(EventStore.Core.Services.Transport.Tcp.TcpCommand, EventStore.Core.Services.Transport.Tcp.TcpFlags, Guid, System.String, System.String, ArraySegment<System.Byte>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 83
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public TcpPackage(TcpCommand command, TcpFlags flags, Guid correlationId, string login, string password, ArraySegment<byte> data)
    parameters:
    - id: command
      type: EventStore.Core.Services.Transport.Tcp.TcpCommand
    - id: flags
      type: EventStore.Core.Services.Transport.Tcp.TcpFlags
    - id: correlationId
      type: Guid
    - id: login
      type: System.String
    - id: password
      type: System.String
    - id: data
      type: ArraySegment{System.Byte}
    content.vb: Public Sub New(command As TcpCommand, flags As TcpFlags, correlationId As Guid, login As String, password As String, data As ArraySegment(Of Byte))
  overload: EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor*
  nameWithType.vb: TcpPackage.TcpPackage(TcpCommand, TcpFlags, Guid, String, String, ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Tcp.TcpPackage.TcpPackage(EventStore.Core.Services.Transport.Tcp.TcpCommand, EventStore.Core.Services.Transport.Tcp.TcpFlags, Guid, System.String, System.String, ArraySegment(Of System.Byte))
  name.vb: TcpPackage(TcpCommand, TcpFlags, Guid, String, String, ArraySegment(Of Byte))
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.AsByteArray
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpPackage.AsByteArray
  id: AsByteArray
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: AsByteArray()
  nameWithType: TcpPackage.AsByteArray()
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.AsByteArray()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: AsByteArray
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 104
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public byte[] AsByteArray()
    return:
      type: System.Byte[]
    content.vb: Public Function AsByteArray As Byte()
  overload: EventStore.Core.Services.Transport.Tcp.TcpPackage.AsByteArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.AsArraySegment
  commentId: M:EventStore.Core.Services.Transport.Tcp.TcpPackage.AsArraySegment
  id: AsArraySegment
  parent: EventStore.Core.Services.Transport.Tcp.TcpPackage
  langs:
  - csharp
  - vb
  name: AsArraySegment()
  nameWithType: TcpPackage.AsArraySegment()
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.AsArraySegment()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: AsArraySegment
    path: ../EventStore/src/EventStore.Core/Services/Transport/Tcp/TcpPackage.cs
    startLine: 137
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Tcp
  syntax:
    content: public ArraySegment<byte> AsArraySegment()
    return:
      type: ArraySegment{System.Byte}
    content.vb: Public Function AsArraySegment As ArraySegment(Of Byte)
  overload: EventStore.Core.Services.Transport.Tcp.TcpPackage.AsArraySegment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<TcpPackage>()
  nameWithType: EnumExtensions.EnumValueName<TcpPackage>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Transport.Tcp.TcpPackage>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of TcpPackage)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Transport.Tcp.TcpPackage)()
  name.vb: EnumValueName(Of TcpPackage)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<TcpPackage>
    nameWithType: EnumExtensions.EnumValueName<TcpPackage>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Transport.Tcp.TcpPackage>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of TcpPackage)
    nameWithType: EnumExtensions.EnumValueName(Of TcpPackage)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Transport.Tcp.TcpPackage)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpPackage>()
  nameWithType: ProtobufExtensions.Serialize<TcpPackage>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Tcp.TcpPackage>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpPackage)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Tcp.TcpPackage)()
  name.vb: Serialize(Of TcpPackage)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpPackage>
    nameWithType: ProtobufExtensions.Serialize<TcpPackage>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Tcp.TcpPackage>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpPackage)
    nameWithType: ProtobufExtensions.Serialize(Of TcpPackage)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Tcp.TcpPackage)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpPackage>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpPackage>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Tcp.TcpPackage>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpPackage)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Tcp.TcpPackage)()
  name.vb: SerializeToArray(Of TcpPackage)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpPackage>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpPackage>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Tcp.TcpPackage>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpPackage)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpPackage)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Tcp.TcpPackage)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.Transport.Tcp.TcpCommand
  commentId: T:EventStore.Core.Services.Transport.Tcp.TcpCommand
  parent: EventStore.Core.Services.Transport.Tcp
  name: TcpCommand
  nameWithType: TcpCommand
  fullName: EventStore.Core.Services.Transport.Tcp.TcpCommand
- uid: EventStore.Core.Services.Transport.Tcp.TcpFlags
  commentId: T:EventStore.Core.Services.Transport.Tcp.TcpFlags
  parent: EventStore.Core.Services.Transport.Tcp
  name: TcpFlags
  nameWithType: TcpFlags
  fullName: EventStore.Core.Services.Transport.Tcp.TcpFlags
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ArraySegment{System.Byte}
  commentId: '!:ArraySegment{System.Byte}'
  definition: ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ArraySegment`1
  isExternal: true
  name: ArraySegment<>
  nameWithType: ArraySegment<>
  fullName: ArraySegment<>
  nameWithType.vb: ArraySegment(Of )
  fullName.vb: ArraySegment(Of )
  name.vb: ArraySegment(Of )
  spec.csharp:
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.FromArraySegment*
  commentId: Overload:EventStore.Core.Services.Transport.Tcp.TcpPackage.FromArraySegment
  name: FromArraySegment
  nameWithType: TcpPackage.FromArraySegment
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.FromArraySegment
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage
  commentId: T:EventStore.Core.Services.Transport.Tcp.TcpPackage
  parent: EventStore.Core.Services.Transport.Tcp
  name: TcpPackage
  nameWithType: TcpPackage
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Tcp.TcpPackage.#ctor
  name: TcpPackage
  nameWithType: TcpPackage.TcpPackage
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.TcpPackage
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.AsByteArray*
  commentId: Overload:EventStore.Core.Services.Transport.Tcp.TcpPackage.AsByteArray
  name: AsByteArray
  nameWithType: TcpPackage.AsByteArray
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.AsByteArray
- uid: EventStore.Core.Services.Transport.Tcp.TcpPackage.AsArraySegment*
  commentId: Overload:EventStore.Core.Services.Transport.Tcp.TcpPackage.AsArraySegment
  name: AsArraySegment
  nameWithType: TcpPackage.AsArraySegment
  fullName: EventStore.Core.Services.Transport.Tcp.TcpPackage.AsArraySegment

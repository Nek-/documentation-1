### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder
  commentId: T:EventStore.Core.Services.VNode.VNodeFSMBuilder
  id: VNodeFSMBuilder
  parent: EventStore.Core.Services.VNode
  children:
  - EventStore.Core.Services.VNode.VNodeFSMBuilder.#ctor(Func{EventStore.Core.Data.VNodeState})
  - EventStore.Core.Services.VNode.VNodeFSMBuilder.Build
  - EventStore.Core.Services.VNode.VNodeFSMBuilder.InAllStatesExcept(EventStore.Core.Data.VNodeState[])
  - EventStore.Core.Services.VNode.VNodeFSMBuilder.InAnyState
  - EventStore.Core.Services.VNode.VNodeFSMBuilder.InState(EventStore.Core.Data.VNodeState)
  - EventStore.Core.Services.VNode.VNodeFSMBuilder.InStates(EventStore.Core.Data.VNodeState[])
  langs:
  - csharp
  - vb
  name: VNodeFSMBuilder
  nameWithType: VNodeFSMBuilder
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: VNodeFSMBuilder
    path: ../EventStore/src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  summary: "\nBuilder syntax for constructing <xref href=\"EventStore.Core.Services.VNode.VNodeFSM\" data-throw-if-not-resolved=\"false\"></xref> in the code\n"
  example: []
  syntax:
    content: 'public class VNodeFSMBuilder : object'
    content.vb: >-
      Public Class VNodeFSMBuilder
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.VNode.VNodeFSMBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.VNode.VNodeFSMBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.#ctor(Func{EventStore.Core.Data.VNodeState})
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMBuilder.#ctor(Func{EventStore.Core.Data.VNodeState})
  id: '#ctor(Func{EventStore.Core.Data.VNodeState})'
  parent: EventStore.Core.Services.VNode.VNodeFSMBuilder
  langs:
  - csharp
  - vb
  name: VNodeFSMBuilder(Func<VNodeState>)
  nameWithType: VNodeFSMBuilder.VNodeFSMBuilder(Func<VNodeState>)
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.VNodeFSMBuilder(Func<EventStore.Core.Data.VNodeState>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMBuilder(Func<VNodeState> getState)
    parameters:
    - id: getState
      type: Func{EventStore.Core.Data.VNodeState}
    content.vb: Public Sub New(getState As Func(Of VNodeState))
  overload: EventStore.Core.Services.VNode.VNodeFSMBuilder.#ctor*
  nameWithType.vb: VNodeFSMBuilder.VNodeFSMBuilder(Func(Of VNodeState))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.VNode.VNodeFSMBuilder.VNodeFSMBuilder(Func(Of EventStore.Core.Data.VNodeState))
  name.vb: VNodeFSMBuilder(Func(Of VNodeState))
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAnyState
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMBuilder.InAnyState
  id: InAnyState
  parent: EventStore.Core.Services.VNode.VNodeFSMBuilder
  langs:
  - csharp
  - vb
  name: InAnyState()
  nameWithType: VNodeFSMBuilder.InAnyState()
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAnyState()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: InAnyState
    path: ../EventStore/src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
    startLine: 57
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMStatesDefinition InAnyState()
    return:
      type: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
    content.vb: Public Function InAnyState As VNodeFSMStatesDefinition
  overload: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAnyState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.InState(EventStore.Core.Data.VNodeState)
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMBuilder.InState(EventStore.Core.Data.VNodeState)
  id: InState(EventStore.Core.Data.VNodeState)
  parent: EventStore.Core.Services.VNode.VNodeFSMBuilder
  langs:
  - csharp
  - vb
  name: InState(VNodeState)
  nameWithType: VNodeFSMBuilder.InState(VNodeState)
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.InState(EventStore.Core.Data.VNodeState)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: InState
    path: ../EventStore/src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
    startLine: 62
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMStatesDefinition InState(VNodeState state)
    parameters:
    - id: state
      type: EventStore.Core.Data.VNodeState
    return:
      type: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
    content.vb: Public Function InState(state As VNodeState) As VNodeFSMStatesDefinition
  overload: EventStore.Core.Services.VNode.VNodeFSMBuilder.InState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.InStates(EventStore.Core.Data.VNodeState[])
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMBuilder.InStates(EventStore.Core.Data.VNodeState[])
  id: InStates(EventStore.Core.Data.VNodeState[])
  parent: EventStore.Core.Services.VNode.VNodeFSMBuilder
  langs:
  - csharp
  - vb
  name: InStates(VNodeState[])
  nameWithType: VNodeFSMBuilder.InStates(VNodeState[])
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.InStates(EventStore.Core.Data.VNodeState[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: InStates
    path: ../EventStore/src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
    startLine: 66
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMStatesDefinition InStates(params VNodeState[] states)
    parameters:
    - id: states
      type: EventStore.Core.Data.VNodeState[]
    return:
      type: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
    content.vb: Public Function InStates(ParamArray states As VNodeState()) As VNodeFSMStatesDefinition
  overload: EventStore.Core.Services.VNode.VNodeFSMBuilder.InStates*
  nameWithType.vb: VNodeFSMBuilder.InStates(VNodeState())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.VNode.VNodeFSMBuilder.InStates(EventStore.Core.Data.VNodeState())
  name.vb: InStates(VNodeState())
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAllStatesExcept(EventStore.Core.Data.VNodeState[])
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMBuilder.InAllStatesExcept(EventStore.Core.Data.VNodeState[])
  id: InAllStatesExcept(EventStore.Core.Data.VNodeState[])
  parent: EventStore.Core.Services.VNode.VNodeFSMBuilder
  langs:
  - csharp
  - vb
  name: InAllStatesExcept(VNodeState[])
  nameWithType: VNodeFSMBuilder.InAllStatesExcept(VNodeState[])
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAllStatesExcept(EventStore.Core.Data.VNodeState[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: InAllStatesExcept
    path: ../EventStore/src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
    startLine: 70
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMStatesDefinition InAllStatesExcept(VNodeState[] states)
    parameters:
    - id: states
      type: EventStore.Core.Data.VNodeState[]
    return:
      type: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
    content.vb: Public Function InAllStatesExcept(states As VNodeState()) As VNodeFSMStatesDefinition
  overload: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAllStatesExcept*
  nameWithType.vb: VNodeFSMBuilder.InAllStatesExcept(VNodeState())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAllStatesExcept(EventStore.Core.Data.VNodeState())
  name.vb: InAllStatesExcept(VNodeState())
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.Build
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMBuilder.Build
  id: Build
  parent: EventStore.Core.Services.VNode.VNodeFSMBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: VNodeFSMBuilder.Build()
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.Build()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Build
    path: ../EventStore/src/EventStore.Core/Services/VNode/VNodeFSMBuilder.cs
    startLine: 77
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSM Build()
    return:
      type: EventStore.Core.Services.VNode.VNodeFSM
    content.vb: Public Function Build As VNodeFSM
  overload: EventStore.Core.Services.VNode.VNodeFSMBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.VNode.VNodeFSM
  commentId: T:EventStore.Core.Services.VNode.VNodeFSM
  parent: EventStore.Core.Services.VNode
  name: VNodeFSM
  nameWithType: VNodeFSM
  fullName: EventStore.Core.Services.VNode.VNodeFSM
- uid: EventStore.Core.Services.VNode
  commentId: N:EventStore.Core.Services.VNode
  name: EventStore.Core.Services.VNode
  nameWithType: EventStore.Core.Services.VNode
  fullName: EventStore.Core.Services.VNode
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<VNodeFSMBuilder>()
  nameWithType: ProtobufExtensions.Serialize<VNodeFSMBuilder>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.VNode.VNodeFSMBuilder>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of VNodeFSMBuilder)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.VNode.VNodeFSMBuilder)()
  name.vb: Serialize(Of VNodeFSMBuilder)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<VNodeFSMBuilder>
    nameWithType: ProtobufExtensions.Serialize<VNodeFSMBuilder>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.VNode.VNodeFSMBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of VNodeFSMBuilder)
    nameWithType: ProtobufExtensions.Serialize(Of VNodeFSMBuilder)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.VNode.VNodeFSMBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<VNodeFSMBuilder>()
  nameWithType: ProtobufExtensions.SerializeToArray<VNodeFSMBuilder>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.VNode.VNodeFSMBuilder>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of VNodeFSMBuilder)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.VNode.VNodeFSMBuilder)()
  name.vb: SerializeToArray(Of VNodeFSMBuilder)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<VNodeFSMBuilder>
    nameWithType: ProtobufExtensions.SerializeToArray<VNodeFSMBuilder>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.VNode.VNodeFSMBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of VNodeFSMBuilder)
    nameWithType: ProtobufExtensions.SerializeToArray(Of VNodeFSMBuilder)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.VNode.VNodeFSMBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.#ctor*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMBuilder.#ctor
  name: VNodeFSMBuilder
  nameWithType: VNodeFSMBuilder.VNodeFSMBuilder
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.VNodeFSMBuilder
- uid: Func{EventStore.Core.Data.VNodeState}
  commentId: '!:Func{EventStore.Core.Data.VNodeState}'
  definition: Func`1
  name: Func<VNodeState>
  nameWithType: Func<VNodeState>
  fullName: Func<EventStore.Core.Data.VNodeState>
  nameWithType.vb: Func(Of VNodeState)
  fullName.vb: Func(Of EventStore.Core.Data.VNodeState)
  name.vb: Func(Of VNodeState)
  spec.csharp:
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Data.VNodeState
    name: VNodeState
    nameWithType: VNodeState
    fullName: EventStore.Core.Data.VNodeState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Data.VNodeState
    name: VNodeState
    nameWithType: VNodeState
    fullName: EventStore.Core.Data.VNodeState
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`1
  isExternal: true
  name: Func<>
  nameWithType: Func<>
  fullName: Func<>
  nameWithType.vb: Func(Of )
  fullName.vb: Func(Of )
  name.vb: Func(Of )
  spec.csharp:
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAnyState*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMBuilder.InAnyState
  name: InAnyState
  nameWithType: VNodeFSMBuilder.InAnyState
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAnyState
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  commentId: T:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  parent: EventStore.Core.Services.VNode
  name: VNodeFSMStatesDefinition
  nameWithType: VNodeFSMStatesDefinition
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.InState*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMBuilder.InState
  name: InState
  nameWithType: VNodeFSMBuilder.InState
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.InState
- uid: EventStore.Core.Data.VNodeState
  commentId: T:EventStore.Core.Data.VNodeState
  parent: EventStore.Core.Data
  name: VNodeState
  nameWithType: VNodeState
  fullName: EventStore.Core.Data.VNodeState
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.InStates*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMBuilder.InStates
  name: InStates
  nameWithType: VNodeFSMBuilder.InStates
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.InStates
- uid: EventStore.Core.Data.VNodeState[]
  isExternal: true
  name: VNodeState[]
  nameWithType: VNodeState[]
  fullName: EventStore.Core.Data.VNodeState[]
  nameWithType.vb: VNodeState()
  fullName.vb: EventStore.Core.Data.VNodeState()
  name.vb: VNodeState()
  spec.csharp:
  - uid: EventStore.Core.Data.VNodeState
    name: VNodeState
    nameWithType: VNodeState
    fullName: EventStore.Core.Data.VNodeState
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Data.VNodeState
    name: VNodeState
    nameWithType: VNodeState
    fullName: EventStore.Core.Data.VNodeState
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAllStatesExcept*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMBuilder.InAllStatesExcept
  name: InAllStatesExcept
  nameWithType: VNodeFSMBuilder.InAllStatesExcept
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.InAllStatesExcept
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder.Build*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMBuilder.Build
  name: Build
  nameWithType: VNodeFSMBuilder.Build
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder.Build

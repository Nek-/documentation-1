### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  commentId: T:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  id: VNodeFSMStatesDefinition
  parent: EventStore.Core.Services.VNode
  children:
  - EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.#ctor(EventStore.Core.Services.VNode.VNodeFSMBuilder,EventStore.Core.Data.VNodeState[])
  - EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.Build
  - EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAllStatesExcept(EventStore.Core.Data.VNodeState[])
  - EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAnyState
  - EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InState(EventStore.Core.Data.VNodeState)
  - EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InStates(EventStore.Core.Data.VNodeState[])
  - EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.When``1
  - EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.WhenOther
  langs:
  - csharp
  - vb
  name: VNodeFSMStatesDefinition
  nameWithType: VNodeFSMStatesDefinition
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  type: Class
  source:
    id: VNodeFSMStatesDefinition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/VNode/VNodeFSMStatesDefinition.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public class VNodeFSMStatesDefinition
    content.vb: Public Class VNodeFSMStatesDefinition
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.#ctor(EventStore.Core.Services.VNode.VNodeFSMBuilder,EventStore.Core.Data.VNodeState[])
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.#ctor(EventStore.Core.Services.VNode.VNodeFSMBuilder,EventStore.Core.Data.VNodeState[])
  id: '#ctor(EventStore.Core.Services.VNode.VNodeFSMBuilder,EventStore.Core.Data.VNodeState[])'
  parent: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  langs:
  - csharp
  - vb
  name: VNodeFSMStatesDefinition(VNodeFSMBuilder, VNodeState[])
  nameWithType: VNodeFSMStatesDefinition.VNodeFSMStatesDefinition(VNodeFSMBuilder, VNodeState[])
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.VNodeFSMStatesDefinition(EventStore.Core.Services.VNode.VNodeFSMBuilder, EventStore.Core.Data.VNodeState[])
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/VNode/VNodeFSMStatesDefinition.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMStatesDefinition(VNodeFSMBuilder fsm, params VNodeState[] states)
    parameters:
    - id: fsm
      type: EventStore.Core.Services.VNode.VNodeFSMBuilder
    - id: states
      type: EventStore.Core.Data.VNodeState[]
    content.vb: Public Sub New(fsm As VNodeFSMBuilder, ParamArray states As VNodeState())
  overload: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.#ctor*
  nameWithType.vb: VNodeFSMStatesDefinition.VNodeFSMStatesDefinition(VNodeFSMBuilder, VNodeState())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.VNodeFSMStatesDefinition(EventStore.Core.Services.VNode.VNodeFSMBuilder, EventStore.Core.Data.VNodeState())
  name.vb: VNodeFSMStatesDefinition(VNodeFSMBuilder, VNodeState())
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.When``1
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.When``1
  id: When``1
  parent: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  langs:
  - csharp
  - vb
  name: When<TMessage>()
  nameWithType: VNodeFSMStatesDefinition.When<TMessage>()
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.When<TMessage>()
  type: Method
  source:
    id: When
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/VNode/VNodeFSMStatesDefinition.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: >-
      public VNodeFSMHandling<TMessage> When<TMessage>()
          where TMessage : Message
    typeParameters:
    - id: TMessage
    return:
      type: EventStore.Core.Services.VNode.VNodeFSMHandling{{TMessage}}
    content.vb: Public Function When(Of TMessage As Message) As VNodeFSMHandling(Of TMessage)
  overload: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.When*
  nameWithType.vb: VNodeFSMStatesDefinition.When(Of TMessage)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.When(Of TMessage)()
  name.vb: When(Of TMessage)()
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.WhenOther
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.WhenOther
  id: WhenOther
  parent: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  langs:
  - csharp
  - vb
  name: WhenOther()
  nameWithType: VNodeFSMStatesDefinition.WhenOther()
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.WhenOther()
  type: Method
  source:
    id: WhenOther
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/VNode/VNodeFSMStatesDefinition.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMHandling<Message> WhenOther()
    return:
      type: EventStore.Core.Services.VNode.VNodeFSMHandling{EventStore.Core.Messaging.Message}
    content.vb: Public Function WhenOther As VNodeFSMHandling(Of Message)
  overload: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.WhenOther*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAnyState
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAnyState
  id: InAnyState
  parent: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  langs:
  - csharp
  - vb
  name: InAnyState()
  nameWithType: VNodeFSMStatesDefinition.InAnyState()
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAnyState()
  type: Method
  source:
    id: InAnyState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/VNode/VNodeFSMStatesDefinition.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMStatesDefinition InAnyState()
    return:
      type: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
    content.vb: Public Function InAnyState As VNodeFSMStatesDefinition
  overload: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAnyState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InState(EventStore.Core.Data.VNodeState)
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InState(EventStore.Core.Data.VNodeState)
  id: InState(EventStore.Core.Data.VNodeState)
  parent: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  langs:
  - csharp
  - vb
  name: InState(VNodeState)
  nameWithType: VNodeFSMStatesDefinition.InState(VNodeState)
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InState(EventStore.Core.Data.VNodeState)
  type: Method
  source:
    id: InState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/VNode/VNodeFSMStatesDefinition.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMStatesDefinition InState(VNodeState state)
    parameters:
    - id: state
      type: EventStore.Core.Data.VNodeState
    return:
      type: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
    content.vb: Public Function InState(state As VNodeState) As VNodeFSMStatesDefinition
  overload: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InStates(EventStore.Core.Data.VNodeState[])
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InStates(EventStore.Core.Data.VNodeState[])
  id: InStates(EventStore.Core.Data.VNodeState[])
  parent: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  langs:
  - csharp
  - vb
  name: InStates(VNodeState[])
  nameWithType: VNodeFSMStatesDefinition.InStates(VNodeState[])
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InStates(EventStore.Core.Data.VNodeState[])
  type: Method
  source:
    id: InStates
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/VNode/VNodeFSMStatesDefinition.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMStatesDefinition InStates(params VNodeState[] states)
    parameters:
    - id: states
      type: EventStore.Core.Data.VNodeState[]
    return:
      type: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
    content.vb: Public Function InStates(ParamArray states As VNodeState()) As VNodeFSMStatesDefinition
  overload: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InStates*
  nameWithType.vb: VNodeFSMStatesDefinition.InStates(VNodeState())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InStates(EventStore.Core.Data.VNodeState())
  name.vb: InStates(VNodeState())
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAllStatesExcept(EventStore.Core.Data.VNodeState[])
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAllStatesExcept(EventStore.Core.Data.VNodeState[])
  id: InAllStatesExcept(EventStore.Core.Data.VNodeState[])
  parent: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  langs:
  - csharp
  - vb
  name: InAllStatesExcept(VNodeState[])
  nameWithType: VNodeFSMStatesDefinition.InAllStatesExcept(VNodeState[])
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAllStatesExcept(EventStore.Core.Data.VNodeState[])
  type: Method
  source:
    id: InAllStatesExcept
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/VNode/VNodeFSMStatesDefinition.cs
    startLine: 34
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSMStatesDefinition InAllStatesExcept(params VNodeState[] states)
    parameters:
    - id: states
      type: EventStore.Core.Data.VNodeState[]
    return:
      type: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
    content.vb: Public Function InAllStatesExcept(ParamArray states As VNodeState()) As VNodeFSMStatesDefinition
  overload: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAllStatesExcept*
  nameWithType.vb: VNodeFSMStatesDefinition.InAllStatesExcept(VNodeState())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAllStatesExcept(EventStore.Core.Data.VNodeState())
  name.vb: InAllStatesExcept(VNodeState())
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.Build
  commentId: M:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.Build
  id: Build
  parent: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: VNodeFSMStatesDefinition.Build()
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.Build()
  type: Method
  source:
    id: Build
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/VNode/VNodeFSMStatesDefinition.cs
    startLine: 39
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.VNode
  syntax:
    content: public VNodeFSM Build()
    return:
      type: EventStore.Core.Services.VNode.VNodeFSM
    content.vb: Public Function Build As VNodeFSM
  overload: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.VNode
  commentId: N:EventStore.Core.Services.VNode
  name: EventStore.Core.Services.VNode
  nameWithType: EventStore.Core.Services.VNode
  fullName: EventStore.Core.Services.VNode
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<VNodeFSMStatesDefinition>()
  nameWithType: ProtobufExtensions.Serialize<VNodeFSMStatesDefinition>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.VNode.VNodeFSMStatesDefinition>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of VNodeFSMStatesDefinition)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.VNode.VNodeFSMStatesDefinition)()
  name.vb: Serialize(Of VNodeFSMStatesDefinition)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<VNodeFSMStatesDefinition>
    nameWithType: ProtobufExtensions.Serialize<VNodeFSMStatesDefinition>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.VNode.VNodeFSMStatesDefinition>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of VNodeFSMStatesDefinition)
    nameWithType: ProtobufExtensions.Serialize(Of VNodeFSMStatesDefinition)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.VNode.VNodeFSMStatesDefinition)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<VNodeFSMStatesDefinition>()
  nameWithType: ProtobufExtensions.SerializeToArray<VNodeFSMStatesDefinition>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.VNode.VNodeFSMStatesDefinition>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of VNodeFSMStatesDefinition)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.VNode.VNodeFSMStatesDefinition)()
  name.vb: SerializeToArray(Of VNodeFSMStatesDefinition)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<VNodeFSMStatesDefinition>
    nameWithType: ProtobufExtensions.SerializeToArray<VNodeFSMStatesDefinition>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.VNode.VNodeFSMStatesDefinition>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of VNodeFSMStatesDefinition)
    nameWithType: ProtobufExtensions.SerializeToArray(Of VNodeFSMStatesDefinition)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.VNode.VNodeFSMStatesDefinition)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.#ctor*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.#ctor
  name: VNodeFSMStatesDefinition
  nameWithType: VNodeFSMStatesDefinition.VNodeFSMStatesDefinition
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.VNodeFSMStatesDefinition
- uid: EventStore.Core.Services.VNode.VNodeFSMBuilder
  commentId: T:EventStore.Core.Services.VNode.VNodeFSMBuilder
  parent: EventStore.Core.Services.VNode
  name: VNodeFSMBuilder
  nameWithType: VNodeFSMBuilder
  fullName: EventStore.Core.Services.VNode.VNodeFSMBuilder
- uid: EventStore.Core.Data.VNodeState[]
  isExternal: true
  name: VNodeState[]
  nameWithType: VNodeState[]
  fullName: EventStore.Core.Data.VNodeState[]
  nameWithType.vb: VNodeState()
  fullName.vb: EventStore.Core.Data.VNodeState()
  name.vb: VNodeState()
  spec.csharp:
  - uid: EventStore.Core.Data.VNodeState
    name: VNodeState
    nameWithType: VNodeState
    fullName: EventStore.Core.Data.VNodeState
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Data.VNodeState
    name: VNodeState
    nameWithType: VNodeState
    fullName: EventStore.Core.Data.VNodeState
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.When*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.When
  name: When
  nameWithType: VNodeFSMStatesDefinition.When
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.When
- uid: EventStore.Core.Services.VNode.VNodeFSMHandling{{TMessage}}
  commentId: T:EventStore.Core.Services.VNode.VNodeFSMHandling{``0}
  parent: EventStore.Core.Services.VNode
  definition: EventStore.Core.Services.VNode.VNodeFSMHandling`1
  name: VNodeFSMHandling<TMessage>
  nameWithType: VNodeFSMHandling<TMessage>
  fullName: EventStore.Core.Services.VNode.VNodeFSMHandling<TMessage>
  nameWithType.vb: VNodeFSMHandling(Of TMessage)
  fullName.vb: EventStore.Core.Services.VNode.VNodeFSMHandling(Of TMessage)
  name.vb: VNodeFSMHandling(Of TMessage)
  spec.csharp:
  - uid: EventStore.Core.Services.VNode.VNodeFSMHandling`1
    name: VNodeFSMHandling
    nameWithType: VNodeFSMHandling
    fullName: EventStore.Core.Services.VNode.VNodeFSMHandling
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Services.VNode.VNodeFSMHandling`1
    name: VNodeFSMHandling
    nameWithType: VNodeFSMHandling
    fullName: EventStore.Core.Services.VNode.VNodeFSMHandling
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.VNode.VNodeFSMHandling`1
  commentId: T:EventStore.Core.Services.VNode.VNodeFSMHandling`1
  name: VNodeFSMHandling<TMessage>
  nameWithType: VNodeFSMHandling<TMessage>
  fullName: EventStore.Core.Services.VNode.VNodeFSMHandling<TMessage>
  nameWithType.vb: VNodeFSMHandling(Of TMessage)
  fullName.vb: EventStore.Core.Services.VNode.VNodeFSMHandling(Of TMessage)
  name.vb: VNodeFSMHandling(Of TMessage)
  spec.csharp:
  - uid: EventStore.Core.Services.VNode.VNodeFSMHandling`1
    name: VNodeFSMHandling
    nameWithType: VNodeFSMHandling
    fullName: EventStore.Core.Services.VNode.VNodeFSMHandling
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Services.VNode.VNodeFSMHandling`1
    name: VNodeFSMHandling
    nameWithType: VNodeFSMHandling
    fullName: EventStore.Core.Services.VNode.VNodeFSMHandling
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.WhenOther*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.WhenOther
  name: WhenOther
  nameWithType: VNodeFSMStatesDefinition.WhenOther
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.WhenOther
- uid: EventStore.Core.Services.VNode.VNodeFSMHandling{EventStore.Core.Messaging.Message}
  commentId: T:EventStore.Core.Services.VNode.VNodeFSMHandling{EventStore.Core.Messaging.Message}
  parent: EventStore.Core.Services.VNode
  definition: EventStore.Core.Services.VNode.VNodeFSMHandling`1
  name: VNodeFSMHandling<Message>
  nameWithType: VNodeFSMHandling<Message>
  fullName: EventStore.Core.Services.VNode.VNodeFSMHandling<EventStore.Core.Messaging.Message>
  nameWithType.vb: VNodeFSMHandling(Of Message)
  fullName.vb: EventStore.Core.Services.VNode.VNodeFSMHandling(Of EventStore.Core.Messaging.Message)
  name.vb: VNodeFSMHandling(Of Message)
  spec.csharp:
  - uid: EventStore.Core.Services.VNode.VNodeFSMHandling`1
    name: VNodeFSMHandling
    nameWithType: VNodeFSMHandling
    fullName: EventStore.Core.Services.VNode.VNodeFSMHandling
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Services.VNode.VNodeFSMHandling`1
    name: VNodeFSMHandling
    nameWithType: VNodeFSMHandling
    fullName: EventStore.Core.Services.VNode.VNodeFSMHandling
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAnyState*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAnyState
  name: InAnyState
  nameWithType: VNodeFSMStatesDefinition.InAnyState
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAnyState
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  commentId: T:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
  parent: EventStore.Core.Services.VNode
  name: VNodeFSMStatesDefinition
  nameWithType: VNodeFSMStatesDefinition
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InState*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InState
  name: InState
  nameWithType: VNodeFSMStatesDefinition.InState
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InState
- uid: EventStore.Core.Data.VNodeState
  commentId: T:EventStore.Core.Data.VNodeState
  parent: EventStore.Core.Data
  name: VNodeState
  nameWithType: VNodeState
  fullName: EventStore.Core.Data.VNodeState
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InStates*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InStates
  name: InStates
  nameWithType: VNodeFSMStatesDefinition.InStates
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InStates
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAllStatesExcept*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAllStatesExcept
  name: InAllStatesExcept
  nameWithType: VNodeFSMStatesDefinition.InAllStatesExcept
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.InAllStatesExcept
- uid: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.Build*
  commentId: Overload:EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.Build
  name: Build
  nameWithType: VNodeFSMStatesDefinition.Build
  fullName: EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.Build
- uid: EventStore.Core.Services.VNode.VNodeFSM
  commentId: T:EventStore.Core.Services.VNode.VNodeFSM
  parent: EventStore.Core.Services.VNode
  name: VNodeFSM
  nameWithType: VNodeFSM
  fullName: EventStore.Core.Services.VNode.VNodeFSM

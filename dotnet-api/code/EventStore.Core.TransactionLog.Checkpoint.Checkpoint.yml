### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Checkpoint.Checkpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.Checkpoint
  id: Checkpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  children:
  - EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Chaser
  - EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Epoch
  - EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Replication
  - EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Truncate
  - EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Writer
  langs:
  - csharp
  - vb
  name: Checkpoint
  nameWithType: Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.Checkpoint
  type: Class
  source:
    id: Checkpoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/Checkpoint.cs
    startLine: 1
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public static class Checkpoint
    content.vb: Public Module Checkpoint
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Writer
  commentId: F:EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Writer
  id: Writer
  parent: EventStore.Core.TransactionLog.Checkpoint.Checkpoint
  langs:
  - csharp
  - vb
  name: Writer
  nameWithType: Checkpoint.Writer
  fullName: EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Writer
  type: Field
  source:
    id: Writer
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/Checkpoint.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public const string Writer = "writer"
    return:
      type: System.String
    content.vb: Public Const Writer As String = "writer"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Chaser
  commentId: F:EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Chaser
  id: Chaser
  parent: EventStore.Core.TransactionLog.Checkpoint.Checkpoint
  langs:
  - csharp
  - vb
  name: Chaser
  nameWithType: Checkpoint.Chaser
  fullName: EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Chaser
  type: Field
  source:
    id: Chaser
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/Checkpoint.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public const string Chaser = "chaser"
    return:
      type: System.String
    content.vb: Public Const Chaser As String = "chaser"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Epoch
  commentId: F:EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Epoch
  id: Epoch
  parent: EventStore.Core.TransactionLog.Checkpoint.Checkpoint
  langs:
  - csharp
  - vb
  name: Epoch
  nameWithType: Checkpoint.Epoch
  fullName: EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Epoch
  type: Field
  source:
    id: Epoch
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/Checkpoint.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public const string Epoch = "epoch"
    return:
      type: System.String
    content.vb: Public Const Epoch As String = "epoch"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Truncate
  commentId: F:EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Truncate
  id: Truncate
  parent: EventStore.Core.TransactionLog.Checkpoint.Checkpoint
  langs:
  - csharp
  - vb
  name: Truncate
  nameWithType: Checkpoint.Truncate
  fullName: EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Truncate
  type: Field
  source:
    id: Truncate
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/Checkpoint.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public const string Truncate = "truncate"
    return:
      type: System.String
    content.vb: Public Const Truncate As String = "truncate"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Replication
  commentId: F:EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Replication
  id: Replication
  parent: EventStore.Core.TransactionLog.Checkpoint.Checkpoint
  langs:
  - csharp
  - vb
  name: Replication
  nameWithType: Checkpoint.Replication
  fullName: EventStore.Core.TransactionLog.Checkpoint.Checkpoint.Replication
  type: Field
  source:
    id: Replication
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/Checkpoint.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public const string Replication = "replication"
    return:
      type: System.String
    content.vb: Public Const Replication As String = "replication"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

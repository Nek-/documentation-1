### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  id: ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  children:
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flushed
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write(System.Int64)
  langs:
  - csharp
  - vb
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  type: Interface
  source:
    id: ICheckpoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/ICheckpoint.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: 'public interface ICheckpoint : IDisposable'
    content.vb: >-
      Public Interface ICheckpoint
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name
  commentId: P:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name
  id: Name
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ICheckpoint.Name
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name
  type: Property
  source:
    id: Name
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/ICheckpoint.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write(System.Int64)
  id: Write(System.Int64)
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  langs:
  - csharp
  - vb
  name: Write(Int64)
  nameWithType: ICheckpoint.Write(Int64)
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write(System.Int64)
  type: Method
  source:
    id: Write
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/ICheckpoint.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: void Write(long checkpoint)
    parameters:
    - id: checkpoint
      type: System.Int64
    content.vb: Sub Write(checkpoint As Long)
  overload: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write*
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
  id: Flush
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: ICheckpoint.Flush()
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush()
  type: Method
  source:
    id: Flush
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/ICheckpoint.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: void Flush()
    content.vb: Sub Flush
  overload: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush*
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
  id: Close
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: ICheckpoint.Close()
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close()
  type: Method
  source:
    id: Close
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/ICheckpoint.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: void Close()
    content.vb: Sub Close
  overload: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close*
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
  id: Read
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: ICheckpoint.Read()
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read()
  type: Method
  source:
    id: Read
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/ICheckpoint.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: long Read()
    return:
      type: System.Int64
    content.vb: Function Read As Long
  overload: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read*
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
  id: ReadNonFlushed
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  langs:
  - csharp
  - vb
  name: ReadNonFlushed()
  nameWithType: ICheckpoint.ReadNonFlushed()
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed()
  type: Method
  source:
    id: ReadNonFlushed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/ICheckpoint.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: long ReadNonFlushed()
    return:
      type: System.Int64
    content.vb: Function ReadNonFlushed As Long
  overload: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed*
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flushed
  commentId: E:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flushed
  id: Flushed
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  langs:
  - csharp
  - vb
  name: Flushed
  nameWithType: ICheckpoint.Flushed
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flushed
  type: Event
  source:
    id: Flushed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/ICheckpoint.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: event Action<long> Flushed
    return:
      type: System.Action{System.Int64}
    content.vb: Event Flushed As Action(Of Long)
references:
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ICheckpoint>()
  nameWithType: ProtobufExtensions.Serialize<ICheckpoint>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Checkpoint.ICheckpoint>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ICheckpoint)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)()
  name.vb: Serialize(Of ICheckpoint)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ICheckpoint>
    nameWithType: ProtobufExtensions.Serialize<ICheckpoint>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Checkpoint.ICheckpoint>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ICheckpoint)
    nameWithType: ProtobufExtensions.Serialize(Of ICheckpoint)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ICheckpoint>()
  nameWithType: ProtobufExtensions.SerializeToArray<ICheckpoint>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Checkpoint.ICheckpoint>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ICheckpoint)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)()
  name.vb: SerializeToArray(Of ICheckpoint)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ICheckpoint>
    nameWithType: ProtobufExtensions.SerializeToArray<ICheckpoint>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Checkpoint.ICheckpoint>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ICheckpoint)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ICheckpoint)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name
  name: Name
  nameWithType: ICheckpoint.Name
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write
  name: Write
  nameWithType: ICheckpoint.Write
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
  name: Flush
  nameWithType: ICheckpoint.Flush
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
  name: Close
  nameWithType: ICheckpoint.Close
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
  name: Read
  nameWithType: ICheckpoint.Read
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
  name: ReadNonFlushed
  nameWithType: ICheckpoint.ReadNonFlushed
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
- uid: System.Action{System.Int64}
  commentId: T:System.Action{System.Int64}
  parent: System
  definition: System.Action`1
  name: Action<Int64>
  nameWithType: Action<Int64>
  fullName: System.Action<System.Int64>
  nameWithType.vb: Action(Of Int64)
  fullName.vb: System.Action(Of System.Int64)
  name.vb: Action(Of Int64)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  id: InMemoryCheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  children:
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor(System.Int64)
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor(System.String,System.Int64)
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Close
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Dispose
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flush
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flushed
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Name
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.OnFlushed(System.Int64)
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Read
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.ReadNonFlushed
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Write(System.Int64)
  langs:
  - csharp
  - vb
  name: InMemoryCheckpoint
  nameWithType: InMemoryCheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  type: Class
  source:
    id: InMemoryCheckpoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: 'public class InMemoryCheckpoint : ICheckpoint, IDisposable'
    content.vb: >-
      Public Class InMemoryCheckpoint
          Implements ICheckpoint, IDisposable
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Name
  commentId: P:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Name
  id: Name
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: InMemoryCheckpoint.Name
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Name
  type: Property
  source:
    id: Name
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Name*
  implements:
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: InMemoryCheckpoint(Int64)
  nameWithType: InMemoryCheckpoint.InMemoryCheckpoint(Int64)
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.InMemoryCheckpoint(System.Int64)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public InMemoryCheckpoint(long initialValue)
    parameters:
    - id: initialValue
      type: System.Int64
    content.vb: Public Sub New(initialValue As Long)
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor
  id: '#ctor'
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: InMemoryCheckpoint()
  nameWithType: InMemoryCheckpoint.InMemoryCheckpoint()
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.InMemoryCheckpoint()
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public InMemoryCheckpoint()
    content.vb: Public Sub New
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor(System.String,System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor(System.String,System.Int64)
  id: '#ctor(System.String,System.Int64)'
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: InMemoryCheckpoint(String, Int64)
  nameWithType: InMemoryCheckpoint.InMemoryCheckpoint(String, Int64)
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.InMemoryCheckpoint(System.String, System.Int64)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public InMemoryCheckpoint(string name, long initValue = 0L)
    parameters:
    - id: name
      type: System.String
    - id: initValue
      type: System.Int64
    content.vb: Public Sub New(name As String, initValue As Long = 0L)
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Write(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Write(System.Int64)
  id: Write(System.Int64)
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: Write(Int64)
  nameWithType: InMemoryCheckpoint.Write(Int64)
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Write(System.Int64)
  type: Method
  source:
    id: Write
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public void Write(long checkpoint)
    parameters:
    - id: checkpoint
      type: System.Int64
    content.vb: Public Sub Write(checkpoint As Long)
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Write*
  implements:
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Read
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Read
  id: Read
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: InMemoryCheckpoint.Read()
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Read()
  type: Method
  source:
    id: Read
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 29
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public long Read()
    return:
      type: System.Int64
    content.vb: Public Function Read As Long
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Read*
  implements:
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.ReadNonFlushed
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.ReadNonFlushed
  id: ReadNonFlushed
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: ReadNonFlushed()
  nameWithType: InMemoryCheckpoint.ReadNonFlushed()
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.ReadNonFlushed()
  type: Method
  source:
    id: ReadNonFlushed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public long ReadNonFlushed()
    return:
      type: System.Int64
    content.vb: Public Function ReadNonFlushed As Long
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.ReadNonFlushed*
  implements:
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flush
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flush
  id: Flush
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: InMemoryCheckpoint.Flush()
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flush()
  type: Method
  source:
    id: Flush
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 37
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flush*
  implements:
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flushed
  commentId: E:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flushed
  id: Flushed
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: Flushed
  nameWithType: InMemoryCheckpoint.Flushed
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flushed
  type: Event
  source:
    id: Flushed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 47
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public event Action<long> Flushed
    return:
      type: System.Action{System.Int64}
    content.vb: Public Event Flushed As Action(Of Long)
  implements:
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flushed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.OnFlushed(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.OnFlushed(System.Int64)
  id: OnFlushed(System.Int64)
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: OnFlushed(Int64)
  nameWithType: InMemoryCheckpoint.OnFlushed(Int64)
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.OnFlushed(System.Int64)
  type: Method
  source:
    id: OnFlushed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 49
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: protected virtual void OnFlushed(long obj)
    parameters:
    - id: obj
      type: System.Int64
    content.vb: Protected Overridable Sub OnFlushed(obj As Long)
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.OnFlushed*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Close
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Close
  id: Close
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: InMemoryCheckpoint.Close()
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Close()
  type: Method
  source:
    id: Close
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 55
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Close*
  implements:
  - EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Dispose
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Dispose
  id: Dispose
  parent: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: InMemoryCheckpoint.Dispose()
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Dispose()
  type: Method
  source:
    id: Dispose
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Checkpoint/InMemoryCheckpoint.cs
    startLine: 59
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Checkpoint
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<InMemoryCheckpoint>()
  nameWithType: ProtobufExtensions.Serialize<InMemoryCheckpoint>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of InMemoryCheckpoint)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint)()
  name.vb: Serialize(Of InMemoryCheckpoint)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<InMemoryCheckpoint>
    nameWithType: ProtobufExtensions.Serialize<InMemoryCheckpoint>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of InMemoryCheckpoint)
    nameWithType: ProtobufExtensions.Serialize(Of InMemoryCheckpoint)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<InMemoryCheckpoint>()
  nameWithType: ProtobufExtensions.SerializeToArray<InMemoryCheckpoint>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of InMemoryCheckpoint)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint)()
  name.vb: SerializeToArray(Of InMemoryCheckpoint)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<InMemoryCheckpoint>
    nameWithType: ProtobufExtensions.SerializeToArray<InMemoryCheckpoint>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of InMemoryCheckpoint)
    nameWithType: ProtobufExtensions.SerializeToArray(Of InMemoryCheckpoint)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Name*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Name
  name: Name
  nameWithType: InMemoryCheckpoint.Name
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Name
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name
  commentId: P:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  name: Name
  nameWithType: ICheckpoint.Name
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.#ctor
  name: InMemoryCheckpoint
  nameWithType: InMemoryCheckpoint.InMemoryCheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.InMemoryCheckpoint
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Write*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Write
  name: Write
  nameWithType: InMemoryCheckpoint.Write
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Write
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write(System.Int64)
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  isExternal: true
  name: Write(Int64)
  nameWithType: ICheckpoint.Write(Int64)
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write(System.Int64)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write(System.Int64)
    name: Write
    nameWithType: ICheckpoint.Write
    fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write(System.Int64)
    name: Write
    nameWithType: ICheckpoint.Write
    fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Read*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Read
  name: Read
  nameWithType: InMemoryCheckpoint.Read
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Read
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  name: Read()
  nameWithType: ICheckpoint.Read()
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
    name: Read
    nameWithType: ICheckpoint.Read
    fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
    name: Read
    nameWithType: ICheckpoint.Read
    fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Read
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.ReadNonFlushed*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.ReadNonFlushed
  name: ReadNonFlushed
  nameWithType: InMemoryCheckpoint.ReadNonFlushed
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.ReadNonFlushed
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  name: ReadNonFlushed()
  nameWithType: ICheckpoint.ReadNonFlushed()
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
    name: ReadNonFlushed
    nameWithType: ICheckpoint.ReadNonFlushed
    fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
    name: ReadNonFlushed
    nameWithType: ICheckpoint.ReadNonFlushed
    fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.ReadNonFlushed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flush*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flush
  name: Flush
  nameWithType: InMemoryCheckpoint.Flush
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Flush
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  name: Flush()
  nameWithType: ICheckpoint.Flush()
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
    name: Flush
    nameWithType: ICheckpoint.Flush
    fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
    name: Flush
    nameWithType: ICheckpoint.Flush
    fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flushed
  commentId: E:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flushed
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  name: Flushed
  nameWithType: ICheckpoint.Flushed
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Flushed
- uid: System.Action{System.Int64}
  commentId: T:System.Action{System.Int64}
  parent: System
  definition: System.Action`1
  name: Action<Int64>
  nameWithType: Action<Int64>
  fullName: System.Action<System.Int64>
  nameWithType.vb: Action(Of Int64)
  fullName.vb: System.Action(Of System.Int64)
  name.vb: Action(Of Int64)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.OnFlushed*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.OnFlushed
  name: OnFlushed
  nameWithType: InMemoryCheckpoint.OnFlushed
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.OnFlushed
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Close*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Close
  name: Close
  nameWithType: InMemoryCheckpoint.Close
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Close
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
  commentId: M:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
  parent: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  name: Close()
  nameWithType: ICheckpoint.Close()
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
    name: Close
    nameWithType: ICheckpoint.Close
    fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
    name: Close
    nameWithType: ICheckpoint.Close
    fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Dispose*
  commentId: Overload:EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Dispose
  name: Dispose
  nameWithType: InMemoryCheckpoint.Dispose
  fullName: EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )

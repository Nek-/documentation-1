### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  commentId: T:EventStore.Core.TransactionLog.Chunks.ChunkFooter
  id: ChunkFooter
  parent: EventStore.Core.TransactionLog.Chunks
  children:
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.#ctor(System.Boolean,System.Boolean,System.Int32,System.Int64,System.Int32,System.Byte[])
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.AsByteArray
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.ChecksumSize
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.FromStream(System.IO.Stream)
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.IsCompleted
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.IsMap12Bytes
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.LogicalDataSize
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.MapCount
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.MapSize
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.MD5Hash
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.PhysicalDataSize
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.Size
  langs:
  - csharp
  - vb
  name: ChunkFooter
  nameWithType: ChunkFooter
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  type: Class
  source:
    id: ChunkFooter
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public class ChunkFooter
    content.vb: Public Class ChunkFooter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.ChunkFooter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.Size
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkFooter.Size
  id: Size
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: ChunkFooter.Size
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.Size
  type: Field
  source:
    id: Size
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public const int Size = 128
    return:
      type: System.Int32
    content.vb: Public Const Size As Integer = 128
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.ChecksumSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkFooter.ChecksumSize
  id: ChecksumSize
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: ChecksumSize
  nameWithType: ChunkFooter.ChecksumSize
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.ChecksumSize
  type: Field
  source:
    id: ChecksumSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public const int ChecksumSize = 16
    return:
      type: System.Int32
    content.vb: Public Const ChecksumSize As Integer = 16
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.IsCompleted
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkFooter.IsCompleted
  id: IsCompleted
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: IsCompleted
  nameWithType: ChunkFooter.IsCompleted
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.IsCompleted
  type: Field
  source:
    id: IsCompleted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly bool IsCompleted
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsCompleted As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.IsMap12Bytes
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkFooter.IsMap12Bytes
  id: IsMap12Bytes
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: IsMap12Bytes
  nameWithType: ChunkFooter.IsMap12Bytes
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.IsMap12Bytes
  type: Field
  source:
    id: IsMap12Bytes
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly bool IsMap12Bytes
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsMap12Bytes As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.PhysicalDataSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkFooter.PhysicalDataSize
  id: PhysicalDataSize
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: PhysicalDataSize
  nameWithType: ChunkFooter.PhysicalDataSize
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.PhysicalDataSize
  type: Field
  source:
    id: PhysicalDataSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly int PhysicalDataSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly PhysicalDataSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.LogicalDataSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkFooter.LogicalDataSize
  id: LogicalDataSize
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: LogicalDataSize
  nameWithType: ChunkFooter.LogicalDataSize
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.LogicalDataSize
  type: Field
  source:
    id: LogicalDataSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly long LogicalDataSize
    return:
      type: System.Int64
    content.vb: Public ReadOnly LogicalDataSize As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.MapSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkFooter.MapSize
  id: MapSize
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: MapSize
  nameWithType: ChunkFooter.MapSize
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.MapSize
  type: Field
  source:
    id: MapSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly int MapSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly MapSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.MD5Hash
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkFooter.MD5Hash
  id: MD5Hash
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: MD5Hash
  nameWithType: ChunkFooter.MD5Hash
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.MD5Hash
  type: Field
  source:
    id: MD5Hash
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly byte[] MD5Hash
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly MD5Hash As Byte()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.MapCount
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkFooter.MapCount
  id: MapCount
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: MapCount
  nameWithType: ChunkFooter.MapCount
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.MapCount
  type: Field
  source:
    id: MapCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly int MapCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly MapCount As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.#ctor(System.Boolean,System.Boolean,System.Int32,System.Int64,System.Int32,System.Byte[])
  commentId: M:EventStore.Core.TransactionLog.Chunks.ChunkFooter.#ctor(System.Boolean,System.Boolean,System.Int32,System.Int64,System.Int32,System.Byte[])
  id: '#ctor(System.Boolean,System.Boolean,System.Int32,System.Int64,System.Int32,System.Byte[])'
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: ChunkFooter(Boolean, Boolean, Int32, Int64, Int32, Byte[])
  nameWithType: ChunkFooter.ChunkFooter(Boolean, Boolean, Int32, Int64, Int32, Byte[])
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.ChunkFooter(System.Boolean, System.Boolean, System.Int32, System.Int64, System.Int32, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 24
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public ChunkFooter(bool isCompleted, bool isMap12Bytes, int physicalDataSize, long logicalDataSize, int mapSize, byte[] md5Hash)
    parameters:
    - id: isCompleted
      type: System.Boolean
    - id: isMap12Bytes
      type: System.Boolean
    - id: physicalDataSize
      type: System.Int32
    - id: logicalDataSize
      type: System.Int64
    - id: mapSize
      type: System.Int32
    - id: md5Hash
      type: System.Byte[]
    content.vb: Public Sub New(isCompleted As Boolean, isMap12Bytes As Boolean, physicalDataSize As Integer, logicalDataSize As Long, mapSize As Integer, md5Hash As Byte())
  overload: EventStore.Core.TransactionLog.Chunks.ChunkFooter.#ctor*
  nameWithType.vb: ChunkFooter.ChunkFooter(Boolean, Boolean, Int32, Int64, Int32, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.TransactionLog.Chunks.ChunkFooter.ChunkFooter(System.Boolean, System.Boolean, System.Int32, System.Int64, System.Int32, System.Byte())
  name.vb: ChunkFooter(Boolean, Boolean, Int32, Int64, Int32, Byte())
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.AsByteArray
  commentId: M:EventStore.Core.TransactionLog.Chunks.ChunkFooter.AsByteArray
  id: AsByteArray
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: AsByteArray()
  nameWithType: ChunkFooter.AsByteArray()
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.AsByteArray()
  type: Method
  source:
    id: AsByteArray
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 52
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public byte[] AsByteArray()
    return:
      type: System.Byte[]
    content.vb: Public Function AsByteArray As Byte()
  overload: EventStore.Core.TransactionLog.Chunks.ChunkFooter.AsByteArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.FromStream(System.IO.Stream)
  commentId: M:EventStore.Core.TransactionLog.Chunks.ChunkFooter.FromStream(System.IO.Stream)
  id: FromStream(System.IO.Stream)
  parent: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  langs:
  - csharp
  - vb
  name: FromStream(Stream)
  nameWithType: ChunkFooter.FromStream(Stream)
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.FromStream(System.IO.Stream)
  type: Method
  source:
    id: FromStream
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkFooter.cs
    startLine: 72
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public static ChunkFooter FromStream(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
    return:
      type: EventStore.Core.TransactionLog.Chunks.ChunkFooter
    content.vb: Public Shared Function FromStream(stream As Stream) As ChunkFooter
  overload: EventStore.Core.TransactionLog.Chunks.ChunkFooter.FromStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ChunkFooter>()
  nameWithType: ProtobufExtensions.Serialize<ChunkFooter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.ChunkFooter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ChunkFooter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.ChunkFooter)()
  name.vb: Serialize(Of ChunkFooter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ChunkFooter>
    nameWithType: ProtobufExtensions.Serialize<ChunkFooter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.ChunkFooter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ChunkFooter)
    nameWithType: ProtobufExtensions.Serialize(Of ChunkFooter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.ChunkFooter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ChunkFooter>()
  nameWithType: ProtobufExtensions.SerializeToArray<ChunkFooter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.ChunkFooter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ChunkFooter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.ChunkFooter)()
  name.vb: SerializeToArray(Of ChunkFooter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ChunkFooter>
    nameWithType: ProtobufExtensions.SerializeToArray<ChunkFooter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.ChunkFooter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ChunkFooter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ChunkFooter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.ChunkFooter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.ChunkFooter.#ctor
  name: ChunkFooter
  nameWithType: ChunkFooter.ChunkFooter
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.ChunkFooter
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.AsByteArray*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.ChunkFooter.AsByteArray
  name: AsByteArray
  nameWithType: ChunkFooter.AsByteArray
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.AsByteArray
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter.FromStream*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.ChunkFooter.FromStream
  name: FromStream
  nameWithType: ChunkFooter.FromStream
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter.FromStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  commentId: T:EventStore.Core.TransactionLog.Chunks.ChunkFooter
  parent: EventStore.Core.TransactionLog.Chunks
  name: ChunkFooter
  nameWithType: ChunkFooter
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager
  commentId: T:EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager
  id: ITFChunkScavengerLogManager
  parent: EventStore.Core.TransactionLog.Chunks
  children:
  - EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.CreateLog
  - EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.Initialise
  langs:
  - csharp
  - vb
  name: ITFChunkScavengerLogManager
  nameWithType: ITFChunkScavengerLogManager
  fullName: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ITFChunkScavengerLogManager.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ITFChunkScavengerLogManager
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ITFChunkScavengerLogManager.cs
    startLine: 1
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public interface ITFChunkScavengerLogManager
    content.vb: Public Interface ITFChunkScavengerLogManager
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.Initialise
  commentId: M:EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.Initialise
  id: Initialise
  parent: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager
  langs:
  - csharp
  - vb
  name: Initialise()
  nameWithType: ITFChunkScavengerLogManager.Initialise()
  fullName: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.Initialise()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ITFChunkScavengerLogManager.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Initialise
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ITFChunkScavengerLogManager.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: void Initialise()
    content.vb: Sub Initialise
  overload: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.Initialise*
- uid: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.CreateLog
  commentId: M:EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.CreateLog
  id: CreateLog
  parent: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager
  langs:
  - csharp
  - vb
  name: CreateLog()
  nameWithType: ITFChunkScavengerLogManager.CreateLog()
  fullName: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.CreateLog()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ITFChunkScavengerLogManager.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CreateLog
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ITFChunkScavengerLogManager.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: ITFChunkScavengerLog CreateLog()
    return:
      type: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLog
    content.vb: Function CreateLog As ITFChunkScavengerLog
  overload: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.CreateLog*
references:
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ITFChunkScavengerLogManager>()
  nameWithType: ProtobufExtensions.Serialize<ITFChunkScavengerLogManager>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ITFChunkScavengerLogManager)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager)()
  name.vb: Serialize(Of ITFChunkScavengerLogManager)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ITFChunkScavengerLogManager>
    nameWithType: ProtobufExtensions.Serialize<ITFChunkScavengerLogManager>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ITFChunkScavengerLogManager)
    nameWithType: ProtobufExtensions.Serialize(Of ITFChunkScavengerLogManager)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ITFChunkScavengerLogManager>()
  nameWithType: ProtobufExtensions.SerializeToArray<ITFChunkScavengerLogManager>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ITFChunkScavengerLogManager)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager)()
  name.vb: SerializeToArray(Of ITFChunkScavengerLogManager)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ITFChunkScavengerLogManager>
    nameWithType: ProtobufExtensions.SerializeToArray<ITFChunkScavengerLogManager>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ITFChunkScavengerLogManager)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ITFChunkScavengerLogManager)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.Initialise*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.Initialise
  name: Initialise
  nameWithType: ITFChunkScavengerLogManager.Initialise
  fullName: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.Initialise
- uid: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.CreateLog*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.CreateLog
  name: CreateLog
  nameWithType: ITFChunkScavengerLogManager.CreateLog
  fullName: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.CreateLog
- uid: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLog
  commentId: T:EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLog
  parent: EventStore.Core.TransactionLog.Chunks
  name: ITFChunkScavengerLog
  nameWithType: ITFChunkScavengerLog
  fullName: EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLog

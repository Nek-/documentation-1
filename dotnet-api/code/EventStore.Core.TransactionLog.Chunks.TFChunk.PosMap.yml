### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  id: PosMap
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk
  children:
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.#ctor(System.Int64,System.Int32)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ActualPos
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.DeprecatedSize
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromNewFormat(System.IO.BinaryReader)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromOldFormat(System.IO.BinaryReader)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FullSize
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.LogPos
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ToString
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.Write(System.IO.BinaryWriter)
  langs:
  - csharp
  - vb
  name: PosMap
  nameWithType: PosMap
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  type: Struct
  source:
    id: PosMap
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/PosMap.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public struct PosMap
    content.vb: Public Structure PosMap
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FullSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FullSize
  id: FullSize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  langs:
  - csharp
  - vb
  name: FullSize
  nameWithType: PosMap.FullSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FullSize
  type: Field
  source:
    id: FullSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/PosMap.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public const int FullSize = 12
    return:
      type: System.Int32
    content.vb: Public Const FullSize As Integer = 12
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.DeprecatedSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.DeprecatedSize
  id: DeprecatedSize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  langs:
  - csharp
  - vb
  name: DeprecatedSize
  nameWithType: PosMap.DeprecatedSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.DeprecatedSize
  type: Field
  source:
    id: DeprecatedSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/PosMap.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public const int DeprecatedSize = 8
    return:
      type: System.Int32
    content.vb: Public Const DeprecatedSize As Integer = 8
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.LogPos
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.LogPos
  id: LogPos
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  langs:
  - csharp
  - vb
  name: LogPos
  nameWithType: PosMap.LogPos
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.LogPos
  type: Field
  source:
    id: LogPos
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/PosMap.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public readonly long LogPos
    return:
      type: System.Int64
    content.vb: Public ReadOnly LogPos As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ActualPos
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ActualPos
  id: ActualPos
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  langs:
  - csharp
  - vb
  name: ActualPos
  nameWithType: PosMap.ActualPos
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ActualPos
  type: Field
  source:
    id: ActualPos
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/PosMap.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public readonly int ActualPos
    return:
      type: System.Int32
    content.vb: Public ReadOnly ActualPos As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.#ctor(System.Int64,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.#ctor(System.Int64,System.Int32)
  id: '#ctor(System.Int64,System.Int32)'
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  langs:
  - csharp
  - vb
  name: PosMap(Int64, Int32)
  nameWithType: PosMap.PosMap(Int64, Int32)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.PosMap(System.Int64, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/PosMap.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public PosMap(long logPos, int actualPos)
    parameters:
    - id: logPos
      type: System.Int64
    - id: actualPos
      type: System.Int32
    content.vb: Public Sub New(logPos As Long, actualPos As Integer)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromNewFormat(System.IO.BinaryReader)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromNewFormat(System.IO.BinaryReader)
  id: FromNewFormat(System.IO.BinaryReader)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  langs:
  - csharp
  - vb
  name: FromNewFormat(BinaryReader)
  nameWithType: PosMap.FromNewFormat(BinaryReader)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromNewFormat(System.IO.BinaryReader)
  type: Method
  source:
    id: FromNewFormat
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/PosMap.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public static PosMap FromNewFormat(BinaryReader reader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
    content.vb: Public Shared Function FromNewFormat(reader As BinaryReader) As PosMap
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromNewFormat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromOldFormat(System.IO.BinaryReader)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromOldFormat(System.IO.BinaryReader)
  id: FromOldFormat(System.IO.BinaryReader)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  langs:
  - csharp
  - vb
  name: FromOldFormat(BinaryReader)
  nameWithType: PosMap.FromOldFormat(BinaryReader)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromOldFormat(System.IO.BinaryReader)
  type: Method
  source:
    id: FromOldFormat
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/PosMap.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public static PosMap FromOldFormat(BinaryReader reader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
    content.vb: Public Shared Function FromOldFormat(reader As BinaryReader) As PosMap
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromOldFormat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.Write(System.IO.BinaryWriter)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.Write(System.IO.BinaryWriter)
  id: Write(System.IO.BinaryWriter)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  langs:
  - csharp
  - vb
  name: Write(BinaryWriter)
  nameWithType: PosMap.Write(BinaryWriter)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.Write(System.IO.BinaryWriter)
  type: Method
  source:
    id: Write
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/PosMap.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void Write(BinaryWriter writer)
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
    content.vb: Public Sub Write(writer As BinaryWriter)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ToString
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ToString
  id: ToString
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PosMap.ToString()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/PosMap.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk
  commentId: N:EventStore.Core.TransactionLog.Chunks.TFChunk
  name: EventStore.Core.TransactionLog.Chunks.TFChunk
  nameWithType: EventStore.Core.TransactionLog.Chunks.TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<PosMap>()
  nameWithType: EnumExtensions.EnumValueName<PosMap>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of PosMap)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap)()
  name.vb: EnumValueName(Of PosMap)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<PosMap>
    nameWithType: EnumExtensions.EnumValueName<PosMap>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of PosMap)
    nameWithType: EnumExtensions.EnumValueName(Of PosMap)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PosMap>()
  nameWithType: ProtobufExtensions.Serialize<PosMap>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PosMap)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap)()
  name.vb: Serialize(Of PosMap)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PosMap>
    nameWithType: ProtobufExtensions.Serialize<PosMap>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PosMap)
    nameWithType: ProtobufExtensions.Serialize(Of PosMap)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PosMap>()
  nameWithType: ProtobufExtensions.SerializeToArray<PosMap>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PosMap)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap)()
  name.vb: SerializeToArray(Of PosMap)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PosMap>
    nameWithType: ProtobufExtensions.SerializeToArray<PosMap>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PosMap)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PosMap)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.#ctor
  name: PosMap
  nameWithType: PosMap.PosMap
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.PosMap
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromNewFormat*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromNewFormat
  name: FromNewFormat
  nameWithType: PosMap.FromNewFormat
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromNewFormat
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk
  name: PosMap
  nameWithType: PosMap
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromOldFormat*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromOldFormat
  name: FromOldFormat
  nameWithType: PosMap.FromOldFormat
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.FromOldFormat
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.Write*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.Write
  name: Write
  nameWithType: PosMap.Write
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.Write
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ToString*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ToString
  name: ToString
  nameWithType: PosMap.ToString
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

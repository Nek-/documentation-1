### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
  id: TFChunkReaderExistsAtOptimizer
  parent: EventStore.Core.TransactionLog.Chunks
  children:
  - EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.#ctor(System.Int32)
  - EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Instance
  - EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.IsOptimized(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  - EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Optimize(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  langs:
  - csharp
  - vb
  name: TFChunkReaderExistsAtOptimizer
  nameWithType: TFChunkReaderExistsAtOptimizer
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
  type: Class
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReaderExistsAtOptimizer.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TFChunkReaderExistsAtOptimizer
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReaderExistsAtOptimizer.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: 'public class TFChunkReaderExistsAtOptimizer : object'
    content.vb: >-
      Public Class TFChunkReaderExistsAtOptimizer
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Instance
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Instance
  id: Instance
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: TFChunkReaderExistsAtOptimizer.Instance
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Instance
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReaderExistsAtOptimizer.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Instance
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReaderExistsAtOptimizer.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public static TFChunkReaderExistsAtOptimizer Instance { get; }
    parameters: []
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
    content.vb: Public Shared ReadOnly Property Instance As TFChunkReaderExistsAtOptimizer
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.#ctor(System.Int32)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
  langs:
  - csharp
  - vb
  name: TFChunkReaderExistsAtOptimizer(Int32)
  nameWithType: TFChunkReaderExistsAtOptimizer.TFChunkReaderExistsAtOptimizer(Int32)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.TFChunkReaderExistsAtOptimizer(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReaderExistsAtOptimizer.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReaderExistsAtOptimizer.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public TFChunkReaderExistsAtOptimizer(int maxCached)
    parameters:
    - id: maxCached
      type: System.Int32
    content.vb: Public Sub New(maxCached As Integer)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Optimize(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Optimize(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  id: Optimize(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
  langs:
  - csharp
  - vb
  name: Optimize(TFChunk)
  nameWithType: TFChunkReaderExistsAtOptimizer.Optimize(TFChunk)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Optimize(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReaderExistsAtOptimizer.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Optimize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReaderExistsAtOptimizer.cs
    startLine: 48
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void Optimize(TFChunk chunk)
    parameters:
    - id: chunk
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
    content.vb: Public Sub Optimize(chunk As TFChunk)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Optimize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.IsOptimized(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.IsOptimized(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  id: IsOptimized(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
  langs:
  - csharp
  - vb
  name: IsOptimized(TFChunk)
  nameWithType: TFChunkReaderExistsAtOptimizer.IsOptimized(TFChunk)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.IsOptimized(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReaderExistsAtOptimizer.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IsOptimized
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReaderExistsAtOptimizer.cs
    startLine: 53
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public bool IsOptimized(TFChunk chunk)
    parameters:
    - id: chunk
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
    return:
      type: System.Boolean
    content.vb: Public Function IsOptimized(chunk As TFChunk) As Boolean
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.IsOptimized*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TFChunkReaderExistsAtOptimizer>()
  nameWithType: ProtobufExtensions.Serialize<TFChunkReaderExistsAtOptimizer>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TFChunkReaderExistsAtOptimizer)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer)()
  name.vb: Serialize(Of TFChunkReaderExistsAtOptimizer)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TFChunkReaderExistsAtOptimizer>
    nameWithType: ProtobufExtensions.Serialize<TFChunkReaderExistsAtOptimizer>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TFChunkReaderExistsAtOptimizer)
    nameWithType: ProtobufExtensions.Serialize(Of TFChunkReaderExistsAtOptimizer)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TFChunkReaderExistsAtOptimizer>()
  nameWithType: ProtobufExtensions.SerializeToArray<TFChunkReaderExistsAtOptimizer>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TFChunkReaderExistsAtOptimizer)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer)()
  name.vb: SerializeToArray(Of TFChunkReaderExistsAtOptimizer)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TFChunkReaderExistsAtOptimizer>
    nameWithType: ProtobufExtensions.SerializeToArray<TFChunkReaderExistsAtOptimizer>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TFChunkReaderExistsAtOptimizer)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TFChunkReaderExistsAtOptimizer)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Instance*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Instance
  name: Instance
  nameWithType: TFChunkReaderExistsAtOptimizer.Instance
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Instance
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
  parent: EventStore.Core.TransactionLog.Chunks
  name: TFChunkReaderExistsAtOptimizer
  nameWithType: TFChunkReaderExistsAtOptimizer
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.#ctor
  name: TFChunkReaderExistsAtOptimizer
  nameWithType: TFChunkReaderExistsAtOptimizer.TFChunkReaderExistsAtOptimizer
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.TFChunkReaderExistsAtOptimizer
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Optimize*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Optimize
  name: Optimize
  nameWithType: TFChunkReaderExistsAtOptimizer.Optimize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.Optimize
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk
  name: TFChunk
  nameWithType: TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk
  commentId: N:EventStore.Core.TransactionLog.Chunks.TFChunk
  name: EventStore.Core.TransactionLog.Chunks.TFChunk
  nameWithType: EventStore.Core.TransactionLog.Chunks.TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.IsOptimized*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.IsOptimized
  name: IsOptimized
  nameWithType: TFChunkReaderExistsAtOptimizer.IsOptimized
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.IsOptimized
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

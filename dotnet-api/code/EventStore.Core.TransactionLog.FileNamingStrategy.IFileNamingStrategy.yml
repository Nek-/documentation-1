### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  commentId: T:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  id: IFileNamingStrategy
  parent: EventStore.Core.TransactionLog.FileNamingStrategy
  children:
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor(System.Int32)
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
  langs:
  - csharp
  - vb
  name: IFileNamingStrategy
  nameWithType: IFileNamingStrategy
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IFileNamingStrategy
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: public interface IFileNamingStrategy
    content.vb: Public Interface IFileNamingStrategy
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
  id: GetFilenameFor(System.Int32,System.Int32)
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  langs:
  - csharp
  - vb
  name: GetFilenameFor(Int32, Int32)
  nameWithType: IFileNamingStrategy.GetFilenameFor(Int32, Int32)
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetFilenameFor
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: string GetFilenameFor(int index, int version)
    parameters:
    - id: index
      type: System.Int32
    - id: version
      type: System.Int32
    return:
      type: System.String
    content.vb: Function GetFilenameFor(index As Integer, version As Integer) As String
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor*
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  id: DetermineBestVersionFilenameFor(System.Int32)
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  langs:
  - csharp
  - vb
  name: DetermineBestVersionFilenameFor(Int32)
  nameWithType: IFileNamingStrategy.DetermineBestVersionFilenameFor(Int32)
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DetermineBestVersionFilenameFor
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: string DetermineBestVersionFilenameFor(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.String
    content.vb: Function DetermineBestVersionFilenameFor(index As Integer) As String
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor*
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor(System.Int32)
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor(System.Int32)
  id: GetAllVersionsFor(System.Int32)
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  langs:
  - csharp
  - vb
  name: GetAllVersionsFor(Int32)
  nameWithType: IFileNamingStrategy.GetAllVersionsFor(Int32)
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetAllVersionsFor
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: string[] GetAllVersionsFor(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.String[]
    content.vb: Function GetAllVersionsFor(index As Integer) As String()
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor*
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
  id: GetAllPresentFiles
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  langs:
  - csharp
  - vb
  name: GetAllPresentFiles()
  nameWithType: IFileNamingStrategy.GetAllPresentFiles()
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetAllPresentFiles
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: string[] GetAllPresentFiles()
    return:
      type: System.String[]
    content.vb: Function GetAllPresentFiles As String()
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles*
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
  id: GetTempFilename
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  langs:
  - csharp
  - vb
  name: GetTempFilename()
  nameWithType: IFileNamingStrategy.GetTempFilename()
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetTempFilename
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: string GetTempFilename()
    return:
      type: System.String
    content.vb: Function GetTempFilename As String
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename*
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
  id: GetAllTempFiles
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  langs:
  - csharp
  - vb
  name: GetAllTempFiles()
  nameWithType: IFileNamingStrategy.GetAllTempFiles()
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetAllTempFiles
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/IFileNamingStrategy.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: string[] GetAllTempFiles()
    return:
      type: System.String[]
    content.vb: Function GetAllTempFiles As String()
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles*
references:
- uid: EventStore.Core.TransactionLog.FileNamingStrategy
  commentId: N:EventStore.Core.TransactionLog.FileNamingStrategy
  name: EventStore.Core.TransactionLog.FileNamingStrategy
  nameWithType: EventStore.Core.TransactionLog.FileNamingStrategy
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IFileNamingStrategy>()
  nameWithType: ProtobufExtensions.Serialize<IFileNamingStrategy>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IFileNamingStrategy)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy)()
  name.vb: Serialize(Of IFileNamingStrategy)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IFileNamingStrategy>
    nameWithType: ProtobufExtensions.Serialize<IFileNamingStrategy>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IFileNamingStrategy)
    nameWithType: ProtobufExtensions.Serialize(Of IFileNamingStrategy)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IFileNamingStrategy>()
  nameWithType: ProtobufExtensions.SerializeToArray<IFileNamingStrategy>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IFileNamingStrategy)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy)()
  name.vb: SerializeToArray(Of IFileNamingStrategy)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IFileNamingStrategy>
    nameWithType: ProtobufExtensions.SerializeToArray<IFileNamingStrategy>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IFileNamingStrategy)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IFileNamingStrategy)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor
  name: GetFilenameFor
  nameWithType: IFileNamingStrategy.GetFilenameFor
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor
  name: DetermineBestVersionFilenameFor
  nameWithType: IFileNamingStrategy.DetermineBestVersionFilenameFor
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor
  name: GetAllVersionsFor
  nameWithType: IFileNamingStrategy.GetAllVersionsFor
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
  name: GetAllPresentFiles
  nameWithType: IFileNamingStrategy.GetAllPresentFiles
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
  name: GetTempFilename
  nameWithType: IFileNamingStrategy.GetTempFilename
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
  name: GetAllTempFiles
  nameWithType: IFileNamingStrategy.GetAllTempFiles
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles

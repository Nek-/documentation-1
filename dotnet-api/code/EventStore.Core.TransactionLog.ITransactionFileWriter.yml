### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter
  commentId: T:EventStore.Core.TransactionLog.ITransactionFileWriter
  id: ITransactionFileWriter
  parent: EventStore.Core.TransactionLog
  children:
  - EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint
  - EventStore.Core.TransactionLog.ITransactionFileWriter.Close
  - EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
  - EventStore.Core.TransactionLog.ITransactionFileWriter.Open
  - EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  langs:
  - csharp
  - vb
  name: ITransactionFileWriter
  nameWithType: ITransactionFileWriter
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter
  type: Interface
  source:
    id: ITransactionFileWriter
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/ITransactionFileWriter.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: 'public interface ITransactionFileWriter : IDisposable'
    content.vb: >-
      Public Interface ITransactionFileWriter
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.ITransactionFileWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.ITransactionFileWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Open
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileWriter.Open
  id: Open
  parent: EventStore.Core.TransactionLog.ITransactionFileWriter
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: ITransactionFileWriter.Open()
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Open()
  type: Method
  source:
    id: Open
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/ITransactionFileWriter.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: void Open()
    content.vb: Sub Open
  overload: EventStore.Core.TransactionLog.ITransactionFileWriter.Open*
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  id: Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  parent: EventStore.Core.TransactionLog.ITransactionFileWriter
  langs:
  - csharp
  - vb
  name: Write(LogRecord, out Int64)
  nameWithType: ITransactionFileWriter.Write(LogRecord, out Int64)
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord, out System.Int64)
  type: Method
  source:
    id: Write
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/ITransactionFileWriter.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: bool Write(LogRecord record, out long newPos)
    parameters:
    - id: record
      type: EventStore.Core.TransactionLog.LogRecords.LogRecord
    - id: newPos
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Function Write(record As LogRecord, ByRef newPos As Long) As Boolean
  overload: EventStore.Core.TransactionLog.ITransactionFileWriter.Write*
  nameWithType.vb: ITransactionFileWriter.Write(LogRecord, ByRef Int64)
  fullName.vb: EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord, ByRef System.Int64)
  name.vb: Write(LogRecord, ByRef Int64)
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
  id: Flush
  parent: EventStore.Core.TransactionLog.ITransactionFileWriter
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: ITransactionFileWriter.Flush()
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush()
  type: Method
  source:
    id: Flush
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/ITransactionFileWriter.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: void Flush()
    content.vb: Sub Flush
  overload: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush*
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Close
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileWriter.Close
  id: Close
  parent: EventStore.Core.TransactionLog.ITransactionFileWriter
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: ITransactionFileWriter.Close()
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Close()
  type: Method
  source:
    id: Close
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/ITransactionFileWriter.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: void Close()
    content.vb: Sub Close
  overload: EventStore.Core.TransactionLog.ITransactionFileWriter.Close*
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint
  commentId: P:EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint
  id: Checkpoint
  parent: EventStore.Core.TransactionLog.ITransactionFileWriter
  langs:
  - csharp
  - vb
  name: Checkpoint
  nameWithType: ITransactionFileWriter.Checkpoint
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint
  type: Property
  source:
    id: Checkpoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/ITransactionFileWriter.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: ICheckpoint Checkpoint { get; }
    parameters: []
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: ReadOnly Property Checkpoint As ICheckpoint
  overload: EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: EventStore.Core.TransactionLog
  commentId: N:EventStore.Core.TransactionLog
  name: EventStore.Core.TransactionLog
  nameWithType: EventStore.Core.TransactionLog
  fullName: EventStore.Core.TransactionLog
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ITransactionFileWriter>()
  nameWithType: ProtobufExtensions.Serialize<ITransactionFileWriter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.ITransactionFileWriter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ITransactionFileWriter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.ITransactionFileWriter)()
  name.vb: Serialize(Of ITransactionFileWriter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ITransactionFileWriter>
    nameWithType: ProtobufExtensions.Serialize<ITransactionFileWriter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.ITransactionFileWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ITransactionFileWriter)
    nameWithType: ProtobufExtensions.Serialize(Of ITransactionFileWriter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.ITransactionFileWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ITransactionFileWriter>()
  nameWithType: ProtobufExtensions.SerializeToArray<ITransactionFileWriter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.ITransactionFileWriter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ITransactionFileWriter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.ITransactionFileWriter)()
  name.vb: SerializeToArray(Of ITransactionFileWriter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ITransactionFileWriter>
    nameWithType: ProtobufExtensions.SerializeToArray<ITransactionFileWriter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.ITransactionFileWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ITransactionFileWriter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ITransactionFileWriter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.ITransactionFileWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Open*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileWriter.Open
  name: Open
  nameWithType: ITransactionFileWriter.Open
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Open
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Write*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileWriter.Write
  name: Write
  nameWithType: ITransactionFileWriter.Write
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Write
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.LogRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  name: LogRecord
  nameWithType: LogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
  name: Flush
  nameWithType: ITransactionFileWriter.Flush
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Close*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileWriter.Close
  name: Close
  nameWithType: ITransactionFileWriter.Close
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Close
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint
  name: Checkpoint
  nameWithType: ITransactionFileWriter.Checkpoint
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  id: CommitLogRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  children:
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.#ctor(System.Int64,System.Guid,System.Int64,System.DateTime,System.Int64,System.Byte)
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.CommitRecordVersion
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.CorrelationId
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals(System.Object)
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.FirstEventNumber
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.GetHashCode
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Equality(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Inequality(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.SortKey
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.TimeStamp
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.ToString
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.TransactionPosition
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.WriteTo(System.IO.BinaryWriter)
  langs:
  - csharp
  - vb
  name: CommitLogRecord
  nameWithType: CommitLogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  type: Class
  source:
    id: CommitLogRecord
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: 'public class CommitLogRecord : LogRecord, IEquatable<CommitLogRecord>'
    content.vb: >-
      Public Class CommitLogRecord
          Inherits LogRecord
          Implements IEquatable(Of CommitLogRecord)
  inheritance:
  - System.Object
  - EventStore.Core.TransactionLog.LogRecords.LogRecord
  implements:
  - System.IEquatable{EventStore.Core.TransactionLog.LogRecords.CommitLogRecord}
  inheritedMembers:
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.NoData
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.RecordType
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.Version
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.LogPosition
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.GetNextLogPosition(System.Int64,System.Int32)
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.GetPrevLogPosition(System.Int64,System.Int32)
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.ReadFrom(System.IO.BinaryReader)
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.Prepare(System.Int64,System.Guid,System.Guid,System.Int64,System.Int32,System.String,System.Int64,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.String,System.Byte[],System.Byte[],System.Nullable{System.DateTime})
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.Commit(System.Int64,System.Guid,System.Int64,System.Int64)
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.SingleWrite(System.Int64,System.Guid,System.Guid,System.String,System.Int64,System.String,System.Byte[],System.Byte[],System.Nullable{System.DateTime},System.Nullable{EventStore.Core.TransactionLog.LogRecords.PrepareFlags})
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionBegin(System.Int64,System.Guid,System.String,System.Int64)
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionWrite(System.Int64,System.Guid,System.Guid,System.Int64,System.Int32,System.String,System.String,System.Byte[],System.Byte[],System.Boolean)
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionEnd(System.Int64,System.Guid,System.Guid,System.Int64,System.String)
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.DeleteTombstone(System.Int64,System.Guid,System.Guid,System.String,System.Int64,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  - EventStore.Core.TransactionLog.LogRecords.LogRecord.GetSizeWithLengthPrefixAndSuffix
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.CommitRecordVersion
  commentId: F:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.CommitRecordVersion
  id: CommitRecordVersion
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: CommitRecordVersion
  nameWithType: CommitLogRecord.CommitRecordVersion
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.CommitRecordVersion
  type: Field
  source:
    id: CommitRecordVersion
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public const byte CommitRecordVersion = 1
    return:
      type: System.Byte
    content.vb: Public Const CommitRecordVersion As Byte = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.TransactionPosition
  commentId: F:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.TransactionPosition
  id: TransactionPosition
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: TransactionPosition
  nameWithType: CommitLogRecord.TransactionPosition
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.TransactionPosition
  type: Field
  source:
    id: TransactionPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public readonly long TransactionPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly TransactionPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.FirstEventNumber
  commentId: F:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.FirstEventNumber
  id: FirstEventNumber
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: FirstEventNumber
  nameWithType: CommitLogRecord.FirstEventNumber
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.FirstEventNumber
  type: Field
  source:
    id: FirstEventNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public readonly long FirstEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly FirstEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.SortKey
  commentId: F:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.SortKey
  id: SortKey
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: SortKey
  nameWithType: CommitLogRecord.SortKey
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.SortKey
  type: Field
  source:
    id: SortKey
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public readonly long SortKey
    return:
      type: System.Int64
    content.vb: Public ReadOnly SortKey As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.CorrelationId
  commentId: F:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.CorrelationId
  id: CorrelationId
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: CommitLogRecord.CorrelationId
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.CorrelationId
  type: Field
  source:
    id: CorrelationId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public readonly Guid CorrelationId
    return:
      type: System.Guid
    content.vb: Public ReadOnly CorrelationId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.TimeStamp
  commentId: F:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.TimeStamp
  id: TimeStamp
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: TimeStamp
  nameWithType: CommitLogRecord.TimeStamp
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.TimeStamp
  type: Field
  source:
    id: TimeStamp
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public readonly DateTime TimeStamp
    return:
      type: System.DateTime
    content.vb: Public ReadOnly TimeStamp As Date
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.#ctor(System.Int64,System.Guid,System.Int64,System.DateTime,System.Int64,System.Byte)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.#ctor(System.Int64,System.Guid,System.Int64,System.DateTime,System.Int64,System.Byte)
  id: '#ctor(System.Int64,System.Guid,System.Int64,System.DateTime,System.Int64,System.Byte)'
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: CommitLogRecord(Int64, Guid, Int64, DateTime, Int64, Byte)
  nameWithType: CommitLogRecord.CommitLogRecord(Int64, Guid, Int64, DateTime, Int64, Byte)
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.CommitLogRecord(System.Int64, System.Guid, System.Int64, System.DateTime, System.Int64, System.Byte)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public CommitLogRecord(long logPosition, Guid correlationId, long transactionPosition, DateTime timeStamp, long firstEventNumber, byte commitRecordVersion = 1)
    parameters:
    - id: logPosition
      type: System.Int64
    - id: correlationId
      type: System.Guid
    - id: transactionPosition
      type: System.Int64
    - id: timeStamp
      type: System.DateTime
    - id: firstEventNumber
      type: System.Int64
    - id: commitRecordVersion
      type: System.Byte
    content.vb: Public Sub New(logPosition As Long, correlationId As Guid, transactionPosition As Long, timeStamp As Date, firstEventNumber As Long, commitRecordVersion As Byte = 1)
  overload: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.WriteTo(System.IO.BinaryWriter)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: WriteTo(BinaryWriter)
  nameWithType: CommitLogRecord.WriteTo(BinaryWriter)
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.WriteTo(System.IO.BinaryWriter)
  type: Method
  source:
    id: WriteTo
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 52
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public override void WriteTo(BinaryWriter writer)
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
    content.vb: Public Overrides Sub WriteTo(writer As BinaryWriter)
  overridden: EventStore.Core.TransactionLog.LogRecords.LogRecord.WriteTo(System.IO.BinaryWriter)
  overload: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.WriteTo*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  id: Equals(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: Equals(CommitLogRecord)
  nameWithType: CommitLogRecord.Equals(CommitLogRecord)
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  type: Method
  source:
    id: Equals
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 68
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public bool Equals(CommitLogRecord other)
    parameters:
    - id: other
      type: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As CommitLogRecord) As Boolean
  overload: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals*
  implements:
  - System.IEquatable{EventStore.Core.TransactionLog.LogRecords.CommitLogRecord}.Equals(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals(System.Object)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals(System.Object)
  id: Equals(System.Object)
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: CommitLogRecord.Equals(Object)
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 79
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.GetHashCode
  commentId: M:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.GetHashCode
  id: GetHashCode
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CommitLogRecord.GetHashCode()
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 86
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Equality(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Equality(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  id: op_Equality(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: Equality(CommitLogRecord, CommitLogRecord)
  nameWithType: CommitLogRecord.Equality(CommitLogRecord, CommitLogRecord)
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equality(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord, EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  type: Operator
  source:
    id: op_Equality
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 98
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public static bool operator ==(CommitLogRecord left, CommitLogRecord right)
    parameters:
    - id: left
      type: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    - id: right
      type: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As CommitLogRecord, right As CommitLogRecord) As Boolean
  overload: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Inequality(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Inequality(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  id: op_Inequality(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: Inequality(CommitLogRecord, CommitLogRecord)
  nameWithType: CommitLogRecord.Inequality(CommitLogRecord, CommitLogRecord)
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Inequality(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord, EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  type: Operator
  source:
    id: op_Inequality
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 102
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public static bool operator !=(CommitLogRecord left, CommitLogRecord right)
    parameters:
    - id: left
      type: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    - id: right
      type: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As CommitLogRecord, right As CommitLogRecord) As Boolean
  overload: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.ToString
  commentId: M:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.ToString
  id: ToString
  parent: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CommitLogRecord.ToString()
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/CommitLogRecord.cs
    startLine: 106
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.LogRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  name: LogRecord
  nameWithType: LogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
- uid: System.IEquatable{EventStore.Core.TransactionLog.LogRecords.CommitLogRecord}
  commentId: T:System.IEquatable{EventStore.Core.TransactionLog.LogRecords.CommitLogRecord}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<CommitLogRecord>
  nameWithType: IEquatable<CommitLogRecord>
  fullName: System.IEquatable<EventStore.Core.TransactionLog.LogRecords.CommitLogRecord>
  nameWithType.vb: IEquatable(Of CommitLogRecord)
  fullName.vb: System.IEquatable(Of EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  name.vb: IEquatable(Of CommitLogRecord)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    name: CommitLogRecord
    nameWithType: CommitLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    name: CommitLogRecord
    nameWithType: CommitLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.NoData
  commentId: F:EventStore.Core.TransactionLog.LogRecords.LogRecord.NoData
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  name: NoData
  nameWithType: LogRecord.NoData
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.NoData
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.RecordType
  commentId: F:EventStore.Core.TransactionLog.LogRecords.LogRecord.RecordType
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  name: RecordType
  nameWithType: LogRecord.RecordType
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.RecordType
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.Version
  commentId: F:EventStore.Core.TransactionLog.LogRecords.LogRecord.Version
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  name: Version
  nameWithType: LogRecord.Version
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.Version
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.LogPosition
  commentId: F:EventStore.Core.TransactionLog.LogRecords.LogRecord.LogPosition
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  name: LogPosition
  nameWithType: LogRecord.LogPosition
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.LogPosition
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetNextLogPosition(System.Int64,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.GetNextLogPosition(System.Int64,System.Int32)
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: GetNextLogPosition(Int64, Int32)
  nameWithType: LogRecord.GetNextLogPosition(Int64, Int32)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetNextLogPosition(System.Int64, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetNextLogPosition(System.Int64,System.Int32)
    name: GetNextLogPosition
    nameWithType: LogRecord.GetNextLogPosition
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetNextLogPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetNextLogPosition(System.Int64,System.Int32)
    name: GetNextLogPosition
    nameWithType: LogRecord.GetNextLogPosition
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetNextLogPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetPrevLogPosition(System.Int64,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.GetPrevLogPosition(System.Int64,System.Int32)
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: GetPrevLogPosition(Int64, Int32)
  nameWithType: LogRecord.GetPrevLogPosition(Int64, Int32)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetPrevLogPosition(System.Int64, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetPrevLogPosition(System.Int64,System.Int32)
    name: GetPrevLogPosition
    nameWithType: LogRecord.GetPrevLogPosition
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetPrevLogPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetPrevLogPosition(System.Int64,System.Int32)
    name: GetPrevLogPosition
    nameWithType: LogRecord.GetPrevLogPosition
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetPrevLogPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.ReadFrom(System.IO.BinaryReader)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.ReadFrom(System.IO.BinaryReader)
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: ReadFrom(BinaryReader)
  nameWithType: LogRecord.ReadFrom(BinaryReader)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.ReadFrom(System.IO.BinaryReader)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.ReadFrom(System.IO.BinaryReader)
    name: ReadFrom
    nameWithType: LogRecord.ReadFrom
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.ReadFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    nameWithType: BinaryReader
    fullName: System.IO.BinaryReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.ReadFrom(System.IO.BinaryReader)
    name: ReadFrom
    nameWithType: LogRecord.ReadFrom
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.ReadFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    nameWithType: BinaryReader
    fullName: System.IO.BinaryReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.Prepare(System.Int64,System.Guid,System.Guid,System.Int64,System.Int32,System.String,System.Int64,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.String,System.Byte[],System.Byte[],System.Nullable{System.DateTime})
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.Prepare(System.Int64,System.Guid,System.Guid,System.Int64,System.Int32,System.String,System.Int64,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.String,System.Byte[],System.Byte[],System.Nullable{System.DateTime})
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: Prepare(Int64, Guid, Guid, Int64, Int32, String, Int64, PrepareFlags, String, Byte[], Byte[], Nullable<DateTime>)
  nameWithType: LogRecord.Prepare(Int64, Guid, Guid, Int64, Int32, String, Int64, PrepareFlags, String, Byte[], Byte[], Nullable<DateTime>)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.Prepare(System.Int64, System.Guid, System.Guid, System.Int64, System.Int32, System.String, System.Int64, EventStore.Core.TransactionLog.LogRecords.PrepareFlags, System.String, System.Byte[], System.Byte[], System.Nullable<System.DateTime>)
  nameWithType.vb: LogRecord.Prepare(Int64, Guid, Guid, Int64, Int32, String, Int64, PrepareFlags, String, Byte(), Byte(), Nullable(Of DateTime))
  fullName.vb: EventStore.Core.TransactionLog.LogRecords.LogRecord.Prepare(System.Int64, System.Guid, System.Guid, System.Int64, System.Int32, System.String, System.Int64, EventStore.Core.TransactionLog.LogRecords.PrepareFlags, System.String, System.Byte(), System.Byte(), System.Nullable(Of System.DateTime))
  name.vb: Prepare(Int64, Guid, Guid, Int64, Int32, String, Int64, PrepareFlags, String, Byte(), Byte(), Nullable(Of DateTime))
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.Prepare(System.Int64,System.Guid,System.Guid,System.Int64,System.Int32,System.String,System.Int64,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.String,System.Byte[],System.Byte[],System.Nullable{System.DateTime})
    name: Prepare
    nameWithType: LogRecord.Prepare
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.Prepare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.Prepare(System.Int64,System.Guid,System.Guid,System.Int64,System.Int32,System.String,System.Int64,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.String,System.Byte[],System.Byte[],System.Nullable{System.DateTime})
    name: Prepare
    nameWithType: LogRecord.Prepare
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.Prepare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.Commit(System.Int64,System.Guid,System.Int64,System.Int64)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.Commit(System.Int64,System.Guid,System.Int64,System.Int64)
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: Commit(Int64, Guid, Int64, Int64)
  nameWithType: LogRecord.Commit(Int64, Guid, Int64, Int64)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.Commit(System.Int64, System.Guid, System.Int64, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.Commit(System.Int64,System.Guid,System.Int64,System.Int64)
    name: Commit
    nameWithType: LogRecord.Commit
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.Commit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.Commit(System.Int64,System.Guid,System.Int64,System.Int64)
    name: Commit
    nameWithType: LogRecord.Commit
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.Commit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.SingleWrite(System.Int64,System.Guid,System.Guid,System.String,System.Int64,System.String,System.Byte[],System.Byte[],System.Nullable{System.DateTime},System.Nullable{EventStore.Core.TransactionLog.LogRecords.PrepareFlags})
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.SingleWrite(System.Int64,System.Guid,System.Guid,System.String,System.Int64,System.String,System.Byte[],System.Byte[],System.Nullable{System.DateTime},System.Nullable{EventStore.Core.TransactionLog.LogRecords.PrepareFlags})
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: SingleWrite(Int64, Guid, Guid, String, Int64, String, Byte[], Byte[], Nullable<DateTime>, Nullable<PrepareFlags>)
  nameWithType: LogRecord.SingleWrite(Int64, Guid, Guid, String, Int64, String, Byte[], Byte[], Nullable<DateTime>, Nullable<PrepareFlags>)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.SingleWrite(System.Int64, System.Guid, System.Guid, System.String, System.Int64, System.String, System.Byte[], System.Byte[], System.Nullable<System.DateTime>, System.Nullable<EventStore.Core.TransactionLog.LogRecords.PrepareFlags>)
  nameWithType.vb: LogRecord.SingleWrite(Int64, Guid, Guid, String, Int64, String, Byte(), Byte(), Nullable(Of DateTime), Nullable(Of PrepareFlags))
  fullName.vb: EventStore.Core.TransactionLog.LogRecords.LogRecord.SingleWrite(System.Int64, System.Guid, System.Guid, System.String, System.Int64, System.String, System.Byte(), System.Byte(), System.Nullable(Of System.DateTime), System.Nullable(Of EventStore.Core.TransactionLog.LogRecords.PrepareFlags))
  name.vb: SingleWrite(Int64, Guid, Guid, String, Int64, String, Byte(), Byte(), Nullable(Of DateTime), Nullable(Of PrepareFlags))
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.SingleWrite(System.Int64,System.Guid,System.Guid,System.String,System.Int64,System.String,System.Byte[],System.Byte[],System.Nullable{System.DateTime},System.Nullable{EventStore.Core.TransactionLog.LogRecords.PrepareFlags})
    name: SingleWrite
    nameWithType: LogRecord.SingleWrite
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.SingleWrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.SingleWrite(System.Int64,System.Guid,System.Guid,System.String,System.Int64,System.String,System.Byte[],System.Byte[],System.Nullable{System.DateTime},System.Nullable{EventStore.Core.TransactionLog.LogRecords.PrepareFlags})
    name: SingleWrite
    nameWithType: LogRecord.SingleWrite
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.SingleWrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionBegin(System.Int64,System.Guid,System.String,System.Int64)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionBegin(System.Int64,System.Guid,System.String,System.Int64)
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: TransactionBegin(Int64, Guid, String, Int64)
  nameWithType: LogRecord.TransactionBegin(Int64, Guid, String, Int64)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionBegin(System.Int64, System.Guid, System.String, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionBegin(System.Int64,System.Guid,System.String,System.Int64)
    name: TransactionBegin
    nameWithType: LogRecord.TransactionBegin
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionBegin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionBegin(System.Int64,System.Guid,System.String,System.Int64)
    name: TransactionBegin
    nameWithType: LogRecord.TransactionBegin
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionBegin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionWrite(System.Int64,System.Guid,System.Guid,System.Int64,System.Int32,System.String,System.String,System.Byte[],System.Byte[],System.Boolean)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionWrite(System.Int64,System.Guid,System.Guid,System.Int64,System.Int32,System.String,System.String,System.Byte[],System.Byte[],System.Boolean)
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: TransactionWrite(Int64, Guid, Guid, Int64, Int32, String, String, Byte[], Byte[], Boolean)
  nameWithType: LogRecord.TransactionWrite(Int64, Guid, Guid, Int64, Int32, String, String, Byte[], Byte[], Boolean)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionWrite(System.Int64, System.Guid, System.Guid, System.Int64, System.Int32, System.String, System.String, System.Byte[], System.Byte[], System.Boolean)
  nameWithType.vb: LogRecord.TransactionWrite(Int64, Guid, Guid, Int64, Int32, String, String, Byte(), Byte(), Boolean)
  fullName.vb: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionWrite(System.Int64, System.Guid, System.Guid, System.Int64, System.Int32, System.String, System.String, System.Byte(), System.Byte(), System.Boolean)
  name.vb: TransactionWrite(Int64, Guid, Guid, Int64, Int32, String, String, Byte(), Byte(), Boolean)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionWrite(System.Int64,System.Guid,System.Guid,System.Int64,System.Int32,System.String,System.String,System.Byte[],System.Byte[],System.Boolean)
    name: TransactionWrite
    nameWithType: LogRecord.TransactionWrite
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionWrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionWrite(System.Int64,System.Guid,System.Guid,System.Int64,System.Int32,System.String,System.String,System.Byte[],System.Byte[],System.Boolean)
    name: TransactionWrite
    nameWithType: LogRecord.TransactionWrite
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionWrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionEnd(System.Int64,System.Guid,System.Guid,System.Int64,System.String)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionEnd(System.Int64,System.Guid,System.Guid,System.Int64,System.String)
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: TransactionEnd(Int64, Guid, Guid, Int64, String)
  nameWithType: LogRecord.TransactionEnd(Int64, Guid, Guid, Int64, String)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionEnd(System.Int64, System.Guid, System.Guid, System.Int64, System.String)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionEnd(System.Int64,System.Guid,System.Guid,System.Int64,System.String)
    name: TransactionEnd
    nameWithType: LogRecord.TransactionEnd
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionEnd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionEnd(System.Int64,System.Guid,System.Guid,System.Int64,System.String)
    name: TransactionEnd
    nameWithType: LogRecord.TransactionEnd
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.TransactionEnd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.DeleteTombstone(System.Int64,System.Guid,System.Guid,System.String,System.Int64,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.DeleteTombstone(System.Int64,System.Guid,System.Guid,System.String,System.Int64,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: DeleteTombstone(Int64, Guid, Guid, String, Int64, PrepareFlags)
  nameWithType: LogRecord.DeleteTombstone(Int64, Guid, Guid, String, Int64, PrepareFlags)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.DeleteTombstone(System.Int64, System.Guid, System.Guid, System.String, System.Int64, EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.DeleteTombstone(System.Int64,System.Guid,System.Guid,System.String,System.Int64,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: DeleteTombstone
    nameWithType: LogRecord.DeleteTombstone
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.DeleteTombstone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.DeleteTombstone(System.Int64,System.Guid,System.Guid,System.String,System.Int64,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: DeleteTombstone
    nameWithType: LogRecord.DeleteTombstone
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.DeleteTombstone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetSizeWithLengthPrefixAndSuffix
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.GetSizeWithLengthPrefixAndSuffix
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  name: GetSizeWithLengthPrefixAndSuffix()
  nameWithType: LogRecord.GetSizeWithLengthPrefixAndSuffix()
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetSizeWithLengthPrefixAndSuffix()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetSizeWithLengthPrefixAndSuffix
    name: GetSizeWithLengthPrefixAndSuffix
    nameWithType: LogRecord.GetSizeWithLengthPrefixAndSuffix
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetSizeWithLengthPrefixAndSuffix
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetSizeWithLengthPrefixAndSuffix
    name: GetSizeWithLengthPrefixAndSuffix
    nameWithType: LogRecord.GetSizeWithLengthPrefixAndSuffix
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.GetSizeWithLengthPrefixAndSuffix
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<CommitLogRecord>()
  nameWithType: ProtobufExtensions.Serialize<CommitLogRecord>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.LogRecords.CommitLogRecord>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of CommitLogRecord)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)()
  name.vb: Serialize(Of CommitLogRecord)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<CommitLogRecord>
    nameWithType: ProtobufExtensions.Serialize<CommitLogRecord>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.LogRecords.CommitLogRecord>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of CommitLogRecord)
    nameWithType: ProtobufExtensions.Serialize(Of CommitLogRecord)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<CommitLogRecord>()
  nameWithType: ProtobufExtensions.SerializeToArray<CommitLogRecord>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.LogRecords.CommitLogRecord>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of CommitLogRecord)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)()
  name.vb: SerializeToArray(Of CommitLogRecord)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<CommitLogRecord>
    nameWithType: ProtobufExtensions.SerializeToArray<CommitLogRecord>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.LogRecords.CommitLogRecord>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of CommitLogRecord)
    nameWithType: ProtobufExtensions.SerializeToArray(Of CommitLogRecord)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.#ctor
  name: CommitLogRecord
  nameWithType: CommitLogRecord.CommitLogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.CommitLogRecord
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.WriteTo(System.IO.BinaryWriter)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.LogRecord.WriteTo(System.IO.BinaryWriter)
  parent: EventStore.Core.TransactionLog.LogRecords.LogRecord
  isExternal: true
  name: WriteTo(BinaryWriter)
  nameWithType: LogRecord.WriteTo(BinaryWriter)
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.WriteTo(System.IO.BinaryWriter)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.WriteTo(System.IO.BinaryWriter)
    name: WriteTo
    nameWithType: LogRecord.WriteTo
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: BinaryWriter
    nameWithType: BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord.WriteTo(System.IO.BinaryWriter)
    name: WriteTo
    nameWithType: LogRecord.WriteTo
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: BinaryWriter
    nameWithType: BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.WriteTo*
  commentId: Overload:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.WriteTo
  name: WriteTo
  nameWithType: CommitLogRecord.WriteTo
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.WriteTo
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals*
  commentId: Overload:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals
  name: Equals
  nameWithType: CommitLogRecord.Equals
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equals
- uid: System.IEquatable{EventStore.Core.TransactionLog.LogRecords.CommitLogRecord}.Equals(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  commentId: M:System.IEquatable{EventStore.Core.TransactionLog.LogRecords.CommitLogRecord}.Equals(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  parent: System.IEquatable{EventStore.Core.TransactionLog.LogRecords.CommitLogRecord}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(CommitLogRecord)
  nameWithType: IEquatable<CommitLogRecord>.Equals(CommitLogRecord)
  fullName: System.IEquatable<EventStore.Core.TransactionLog.LogRecords.CommitLogRecord>.Equals(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  nameWithType.vb: IEquatable(Of CommitLogRecord).Equals(CommitLogRecord)
  fullName.vb: System.IEquatable(Of EventStore.Core.TransactionLog.LogRecords.CommitLogRecord).Equals(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<CommitLogRecord>.Equals
    fullName: System.IEquatable<EventStore.Core.TransactionLog.LogRecords.CommitLogRecord>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    name: CommitLogRecord
    nameWithType: CommitLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of CommitLogRecord).Equals
    fullName: System.IEquatable(Of EventStore.Core.TransactionLog.LogRecords.CommitLogRecord).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    name: CommitLogRecord
    nameWithType: CommitLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  name: CommitLogRecord
  nameWithType: CommitLogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.GetHashCode*
  commentId: Overload:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.GetHashCode
  name: GetHashCode
  nameWithType: CommitLogRecord.GetHashCode
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Equality*
  commentId: Overload:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Equality
  name: Equality
  nameWithType: CommitLogRecord.Equality
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Equality
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Inequality*
  commentId: Overload:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.op_Inequality
  name: Inequality
  nameWithType: CommitLogRecord.Inequality
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.Inequality
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.ToString*
  commentId: Overload:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.ToString
  name: ToString
  nameWithType: CommitLogRecord.ToString
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

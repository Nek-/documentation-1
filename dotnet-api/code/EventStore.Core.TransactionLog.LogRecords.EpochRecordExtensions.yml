### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions
  commentId: T:EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions
  id: EpochRecordExtensions
  parent: EventStore.Core.TransactionLog.LogRecords
  children:
  - EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString(EventStore.Core.Data.Epoch)
  - EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString(EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  langs:
  - csharp
  - vb
  name: EpochRecordExtensions
  nameWithType: EpochRecordExtensions
  fullName: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions
  type: Class
  source:
    id: EpochRecordExtensions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/EpochRecord.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public static class EpochRecordExtensions
    content.vb: Public Module EpochRecordExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString(EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString(EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  id: AsString(EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  isExtensionMethod: true
  parent: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions
  langs:
  - csharp
  - vb
  name: AsString(EpochRecord)
  nameWithType: EpochRecordExtensions.AsString(EpochRecord)
  fullName: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString(EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  type: Method
  source:
    id: AsString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/EpochRecord.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public static string AsString(this EpochRecord epoch)
    parameters:
    - id: epoch
      type: EventStore.Core.TransactionLog.LogRecords.EpochRecord
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsString(epoch As EpochRecord) As String
  overload: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString(EventStore.Core.Data.Epoch)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString(EventStore.Core.Data.Epoch)
  id: AsString(EventStore.Core.Data.Epoch)
  isExtensionMethod: true
  parent: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions
  langs:
  - csharp
  - vb
  name: AsString(Epoch)
  nameWithType: EpochRecordExtensions.AsString(Epoch)
  fullName: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString(EventStore.Core.Data.Epoch)
  type: Method
  source:
    id: AsString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/EpochRecord.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: public static string AsString(this Epoch epoch)
    parameters:
    - id: epoch
      type: EventStore.Core.Data.Epoch
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsString(epoch As Epoch) As String
  overload: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString*
  commentId: Overload:EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString
  name: AsString
  nameWithType: EpochRecordExtensions.AsString
  fullName: EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.AsString
- uid: EventStore.Core.TransactionLog.LogRecords.EpochRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.EpochRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  name: EpochRecord
  nameWithType: EpochRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.EpochRecord
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Data.Epoch
  commentId: T:EventStore.Core.Data.Epoch
  parent: EventStore.Core.Data
  name: Epoch
  nameWithType: Epoch
  fullName: EventStore.Core.Data.Epoch
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data

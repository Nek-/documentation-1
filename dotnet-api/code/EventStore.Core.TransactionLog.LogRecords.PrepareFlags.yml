### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  commentId: T:EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  id: PrepareFlags
  parent: EventStore.Core.TransactionLog.LogRecords
  children:
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.Data
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.DeleteTombstone
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.IsCommitted
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.IsJson
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.None
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.SingleWrite
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.StreamDelete
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.TransactionBegin
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.TransactionEnd
  langs:
  - csharp
  - vb
  name: PrepareFlags
  nameWithType: PrepareFlags
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  type: Enum
  source:
    id: PrepareFlags
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/PrepareLogRecord.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: >-
      [Flags]

      public enum PrepareFlags : ushort
    content.vb: >-
      <Flags>

      Public Enum PrepareFlags As UShort
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.None
  commentId: F:EventStore.Core.TransactionLog.LogRecords.PrepareFlags.None
  id: None
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  langs:
  - csharp
  - vb
  name: None
  nameWithType: PrepareFlags.None
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.None
  type: Field
  source:
    id: None
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/PrepareLogRecord.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: None = 0
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.Data
  commentId: F:EventStore.Core.TransactionLog.LogRecords.PrepareFlags.Data
  id: Data
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: PrepareFlags.Data
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.Data
  type: Field
  source:
    id: Data
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/PrepareLogRecord.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: Data = 1
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.TransactionBegin
  commentId: F:EventStore.Core.TransactionLog.LogRecords.PrepareFlags.TransactionBegin
  id: TransactionBegin
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  langs:
  - csharp
  - vb
  name: TransactionBegin
  nameWithType: PrepareFlags.TransactionBegin
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.TransactionBegin
  type: Field
  source:
    id: TransactionBegin
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/PrepareLogRecord.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: TransactionBegin = 2
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.TransactionEnd
  commentId: F:EventStore.Core.TransactionLog.LogRecords.PrepareFlags.TransactionEnd
  id: TransactionEnd
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  langs:
  - csharp
  - vb
  name: TransactionEnd
  nameWithType: PrepareFlags.TransactionEnd
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.TransactionEnd
  type: Field
  source:
    id: TransactionEnd
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/PrepareLogRecord.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: TransactionEnd = 4
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.StreamDelete
  commentId: F:EventStore.Core.TransactionLog.LogRecords.PrepareFlags.StreamDelete
  id: StreamDelete
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  langs:
  - csharp
  - vb
  name: StreamDelete
  nameWithType: PrepareFlags.StreamDelete
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.StreamDelete
  type: Field
  source:
    id: StreamDelete
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/PrepareLogRecord.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: StreamDelete = 8
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.IsCommitted
  commentId: F:EventStore.Core.TransactionLog.LogRecords.PrepareFlags.IsCommitted
  id: IsCommitted
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  langs:
  - csharp
  - vb
  name: IsCommitted
  nameWithType: PrepareFlags.IsCommitted
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.IsCommitted
  type: Field
  source:
    id: IsCommitted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/PrepareLogRecord.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: IsCommitted = 32
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.IsJson
  commentId: F:EventStore.Core.TransactionLog.LogRecords.PrepareFlags.IsJson
  id: IsJson
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  langs:
  - csharp
  - vb
  name: IsJson
  nameWithType: PrepareFlags.IsJson
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.IsJson
  type: Field
  source:
    id: IsJson
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/PrepareLogRecord.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: IsJson = 256
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.DeleteTombstone
  commentId: F:EventStore.Core.TransactionLog.LogRecords.PrepareFlags.DeleteTombstone
  id: DeleteTombstone
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  langs:
  - csharp
  - vb
  name: DeleteTombstone
  nameWithType: PrepareFlags.DeleteTombstone
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.DeleteTombstone
  type: Field
  source:
    id: DeleteTombstone
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/PrepareLogRecord.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: DeleteTombstone = 14
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.SingleWrite
  commentId: F:EventStore.Core.TransactionLog.LogRecords.PrepareFlags.SingleWrite
  id: SingleWrite
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  langs:
  - csharp
  - vb
  name: SingleWrite
  nameWithType: PrepareFlags.SingleWrite
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.SingleWrite
  type: Field
  source:
    id: SingleWrite
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/LogRecords/PrepareLogRecord.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.LogRecords
  syntax:
    content: SingleWrite = 7
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<PrepareFlags>()
  nameWithType: EnumExtensions.EnumValueName<PrepareFlags>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.TransactionLog.LogRecords.PrepareFlags>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of PrepareFlags)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.TransactionLog.LogRecords.PrepareFlags)()
  name.vb: EnumValueName(Of PrepareFlags)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<PrepareFlags>
    nameWithType: EnumExtensions.EnumValueName<PrepareFlags>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.TransactionLog.LogRecords.PrepareFlags>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of PrepareFlags)
    nameWithType: EnumExtensions.EnumValueName(Of PrepareFlags)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions
  definition: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  name: HasAllOf(PrepareFlags)
  nameWithType: PrepareFlagsExtensions.HasAllOf(PrepareFlags)
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasAllOf
    nameWithType: PrepareFlagsExtensions.HasAllOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasAllOf
    nameWithType: PrepareFlagsExtensions.HasAllOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions
  definition: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  name: HasAnyOf(PrepareFlags)
  nameWithType: PrepareFlagsExtensions.HasAnyOf(PrepareFlags)
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasAnyOf
    nameWithType: PrepareFlagsExtensions.HasAnyOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasAnyOf
    nameWithType: PrepareFlagsExtensions.HasAnyOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  parent: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions
  definition: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  name: HasNoneOf(PrepareFlags)
  nameWithType: PrepareFlagsExtensions.HasNoneOf(PrepareFlags)
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasNoneOf
    nameWithType: PrepareFlagsExtensions.HasNoneOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasNoneOf
    nameWithType: PrepareFlagsExtensions.HasNoneOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PrepareFlags>()
  nameWithType: ProtobufExtensions.Serialize<PrepareFlags>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.LogRecords.PrepareFlags>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PrepareFlags)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.LogRecords.PrepareFlags)()
  name.vb: Serialize(Of PrepareFlags)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PrepareFlags>
    nameWithType: ProtobufExtensions.Serialize<PrepareFlags>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.LogRecords.PrepareFlags>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PrepareFlags)
    nameWithType: ProtobufExtensions.Serialize(Of PrepareFlags)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PrepareFlags>()
  nameWithType: ProtobufExtensions.SerializeToArray<PrepareFlags>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.LogRecords.PrepareFlags>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PrepareFlags)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.LogRecords.PrepareFlags)()
  name.vb: SerializeToArray(Of PrepareFlags)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PrepareFlags>
    nameWithType: ProtobufExtensions.SerializeToArray<PrepareFlags>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.LogRecords.PrepareFlags>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PrepareFlags)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PrepareFlags)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  name: HasAllOf(PrepareFlags, PrepareFlags)
  nameWithType: PrepareFlagsExtensions.HasAllOf(PrepareFlags, PrepareFlags)
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags, EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasAllOf
    nameWithType: PrepareFlagsExtensions.HasAllOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasAllOf
    nameWithType: PrepareFlagsExtensions.HasAllOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAllOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions
  commentId: T:EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions
  parent: EventStore.Core.TransactionLog.LogRecords
  name: PrepareFlagsExtensions
  nameWithType: PrepareFlagsExtensions
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  name: HasAnyOf(PrepareFlags, PrepareFlags)
  nameWithType: PrepareFlagsExtensions.HasAnyOf(PrepareFlags, PrepareFlags)
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags, EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasAnyOf
    nameWithType: PrepareFlagsExtensions.HasAnyOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasAnyOf
    nameWithType: PrepareFlagsExtensions.HasAnyOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasAnyOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  commentId: M:EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  name: HasNoneOf(PrepareFlags, PrepareFlags)
  nameWithType: PrepareFlagsExtensions.HasNoneOf(PrepareFlags, PrepareFlags)
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags, EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasNoneOf
    nameWithType: PrepareFlagsExtensions.HasNoneOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf(EventStore.Core.TransactionLog.LogRecords.PrepareFlags,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
    name: HasNoneOf
    nameWithType: PrepareFlagsExtensions.HasNoneOf
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.HasNoneOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  commentId: T:EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  parent: EventStore.Core.TransactionLog.LogRecords
  name: PrepareFlags
  nameWithType: PrepareFlags
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.RecordWriteResult
  commentId: T:EventStore.Core.TransactionLog.RecordWriteResult
  id: RecordWriteResult
  parent: EventStore.Core.TransactionLog
  children:
  - EventStore.Core.TransactionLog.RecordWriteResult.#ctor(System.Boolean,System.Int64,System.Int64)
  - EventStore.Core.TransactionLog.RecordWriteResult.Failed(System.Int64)
  - EventStore.Core.TransactionLog.RecordWriteResult.NewPosition
  - EventStore.Core.TransactionLog.RecordWriteResult.OldPosition
  - EventStore.Core.TransactionLog.RecordWriteResult.Success
  - EventStore.Core.TransactionLog.RecordWriteResult.Successful(System.Int64,System.Int64)
  - EventStore.Core.TransactionLog.RecordWriteResult.ToString
  langs:
  - csharp
  - vb
  name: RecordWriteResult
  nameWithType: RecordWriteResult
  fullName: EventStore.Core.TransactionLog.RecordWriteResult
  type: Struct
  source:
    id: RecordWriteResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/RecordWriteResult.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: public struct RecordWriteResult
    content.vb: Public Structure RecordWriteResult
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.RecordWriteResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.TransactionLog.RecordWriteResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.RecordWriteResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.TransactionLog.RecordWriteResult.Success
  commentId: F:EventStore.Core.TransactionLog.RecordWriteResult.Success
  id: Success
  parent: EventStore.Core.TransactionLog.RecordWriteResult
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: RecordWriteResult.Success
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.Success
  type: Field
  source:
    id: Success
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/RecordWriteResult.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: public bool Success
    return:
      type: System.Boolean
    content.vb: Public Success As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.RecordWriteResult.OldPosition
  commentId: F:EventStore.Core.TransactionLog.RecordWriteResult.OldPosition
  id: OldPosition
  parent: EventStore.Core.TransactionLog.RecordWriteResult
  langs:
  - csharp
  - vb
  name: OldPosition
  nameWithType: RecordWriteResult.OldPosition
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.OldPosition
  type: Field
  source:
    id: OldPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/RecordWriteResult.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: public readonly long OldPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly OldPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.RecordWriteResult.NewPosition
  commentId: F:EventStore.Core.TransactionLog.RecordWriteResult.NewPosition
  id: NewPosition
  parent: EventStore.Core.TransactionLog.RecordWriteResult
  langs:
  - csharp
  - vb
  name: NewPosition
  nameWithType: RecordWriteResult.NewPosition
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.NewPosition
  type: Field
  source:
    id: NewPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/RecordWriteResult.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: public readonly long NewPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly NewPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.RecordWriteResult.#ctor(System.Boolean,System.Int64,System.Int64)
  commentId: M:EventStore.Core.TransactionLog.RecordWriteResult.#ctor(System.Boolean,System.Int64,System.Int64)
  id: '#ctor(System.Boolean,System.Int64,System.Int64)'
  parent: EventStore.Core.TransactionLog.RecordWriteResult
  langs:
  - csharp
  - vb
  name: RecordWriteResult(Boolean, Int64, Int64)
  nameWithType: RecordWriteResult.RecordWriteResult(Boolean, Int64, Int64)
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.RecordWriteResult(System.Boolean, System.Int64, System.Int64)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/RecordWriteResult.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: public RecordWriteResult(bool success, long oldPosition, long newPosition)
    parameters:
    - id: success
      type: System.Boolean
    - id: oldPosition
      type: System.Int64
    - id: newPosition
      type: System.Int64
    content.vb: Public Sub New(success As Boolean, oldPosition As Long, newPosition As Long)
  overload: EventStore.Core.TransactionLog.RecordWriteResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.RecordWriteResult.Failed(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.RecordWriteResult.Failed(System.Int64)
  id: Failed(System.Int64)
  parent: EventStore.Core.TransactionLog.RecordWriteResult
  langs:
  - csharp
  - vb
  name: Failed(Int64)
  nameWithType: RecordWriteResult.Failed(Int64)
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.Failed(System.Int64)
  type: Method
  source:
    id: Failed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/RecordWriteResult.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: public static RecordWriteResult Failed(long position)
    parameters:
    - id: position
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.RecordWriteResult
    content.vb: Public Shared Function Failed(position As Long) As RecordWriteResult
  overload: EventStore.Core.TransactionLog.RecordWriteResult.Failed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.RecordWriteResult.Successful(System.Int64,System.Int64)
  commentId: M:EventStore.Core.TransactionLog.RecordWriteResult.Successful(System.Int64,System.Int64)
  id: Successful(System.Int64,System.Int64)
  parent: EventStore.Core.TransactionLog.RecordWriteResult
  langs:
  - csharp
  - vb
  name: Successful(Int64, Int64)
  nameWithType: RecordWriteResult.Successful(Int64, Int64)
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.Successful(System.Int64, System.Int64)
  type: Method
  source:
    id: Successful
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/RecordWriteResult.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: public static RecordWriteResult Successful(long oldPosition, long newPosition)
    parameters:
    - id: oldPosition
      type: System.Int64
    - id: newPosition
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.RecordWriteResult
    content.vb: Public Shared Function Successful(oldPosition As Long, newPosition As Long) As RecordWriteResult
  overload: EventStore.Core.TransactionLog.RecordWriteResult.Successful*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.RecordWriteResult.ToString
  commentId: M:EventStore.Core.TransactionLog.RecordWriteResult.ToString
  id: ToString
  parent: EventStore.Core.TransactionLog.RecordWriteResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RecordWriteResult.ToString()
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/TransactionLog/RecordWriteResult.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: EventStore.Core.TransactionLog.RecordWriteResult.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.TransactionLog
  commentId: N:EventStore.Core.TransactionLog
  name: EventStore.Core.TransactionLog
  nameWithType: EventStore.Core.TransactionLog
  fullName: EventStore.Core.TransactionLog
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.RecordWriteResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<RecordWriteResult>()
  nameWithType: EnumExtensions.EnumValueName<RecordWriteResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.TransactionLog.RecordWriteResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of RecordWriteResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.TransactionLog.RecordWriteResult)()
  name.vb: EnumValueName(Of RecordWriteResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<RecordWriteResult>
    nameWithType: EnumExtensions.EnumValueName<RecordWriteResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.TransactionLog.RecordWriteResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of RecordWriteResult)
    nameWithType: EnumExtensions.EnumValueName(Of RecordWriteResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.TransactionLog.RecordWriteResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.RecordWriteResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<RecordWriteResult>()
  nameWithType: ProtobufExtensions.Serialize<RecordWriteResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.RecordWriteResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of RecordWriteResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.RecordWriteResult)()
  name.vb: Serialize(Of RecordWriteResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<RecordWriteResult>
    nameWithType: ProtobufExtensions.Serialize<RecordWriteResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.RecordWriteResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of RecordWriteResult)
    nameWithType: ProtobufExtensions.Serialize(Of RecordWriteResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.RecordWriteResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.RecordWriteResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<RecordWriteResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<RecordWriteResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.RecordWriteResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of RecordWriteResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.RecordWriteResult)()
  name.vb: SerializeToArray(Of RecordWriteResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<RecordWriteResult>
    nameWithType: ProtobufExtensions.SerializeToArray<RecordWriteResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.RecordWriteResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of RecordWriteResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of RecordWriteResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.RecordWriteResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.TransactionLog.RecordWriteResult.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.RecordWriteResult.#ctor
  name: RecordWriteResult
  nameWithType: RecordWriteResult.RecordWriteResult
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.RecordWriteResult
- uid: EventStore.Core.TransactionLog.RecordWriteResult.Failed*
  commentId: Overload:EventStore.Core.TransactionLog.RecordWriteResult.Failed
  name: Failed
  nameWithType: RecordWriteResult.Failed
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.Failed
- uid: EventStore.Core.TransactionLog.RecordWriteResult
  commentId: T:EventStore.Core.TransactionLog.RecordWriteResult
  parent: EventStore.Core.TransactionLog
  name: RecordWriteResult
  nameWithType: RecordWriteResult
  fullName: EventStore.Core.TransactionLog.RecordWriteResult
- uid: EventStore.Core.TransactionLog.RecordWriteResult.Successful*
  commentId: Overload:EventStore.Core.TransactionLog.RecordWriteResult.Successful
  name: Successful
  nameWithType: RecordWriteResult.Successful
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.Successful
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.RecordWriteResult.ToString*
  commentId: Overload:EventStore.Core.TransactionLog.RecordWriteResult.ToString
  name: ToString
  nameWithType: RecordWriteResult.ToString
  fullName: EventStore.Core.TransactionLog.RecordWriteResult.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

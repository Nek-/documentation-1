### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  commentId: T:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  id: UnbufferedFileStream
  parent: EventStore.Core.TransactionLog.Unbuffered
  children:
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanRead
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanSeek
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanWrite
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Create(System.String,FileMode,FileAccess,FileShare,System.Boolean,System.Int32,System.Int32,System.Boolean,System.UInt32)
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Dispose(System.Boolean)
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Flush
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Length
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Position
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Read(System.Byte[],System.Int32,System.Int32)
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Seek(System.Int64,SeekOrigin)
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.SetLength(System.Int64)
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: UnbufferedFileStream
  nameWithType: UnbufferedFileStream
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  type: Class
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: UnbufferedFileStream
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: 'public class UnbufferedFileStream : Stream'
    content.vb: >-
      Public Class UnbufferedFileStream
          Inherits Stream
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Create(System.String,FileMode,FileAccess,FileShare,System.Boolean,System.Int32,System.Int32,System.Boolean,System.UInt32)
  commentId: M:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Create(System.String,FileMode,FileAccess,FileShare,System.Boolean,System.Int32,System.Int32,System.Boolean,System.UInt32)
  id: Create(System.String,FileMode,FileAccess,FileShare,System.Boolean,System.Int32,System.Int32,System.Boolean,System.UInt32)
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: Create(String, FileMode, FileAccess, FileShare, Boolean, Int32, Int32, Boolean, UInt32)
  nameWithType: UnbufferedFileStream.Create(String, FileMode, FileAccess, FileShare, Boolean, Int32, Int32, Boolean, UInt32)
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Create(System.String, FileMode, FileAccess, FileShare, System.Boolean, System.Int32, System.Int32, System.Boolean, System.UInt32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Create
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 54
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public static UnbufferedFileStream Create(string path, FileMode mode, FileAccess acc, FileShare share, bool sequential, int internalWriteBufferSize, int internalReadBufferSize, bool writeThrough, uint minBlockSize)
    parameters:
    - id: path
      type: System.String
    - id: mode
      type: FileMode
    - id: acc
      type: FileAccess
    - id: share
      type: FileShare
    - id: sequential
      type: System.Boolean
    - id: internalWriteBufferSize
      type: System.Int32
    - id: internalReadBufferSize
      type: System.Int32
    - id: writeThrough
      type: System.Boolean
    - id: minBlockSize
      type: System.UInt32
    return:
      type: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
    content.vb: Public Shared Function Create(path As String, mode As FileMode, acc As FileAccess, share As FileShare, sequential As Boolean, internalWriteBufferSize As Integer, internalReadBufferSize As Integer, writeThrough As Boolean, minBlockSize As UInteger) As UnbufferedFileStream
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Flush
  commentId: M:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Flush
  id: Flush
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: UnbufferedFileStream.Flush()
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Flush()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Flush
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 74
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Flush*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Seek(System.Int64,SeekOrigin)
  commentId: M:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Seek(System.Int64,SeekOrigin)
  id: Seek(System.Int64,SeekOrigin)
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  nameWithType: UnbufferedFileStream.Seek(Int64, SeekOrigin)
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Seek(System.Int64, SeekOrigin)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Seek
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 132
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    parameters:
    - id: offset
      type: System.Int64
    - id: origin
      type: SeekOrigin
    return:
      type: System.Int64
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Seek*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.SetLength(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  nameWithType: UnbufferedFileStream.SetLength(Int64)
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetLength
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 153
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public override void SetLength(long value)
    parameters:
    - id: value
      type: System.Int64
    content.vb: Public Overrides Sub SetLength(value As Long)
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.SetLength*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  nameWithType: UnbufferedFileStream.Read(Byte[], Int32, Int32)
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Read
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 161
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Read*
  nameWithType.vb: UnbufferedFileStream.Read(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  nameWithType: UnbufferedFileStream.Write(Byte[], Int32, Int32)
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Write
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 189
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Write*
  nameWithType.vb: UnbufferedFileStream.Write(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanRead
  commentId: P:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanRead
  id: CanRead
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: UnbufferedFileStream.CanRead
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanRead
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CanRead
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 223
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public override bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanRead*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanSeek
  commentId: P:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanSeek
  id: CanSeek
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: UnbufferedFileStream.CanSeek
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanSeek
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CanSeek
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 230
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public override bool CanSeek { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanSeek*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanWrite
  commentId: P:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanWrite
  id: CanWrite
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: UnbufferedFileStream.CanWrite
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanWrite
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CanWrite
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 237
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public override bool CanWrite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanWrite*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Length
  commentId: P:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Length
  id: Length
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: UnbufferedFileStream.Length
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Length
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Length
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 244
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public override long Length { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides ReadOnly Property Length As Long
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Length*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Position
  commentId: P:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Position
  id: Position
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: UnbufferedFileStream.Position
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Position
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 251
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: public override long Position { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides Property Position As Long
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Position*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Dispose(System.Boolean)
  commentId: M:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: UnbufferedFileStream.Dispose(Boolean)
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Dispose
    path: ../EventStore/src/EventStore.Core/TransactionLog/Unbuffered/UnbufferedFileStream.cs
    startLine: 274
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Unbuffered
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overload: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: EventStore.Core.TransactionLog.Unbuffered
  commentId: N:EventStore.Core.TransactionLog.Unbuffered
  name: EventStore.Core.TransactionLog.Unbuffered
  nameWithType: EventStore.Core.TransactionLog.Unbuffered
  fullName: EventStore.Core.TransactionLog.Unbuffered
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<UnbufferedFileStream>()
  nameWithType: ProtobufExtensions.Serialize<UnbufferedFileStream>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of UnbufferedFileStream)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream)()
  name.vb: Serialize(Of UnbufferedFileStream)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<UnbufferedFileStream>
    nameWithType: ProtobufExtensions.Serialize<UnbufferedFileStream>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of UnbufferedFileStream)
    nameWithType: ProtobufExtensions.Serialize(Of UnbufferedFileStream)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<UnbufferedFileStream>()
  nameWithType: ProtobufExtensions.SerializeToArray<UnbufferedFileStream>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of UnbufferedFileStream)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream)()
  name.vb: SerializeToArray(Of UnbufferedFileStream)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<UnbufferedFileStream>
    nameWithType: ProtobufExtensions.SerializeToArray<UnbufferedFileStream>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of UnbufferedFileStream)
    nameWithType: ProtobufExtensions.SerializeToArray(Of UnbufferedFileStream)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Create*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Create
  name: Create
  nameWithType: UnbufferedFileStream.Create
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FileMode
  isExternal: true
  name: FileMode
  nameWithType: FileMode
  fullName: FileMode
- uid: FileAccess
  isExternal: true
  name: FileAccess
  nameWithType: FileAccess
  fullName: FileAccess
- uid: FileShare
  isExternal: true
  name: FileShare
  nameWithType: FileShare
  fullName: FileShare
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt32
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  commentId: T:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
  parent: EventStore.Core.TransactionLog.Unbuffered
  name: UnbufferedFileStream
  nameWithType: UnbufferedFileStream
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Flush*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Flush
  name: Flush
  nameWithType: UnbufferedFileStream.Flush
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Flush
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Seek*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Seek
  name: Seek
  nameWithType: UnbufferedFileStream.Seek
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Seek
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: SeekOrigin
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: SeekOrigin
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.SetLength*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.SetLength
  name: SetLength
  nameWithType: UnbufferedFileStream.SetLength
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.SetLength
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Read*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Read
  name: Read
  nameWithType: UnbufferedFileStream.Read
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Read
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Write*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Write
  name: Write
  nameWithType: UnbufferedFileStream.Write
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Write
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanRead*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanRead
  name: CanRead
  nameWithType: UnbufferedFileStream.CanRead
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanRead
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanSeek*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanSeek
  name: CanSeek
  nameWithType: UnbufferedFileStream.CanSeek
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanSeek
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanWrite*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanWrite
  name: CanWrite
  nameWithType: UnbufferedFileStream.CanWrite
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.CanWrite
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Length*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Length
  name: Length
  nameWithType: UnbufferedFileStream.Length
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Length
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Position*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Position
  name: Position
  nameWithType: UnbufferedFileStream.Position
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Position
- uid: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Dispose*
  commentId: Overload:EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Dispose
  name: Dispose
  nameWithType: UnbufferedFileStream.Dispose
  fullName: EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.Dispose

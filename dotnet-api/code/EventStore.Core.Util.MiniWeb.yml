### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Util.MiniWeb
  commentId: T:EventStore.Core.Util.MiniWeb
  id: MiniWeb
  parent: EventStore.Core.Util
  children:
  - EventStore.Core.Util.MiniWeb.#ctor(System.String)
  - EventStore.Core.Util.MiniWeb.#ctor(System.String,System.String)
  - EventStore.Core.Util.MiniWeb.GetWebRootFileSystemDirectory(System.String)
  - EventStore.Core.Util.MiniWeb.RegisterControllerActions(EventStore.Core.Services.Transport.Http.IHttpService)
  langs:
  - csharp
  - vb
  name: MiniWeb
  nameWithType: MiniWeb
  fullName: EventStore.Core.Util.MiniWeb
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Util/MiniWeb.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MiniWeb
    path: ../EventStore/src/EventStore.Core/Util/MiniWeb.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Util
  syntax:
    content: 'public class MiniWeb : object'
    content.vb: >-
      Public Class MiniWeb
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Util.MiniWeb.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Util.MiniWeb.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Util.MiniWeb.#ctor(System.String)
  commentId: M:EventStore.Core.Util.MiniWeb.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: EventStore.Core.Util.MiniWeb
  langs:
  - csharp
  - vb
  name: MiniWeb(String)
  nameWithType: MiniWeb.MiniWeb(String)
  fullName: EventStore.Core.Util.MiniWeb.MiniWeb(System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Util/MiniWeb.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Util/MiniWeb.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Util
  syntax:
    content: public MiniWeb(string localWebRootPath)
    parameters:
    - id: localWebRootPath
      type: System.String
    content.vb: Public Sub New(localWebRootPath As String)
  overload: EventStore.Core.Util.MiniWeb.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Util.MiniWeb.#ctor(System.String,System.String)
  commentId: M:EventStore.Core.Util.MiniWeb.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: EventStore.Core.Util.MiniWeb
  langs:
  - csharp
  - vb
  name: MiniWeb(String, String)
  nameWithType: MiniWeb.MiniWeb(String, String)
  fullName: EventStore.Core.Util.MiniWeb.MiniWeb(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Util/MiniWeb.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Util/MiniWeb.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Util
  syntax:
    content: public MiniWeb(string localWebRootPath, string fileSystemRoot)
    parameters:
    - id: localWebRootPath
      type: System.String
    - id: fileSystemRoot
      type: System.String
    content.vb: Public Sub New(localWebRootPath As String, fileSystemRoot As String)
  overload: EventStore.Core.Util.MiniWeb.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Util.MiniWeb.RegisterControllerActions(EventStore.Core.Services.Transport.Http.IHttpService)
  commentId: M:EventStore.Core.Util.MiniWeb.RegisterControllerActions(EventStore.Core.Services.Transport.Http.IHttpService)
  id: RegisterControllerActions(EventStore.Core.Services.Transport.Http.IHttpService)
  parent: EventStore.Core.Util.MiniWeb
  langs:
  - csharp
  - vb
  name: RegisterControllerActions(IHttpService)
  nameWithType: MiniWeb.RegisterControllerActions(IHttpService)
  fullName: EventStore.Core.Util.MiniWeb.RegisterControllerActions(EventStore.Core.Services.Transport.Http.IHttpService)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Util/MiniWeb.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: RegisterControllerActions
    path: ../EventStore/src/EventStore.Core/Util/MiniWeb.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Util
  syntax:
    content: public void RegisterControllerActions(IHttpService service)
    parameters:
    - id: service
      type: EventStore.Core.Services.Transport.Http.IHttpService
    content.vb: Public Sub RegisterControllerActions(service As IHttpService)
  overload: EventStore.Core.Util.MiniWeb.RegisterControllerActions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Util.MiniWeb.GetWebRootFileSystemDirectory(System.String)
  commentId: M:EventStore.Core.Util.MiniWeb.GetWebRootFileSystemDirectory(System.String)
  id: GetWebRootFileSystemDirectory(System.String)
  parent: EventStore.Core.Util.MiniWeb
  langs:
  - csharp
  - vb
  name: GetWebRootFileSystemDirectory(String)
  nameWithType: MiniWeb.GetWebRootFileSystemDirectory(String)
  fullName: EventStore.Core.Util.MiniWeb.GetWebRootFileSystemDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Util/MiniWeb.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetWebRootFileSystemDirectory
    path: ../EventStore/src/EventStore.Core/Util/MiniWeb.cs
    startLine: 116
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Util
  syntax:
    content: public static string GetWebRootFileSystemDirectory(string debugPath = null)
    parameters:
    - id: debugPath
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetWebRootFileSystemDirectory(debugPath As String = Nothing) As String
  overload: EventStore.Core.Util.MiniWeb.GetWebRootFileSystemDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core.Util
  commentId: N:EventStore.Core.Util
  name: EventStore.Core.Util
  nameWithType: EventStore.Core.Util
  fullName: EventStore.Core.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Util.MiniWeb.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MiniWeb>()
  nameWithType: ProtobufExtensions.Serialize<MiniWeb>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Util.MiniWeb>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MiniWeb)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Util.MiniWeb)()
  name.vb: Serialize(Of MiniWeb)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MiniWeb>
    nameWithType: ProtobufExtensions.Serialize<MiniWeb>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Util.MiniWeb>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MiniWeb)
    nameWithType: ProtobufExtensions.Serialize(Of MiniWeb)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Util.MiniWeb)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Util.MiniWeb.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MiniWeb>()
  nameWithType: ProtobufExtensions.SerializeToArray<MiniWeb>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Util.MiniWeb>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MiniWeb)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Util.MiniWeb)()
  name.vb: SerializeToArray(Of MiniWeb)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MiniWeb>
    nameWithType: ProtobufExtensions.SerializeToArray<MiniWeb>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Util.MiniWeb>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MiniWeb)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MiniWeb)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Util.MiniWeb)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Util.MiniWeb.#ctor*
  commentId: Overload:EventStore.Core.Util.MiniWeb.#ctor
  name: MiniWeb
  nameWithType: MiniWeb.MiniWeb
  fullName: EventStore.Core.Util.MiniWeb.MiniWeb
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Util.MiniWeb.RegisterControllerActions*
  commentId: Overload:EventStore.Core.Util.MiniWeb.RegisterControllerActions
  name: RegisterControllerActions
  nameWithType: MiniWeb.RegisterControllerActions
  fullName: EventStore.Core.Util.MiniWeb.RegisterControllerActions
- uid: EventStore.Core.Services.Transport.Http.IHttpService
  commentId: T:EventStore.Core.Services.Transport.Http.IHttpService
  parent: EventStore.Core.Services.Transport.Http
  name: IHttpService
  nameWithType: IHttpService
  fullName: EventStore.Core.Services.Transport.Http.IHttpService
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: EventStore.Core.Util.MiniWeb.GetWebRootFileSystemDirectory*
  commentId: Overload:EventStore.Core.Util.MiniWeb.GetWebRootFileSystemDirectory
  name: GetWebRootFileSystemDirectory
  nameWithType: MiniWeb.GetWebRootFileSystemDirectory
  fullName: EventStore.Core.Util.MiniWeb.GetWebRootFileSystemDirectory

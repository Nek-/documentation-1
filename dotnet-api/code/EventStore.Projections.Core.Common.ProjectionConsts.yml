### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Common.ProjectionConsts
  commentId: T:EventStore.Projections.Core.Common.ProjectionConsts
  id: ProjectionConsts
  parent: EventStore.Projections.Core.Common
  children:
  - EventStore.Projections.Core.Common.ProjectionConsts.CheckpointAfterMs
  - EventStore.Projections.Core.Common.ProjectionConsts.CheckpointHandledThreshold
  - EventStore.Projections.Core.Common.ProjectionConsts.CheckpointUnhandledBytesThreshold
  - EventStore.Projections.Core.Common.ProjectionConsts.MaxAllowedWritesInFlight
  - EventStore.Projections.Core.Common.ProjectionConsts.MaxWriteBatchLength
  - EventStore.Projections.Core.Common.ProjectionConsts.PendingEventsThreshold
  langs:
  - csharp
  - vb
  name: ProjectionConsts
  nameWithType: ProjectionConsts
  fullName: EventStore.Projections.Core.Common.ProjectionConsts
  type: Class
  source:
    id: ProjectionConsts
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public static class ProjectionConsts
    content.vb: Public Module ProjectionConsts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointHandledThreshold
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.CheckpointHandledThreshold
  id: CheckpointHandledThreshold
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: CheckpointHandledThreshold
  nameWithType: ProjectionConsts.CheckpointHandledThreshold
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointHandledThreshold
  type: Field
  source:
    id: CheckpointHandledThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public const int CheckpointHandledThreshold = 4000
    return:
      type: System.Int32
    content.vb: Public Const CheckpointHandledThreshold As Integer = 4000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Common.ProjectionConsts.PendingEventsThreshold
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.PendingEventsThreshold
  id: PendingEventsThreshold
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: PendingEventsThreshold
  nameWithType: ProjectionConsts.PendingEventsThreshold
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.PendingEventsThreshold
  type: Field
  source:
    id: PendingEventsThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public const int PendingEventsThreshold = 5000
    return:
      type: System.Int32
    content.vb: Public Const PendingEventsThreshold As Integer = 5000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Common.ProjectionConsts.MaxWriteBatchLength
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.MaxWriteBatchLength
  id: MaxWriteBatchLength
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: MaxWriteBatchLength
  nameWithType: ProjectionConsts.MaxWriteBatchLength
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.MaxWriteBatchLength
  type: Field
  source:
    id: MaxWriteBatchLength
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public const int MaxWriteBatchLength = 500
    return:
      type: System.Int32
    content.vb: Public Const MaxWriteBatchLength As Integer = 500
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointUnhandledBytesThreshold
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.CheckpointUnhandledBytesThreshold
  id: CheckpointUnhandledBytesThreshold
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ProjectionConsts.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointUnhandledBytesThreshold
  type: Field
  source:
    id: CheckpointUnhandledBytesThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public const int CheckpointUnhandledBytesThreshold = 10000000
    return:
      type: System.Int32
    content.vb: Public Const CheckpointUnhandledBytesThreshold As Integer = 10000000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Common.ProjectionConsts.MaxAllowedWritesInFlight
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.MaxAllowedWritesInFlight
  id: MaxAllowedWritesInFlight
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: MaxAllowedWritesInFlight
  nameWithType: ProjectionConsts.MaxAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.MaxAllowedWritesInFlight
  type: Field
  source:
    id: MaxAllowedWritesInFlight
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public const int MaxAllowedWritesInFlight = 0
    return:
      type: System.Int32
    content.vb: Public Const MaxAllowedWritesInFlight As Integer = 0
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointAfterMs
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.CheckpointAfterMs
  id: CheckpointAfterMs
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: CheckpointAfterMs
  nameWithType: ProjectionConsts.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointAfterMs
  type: Field
  source:
    id: CheckpointAfterMs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public static TimeSpan CheckpointAfterMs
    return:
      type: System.TimeSpan
    content.vb: Public Shared CheckpointAfterMs As TimeSpan
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Projections.Core.Common
  commentId: N:EventStore.Projections.Core.Common
  name: EventStore.Projections.Core.Common
  nameWithType: EventStore.Projections.Core.Common
  fullName: EventStore.Projections.Core.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan

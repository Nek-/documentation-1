### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService
  commentId: T:EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService
  id: FeedReaderService
  parent: EventStore.Projections.Core.EventReaders.Feeds
  children:
  - EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.#ctor(EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase},EventStore.Core.Services.TimerService.ITimeProvider)
  - EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.Handle(EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  langs:
  - csharp
  - vb
  name: FeedReaderService
  nameWithType: FeedReaderService
  fullName: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService
  type: Class
  source:
    id: FeedReaderService
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/EventReaders/Feeds/FeedReaderService.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.EventReaders.Feeds
  syntax:
    content: 'public class FeedReaderService : object, IHandle<FeedReaderMessage.ReadPage>'
    content.vb: >-
      Public Class FeedReaderService
          Inherits Object
          Implements IHandle(Of FeedReaderMessage.ReadPage)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.#ctor(EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase},EventStore.Core.Services.TimerService.ITimeProvider)
  commentId: M:EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.#ctor(EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase},EventStore.Core.Services.TimerService.ITimeProvider)
  id: '#ctor(EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase},EventStore.Core.Services.TimerService.ITimeProvider)'
  parent: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService
  langs:
  - csharp
  - vb
  name: FeedReaderService(PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>, ITimeProvider)
  nameWithType: FeedReaderService.FeedReaderService(PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>, ITimeProvider)
  fullName: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.FeedReaderService(EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>, EventStore.Core.Services.TimerService.ITimeProvider)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/EventReaders/Feeds/FeedReaderService.cs
    startLine: 17
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.EventReaders.Feeds
  syntax:
    content: public FeedReaderService(PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase> subscriptionDispatcher, ITimeProvider timeProvider)
    parameters:
    - id: subscriptionDispatcher
      type: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
    - id: timeProvider
      type: EventStore.Core.Services.TimerService.ITimeProvider
    content.vb: Public Sub New(subscriptionDispatcher As PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase), timeProvider As ITimeProvider)
  overload: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.#ctor*
  nameWithType.vb: FeedReaderService.FeedReaderService(PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase), ITimeProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.FeedReaderService(EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase), EventStore.Core.Services.TimerService.ITimeProvider)
  name.vb: FeedReaderService(PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase), ITimeProvider)
- uid: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.Handle(EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  commentId: M:EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.Handle(EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  id: Handle(EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  parent: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService
  langs:
  - csharp
  - vb
  name: Handle(FeedReaderMessage.ReadPage)
  nameWithType: FeedReaderService.Handle(FeedReaderMessage.ReadPage)
  fullName: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.Handle(EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/EventReaders/Feeds/FeedReaderService.cs
    startLine: 27
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.EventReaders.Feeds
  syntax:
    content: public void Handle(FeedReaderMessage.ReadPage message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
    content.vb: Public Sub Handle(message As FeedReaderMessage.ReadPage)
  overload: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage}.Handle(EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.EventReaders.Feeds
  commentId: N:EventStore.Projections.Core.EventReaders.Feeds
  name: EventStore.Projections.Core.EventReaders.Feeds
  nameWithType: EventStore.Projections.Core.EventReaders.Feeds
  fullName: EventStore.Projections.Core.EventReaders.Feeds
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<FeedReaderMessage.ReadPage>
  nameWithType: IHandle<FeedReaderMessage.ReadPage>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage>
  nameWithType.vb: IHandle(Of FeedReaderMessage.ReadPage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  name.vb: IHandle(Of FeedReaderMessage.ReadPage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
    name: FeedReaderMessage.ReadPage
    nameWithType: FeedReaderMessage.ReadPage
    fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
    name: FeedReaderMessage.ReadPage
    nameWithType: FeedReaderMessage.ReadPage
    fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.#ctor*
  commentId: Overload:EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.#ctor
  name: FeedReaderService
  nameWithType: FeedReaderService.FeedReaderService
  fullName: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.FeedReaderService
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  commentId: T:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  parent: EventStore.Projections.Core.Services
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
  name: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  name.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
    name: ReaderSubscriptionManagement.Subscribe
    nameWithType: ReaderSubscriptionManagement.Subscribe
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    name: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    nameWithType: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
    name: EventReaderSubscriptionMessageBase
    nameWithType: EventReaderSubscriptionMessageBase
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
    name: ReaderSubscriptionManagement.Subscribe
    nameWithType: ReaderSubscriptionManagement.Subscribe
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    name: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    nameWithType: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
    name: EventReaderSubscriptionMessageBase
    nameWithType: EventReaderSubscriptionMessageBase
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.TimerService.ITimeProvider
  commentId: T:EventStore.Core.Services.TimerService.ITimeProvider
  parent: EventStore.Core.Services.TimerService
  name: ITimeProvider
  nameWithType: ITimeProvider
  fullName: EventStore.Core.Services.TimerService.ITimeProvider
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
  commentId: T:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
  name: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase)
  name.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: <
    nameWithType: <
    fullName: <
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponseBase
    nameWithType: TResponseBase
    fullName: TResponseBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponseBase
    nameWithType: TResponseBase
    fullName: TResponseBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Core.Services.TimerService
  commentId: N:EventStore.Core.Services.TimerService
  name: EventStore.Core.Services.TimerService
  nameWithType: EventStore.Core.Services.TimerService
  fullName: EventStore.Core.Services.TimerService
- uid: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.Handle*
  commentId: Overload:EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.Handle
  name: Handle
  nameWithType: FeedReaderService.Handle
  fullName: EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage}.Handle(EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage}.Handle(EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(FeedReaderMessage.ReadPage)
  nameWithType: IHandle<FeedReaderMessage.ReadPage>.Handle(FeedReaderMessage.ReadPage)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage>.Handle(EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  nameWithType.vb: IHandle(Of FeedReaderMessage.ReadPage).Handle(FeedReaderMessage.ReadPage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage).Handle(EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<FeedReaderMessage.ReadPage>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
    name: FeedReaderMessage.ReadPage
    nameWithType: FeedReaderMessage.ReadPage
    fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of FeedReaderMessage.ReadPage).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
    name: FeedReaderMessage.ReadPage
    nameWithType: FeedReaderMessage.ReadPage
    fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
  commentId: T:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds
  name: FeedReaderMessage.ReadPage
  nameWithType: FeedReaderMessage.ReadPage
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds
  commentId: N:EventStore.Projections.Core.Messages.EventReaders.Feeds
  name: EventStore.Projections.Core.Messages.EventReaders.Feeds
  nameWithType: EventStore.Projections.Core.Messages.EventReaders.Feeds
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  id: EventReaderSubscriptionMessageBase
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  langs:
  - csharp
  - vb
  name: EventReaderSubscriptionMessageBase
  nameWithType: EventReaderSubscriptionMessageBase
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: EventReaderSubscriptionMessageBase
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 237
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public abstract class EventReaderSubscriptionMessageBase : Message'
    content.vb: >-
      Public MustInherit Class EventReaderSubscriptionMessageBase

          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  derivedClasses:
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: EventReaderSubscriptionMessageBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 240
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  id: CheckpointTag
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: CheckpointTag
  nameWithType: EventReaderSubscriptionMessageBase.CheckpointTag
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: CheckpointTag
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 260
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public CheckpointTag CheckpointTag { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property CheckpointTag As CheckpointTag
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  id: Progress
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: EventReaderSubscriptionMessageBase.Progress
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Progress
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 264
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  id: SubscriptionMessageSequenceNumber
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: SubscriptionMessageSequenceNumber
  nameWithType: EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: SubscriptionMessageSequenceNumber
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 268
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public long SubscriptionMessageSequenceNumber { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property SubscriptionMessageSequenceNumber As Long
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: EventReaderSubscriptionMessageBase.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 272
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Guid SubscriptionId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: Public ReadOnly Property SubscriptionId As Guid
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  id: Source
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: EventReaderSubscriptionMessageBase.Source
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Source
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 276
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public object Source { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Source As Object
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  name: MsgTypeId
  nameWithType: EventReaderSubscriptionMessageBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  name: CheckpointTag
  nameWithType: EventReaderSubscriptionMessageBase.CheckpointTag
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  name: Progress
  nameWithType: EventReaderSubscriptionMessageBase.Progress
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  name: SubscriptionMessageSequenceNumber
  nameWithType: EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  name: SubscriptionId
  nameWithType: EventReaderSubscriptionMessageBase.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  name: Source
  nameWithType: EventReaderSubscriptionMessageBase.Source
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source

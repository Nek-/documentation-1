### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  id: EventReaderSubscriptionMessageBase
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  langs:
  - csharp
  - vb
  name: EventReaderSubscriptionMessageBase
  nameWithType: EventReaderSubscriptionMessageBase
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventReaderSubscriptionMessageBase
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 270
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public abstract class EventReaderSubscriptionMessageBase : Message'
    content.vb: >-
      Public MustInherit Class EventReaderSubscriptionMessageBase
          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  derivedClasses:
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: EventReaderSubscriptionMessageBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 273
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  id: CheckpointTag
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: CheckpointTag
  nameWithType: EventReaderSubscriptionMessageBase.CheckpointTag
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CheckpointTag
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 291
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public CheckpointTag CheckpointTag { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property CheckpointTag As CheckpointTag
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  id: Progress
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: EventReaderSubscriptionMessageBase.Progress
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Progress
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 296
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  id: SubscriptionMessageSequenceNumber
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: SubscriptionMessageSequenceNumber
  nameWithType: EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SubscriptionMessageSequenceNumber
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 301
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public long SubscriptionMessageSequenceNumber { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property SubscriptionMessageSequenceNumber As Long
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: EventReaderSubscriptionMessageBase.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 306
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Guid SubscriptionId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: Public ReadOnly Property SubscriptionId As Guid
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  id: Source
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: EventReaderSubscriptionMessageBase.Source
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Source
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 311
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public object Source { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Source As Object
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<EventReaderSubscriptionMessageBase>()
  nameWithType: ProtobufExtensions.Serialize<EventReaderSubscriptionMessageBase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of EventReaderSubscriptionMessageBase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)()
  name.vb: Serialize(Of EventReaderSubscriptionMessageBase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<EventReaderSubscriptionMessageBase>
    nameWithType: ProtobufExtensions.Serialize<EventReaderSubscriptionMessageBase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of EventReaderSubscriptionMessageBase)
    nameWithType: ProtobufExtensions.Serialize(Of EventReaderSubscriptionMessageBase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<EventReaderSubscriptionMessageBase>()
  nameWithType: ProtobufExtensions.SerializeToArray<EventReaderSubscriptionMessageBase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of EventReaderSubscriptionMessageBase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)()
  name.vb: SerializeToArray(Of EventReaderSubscriptionMessageBase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<EventReaderSubscriptionMessageBase>
    nameWithType: ProtobufExtensions.SerializeToArray<EventReaderSubscriptionMessageBase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of EventReaderSubscriptionMessageBase)
    nameWithType: ProtobufExtensions.SerializeToArray(Of EventReaderSubscriptionMessageBase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  name: MsgTypeId
  nameWithType: EventReaderSubscriptionMessageBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  name: CheckpointTag
  nameWithType: EventReaderSubscriptionMessageBase.CheckpointTag
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  name: Progress
  nameWithType: EventReaderSubscriptionMessageBase.Progress
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  name: SubscriptionMessageSequenceNumber
  nameWithType: EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  name: SubscriptionId
  nameWithType: EventReaderSubscriptionMessageBase.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  name: Source
  nameWithType: EventReaderSubscriptionMessageBase.Source
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source

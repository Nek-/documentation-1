### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage
  commentId: T:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage
  id: FeedReaderMessage.FeedPage
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds
  children:
  - EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.#ctor(Guid,EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus,EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent[],EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.CorrelationId
  - EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.Error
  - EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.Events
  - EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.LastReaderPosition
  - EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.MsgTypeId
  langs:
  - csharp
  - vb
  name: FeedReaderMessage.FeedPage
  nameWithType: FeedReaderMessage.FeedPage
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: FeedPage
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
    startLine: 44
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.EventReaders.Feeds
  syntax:
    content: 'public sealed class FeedPage : FeedReaderMessage.FeedReaderMessageBase'
    content.vb: >-
      Public NotInheritable Class FeedPage
          Inherits FeedReaderMessage.FeedReaderMessageBase
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: FeedReaderMessage.FeedPage.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
    startLine: 47
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.EventReaders.Feeds
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase.MsgTypeId
  overload: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.CorrelationId
  commentId: F:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.CorrelationId
  id: CorrelationId
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: FeedReaderMessage.FeedPage.CorrelationId
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.CorrelationId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CorrelationId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
    startLine: 56
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.EventReaders.Feeds
  syntax:
    content: public readonly Guid CorrelationId
    return:
      type: Guid
    content.vb: Public ReadOnly CorrelationId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.Error
  commentId: F:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.Error
  id: Error
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: FeedReaderMessage.FeedPage.Error
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.Error
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Error
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
    startLine: 57
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.EventReaders.Feeds
  syntax:
    content: public readonly FeedReaderMessage.FeedPage.ErrorStatus Error
    return:
      type: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus
    content.vb: Public ReadOnly Error As FeedReaderMessage.FeedPage.ErrorStatus
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.Events
  commentId: F:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.Events
  id: Events
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: FeedReaderMessage.FeedPage.Events
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.Events
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Events
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
    startLine: 58
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.EventReaders.Feeds
  syntax:
    content: public readonly TaggedResolvedEvent[] Events
    return:
      type: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent[]
    content.vb: Public ReadOnly Events As TaggedResolvedEvent()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.LastReaderPosition
  commentId: F:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.LastReaderPosition
  id: LastReaderPosition
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage
  langs:
  - csharp
  - vb
  name: LastReaderPosition
  nameWithType: FeedReaderMessage.FeedPage.LastReaderPosition
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.LastReaderPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LastReaderPosition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
    startLine: 59
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.EventReaders.Feeds
  syntax:
    content: public readonly CheckpointTag LastReaderPosition
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly LastReaderPosition As CheckpointTag
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.#ctor(Guid,EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus,EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent[],EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.#ctor(Guid,EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus,EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent[],EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: '#ctor(Guid,EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus,EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent[],EventStore.Projections.Core.Services.Processing.CheckpointTag)'
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage
  langs:
  - csharp
  - vb
  name: FeedPage(Guid, FeedReaderMessage.FeedPage.ErrorStatus, TaggedResolvedEvent[], CheckpointTag)
  nameWithType: FeedReaderMessage.FeedPage.FeedPage(Guid, FeedReaderMessage.FeedPage.ErrorStatus, TaggedResolvedEvent[], CheckpointTag)
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.FeedPage(Guid, EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus, EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent[], EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaders/Feeds/FeedReaderMessage.cs
    startLine: 61
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.EventReaders.Feeds
  syntax:
    content: public FeedPage(Guid correlationId, FeedReaderMessage.FeedPage.ErrorStatus error, TaggedResolvedEvent[] events, CheckpointTag lastReaderPosition)
    parameters:
    - id: correlationId
      type: Guid
    - id: error
      type: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus
    - id: events
      type: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent[]
    - id: lastReaderPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub New(correlationId As Guid, error As FeedReaderMessage.FeedPage.ErrorStatus, events As TaggedResolvedEvent(), lastReaderPosition As CheckpointTag)
  overload: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.#ctor*
  nameWithType.vb: FeedReaderMessage.FeedPage.FeedPage(Guid, FeedReaderMessage.FeedPage.ErrorStatus, TaggedResolvedEvent(), CheckpointTag)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.FeedPage(Guid, EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus, EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent(), EventStore.Projections.Core.Services.Processing.CheckpointTag)
  name.vb: FeedPage(Guid, FeedReaderMessage.FeedPage.ErrorStatus, TaggedResolvedEvent(), CheckpointTag)
references:
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds
  commentId: N:EventStore.Projections.Core.Messages.EventReaders.Feeds
  name: EventStore.Projections.Core.Messages.EventReaders.Feeds
  nameWithType: EventStore.Projections.Core.Messages.EventReaders.Feeds
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase
  commentId: T:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds
  name: FeedReaderMessage.FeedReaderMessageBase
  nameWithType: FeedReaderMessage.FeedReaderMessageBase
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<FeedReaderMessage.FeedPage>()
  nameWithType: ProtobufExtensions.Serialize<FeedReaderMessage.FeedPage>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of FeedReaderMessage.FeedPage)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage)()
  name.vb: Serialize(Of FeedReaderMessage.FeedPage)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<FeedReaderMessage.FeedPage>
    nameWithType: ProtobufExtensions.Serialize<FeedReaderMessage.FeedPage>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of FeedReaderMessage.FeedPage)
    nameWithType: ProtobufExtensions.Serialize(Of FeedReaderMessage.FeedPage)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<FeedReaderMessage.FeedPage>()
  nameWithType: ProtobufExtensions.SerializeToArray<FeedReaderMessage.FeedPage>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of FeedReaderMessage.FeedPage)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage)()
  name.vb: SerializeToArray(Of FeedReaderMessage.FeedPage)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<FeedReaderMessage.FeedPage>
    nameWithType: ProtobufExtensions.SerializeToArray<FeedReaderMessage.FeedPage>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of FeedReaderMessage.FeedPage)
    nameWithType: ProtobufExtensions.SerializeToArray(Of FeedReaderMessage.FeedPage)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase.MsgTypeId
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase
  name: MsgTypeId
  nameWithType: FeedReaderMessage.FeedReaderMessageBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase.MsgTypeId
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.MsgTypeId
  name: MsgTypeId
  nameWithType: FeedReaderMessage.FeedPage.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus
  commentId: T:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus
  parent: EventStore.Projections.Core.Messages.EventReaders.Feeds
  name: FeedReaderMessage.FeedPage.ErrorStatus
  nameWithType: FeedReaderMessage.FeedPage.ErrorStatus
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus
- uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent[]
  isExternal: true
  name: TaggedResolvedEvent[]
  nameWithType: TaggedResolvedEvent[]
  fullName: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent[]
  nameWithType.vb: TaggedResolvedEvent()
  fullName.vb: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent()
  name.vb: TaggedResolvedEvent()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
    name: TaggedResolvedEvent
    nameWithType: TaggedResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
    name: TaggedResolvedEvent
    nameWithType: TaggedResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.#ctor
  name: FeedPage
  nameWithType: FeedReaderMessage.FeedPage.FeedPage
  fullName: EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.FeedPage

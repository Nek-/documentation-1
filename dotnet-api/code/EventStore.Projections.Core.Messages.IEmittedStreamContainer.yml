### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.IEmittedStreamContainer
  commentId: T:EventStore.Projections.Core.Messages.IEmittedStreamContainer
  id: IEmittedStreamContainer
  parent: EventStore.Projections.Core.Messages
  children: []
  langs:
  - csharp
  - vb
  name: IEmittedStreamContainer
  nameWithType: IEmittedStreamContainer
  fullName: EventStore.Projections.Core.Messages.IEmittedStreamContainer
  type: Interface
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/IProjectionCheckpointManager.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: IEmittedStreamContainer
    path: ../EventStore/src/EventStore.Projections.Core/Messages/IProjectionCheckpointManager.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public interface IEmittedStreamContainer : IProjectionCheckpointManager, IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed>, IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>, IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>'
    content.vb: >-
      Public Interface IEmittedStreamContainer

          Inherits IProjectionCheckpointManager, IHandle(Of CoreProjectionProcessingMessage.EmittedStreamAwaiting), IHandle(Of CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  inheritedMembers:
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}.Handle(CoreProjectionProcessingMessage.RestartRequested)
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}.Handle(CoreProjectionProcessingMessage.Failed)
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamAwaiting}.Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamWriteCompleted}.Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  nameWithType: IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint).Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint).Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.ReadyForCheckpoint
    name: CoreProjectionProcessingMessage.ReadyForCheckpoint
    nameWithType: CoreProjectionProcessingMessage.ReadyForCheckpoint
    fullName: CoreProjectionProcessingMessage.ReadyForCheckpoint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.ReadyForCheckpoint
    name: CoreProjectionProcessingMessage.ReadyForCheckpoint
    nameWithType: CoreProjectionProcessingMessage.ReadyForCheckpoint
    fullName: CoreProjectionProcessingMessage.ReadyForCheckpoint
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}.Handle(CoreProjectionProcessingMessage.RestartRequested)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}.Handle(CoreProjectionProcessingMessage.RestartRequested)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.RestartRequested)
  nameWithType: IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle(CoreProjectionProcessingMessage.RestartRequested)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle(CoreProjectionProcessingMessage.RestartRequested)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.RestartRequested).Handle(CoreProjectionProcessingMessage.RestartRequested)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.RestartRequested).Handle(CoreProjectionProcessingMessage.RestartRequested)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.RestartRequested
    name: CoreProjectionProcessingMessage.RestartRequested
    nameWithType: CoreProjectionProcessingMessage.RestartRequested
    fullName: CoreProjectionProcessingMessage.RestartRequested
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.RestartRequested).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.RestartRequested).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.RestartRequested
    name: CoreProjectionProcessingMessage.RestartRequested
    nameWithType: CoreProjectionProcessingMessage.RestartRequested
    fullName: CoreProjectionProcessingMessage.RestartRequested
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}.Handle(CoreProjectionProcessingMessage.Failed)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}.Handle(CoreProjectionProcessingMessage.Failed)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.Failed)
  nameWithType: IHandle<CoreProjectionProcessingMessage.Failed>.Handle(CoreProjectionProcessingMessage.Failed)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.Failed>.Handle(CoreProjectionProcessingMessage.Failed)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.Failed).Handle(CoreProjectionProcessingMessage.Failed)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.Failed).Handle(CoreProjectionProcessingMessage.Failed)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.Failed>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.Failed>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.Failed
    name: CoreProjectionProcessingMessage.Failed
    nameWithType: CoreProjectionProcessingMessage.Failed
    fullName: CoreProjectionProcessingMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.Failed).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.Failed).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.Failed
    name: CoreProjectionProcessingMessage.Failed
    nameWithType: CoreProjectionProcessingMessage.Failed
    fullName: CoreProjectionProcessingMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamAwaiting}.Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamAwaiting}.Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamAwaiting}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  nameWithType: IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>.Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>.Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.EmittedStreamAwaiting).Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.EmittedStreamAwaiting).Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    name: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    nameWithType: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    fullName: CoreProjectionProcessingMessage.EmittedStreamAwaiting
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.EmittedStreamAwaiting).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.EmittedStreamAwaiting).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    name: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    nameWithType: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    fullName: CoreProjectionProcessingMessage.EmittedStreamAwaiting
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamWriteCompleted}.Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamWriteCompleted}.Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamWriteCompleted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  nameWithType: IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>.Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>.Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.EmittedStreamWriteCompleted).Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.EmittedStreamWriteCompleted).Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    name: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    nameWithType: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    fullName: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.EmittedStreamWriteCompleted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.EmittedStreamWriteCompleted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    name: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    nameWithType: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    fullName: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>
  nameWithType: IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.ReadyForCheckpoint
    name: CoreProjectionProcessingMessage.ReadyForCheckpoint
    nameWithType: CoreProjectionProcessingMessage.ReadyForCheckpoint
    fullName: CoreProjectionProcessingMessage.ReadyForCheckpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.ReadyForCheckpoint
    name: CoreProjectionProcessingMessage.ReadyForCheckpoint
    nameWithType: CoreProjectionProcessingMessage.ReadyForCheckpoint
    fullName: CoreProjectionProcessingMessage.ReadyForCheckpoint
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.RestartRequested>
  nameWithType: IHandle<CoreProjectionProcessingMessage.RestartRequested>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.RestartRequested>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.RestartRequested)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.RestartRequested)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.RestartRequested)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.RestartRequested
    name: CoreProjectionProcessingMessage.RestartRequested
    nameWithType: CoreProjectionProcessingMessage.RestartRequested
    fullName: CoreProjectionProcessingMessage.RestartRequested
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.RestartRequested
    name: CoreProjectionProcessingMessage.RestartRequested
    nameWithType: CoreProjectionProcessingMessage.RestartRequested
    fullName: CoreProjectionProcessingMessage.RestartRequested
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.Failed>
  nameWithType: IHandle<CoreProjectionProcessingMessage.Failed>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.Failed>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.Failed)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.Failed)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.Failed)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.Failed
    name: CoreProjectionProcessingMessage.Failed
    nameWithType: CoreProjectionProcessingMessage.Failed
    fullName: CoreProjectionProcessingMessage.Failed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.Failed
    name: CoreProjectionProcessingMessage.Failed
    nameWithType: CoreProjectionProcessingMessage.Failed
    fullName: CoreProjectionProcessingMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamAwaiting}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamAwaiting}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>
  nameWithType: IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.EmittedStreamAwaiting)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    name: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    nameWithType: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    fullName: CoreProjectionProcessingMessage.EmittedStreamAwaiting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    name: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    nameWithType: CoreProjectionProcessingMessage.EmittedStreamAwaiting
    fullName: CoreProjectionProcessingMessage.EmittedStreamAwaiting
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamWriteCompleted}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.EmittedStreamWriteCompleted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>
  nameWithType: IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.EmittedStreamWriteCompleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    name: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    nameWithType: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    fullName: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    name: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    nameWithType: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
    fullName: CoreProjectionProcessingMessage.EmittedStreamWriteCompleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus

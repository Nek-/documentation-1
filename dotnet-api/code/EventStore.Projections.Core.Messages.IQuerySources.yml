### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.IQuerySources
  commentId: T:EventStore.Projections.Core.Messages.IQuerySources
  id: IQuerySources
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.IQuerySources.AllEvents
  - EventStore.Projections.Core.Messages.IQuerySources.AllStreams
  - EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions
  - EventStore.Projections.Core.Messages.IQuerySources.ByStreams
  - EventStore.Projections.Core.Messages.IQuerySources.CatalogStream
  - EventStore.Projections.Core.Messages.IQuerySources.Categories
  - EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  - EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  - EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  - EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  - EventStore.Projections.Core.Messages.IQuerySources.Events
  - EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  - EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  - EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  - EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition
  - EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  - EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  - EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  - EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  - EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  - EventStore.Projections.Core.Messages.IQuerySources.Streams
  langs:
  - csharp
  - vb
  name: IQuerySources
  nameWithType: IQuerySources
  fullName: EventStore.Projections.Core.Messages.IQuerySources
  type: Interface
  source:
    id: IQuerySources
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 1
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public interface IQuerySources
    content.vb: Public Interface IQuerySources
  extensionMethods:
  - EventStore.Projections.Core.Messages.IQuerySources.EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams
  - EventStore.Projections.Core.Messages.IQuerySources.EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories
  - EventStore.Projections.Core.Messages.IQuerySources.EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Projections.Core.Messages.IQuerySources.AllStreams
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.AllStreams
  id: AllStreams
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: AllStreams
  nameWithType: IQuerySources.AllStreams
  fullName: EventStore.Projections.Core.Messages.IQuerySources.AllStreams
  type: Property
  source:
    id: AllStreams
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 2
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool AllStreams { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property AllStreams As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.AllStreams*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.Categories
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.Categories
  id: Categories
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: IQuerySources.Categories
  fullName: EventStore.Projections.Core.Messages.IQuerySources.Categories
  type: Property
  source:
    id: Categories
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: string[] Categories { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: ReadOnly Property Categories As String()
  overload: EventStore.Projections.Core.Messages.IQuerySources.Categories*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.Streams
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.Streams
  id: Streams
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: Streams
  nameWithType: IQuerySources.Streams
  fullName: EventStore.Projections.Core.Messages.IQuerySources.Streams
  type: Property
  source:
    id: Streams
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: string[] Streams { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: ReadOnly Property Streams As String()
  overload: EventStore.Projections.Core.Messages.IQuerySources.Streams*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.CatalogStream
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.CatalogStream
  id: CatalogStream
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: CatalogStream
  nameWithType: IQuerySources.CatalogStream
  fullName: EventStore.Projections.Core.Messages.IQuerySources.CatalogStream
  type: Property
  source:
    id: CatalogStream
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: string CatalogStream { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property CatalogStream As String
  overload: EventStore.Projections.Core.Messages.IQuerySources.CatalogStream*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.AllEvents
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.AllEvents
  id: AllEvents
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: AllEvents
  nameWithType: IQuerySources.AllEvents
  fullName: EventStore.Projections.Core.Messages.IQuerySources.AllEvents
  type: Property
  source:
    id: AllEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool AllEvents { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property AllEvents As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.AllEvents*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.Events
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.Events
  id: Events
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: IQuerySources.Events
  fullName: EventStore.Projections.Core.Messages.IQuerySources.Events
  type: Property
  source:
    id: Events
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: string[] Events { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: ReadOnly Property Events As String()
  overload: EventStore.Projections.Core.Messages.IQuerySources.Events*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.ByStreams
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ByStreams
  id: ByStreams
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: ByStreams
  nameWithType: IQuerySources.ByStreams
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ByStreams
  type: Property
  source:
    id: ByStreams
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool ByStreams { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ByStreams As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.ByStreams*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions
  id: ByCustomPartitions
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: ByCustomPartitions
  nameWithType: IQuerySources.ByCustomPartitions
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions
  type: Property
  source:
    id: ByCustomPartitions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool ByCustomPartitions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ByCustomPartitions As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  id: DefinesStateTransform
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: DefinesStateTransform
  nameWithType: IQuerySources.DefinesStateTransform
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  type: Property
  source:
    id: DefinesStateTransform
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool DefinesStateTransform { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property DefinesStateTransform As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  id: DefinesCatalogTransform
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: DefinesCatalogTransform
  nameWithType: IQuerySources.DefinesCatalogTransform
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  type: Property
  source:
    id: DefinesCatalogTransform
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool DefinesCatalogTransform { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property DefinesCatalogTransform As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  id: DefinesFold
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: DefinesFold
  nameWithType: IQuerySources.DefinesFold
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  type: Property
  source:
    id: DefinesFold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool DefinesFold { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property DefinesFold As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.DefinesFold*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  id: HandlesDeletedNotifications
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: HandlesDeletedNotifications
  nameWithType: IQuerySources.HandlesDeletedNotifications
  fullName: EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  type: Property
  source:
    id: HandlesDeletedNotifications
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 24
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool HandlesDeletedNotifications { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property HandlesDeletedNotifications As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  id: ProducesResults
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: ProducesResults
  nameWithType: IQuerySources.ProducesResults
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  type: Property
  source:
    id: ProducesResults
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool ProducesResults { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ProducesResults As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.ProducesResults*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  id: IsBiState
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: IsBiState
  nameWithType: IQuerySources.IsBiState
  fullName: EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  type: Property
  source:
    id: IsBiState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 28
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IsBiState { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsBiState As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.IsBiState*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  id: IncludeLinksOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: IncludeLinksOption
  nameWithType: IQuerySources.IncludeLinksOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  type: Property
  source:
    id: IncludeLinksOption
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 30
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IncludeLinksOption { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IncludeLinksOption As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  id: DisableParallelismOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: DisableParallelismOption
  nameWithType: IQuerySources.DisableParallelismOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  type: Property
  source:
    id: DisableParallelismOption
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 32
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool DisableParallelismOption { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property DisableParallelismOption As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  id: ResultStreamNameOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: ResultStreamNameOption
  nameWithType: IQuerySources.ResultStreamNameOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  type: Property
  source:
    id: ResultStreamNameOption
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 34
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: string ResultStreamNameOption { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ResultStreamNameOption As String
  overload: EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  id: PartitionResultStreamNamePatternOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: PartitionResultStreamNamePatternOption
  nameWithType: IQuerySources.PartitionResultStreamNamePatternOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  type: Property
  source:
    id: PartitionResultStreamNamePatternOption
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 36
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: string PartitionResultStreamNamePatternOption { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property PartitionResultStreamNamePatternOption As String
  overload: EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  id: ReorderEventsOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: ReorderEventsOption
  nameWithType: IQuerySources.ReorderEventsOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  type: Property
  source:
    id: ReorderEventsOption
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 38
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool ReorderEventsOption { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ReorderEventsOption As Boolean
  overload: EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  id: ProcessingLagOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: ProcessingLagOption
  nameWithType: IQuerySources.ProcessingLagOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  type: Property
  source:
    id: ProcessingLagOption
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 40
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: int? ProcessingLagOption { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: ReadOnly Property ProcessingLagOption As Integer?
  overload: EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition
  id: LimitingCommitPosition
  parent: EventStore.Projections.Core.Messages.IQuerySources
  langs:
  - csharp
  - vb
  name: LimitingCommitPosition
  nameWithType: IQuerySources.LimitingCommitPosition
  fullName: EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition
  type: Property
  source:
    id: LimitingCommitPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 42
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: long? LimitingCommitPosition { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: ReadOnly Property LimitingCommitPosition As Long?
  overload: EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Messages.IQuerySources.EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams
  commentId: M:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
  parent: EventStore.Projections.Core.Messages.QuerySourcesExtensions
  definition: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
  name: HasStreams()
  nameWithType: QuerySourcesExtensions.HasStreams()
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams()
  spec.csharp:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams
    name: HasStreams
    nameWithType: QuerySourcesExtensions.HasStreams
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams
    name: HasStreams
    nameWithType: QuerySourcesExtensions.HasStreams
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.IQuerySources.EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories
  commentId: M:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
  parent: EventStore.Projections.Core.Messages.QuerySourcesExtensions
  definition: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
  name: HasCategories()
  nameWithType: QuerySourcesExtensions.HasCategories()
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories()
  spec.csharp:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories
    name: HasCategories
    nameWithType: QuerySourcesExtensions.HasCategories
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories
    name: HasCategories
    nameWithType: QuerySourcesExtensions.HasCategories
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.IQuerySources.EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents
  commentId: M:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
  parent: EventStore.Projections.Core.Messages.QuerySourcesExtensions
  definition: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
  name: HasEvents()
  nameWithType: QuerySourcesExtensions.HasEvents()
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents()
  spec.csharp:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents
    name: HasEvents
    nameWithType: QuerySourcesExtensions.HasEvents
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents
    name: HasEvents
    nameWithType: QuerySourcesExtensions.HasEvents
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
  commentId: M:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
  name: HasStreams(IQuerySources)
  nameWithType: QuerySourcesExtensions.HasStreams(IQuerySources)
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
  spec.csharp:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
    name: HasStreams
    nameWithType: QuerySourcesExtensions.HasStreams
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.IQuerySources
    name: IQuerySources
    nameWithType: IQuerySources
    fullName: EventStore.Projections.Core.Messages.IQuerySources
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
    name: HasStreams
    nameWithType: QuerySourcesExtensions.HasStreams
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.IQuerySources
    name: IQuerySources
    nameWithType: IQuerySources
    fullName: EventStore.Projections.Core.Messages.IQuerySources
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions
  commentId: T:EventStore.Projections.Core.Messages.QuerySourcesExtensions
  parent: EventStore.Projections.Core.Messages
  name: QuerySourcesExtensions
  nameWithType: QuerySourcesExtensions
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
  commentId: M:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
  name: HasCategories(IQuerySources)
  nameWithType: QuerySourcesExtensions.HasCategories(IQuerySources)
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
  spec.csharp:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
    name: HasCategories
    nameWithType: QuerySourcesExtensions.HasCategories
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.IQuerySources
    name: IQuerySources
    nameWithType: IQuerySources
    fullName: EventStore.Projections.Core.Messages.IQuerySources
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
    name: HasCategories
    nameWithType: QuerySourcesExtensions.HasCategories
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.IQuerySources
    name: IQuerySources
    nameWithType: IQuerySources
    fullName: EventStore.Projections.Core.Messages.IQuerySources
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
  commentId: M:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
  name: HasEvents(IQuerySources)
  nameWithType: QuerySourcesExtensions.HasEvents(IQuerySources)
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
  spec.csharp:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
    name: HasEvents
    nameWithType: QuerySourcesExtensions.HasEvents
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.IQuerySources
    name: IQuerySources
    nameWithType: IQuerySources
    fullName: EventStore.Projections.Core.Messages.IQuerySources
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
    name: HasEvents
    nameWithType: QuerySourcesExtensions.HasEvents
    fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.IQuerySources
    name: IQuerySources
    nameWithType: IQuerySources
    fullName: EventStore.Projections.Core.Messages.IQuerySources
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.IQuerySources.AllStreams*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.AllStreams
  name: AllStreams
  nameWithType: IQuerySources.AllStreams
  fullName: EventStore.Projections.Core.Messages.IQuerySources.AllStreams
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Messages.IQuerySources.Categories*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.Categories
  name: Categories
  nameWithType: IQuerySources.Categories
  fullName: EventStore.Projections.Core.Messages.IQuerySources.Categories
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Projections.Core.Messages.IQuerySources.Streams*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.Streams
  name: Streams
  nameWithType: IQuerySources.Streams
  fullName: EventStore.Projections.Core.Messages.IQuerySources.Streams
- uid: EventStore.Projections.Core.Messages.IQuerySources.CatalogStream*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.CatalogStream
  name: CatalogStream
  nameWithType: IQuerySources.CatalogStream
  fullName: EventStore.Projections.Core.Messages.IQuerySources.CatalogStream
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages.IQuerySources.AllEvents*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.AllEvents
  name: AllEvents
  nameWithType: IQuerySources.AllEvents
  fullName: EventStore.Projections.Core.Messages.IQuerySources.AllEvents
- uid: EventStore.Projections.Core.Messages.IQuerySources.Events*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.Events
  name: Events
  nameWithType: IQuerySources.Events
  fullName: EventStore.Projections.Core.Messages.IQuerySources.Events
- uid: EventStore.Projections.Core.Messages.IQuerySources.ByStreams*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.ByStreams
  name: ByStreams
  nameWithType: IQuerySources.ByStreams
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ByStreams
- uid: EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions
  name: ByCustomPartitions
  nameWithType: IQuerySources.ByCustomPartitions
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions
- uid: EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  name: DefinesStateTransform
  nameWithType: IQuerySources.DefinesStateTransform
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
- uid: EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  name: DefinesCatalogTransform
  nameWithType: IQuerySources.DefinesCatalogTransform
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
- uid: EventStore.Projections.Core.Messages.IQuerySources.DefinesFold*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  name: DefinesFold
  nameWithType: IQuerySources.DefinesFold
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
- uid: EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  name: HandlesDeletedNotifications
  nameWithType: IQuerySources.HandlesDeletedNotifications
  fullName: EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
- uid: EventStore.Projections.Core.Messages.IQuerySources.ProducesResults*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  name: ProducesResults
  nameWithType: IQuerySources.ProducesResults
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
- uid: EventStore.Projections.Core.Messages.IQuerySources.IsBiState*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  name: IsBiState
  nameWithType: IQuerySources.IsBiState
  fullName: EventStore.Projections.Core.Messages.IQuerySources.IsBiState
- uid: EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  name: IncludeLinksOption
  nameWithType: IQuerySources.IncludeLinksOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  name: DisableParallelismOption
  nameWithType: IQuerySources.DisableParallelismOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  name: ResultStreamNameOption
  nameWithType: IQuerySources.ResultStreamNameOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  name: PartitionResultStreamNamePatternOption
  nameWithType: IQuerySources.PartitionResultStreamNamePatternOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  name: ReorderEventsOption
  nameWithType: IQuerySources.ReorderEventsOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  name: ProcessingLagOption
  nameWithType: IQuerySources.ProcessingLagOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition*
  commentId: Overload:EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition
  name: LimitingCommitPosition
  nameWithType: IQuerySources.LimitingCommitPosition
  fullName: EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )

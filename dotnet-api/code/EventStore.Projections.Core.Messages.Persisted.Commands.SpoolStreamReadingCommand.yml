### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand
  commentId: T:EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand
  id: SpoolStreamReadingCommand
  parent: EventStore.Projections.Core.Messages.Persisted.Commands
  children:
  - EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.CatalogSequenceNumber
  - EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.LimitingCommitPosition
  - EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.StreamId
  - EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.SubscriptionId
  langs:
  - csharp
  - vb
  name: SpoolStreamReadingCommand
  nameWithType: SpoolStreamReadingCommand
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/SpoolStreamReadingCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SpoolStreamReadingCommand
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/SpoolStreamReadingCommand.cs
    startLine: 1
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: 'public class SpoolStreamReadingCommand : object'
    content.vb: >-
      Public Class SpoolStreamReadingCommand
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.SubscriptionId
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: SpoolStreamReadingCommand.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.SubscriptionId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/SpoolStreamReadingCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/SpoolStreamReadingCommand.cs
    startLine: 2
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public string SubscriptionId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SubscriptionId As String
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.SubscriptionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.StreamId
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.StreamId
  id: StreamId
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand
  langs:
  - csharp
  - vb
  name: StreamId
  nameWithType: SpoolStreamReadingCommand.StreamId
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.StreamId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/SpoolStreamReadingCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: StreamId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/SpoolStreamReadingCommand.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public string StreamId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StreamId As String
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.StreamId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.CatalogSequenceNumber
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.CatalogSequenceNumber
  id: CatalogSequenceNumber
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand
  langs:
  - csharp
  - vb
  name: CatalogSequenceNumber
  nameWithType: SpoolStreamReadingCommand.CatalogSequenceNumber
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.CatalogSequenceNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/SpoolStreamReadingCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CatalogSequenceNumber
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/SpoolStreamReadingCommand.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public long CatalogSequenceNumber { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property CatalogSequenceNumber As Long
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.CatalogSequenceNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.LimitingCommitPosition
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.LimitingCommitPosition
  id: LimitingCommitPosition
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand
  langs:
  - csharp
  - vb
  name: LimitingCommitPosition
  nameWithType: SpoolStreamReadingCommand.LimitingCommitPosition
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.LimitingCommitPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/SpoolStreamReadingCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LimitingCommitPosition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/SpoolStreamReadingCommand.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public long LimitingCommitPosition { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LimitingCommitPosition As Long
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.LimitingCommitPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Messages.Persisted.Commands
  commentId: N:EventStore.Projections.Core.Messages.Persisted.Commands
  name: EventStore.Projections.Core.Messages.Persisted.Commands
  nameWithType: EventStore.Projections.Core.Messages.Persisted.Commands
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SpoolStreamReadingCommand>()
  nameWithType: ProtobufExtensions.Serialize<SpoolStreamReadingCommand>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SpoolStreamReadingCommand)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand)()
  name.vb: Serialize(Of SpoolStreamReadingCommand)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SpoolStreamReadingCommand>
    nameWithType: ProtobufExtensions.Serialize<SpoolStreamReadingCommand>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SpoolStreamReadingCommand)
    nameWithType: ProtobufExtensions.Serialize(Of SpoolStreamReadingCommand)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SpoolStreamReadingCommand>()
  nameWithType: ProtobufExtensions.SerializeToArray<SpoolStreamReadingCommand>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SpoolStreamReadingCommand)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand)()
  name.vb: SerializeToArray(Of SpoolStreamReadingCommand)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SpoolStreamReadingCommand>
    nameWithType: ProtobufExtensions.SerializeToArray<SpoolStreamReadingCommand>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SpoolStreamReadingCommand)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SpoolStreamReadingCommand)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.SubscriptionId*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.SubscriptionId
  name: SubscriptionId
  nameWithType: SpoolStreamReadingCommand.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.SubscriptionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.StreamId*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.StreamId
  name: StreamId
  nameWithType: SpoolStreamReadingCommand.StreamId
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.StreamId
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.CatalogSequenceNumber*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.CatalogSequenceNumber
  name: CatalogSequenceNumber
  nameWithType: SpoolStreamReadingCommand.CatalogSequenceNumber
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.CatalogSequenceNumber
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.LimitingCommitPosition*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.LimitingCommitPosition
  name: LimitingCommitPosition
  nameWithType: SpoolStreamReadingCommand.LimitingCommitPosition
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.LimitingCommitPosition

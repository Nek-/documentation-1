### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport
  commentId: T:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport
  id: ResultReport
  parent: EventStore.Projections.Core.Messages.Persisted.Responses
  children:
  - EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.CorrelationId
  - EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Id
  - EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Partition
  - EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Position
  - EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Result
  langs:
  - csharp
  - vb
  name: ResultReport
  nameWithType: ResultReport
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ResultReport
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: 'public class ResultReport : object'
    content.vb: >-
      Public Class ResultReport
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Id
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Id
  id: Id
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ResultReport.Id
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Id
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Id
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.CorrelationId
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.CorrelationId
  id: CorrelationId
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: ResultReport.CorrelationId
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.CorrelationId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CorrelationId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: public string CorrelationId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CorrelationId As String
  overload: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.CorrelationId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Result
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Result
  id: Result
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: ResultReport.Result
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Result
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Result
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: public string Result { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Result As String
  overload: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Result*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Partition
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Partition
  id: Partition
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport
  langs:
  - csharp
  - vb
  name: Partition
  nameWithType: ResultReport.Partition
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Partition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Partition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: public string Partition { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Partition As String
  overload: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Partition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Position
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Position
  id: Position
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ResultReport.Position
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Position
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/ResultReport.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: public CheckpointTag Position { get; set; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Property Position As CheckpointTag
  overload: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Messages.Persisted.Responses
  commentId: N:EventStore.Projections.Core.Messages.Persisted.Responses
  name: EventStore.Projections.Core.Messages.Persisted.Responses
  nameWithType: EventStore.Projections.Core.Messages.Persisted.Responses
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ResultReport>()
  nameWithType: ProtobufExtensions.Serialize<ResultReport>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ResultReport)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport)()
  name.vb: Serialize(Of ResultReport)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ResultReport>
    nameWithType: ProtobufExtensions.Serialize<ResultReport>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ResultReport)
    nameWithType: ProtobufExtensions.Serialize(Of ResultReport)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ResultReport>()
  nameWithType: ProtobufExtensions.SerializeToArray<ResultReport>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ResultReport)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport)()
  name.vb: SerializeToArray(Of ResultReport)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ResultReport>
    nameWithType: ProtobufExtensions.SerializeToArray<ResultReport>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ResultReport)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ResultReport)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Id*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Id
  name: Id
  nameWithType: ResultReport.Id
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.CorrelationId*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.CorrelationId
  name: CorrelationId
  nameWithType: ResultReport.CorrelationId
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.CorrelationId
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Result*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Result
  name: Result
  nameWithType: ResultReport.Result
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Result
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Partition*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Partition
  name: Partition
  nameWithType: ResultReport.Partition
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Partition
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Position*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Position
  name: Position
  nameWithType: ResultReport.Position
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.Position
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing

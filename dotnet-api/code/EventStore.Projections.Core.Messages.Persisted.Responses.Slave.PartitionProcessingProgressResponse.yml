### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse
  commentId: T:EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse
  id: PartitionProcessingProgressResponse
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  children:
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.Partition
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.Progress
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.SubscriptionId
  langs:
  - csharp
  - vb
  name: PartitionProcessingProgressResponse
  nameWithType: PartitionProcessingProgressResponse
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingProgressResponse.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PartitionProcessingProgressResponse
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingProgressResponse.cs
    startLine: 2
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  syntax:
    content: 'public class PartitionProcessingProgressResponse : object'
    content.vb: >-
      Public Class PartitionProcessingProgressResponse
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.SubscriptionId
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: PartitionProcessingProgressResponse.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.SubscriptionId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingProgressResponse.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingProgressResponse.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  syntax:
    content: public string SubscriptionId
    return:
      type: System.String
    content.vb: Public SubscriptionId As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.Partition
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.Partition
  id: Partition
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse
  langs:
  - csharp
  - vb
  name: Partition
  nameWithType: PartitionProcessingProgressResponse.Partition
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.Partition
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingProgressResponse.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Partition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingProgressResponse.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  syntax:
    content: public string Partition
    return:
      type: System.String
    content.vb: Public Partition As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.Progress
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.Progress
  id: Progress
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: PartitionProcessingProgressResponse.Progress
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.Progress
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingProgressResponse.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Progress
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingProgressResponse.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  syntax:
    content: public float Progress
    return:
      type: System.Single
    content.vb: Public Progress As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  commentId: N:EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  name: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  nameWithType: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PartitionProcessingProgressResponse>()
  nameWithType: ProtobufExtensions.Serialize<PartitionProcessingProgressResponse>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PartitionProcessingProgressResponse)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse)()
  name.vb: Serialize(Of PartitionProcessingProgressResponse)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PartitionProcessingProgressResponse>
    nameWithType: ProtobufExtensions.Serialize<PartitionProcessingProgressResponse>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PartitionProcessingProgressResponse)
    nameWithType: ProtobufExtensions.Serialize(Of PartitionProcessingProgressResponse)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PartitionProcessingProgressResponse>()
  nameWithType: ProtobufExtensions.SerializeToArray<PartitionProcessingProgressResponse>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PartitionProcessingProgressResponse)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse)()
  name.vb: SerializeToArray(Of PartitionProcessingProgressResponse)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PartitionProcessingProgressResponse>
    nameWithType: ProtobufExtensions.SerializeToArray<PartitionProcessingProgressResponse>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PartitionProcessingProgressResponse)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PartitionProcessingProgressResponse)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single

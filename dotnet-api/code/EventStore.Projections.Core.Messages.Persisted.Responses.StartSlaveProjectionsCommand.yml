### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand
  commentId: T:EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand
  id: StartSlaveProjectionsCommand
  parent: EventStore.Projections.Core.Messages.Persisted.Responses
  children:
  - EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.MasterCorrelationId
  - EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.MasterWorkerId
  - EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.Name
  - EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.RunAs
  - EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.SlaveProjections
  langs:
  - csharp
  - vb
  name: StartSlaveProjectionsCommand
  nameWithType: StartSlaveProjectionsCommand
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: StartSlaveProjectionsCommand
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: 'public class StartSlaveProjectionsCommand : object'
    content.vb: >-
      Public Class StartSlaveProjectionsCommand
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.Name
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.Name
  id: Name
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StartSlaveProjectionsCommand.Name
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.Name
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.RunAs
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.RunAs
  id: RunAs
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand
  langs:
  - csharp
  - vb
  name: RunAs
  nameWithType: StartSlaveProjectionsCommand.RunAs
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.RunAs
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: RunAs
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: public SerializedRunAs RunAs
    return:
      type: EventStore.Projections.Core.Services.Management.SerializedRunAs
    content.vb: Public RunAs As SerializedRunAs
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.MasterCorrelationId
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.MasterCorrelationId
  id: MasterCorrelationId
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand
  langs:
  - csharp
  - vb
  name: MasterCorrelationId
  nameWithType: StartSlaveProjectionsCommand.MasterCorrelationId
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.MasterCorrelationId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MasterCorrelationId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: public string MasterCorrelationId
    return:
      type: System.String
    content.vb: Public MasterCorrelationId As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.MasterWorkerId
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.MasterWorkerId
  id: MasterWorkerId
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand
  langs:
  - csharp
  - vb
  name: MasterWorkerId
  nameWithType: StartSlaveProjectionsCommand.MasterWorkerId
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.MasterWorkerId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MasterWorkerId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: public string MasterWorkerId
    return:
      type: System.String
    content.vb: Public MasterWorkerId As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.SlaveProjections
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.SlaveProjections
  id: SlaveProjections
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand
  langs:
  - csharp
  - vb
  name: SlaveProjections
  nameWithType: StartSlaveProjectionsCommand.SlaveProjections
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.SlaveProjections
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SlaveProjections
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/StartSlaveProjectionsCommand.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses
  syntax:
    content: public SlaveProjectionDefinitions SlaveProjections
    return:
      type: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions
    content.vb: Public SlaveProjections As SlaveProjectionDefinitions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Messages.Persisted.Responses
  commentId: N:EventStore.Projections.Core.Messages.Persisted.Responses
  name: EventStore.Projections.Core.Messages.Persisted.Responses
  nameWithType: EventStore.Projections.Core.Messages.Persisted.Responses
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<StartSlaveProjectionsCommand>()
  nameWithType: ProtobufExtensions.Serialize<StartSlaveProjectionsCommand>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of StartSlaveProjectionsCommand)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand)()
  name.vb: Serialize(Of StartSlaveProjectionsCommand)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<StartSlaveProjectionsCommand>
    nameWithType: ProtobufExtensions.Serialize<StartSlaveProjectionsCommand>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of StartSlaveProjectionsCommand)
    nameWithType: ProtobufExtensions.Serialize(Of StartSlaveProjectionsCommand)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<StartSlaveProjectionsCommand>()
  nameWithType: ProtobufExtensions.SerializeToArray<StartSlaveProjectionsCommand>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of StartSlaveProjectionsCommand)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand)()
  name.vb: SerializeToArray(Of StartSlaveProjectionsCommand)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<StartSlaveProjectionsCommand>
    nameWithType: ProtobufExtensions.SerializeToArray<StartSlaveProjectionsCommand>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of StartSlaveProjectionsCommand)
    nameWithType: ProtobufExtensions.SerializeToArray(Of StartSlaveProjectionsCommand)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs
  commentId: T:EventStore.Projections.Core.Services.Management.SerializedRunAs
  parent: EventStore.Projections.Core.Services.Management
  name: SerializedRunAs
  nameWithType: SerializedRunAs
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions
  commentId: T:EventStore.Projections.Core.Messages.SlaveProjectionDefinitions
  parent: EventStore.Projections.Core.Messages
  name: SlaveProjectionDefinitions
  nameWithType: SlaveProjectionDefinitions
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages

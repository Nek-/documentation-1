### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  id: ProjectionManagementMessage.Command.Post
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.Boolean)
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Services.ProjectionMode,System.String,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Services.ProjectionMode,System.String,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,Type,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.CheckpointsEnabled
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EmitEnabled
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Enabled
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EnableRunAs
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.HandlerType
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Mode
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.MsgTypeId
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Name
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Query
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.TrackEmittedStreams
  langs:
  - csharp
  - vb
  name: ProjectionManagementMessage.Command.Post
  nameWithType: ProjectionManagementMessage.Command.Post
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Post
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 81
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public class Post : ProjectionManagementMessage.Command.ControlMessage'
    content.vb: >-
      Public Class Post

          Inherits ProjectionManagementMessage.Command.ControlMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  inheritedMembers:
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.RunAs
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.Envelope
  - EventStore.Core.Messaging.Message.NextMsgId
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.Command.Post.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 84
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.MsgTypeId
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Services.ProjectionMode,System.String,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Services.ProjectionMode,System.String,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Services.ProjectionMode,System.String,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: Post(IEnvelope, ProjectionMode, String, ProjectionManagementMessage.RunAs, String, String, Boolean, Boolean, Boolean, Boolean, Boolean)
  nameWithType: ProjectionManagementMessage.Command.Post.Post(IEnvelope, ProjectionMode, String, ProjectionManagementMessage.RunAs, String, String, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Post(EventStore.Core.Messaging.IEnvelope, EventStore.Projections.Core.Services.ProjectionMode, System.String, EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 98
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Post(IEnvelope envelope, ProjectionMode mode, string name, ProjectionManagementMessage.RunAs runAs, string handlerType, string query, bool enabled, bool checkpointsEnabled, bool emitEnabled, bool trackEmittedStreams, bool enableRunAs = false)
    parameters:
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: mode
      type: EventStore.Projections.Core.Services.ProjectionMode
    - id: name
      type: System.String
    - id: runAs
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
    - id: handlerType
      type: System.String
    - id: query
      type: System.String
    - id: enabled
      type: System.Boolean
    - id: checkpointsEnabled
      type: System.Boolean
    - id: emitEnabled
      type: System.Boolean
    - id: trackEmittedStreams
      type: System.Boolean
    - id: enableRunAs
      type: System.Boolean
    content.vb: Public Sub New(envelope As IEnvelope, mode As ProjectionMode, name As String, runAs As ProjectionManagementMessage.RunAs, handlerType As String, query As String, enabled As Boolean, checkpointsEnabled As Boolean, emitEnabled As Boolean, trackEmittedStreams As Boolean, enableRunAs As Boolean = False)
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Services.ProjectionMode,System.String,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,Type,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Services.ProjectionMode,System.String,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,Type,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Services.ProjectionMode,System.String,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,Type,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: Post(IEnvelope, ProjectionMode, String, ProjectionManagementMessage.RunAs, Type, String, Boolean, Boolean, Boolean, Boolean, Boolean)
  nameWithType: ProjectionManagementMessage.Command.Post.Post(IEnvelope, ProjectionMode, String, ProjectionManagementMessage.RunAs, Type, String, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Post(EventStore.Core.Messaging.IEnvelope, EventStore.Projections.Core.Services.ProjectionMode, System.String, EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs, Type, System.String, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 114
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Post(IEnvelope envelope, ProjectionMode mode, string name, ProjectionManagementMessage.RunAs runAs, Type handlerType, string query, bool enabled, bool checkpointsEnabled, bool emitEnabled, bool trackEmittedStreams, bool enableRunAs = false)
    parameters:
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: mode
      type: EventStore.Projections.Core.Services.ProjectionMode
    - id: name
      type: System.String
    - id: runAs
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
    - id: handlerType
      type: Type
    - id: query
      type: System.String
    - id: enabled
      type: System.Boolean
    - id: checkpointsEnabled
      type: System.Boolean
    - id: emitEnabled
      type: System.Boolean
    - id: trackEmittedStreams
      type: System.Boolean
    - id: enableRunAs
      type: System.Boolean
    content.vb: Public Sub New(envelope As IEnvelope, mode As ProjectionMode, name As String, runAs As ProjectionManagementMessage.RunAs, handlerType As Type, query As String, enabled As Boolean, checkpointsEnabled As Boolean, emitEnabled As Boolean, trackEmittedStreams As Boolean, enableRunAs As Boolean = False)
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.Boolean)
  commentId: M:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.Boolean)
  id: '#ctor(EventStore.Core.Messaging.IEnvelope,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.Boolean)'
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: Post(IEnvelope, ProjectionManagementMessage.RunAs, String, Boolean)
  nameWithType: ProjectionManagementMessage.Command.Post.Post(IEnvelope, ProjectionManagementMessage.RunAs, String, Boolean)
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Post(EventStore.Core.Messaging.IEnvelope, EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 131
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Post(IEnvelope envelope, ProjectionManagementMessage.RunAs runAs, string query, bool enabled)
    parameters:
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: runAs
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
    - id: query
      type: System.String
    - id: enabled
      type: System.Boolean
    content.vb: Public Sub New(envelope As IEnvelope, runAs As ProjectionManagementMessage.RunAs, query As String, enabled As Boolean)
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Mode
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Mode
  id: Mode
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: ProjectionManagementMessage.Command.Post.Mode
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Mode
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Mode
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 143
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ProjectionMode Mode { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.ProjectionMode
    content.vb: Public ReadOnly Property Mode As ProjectionMode
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Mode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Query
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Query
  id: Query
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ProjectionManagementMessage.Command.Post.Query
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Query
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Query
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 147
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Query { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Query As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Query*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Name
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Name
  id: Name
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectionManagementMessage.Command.Post.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 151
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.HandlerType
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.HandlerType
  id: HandlerType
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: HandlerType
  nameWithType: ProjectionManagementMessage.Command.Post.HandlerType
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.HandlerType
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: HandlerType
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 155
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string HandlerType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property HandlerType As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.HandlerType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Enabled
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Enabled
  id: Enabled
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: ProjectionManagementMessage.Command.Post.Enabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Enabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Enabled
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 159
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool Enabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Enabled As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Enabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EmitEnabled
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EmitEnabled
  id: EmitEnabled
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: EmitEnabled
  nameWithType: ProjectionManagementMessage.Command.Post.EmitEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EmitEnabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: EmitEnabled
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 163
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool EmitEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EmitEnabled As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EmitEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.CheckpointsEnabled
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.CheckpointsEnabled
  id: CheckpointsEnabled
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: CheckpointsEnabled
  nameWithType: ProjectionManagementMessage.Command.Post.CheckpointsEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.CheckpointsEnabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: CheckpointsEnabled
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 167
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool CheckpointsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CheckpointsEnabled As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.CheckpointsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EnableRunAs
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EnableRunAs
  id: EnableRunAs
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: EnableRunAs
  nameWithType: ProjectionManagementMessage.Command.Post.EnableRunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EnableRunAs
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: EnableRunAs
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 171
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool EnableRunAs { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EnableRunAs As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EnableRunAs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.TrackEmittedStreams
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.TrackEmittedStreams
  id: TrackEmittedStreams
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  langs:
  - csharp
  - vb
  name: TrackEmittedStreams
  nameWithType: ProjectionManagementMessage.Command.Post.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.TrackEmittedStreams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: TrackEmittedStreams
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 175
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool TrackEmittedStreams { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property TrackEmittedStreams As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.TrackEmittedStreams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.ControlMessage
  nameWithType: ProjectionManagementMessage.Command.ControlMessage
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.RunAs
  commentId: F:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.RunAs
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  name: RunAs
  nameWithType: ProjectionManagementMessage.Command.ControlMessage.RunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.RunAs
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.Envelope
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.Envelope
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  name: Envelope
  nameWithType: ProjectionManagementMessage.Command.ControlMessage.Envelope
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.Envelope
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.MsgTypeId
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.Command.ControlMessage.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.MsgTypeId
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.MsgTypeId
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.Command.Post.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.#ctor
  name: Post
  nameWithType: ProjectionManagementMessage.Command.Post.Post
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Post
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: EventStore.Projections.Core.Services.ProjectionMode
  commentId: T:EventStore.Projections.Core.Services.ProjectionMode
  parent: EventStore.Projections.Core.Services
  name: ProjectionMode
  nameWithType: ProjectionMode
  fullName: EventStore.Projections.Core.Services.ProjectionMode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.RunAs
  nameWithType: ProjectionManagementMessage.RunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Mode*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Mode
  name: Mode
  nameWithType: ProjectionManagementMessage.Command.Post.Mode
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Mode
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Query*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Query
  name: Query
  nameWithType: ProjectionManagementMessage.Command.Post.Query
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Query
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Name*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Name
  name: Name
  nameWithType: ProjectionManagementMessage.Command.Post.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Name
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.HandlerType*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.HandlerType
  name: HandlerType
  nameWithType: ProjectionManagementMessage.Command.Post.HandlerType
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.HandlerType
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Enabled*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Enabled
  name: Enabled
  nameWithType: ProjectionManagementMessage.Command.Post.Enabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.Enabled
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EmitEnabled*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EmitEnabled
  name: EmitEnabled
  nameWithType: ProjectionManagementMessage.Command.Post.EmitEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EmitEnabled
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.CheckpointsEnabled*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.CheckpointsEnabled
  name: CheckpointsEnabled
  nameWithType: ProjectionManagementMessage.Command.Post.CheckpointsEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.CheckpointsEnabled
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EnableRunAs*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EnableRunAs
  name: EnableRunAs
  nameWithType: ProjectionManagementMessage.Command.Post.EnableRunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.EnableRunAs
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.TrackEmittedStreams*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.TrackEmittedStreams
  name: TrackEmittedStreams
  nameWithType: ProjectionManagementMessage.Command.Post.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.TrackEmittedStreams

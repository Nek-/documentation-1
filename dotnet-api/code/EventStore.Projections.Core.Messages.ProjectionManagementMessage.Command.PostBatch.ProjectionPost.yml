### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  id: ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.#ctor(EventStore.Projections.Core.Services.ProjectionMode,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.CheckpointsEnabled
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EmitEnabled
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Enabled
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EnableRunAs
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.HandlerType
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Mode
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Name
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Query
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.RunAs
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.TrackEmittedStreams
  langs:
  - csharp
  - vb
  name: ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: ProjectionPost
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 49
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public class ProjectionPost : object'
    content.vb: >-
      Public Class ProjectionPost

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Mode
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Mode
  id: Mode
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Mode
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Mode
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Mode
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 51
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ProjectionMode Mode { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.ProjectionMode
    content.vb: Public ReadOnly Property Mode As ProjectionMode
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Mode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.RunAs
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.RunAs
  id: RunAs
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: RunAs
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.RunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.RunAs
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: RunAs
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 52
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ProjectionManagementMessage.RunAs RunAs { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
    content.vb: Public ReadOnly Property RunAs As ProjectionManagementMessage.RunAs
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.RunAs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Name
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Name
  id: Name
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 53
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.HandlerType
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.HandlerType
  id: HandlerType
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: HandlerType
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.HandlerType
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.HandlerType
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: HandlerType
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 54
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string HandlerType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property HandlerType As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.HandlerType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Query
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Query
  id: Query
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Query
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Query
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Query
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 55
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Query { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Query As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Query*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Enabled
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Enabled
  id: Enabled
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Enabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Enabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Enabled
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 56
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool Enabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Enabled As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Enabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.CheckpointsEnabled
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.CheckpointsEnabled
  id: CheckpointsEnabled
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: CheckpointsEnabled
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.CheckpointsEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.CheckpointsEnabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: CheckpointsEnabled
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 57
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool CheckpointsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CheckpointsEnabled As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.CheckpointsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EmitEnabled
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EmitEnabled
  id: EmitEnabled
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: EmitEnabled
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EmitEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EmitEnabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: EmitEnabled
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 58
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool EmitEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EmitEnabled As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EmitEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EnableRunAs
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EnableRunAs
  id: EnableRunAs
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: EnableRunAs
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EnableRunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EnableRunAs
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: EnableRunAs
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 59
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool EnableRunAs { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EnableRunAs As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EnableRunAs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.TrackEmittedStreams
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.TrackEmittedStreams
  id: TrackEmittedStreams
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: TrackEmittedStreams
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.TrackEmittedStreams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: TrackEmittedStreams
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 60
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool TrackEmittedStreams { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property TrackEmittedStreams As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.TrackEmittedStreams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.#ctor(EventStore.Projections.Core.Services.ProjectionMode,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.#ctor(EventStore.Projections.Core.Services.ProjectionMode,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(EventStore.Projections.Core.Services.ProjectionMode,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  langs:
  - csharp
  - vb
  name: ProjectionPost(ProjectionMode, ProjectionManagementMessage.RunAs, String, String, String, Boolean, Boolean, Boolean, Boolean, Boolean)
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.ProjectionPost(ProjectionMode, ProjectionManagementMessage.RunAs, String, String, String, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.ProjectionPost(EventStore.Projections.Core.Services.ProjectionMode, EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 62
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ProjectionPost(ProjectionMode mode, ProjectionManagementMessage.RunAs runAs, string name, string handlerType, string query, bool enabled, bool checkpointsEnabled, bool emitEnabled, bool enableRunAs, bool trackEmittedStreams)
    parameters:
    - id: mode
      type: EventStore.Projections.Core.Services.ProjectionMode
    - id: runAs
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
    - id: name
      type: System.String
    - id: handlerType
      type: System.String
    - id: query
      type: System.String
    - id: enabled
      type: System.Boolean
    - id: checkpointsEnabled
      type: System.Boolean
    - id: emitEnabled
      type: System.Boolean
    - id: enableRunAs
      type: System.Boolean
    - id: trackEmittedStreams
      type: System.Boolean
    content.vb: Public Sub New(mode As ProjectionMode, runAs As ProjectionManagementMessage.RunAs, name As String, handlerType As String, query As String, enabled As Boolean, checkpointsEnabled As Boolean, emitEnabled As Boolean, enableRunAs As Boolean, trackEmittedStreams As Boolean)
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Mode*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Mode
  name: Mode
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Mode
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Mode
- uid: EventStore.Projections.Core.Services.ProjectionMode
  commentId: T:EventStore.Projections.Core.Services.ProjectionMode
  parent: EventStore.Projections.Core.Services
  name: ProjectionMode
  nameWithType: ProjectionMode
  fullName: EventStore.Projections.Core.Services.ProjectionMode
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.RunAs*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.RunAs
  name: RunAs
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.RunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.RunAs
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.RunAs
  nameWithType: ProjectionManagementMessage.RunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Name*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Name
  name: Name
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.HandlerType*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.HandlerType
  name: HandlerType
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.HandlerType
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.HandlerType
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Query*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Query
  name: Query
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Query
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Query
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Enabled*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Enabled
  name: Enabled
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Enabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.CheckpointsEnabled*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.CheckpointsEnabled
  name: CheckpointsEnabled
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.CheckpointsEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.CheckpointsEnabled
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EmitEnabled*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EmitEnabled
  name: EmitEnabled
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EmitEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EmitEnabled
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EnableRunAs*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EnableRunAs
  name: EnableRunAs
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EnableRunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.EnableRunAs
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.TrackEmittedStreams*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.TrackEmittedStreams
  name: TrackEmittedStreams
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.TrackEmittedStreams
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.#ctor
  name: ProjectionPost
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost.ProjectionPost
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost.ProjectionPost

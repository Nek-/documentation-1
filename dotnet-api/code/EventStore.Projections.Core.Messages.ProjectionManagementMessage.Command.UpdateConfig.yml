### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  id: ProjectionManagementMessage.Command.UpdateConfig
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.#ctor(EventStore.Core.Messaging.IEnvelope,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointAfterMs
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointHandledThreshold
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointUnhandledBytesThreshold
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.EmitEnabled
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxAllowedWritesInFlight
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxWriteBatchLength
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MsgTypeId
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.Name
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.PendingEventsThreshold
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.TrackEmittedStreams
  langs:
  - csharp
  - vb
  name: ProjectionManagementMessage.Command.UpdateConfig
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: UpdateConfig
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 401
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public class UpdateConfig : ProjectionManagementMessage.Command.ControlMessage'
    content.vb: >-
      Public Class UpdateConfig

          Inherits ProjectionManagementMessage.Command.ControlMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  inheritedMembers:
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.RunAs
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.Envelope
  - EventStore.Core.Messaging.Message.NextMsgId
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 404
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.MsgTypeId
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.#ctor(EventStore.Core.Messaging.IEnvelope,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  commentId: M:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.#ctor(EventStore.Core.Messaging.IEnvelope,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  id: '#ctor(EventStore.Core.Messaging.IEnvelope,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)'
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: UpdateConfig(IEnvelope, String, Boolean, Boolean, Int32, Int32, Int32, Int32, Int32, Int32, ProjectionManagementMessage.RunAs)
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.UpdateConfig(IEnvelope, String, Boolean, Boolean, Int32, Int32, Int32, Int32, Int32, Int32, ProjectionManagementMessage.RunAs)
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.UpdateConfig(EventStore.Core.Messaging.IEnvelope, System.String, System.Boolean, System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 418
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public UpdateConfig(IEnvelope envelope, string name, bool emitEnabled, bool trackEmittedStreams, int checkpointAfterMs, int checkpointHandledThreshold, int checkpointUnhandledBytesThreshold, int pendingEventsThreshold, int maxWriteBatchLength, int maxAllowedWritesInFlight, ProjectionManagementMessage.RunAs runAs)
    parameters:
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: name
      type: System.String
    - id: emitEnabled
      type: System.Boolean
    - id: trackEmittedStreams
      type: System.Boolean
    - id: checkpointAfterMs
      type: System.Int32
    - id: checkpointHandledThreshold
      type: System.Int32
    - id: checkpointUnhandledBytesThreshold
      type: System.Int32
    - id: pendingEventsThreshold
      type: System.Int32
    - id: maxWriteBatchLength
      type: System.Int32
    - id: maxAllowedWritesInFlight
      type: System.Int32
    - id: runAs
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
    content.vb: Public Sub New(envelope As IEnvelope, name As String, emitEnabled As Boolean, trackEmittedStreams As Boolean, checkpointAfterMs As Integer, checkpointHandledThreshold As Integer, checkpointUnhandledBytesThreshold As Integer, pendingEventsThreshold As Integer, maxWriteBatchLength As Integer, maxAllowedWritesInFlight As Integer, runAs As ProjectionManagementMessage.RunAs)
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.Name
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.Name
  id: Name
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 434
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.EmitEnabled
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.EmitEnabled
  id: EmitEnabled
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: EmitEnabled
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.EmitEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.EmitEnabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EmitEnabled
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 438
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool EmitEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EmitEnabled As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.EmitEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.TrackEmittedStreams
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.TrackEmittedStreams
  id: TrackEmittedStreams
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: TrackEmittedStreams
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.TrackEmittedStreams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: TrackEmittedStreams
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 442
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool TrackEmittedStreams { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property TrackEmittedStreams As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.TrackEmittedStreams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointAfterMs
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointAfterMs
  id: CheckpointAfterMs
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: CheckpointAfterMs
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointAfterMs
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CheckpointAfterMs
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 446
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public int CheckpointAfterMs { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CheckpointAfterMs As Integer
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointAfterMs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointHandledThreshold
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointHandledThreshold
  id: CheckpointHandledThreshold
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: CheckpointHandledThreshold
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.CheckpointHandledThreshold
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointHandledThreshold
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CheckpointHandledThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 450
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public int CheckpointHandledThreshold { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CheckpointHandledThreshold As Integer
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointHandledThreshold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointUnhandledBytesThreshold
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointUnhandledBytesThreshold
  id: CheckpointUnhandledBytesThreshold
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointUnhandledBytesThreshold
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CheckpointUnhandledBytesThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 454
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public int CheckpointUnhandledBytesThreshold { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CheckpointUnhandledBytesThreshold As Integer
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointUnhandledBytesThreshold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.PendingEventsThreshold
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.PendingEventsThreshold
  id: PendingEventsThreshold
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: PendingEventsThreshold
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.PendingEventsThreshold
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.PendingEventsThreshold
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PendingEventsThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 458
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public int PendingEventsThreshold { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PendingEventsThreshold As Integer
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.PendingEventsThreshold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxWriteBatchLength
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxWriteBatchLength
  id: MaxWriteBatchLength
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: MaxWriteBatchLength
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.MaxWriteBatchLength
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxWriteBatchLength
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MaxWriteBatchLength
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 462
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public int MaxWriteBatchLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxWriteBatchLength As Integer
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxWriteBatchLength*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxAllowedWritesInFlight
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxAllowedWritesInFlight
  id: MaxAllowedWritesInFlight
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  langs:
  - csharp
  - vb
  name: MaxAllowedWritesInFlight
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.MaxAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxAllowedWritesInFlight
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MaxAllowedWritesInFlight
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 466
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public int MaxAllowedWritesInFlight { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxAllowedWritesInFlight As Integer
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxAllowedWritesInFlight*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.ControlMessage
  nameWithType: ProjectionManagementMessage.Command.ControlMessage
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.RunAs
  commentId: F:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.RunAs
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  name: RunAs
  nameWithType: ProjectionManagementMessage.Command.ControlMessage.RunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.RunAs
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.Envelope
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.Envelope
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  name: Envelope
  nameWithType: ProjectionManagementMessage.Command.ControlMessage.Envelope
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.Envelope
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.MsgTypeId
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.Command.ControlMessage.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.MsgTypeId
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MsgTypeId
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.#ctor
  name: UpdateConfig
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.UpdateConfig
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.UpdateConfig
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.RunAs
  nameWithType: ProjectionManagementMessage.RunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.Name*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.Name
  name: Name
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.Name
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.EmitEnabled*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.EmitEnabled
  name: EmitEnabled
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.EmitEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.EmitEnabled
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.TrackEmittedStreams*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.TrackEmittedStreams
  name: TrackEmittedStreams
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.TrackEmittedStreams
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointAfterMs*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointAfterMs
  name: CheckpointAfterMs
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointAfterMs
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointHandledThreshold*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointHandledThreshold
  name: CheckpointHandledThreshold
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.CheckpointHandledThreshold
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointHandledThreshold
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointUnhandledBytesThreshold*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointUnhandledBytesThreshold
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.CheckpointUnhandledBytesThreshold
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.PendingEventsThreshold*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.PendingEventsThreshold
  name: PendingEventsThreshold
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.PendingEventsThreshold
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.PendingEventsThreshold
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxWriteBatchLength*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxWriteBatchLength
  name: MaxWriteBatchLength
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.MaxWriteBatchLength
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxWriteBatchLength
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxAllowedWritesInFlight*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxAllowedWritesInFlight
  name: MaxAllowedWritesInFlight
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig.MaxAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.MaxAllowedWritesInFlight

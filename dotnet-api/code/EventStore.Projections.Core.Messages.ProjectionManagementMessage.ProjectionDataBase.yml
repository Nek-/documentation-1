### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase
  id: ProjectionManagementMessage.ProjectionDataBase
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Exception)
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Exception
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.MsgTypeId
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Name
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Partition
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Position
  langs:
  - csharp
  - vb
  name: ProjectionManagementMessage.ProjectionDataBase
  nameWithType: ProjectionManagementMessage.ProjectionDataBase
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ProjectionDataBase
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 722
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public abstract class ProjectionDataBase : Message'
    content.vb: >-
      Public MustInherit Class ProjectionDataBase

          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  derivedClasses:
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionResult
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionState
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 725
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Exception)
  commentId: M:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Exception)
  id: '#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Exception)'
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase
  langs:
  - csharp
  - vb
  name: ProjectionDataBase(String, String, CheckpointTag, Exception)
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.ProjectionDataBase(String, String, CheckpointTag, Exception)
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.ProjectionDataBase(System.String, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Exception)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 734
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: protected ProjectionDataBase(string name, string partition, CheckpointTag position, Exception exception = null)
    parameters:
    - id: name
      type: System.String
    - id: partition
      type: System.String
    - id: position
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: exception
      type: Exception
    content.vb: Protected Sub New(name As String, partition As String, position As CheckpointTag, exception As Exception = Nothing)
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Name
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Name
  id: Name
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 742
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Exception
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Exception
  id: Exception
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.Exception
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Exception
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Exception
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 746
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Exception Exception { get; }
    parameters: []
    return:
      type: Exception
    content.vb: Public ReadOnly Property Exception As Exception
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Partition
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Partition
  id: Partition
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase
  langs:
  - csharp
  - vb
  name: Partition
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.Partition
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Partition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Partition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 750
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Partition { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Partition As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Partition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Position
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Position
  id: Position
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.Position
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Position
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 754
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public CheckpointTag Position { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property Position As CheckpointTag
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.MsgTypeId
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.#ctor
  name: ProjectionDataBase
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.ProjectionDataBase
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.ProjectionDataBase
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Name*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Name
  name: Name
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Name
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Exception*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Exception
  name: Exception
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.Exception
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Exception
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Partition*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Partition
  name: Partition
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.Partition
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Partition
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Position*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Position
  name: Position
  nameWithType: ProjectionManagementMessage.ProjectionDataBase.Position
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.Position

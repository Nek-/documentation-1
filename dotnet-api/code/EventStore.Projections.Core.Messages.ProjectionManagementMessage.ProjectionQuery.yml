### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  id: ProjectionManagementMessage.ProjectionQuery
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor(System.String,System.String,System.Boolean,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition,EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.CheckpointsEnabled
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.TrackEmittedStreams
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Type
  langs:
  - csharp
  - vb
  name: ProjectionManagementMessage.ProjectionQuery
  nameWithType: ProjectionManagementMessage.ProjectionQuery
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: ProjectionQuery
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 799
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public class ProjectionQuery : Message'
    content.vb: >-
      Public Class ProjectionQuery

          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 802
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor(System.String,System.String,System.Boolean,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition,EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)
  commentId: M:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor(System.String,System.String,System.Boolean,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition,EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)
  id: '#ctor(System.String,System.String,System.Boolean,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition,EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)'
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: ProjectionQuery(String, String, Boolean, String, Nullable<Boolean>, Nullable<Boolean>, ProjectionSourceDefinition, ProjectionOutputConfig)
  nameWithType: ProjectionManagementMessage.ProjectionQuery.ProjectionQuery(String, String, Boolean, String, Nullable<Boolean>, Nullable<Boolean>, ProjectionSourceDefinition, ProjectionOutputConfig)
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.ProjectionQuery(System.String, System.String, System.Boolean, System.String, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition, EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 815
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ProjectionQuery(string name, string query, bool emitEnabled, string projectionType, bool? trackEmittedStreams, bool? checkpointsEnabled, ProjectionSourceDefinition definition, ProjectionOutputConfig outputConfig)
    parameters:
    - id: name
      type: System.String
    - id: query
      type: System.String
    - id: emitEnabled
      type: System.Boolean
    - id: projectionType
      type: System.String
    - id: trackEmittedStreams
      type: System.Nullable{System.Boolean}
    - id: checkpointsEnabled
      type: System.Nullable{System.Boolean}
    - id: definition
      type: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
    - id: outputConfig
      type: EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig
    content.vb: Public Sub New(name As String, query As String, emitEnabled As Boolean, projectionType As String, trackEmittedStreams As Boolean?, checkpointsEnabled As Boolean?, definition As ProjectionSourceDefinition, outputConfig As ProjectionOutputConfig)
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor*
  nameWithType.vb: ProjectionManagementMessage.ProjectionQuery.ProjectionQuery(String, String, Boolean, String, Nullable(Of Boolean), Nullable(Of Boolean), ProjectionSourceDefinition, ProjectionOutputConfig)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.ProjectionQuery(System.String, System.String, System.Boolean, System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition, EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)
  name.vb: ProjectionQuery(String, String, Boolean, String, Nullable(Of Boolean), Nullable(Of Boolean), ProjectionSourceDefinition, ProjectionOutputConfig)
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
  id: Name
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 834
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
  id: Query
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Query
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Query
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 838
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Query { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Query As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  id: EmitEnabled
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: EmitEnabled
  nameWithType: ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: EmitEnabled
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 842
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool EmitEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EmitEnabled As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.TrackEmittedStreams
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.TrackEmittedStreams
  id: TrackEmittedStreams
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: TrackEmittedStreams
  nameWithType: ProjectionManagementMessage.ProjectionQuery.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.TrackEmittedStreams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: TrackEmittedStreams
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 846
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool? TrackEmittedStreams { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property TrackEmittedStreams As Boolean?
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.TrackEmittedStreams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.CheckpointsEnabled
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.CheckpointsEnabled
  id: CheckpointsEnabled
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: CheckpointsEnabled
  nameWithType: ProjectionManagementMessage.ProjectionQuery.CheckpointsEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.CheckpointsEnabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: CheckpointsEnabled
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 850
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool? CheckpointsEnabled { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property CheckpointsEnabled As Boolean?
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.CheckpointsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Type
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Type
  id: Type
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Type
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Type
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Type
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 854
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Type As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
  id: Definition
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Definition
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Definition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 858
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ProjectionSourceDefinition Definition { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
    content.vb: Public ReadOnly Property Definition As ProjectionSourceDefinition
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig
  id: OutputConfig
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: OutputConfig
  nameWithType: ProjectionManagementMessage.ProjectionQuery.OutputConfig
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: OutputConfig
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 862
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ProjectionOutputConfig OutputConfig { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig
    content.vb: Public ReadOnly Property OutputConfig As ProjectionOutputConfig
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor
  name: ProjectionQuery
  nameWithType: ProjectionManagementMessage.ProjectionQuery.ProjectionQuery
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.ProjectionQuery
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionSourceDefinition
  nameWithType: ProjectionSourceDefinition
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
- uid: EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionOutputConfig
  nameWithType: ProjectionOutputConfig
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
  name: Name
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
  name: Query
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Query
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  name: EmitEnabled
  nameWithType: ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.TrackEmittedStreams*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.TrackEmittedStreams
  name: TrackEmittedStreams
  nameWithType: ProjectionManagementMessage.ProjectionQuery.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.TrackEmittedStreams
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.CheckpointsEnabled*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.CheckpointsEnabled
  name: CheckpointsEnabled
  nameWithType: ProjectionManagementMessage.ProjectionQuery.CheckpointsEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.CheckpointsEnabled
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Type*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Type
  name: Type
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Type
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Type
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
  name: Definition
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Definition
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig
  name: OutputConfig
  nameWithType: ProjectionManagementMessage.ProjectionQuery.OutputConfig
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  id: ProjectionManagementMessage.ProjectionQuery
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor(System.String,System.String,System.Boolean,EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition,EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
  langs:
  - csharp
  - vb
  name: ProjectionManagementMessage.ProjectionQuery
  nameWithType: ProjectionManagementMessage.ProjectionQuery
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  type: Class
  source:
    id: ProjectionQuery
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 794
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public class ProjectionQuery : Message'
    content.vb: >-
      Public Class ProjectionQuery
          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  type: Property
  source:
    id: MsgTypeId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 797
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor(System.String,System.String,System.Boolean,EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition,EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)
  commentId: M:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor(System.String,System.String,System.Boolean,EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition,EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)
  id: '#ctor(System.String,System.String,System.Boolean,EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition,EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)'
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: ProjectionQuery(String, String, Boolean, ProjectionSourceDefinition, ProjectionOutputConfig)
  nameWithType: ProjectionManagementMessage.ProjectionQuery.ProjectionQuery(String, String, Boolean, ProjectionSourceDefinition, ProjectionOutputConfig)
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.ProjectionQuery(System.String, System.String, System.Boolean, EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition, EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 807
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ProjectionQuery(string name, string query, bool emitEnabled, ProjectionSourceDefinition definition, ProjectionOutputConfig outputConfig)
    parameters:
    - id: name
      type: System.String
    - id: query
      type: System.String
    - id: emitEnabled
      type: System.Boolean
    - id: definition
      type: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
    - id: outputConfig
      type: EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig
    content.vb: Public Sub New(name As String, query As String, emitEnabled As Boolean, definition As ProjectionSourceDefinition, outputConfig As ProjectionOutputConfig)
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
  id: Name
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
  type: Property
  source:
    id: Name
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 816
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
  id: Query
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Query
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
  type: Property
  source:
    id: Query
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 820
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Query { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Query As String
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  id: EmitEnabled
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: EmitEnabled
  nameWithType: ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  type: Property
  source:
    id: EmitEnabled
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 824
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool EmitEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EmitEnabled As Boolean
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
  id: Definition
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Definition
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
  type: Property
  source:
    id: Definition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 828
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ProjectionSourceDefinition Definition { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
    content.vb: Public ReadOnly Property Definition As ProjectionSourceDefinition
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig
  commentId: P:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig
  id: OutputConfig
  parent: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  langs:
  - csharp
  - vb
  name: OutputConfig
  nameWithType: ProjectionManagementMessage.ProjectionQuery.OutputConfig
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig
  type: Property
  source:
    id: OutputConfig
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/ProjectionManagementMessage.cs
    startLine: 832
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ProjectionOutputConfig OutputConfig { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig
    content.vb: Public ReadOnly Property OutputConfig As ProjectionOutputConfig
  overload: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  name: MsgTypeId
  nameWithType: ProjectionManagementMessage.ProjectionQuery.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.#ctor
  name: ProjectionQuery
  nameWithType: ProjectionManagementMessage.ProjectionQuery.ProjectionQuery
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.ProjectionQuery
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionSourceDefinition
  nameWithType: ProjectionSourceDefinition
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
- uid: EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionOutputConfig
  nameWithType: ProjectionOutputConfig
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
  name: Name
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Name
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Name
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
  name: Query
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Query
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Query
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  name: EmitEnabled
  nameWithType: ProjectionManagementMessage.ProjectionQuery.EmitEnabled
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.EmitEnabled
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
  name: Definition
  nameWithType: ProjectionManagementMessage.ProjectionQuery.Definition
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.Definition
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig*
  commentId: Overload:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig
  name: OutputConfig
  nameWithType: ProjectionManagementMessage.ProjectionQuery.OutputConfig
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.OutputConfig

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  commentId: T:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  id: QuerySourcesDefinitionOptions
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesCatalogTransform
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesFold
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesStateTransform
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DisableParallelism
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.HandlesDeletedNotifications
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IncludeLinks
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IsBiState
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.PartitionResultStreamNamePattern
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProcessingLag
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProducesResults
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ReorderEvents
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ResultStreamName
  langs:
  - csharp
  - vb
  name: QuerySourcesDefinitionOptions
  nameWithType: QuerySourcesDefinitionOptions
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  type: Class
  source:
    id: QuerySourcesDefinitionOptions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataContract]

      public class QuerySourcesDefinitionOptions
    content.vb: >-
      <DataContract>

      Public Class QuerySourcesDefinitionOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProducesResults
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProducesResults
  id: ProducesResults
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: ProducesResults
  nameWithType: QuerySourcesDefinitionOptions.ProducesResults
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProducesResults
  type: Property
  source:
    id: ProducesResults
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "producesResults")]

      public bool ProducesResults { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="producesResults")>

      Public Property ProducesResults As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProducesResults*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: producesResults
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesFold
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesFold
  id: DefinesFold
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: DefinesFold
  nameWithType: QuerySourcesDefinitionOptions.DefinesFold
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesFold
  type: Property
  source:
    id: DefinesFold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "definesFold")]

      public bool DefinesFold { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="definesFold")>

      Public Property DefinesFold As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesFold*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: definesFold
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.HandlesDeletedNotifications
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.HandlesDeletedNotifications
  id: HandlesDeletedNotifications
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: HandlesDeletedNotifications
  nameWithType: QuerySourcesDefinitionOptions.HandlesDeletedNotifications
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.HandlesDeletedNotifications
  type: Property
  source:
    id: HandlesDeletedNotifications
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "handlesDeletedNotifications")]

      public bool HandlesDeletedNotifications { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="handlesDeletedNotifications")>

      Public Property HandlesDeletedNotifications As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.HandlesDeletedNotifications*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: handlesDeletedNotifications
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesStateTransform
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesStateTransform
  id: DefinesStateTransform
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: DefinesStateTransform
  nameWithType: QuerySourcesDefinitionOptions.DefinesStateTransform
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesStateTransform
  type: Property
  source:
    id: DefinesStateTransform
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "definesStateTransform")]

      public bool DefinesStateTransform { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="definesStateTransform")>

      Public Property DefinesStateTransform As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesStateTransform*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: definesStateTransform
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesCatalogTransform
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesCatalogTransform
  id: DefinesCatalogTransform
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: DefinesCatalogTransform
  nameWithType: QuerySourcesDefinitionOptions.DefinesCatalogTransform
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesCatalogTransform
  type: Property
  source:
    id: DefinesCatalogTransform
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 15
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "definesCatalogTransform")]

      public bool DefinesCatalogTransform { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="definesCatalogTransform")>

      Public Property DefinesCatalogTransform As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesCatalogTransform*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: definesCatalogTransform
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ResultStreamName
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ResultStreamName
  id: ResultStreamName
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: ResultStreamName
  nameWithType: QuerySourcesDefinitionOptions.ResultStreamName
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ResultStreamName
  type: Property
  source:
    id: ResultStreamName
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "resultStreamName")]

      public string ResultStreamName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="resultStreamName")>

      Public Property ResultStreamName As String
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ResultStreamName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: resultStreamName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.PartitionResultStreamNamePattern
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.PartitionResultStreamNamePattern
  id: PartitionResultStreamNamePattern
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: PartitionResultStreamNamePattern
  nameWithType: QuerySourcesDefinitionOptions.PartitionResultStreamNamePattern
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.PartitionResultStreamNamePattern
  type: Property
  source:
    id: PartitionResultStreamNamePattern
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "partitionResultStreamNamePattern")]

      public string PartitionResultStreamNamePattern { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="partitionResultStreamNamePattern")>

      Public Property PartitionResultStreamNamePattern As String
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.PartitionResultStreamNamePattern*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: partitionResultStreamNamePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IncludeLinks
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IncludeLinks
  id: IncludeLinks
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: IncludeLinks
  nameWithType: QuerySourcesDefinitionOptions.IncludeLinks
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IncludeLinks
  type: Property
  source:
    id: IncludeLinks
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 24
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "$includeLinks")]

      public bool IncludeLinks { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="$includeLinks")>

      Public Property IncludeLinks As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IncludeLinks*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: $includeLinks
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DisableParallelism
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DisableParallelism
  id: DisableParallelism
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: DisableParallelism
  nameWithType: QuerySourcesDefinitionOptions.DisableParallelism
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DisableParallelism
  type: Property
  source:
    id: DisableParallelism
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "disableParallelism")]

      public bool DisableParallelism { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="disableParallelism")>

      Public Property DisableParallelism As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DisableParallelism*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: disableParallelism
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ReorderEvents
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ReorderEvents
  id: ReorderEvents
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: ReorderEvents
  nameWithType: QuerySourcesDefinitionOptions.ReorderEvents
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ReorderEvents
  type: Property
  source:
    id: ReorderEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "reorderEvents")]

      public bool ReorderEvents { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="reorderEvents")>

      Public Property ReorderEvents As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ReorderEvents*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: reorderEvents
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProcessingLag
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProcessingLag
  id: ProcessingLag
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: ProcessingLag
  nameWithType: QuerySourcesDefinitionOptions.ProcessingLag
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProcessingLag
  type: Property
  source:
    id: ProcessingLag
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 31
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "processingLag")]

      public int? ProcessingLag { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <DataMember(Name:="processingLag")>

      Public Property ProcessingLag As Integer?
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProcessingLag*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: processingLag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IsBiState
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IsBiState
  id: IsBiState
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  langs:
  - csharp
  - vb
  name: IsBiState
  nameWithType: QuerySourcesDefinitionOptions.IsBiState
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IsBiState
  type: Property
  source:
    id: IsBiState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinitionOptions.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: >-
      [DataMember(Name = "biState")]

      public bool IsBiState { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="biState")>

      Public Property IsBiState As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IsBiState*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: biState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<QuerySourcesDefinitionOptions>()
  nameWithType: ProtobufExtensions.Serialize<QuerySourcesDefinitionOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of QuerySourcesDefinitionOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions)()
  name.vb: Serialize(Of QuerySourcesDefinitionOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<QuerySourcesDefinitionOptions>
    nameWithType: ProtobufExtensions.Serialize<QuerySourcesDefinitionOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of QuerySourcesDefinitionOptions)
    nameWithType: ProtobufExtensions.Serialize(Of QuerySourcesDefinitionOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<QuerySourcesDefinitionOptions>()
  nameWithType: ProtobufExtensions.SerializeToArray<QuerySourcesDefinitionOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of QuerySourcesDefinitionOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions)()
  name.vb: SerializeToArray(Of QuerySourcesDefinitionOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<QuerySourcesDefinitionOptions>
    nameWithType: ProtobufExtensions.SerializeToArray<QuerySourcesDefinitionOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of QuerySourcesDefinitionOptions)
    nameWithType: ProtobufExtensions.SerializeToArray(Of QuerySourcesDefinitionOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProducesResults*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProducesResults
  name: ProducesResults
  nameWithType: QuerySourcesDefinitionOptions.ProducesResults
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProducesResults
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesFold*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesFold
  name: DefinesFold
  nameWithType: QuerySourcesDefinitionOptions.DefinesFold
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesFold
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.HandlesDeletedNotifications*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.HandlesDeletedNotifications
  name: HandlesDeletedNotifications
  nameWithType: QuerySourcesDefinitionOptions.HandlesDeletedNotifications
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.HandlesDeletedNotifications
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesStateTransform*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesStateTransform
  name: DefinesStateTransform
  nameWithType: QuerySourcesDefinitionOptions.DefinesStateTransform
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesStateTransform
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesCatalogTransform*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesCatalogTransform
  name: DefinesCatalogTransform
  nameWithType: QuerySourcesDefinitionOptions.DefinesCatalogTransform
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DefinesCatalogTransform
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ResultStreamName*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ResultStreamName
  name: ResultStreamName
  nameWithType: QuerySourcesDefinitionOptions.ResultStreamName
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ResultStreamName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.PartitionResultStreamNamePattern*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.PartitionResultStreamNamePattern
  name: PartitionResultStreamNamePattern
  nameWithType: QuerySourcesDefinitionOptions.PartitionResultStreamNamePattern
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.PartitionResultStreamNamePattern
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IncludeLinks*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IncludeLinks
  name: IncludeLinks
  nameWithType: QuerySourcesDefinitionOptions.IncludeLinks
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IncludeLinks
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DisableParallelism*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DisableParallelism
  name: DisableParallelism
  nameWithType: QuerySourcesDefinitionOptions.DisableParallelism
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.DisableParallelism
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ReorderEvents*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ReorderEvents
  name: ReorderEvents
  nameWithType: QuerySourcesDefinitionOptions.ReorderEvents
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ReorderEvents
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProcessingLag*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProcessingLag
  name: ProcessingLag
  nameWithType: QuerySourcesDefinitionOptions.ProcessingLag
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.ProcessingLag
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IsBiState*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IsBiState
  name: IsBiState
  nameWithType: QuerySourcesDefinitionOptions.IsBiState
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.IsBiState

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions
  commentId: T:EventStore.Projections.Core.Messages.QuerySourcesExtensions
  id: QuerySourcesExtensions
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
  - EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
  - EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
  langs:
  - csharp
  - vb
  name: QuerySourcesExtensions
  nameWithType: QuerySourcesExtensions
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions
  type: Class
  source:
    id: QuerySourcesExtensions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 45
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public static class QuerySourcesExtensions
    content.vb: Public Module QuerySourcesExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
  commentId: M:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
  id: HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
  isExtensionMethod: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesExtensions
  langs:
  - csharp
  - vb
  name: HasStreams(IQuerySources)
  nameWithType: QuerySourcesExtensions.HasStreams(IQuerySources)
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams(EventStore.Projections.Core.Messages.IQuerySources)
  type: Method
  source:
    id: HasStreams
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 46
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public static bool HasStreams(this IQuerySources sources)
    parameters:
    - id: sources
      type: EventStore.Projections.Core.Messages.IQuerySources
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasStreams(sources As IQuerySources) As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
  commentId: M:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
  id: HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
  isExtensionMethod: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesExtensions
  langs:
  - csharp
  - vb
  name: HasCategories(IQuerySources)
  nameWithType: QuerySourcesExtensions.HasCategories(IQuerySources)
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories(EventStore.Projections.Core.Messages.IQuerySources)
  type: Method
  source:
    id: HasCategories
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 51
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public static bool HasCategories(this IQuerySources sources)
    parameters:
    - id: sources
      type: EventStore.Projections.Core.Messages.IQuerySources
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasCategories(sources As IQuerySources) As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
  commentId: M:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
  id: HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
  isExtensionMethod: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesExtensions
  langs:
  - csharp
  - vb
  name: HasEvents(IQuerySources)
  nameWithType: QuerySourcesExtensions.HasEvents(IQuerySources)
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents(EventStore.Projections.Core.Messages.IQuerySources)
  type: Method
  source:
    id: HasEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/IQuerySources.cs
    startLine: 56
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public static bool HasEvents(this IQuerySources sources)
    parameters:
    - id: sources
      type: EventStore.Projections.Core.Messages.IQuerySources
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasEvents(sources As IQuerySources) As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams
  name: HasStreams
  nameWithType: QuerySourcesExtensions.HasStreams
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasStreams
- uid: EventStore.Projections.Core.Messages.IQuerySources
  commentId: T:EventStore.Projections.Core.Messages.IQuerySources
  parent: EventStore.Projections.Core.Messages
  name: IQuerySources
  nameWithType: IQuerySources
  fullName: EventStore.Projections.Core.Messages.IQuerySources
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories
  name: HasCategories
  nameWithType: QuerySourcesExtensions.HasCategories
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasCategories
- uid: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents
  name: HasEvents
  nameWithType: QuerySourcesExtensions.HasEvents
  fullName: EventStore.Projections.Core.Messages.QuerySourcesExtensions.HasEvents

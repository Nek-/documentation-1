### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  commentId: T:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  id: SlaveProjectionCommunicationChannels
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.#ctor(Dictionary{System.String,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel[]})
  - EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.Channels
  langs:
  - csharp
  - vb
  name: SlaveProjectionCommunicationChannels
  nameWithType: SlaveProjectionCommunicationChannels
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  type: Class
  source:
    id: SlaveProjectionCommunicationChannels
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannels.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public sealed class SlaveProjectionCommunicationChannels : object'
    content.vb: >-
      Public NotInheritable Class SlaveProjectionCommunicationChannels
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.#ctor(Dictionary{System.String,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel[]})
  commentId: M:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.#ctor(Dictionary{System.String,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel[]})
  id: '#ctor(Dictionary{System.String,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel[]})'
  parent: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  langs:
  - csharp
  - vb
  name: SlaveProjectionCommunicationChannels(Dictionary<String, SlaveProjectionCommunicationChannel[]>)
  nameWithType: SlaveProjectionCommunicationChannels.SlaveProjectionCommunicationChannels(Dictionary<String, SlaveProjectionCommunicationChannel[]>)
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.SlaveProjectionCommunicationChannels(Dictionary<System.String, EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel[]>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannels.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public SlaveProjectionCommunicationChannels(Dictionary<string, SlaveProjectionCommunicationChannel[]> channels)
    parameters:
    - id: channels
      type: Dictionary{System.String,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel[]}
    content.vb: Public Sub New(channels As Dictionary(Of String, SlaveProjectionCommunicationChannel()))
  overload: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.#ctor*
  nameWithType.vb: SlaveProjectionCommunicationChannels.SlaveProjectionCommunicationChannels(Dictionary(Of String, SlaveProjectionCommunicationChannel()))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.SlaveProjectionCommunicationChannels(Dictionary(Of System.String, EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel()))
  name.vb: SlaveProjectionCommunicationChannels(Dictionary(Of String, SlaveProjectionCommunicationChannel()))
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.Channels
  commentId: P:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.Channels
  id: Channels
  parent: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: SlaveProjectionCommunicationChannels.Channels
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.Channels
  type: Property
  source:
    id: Channels
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannels.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Dictionary<string, SlaveProjectionCommunicationChannel[]> Channels { get; }
    parameters: []
    return:
      type: Dictionary{System.String,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel[]}
    content.vb: Public ReadOnly Property Channels As Dictionary(Of String, SlaveProjectionCommunicationChannel())
  overload: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.Channels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.#ctor
  name: SlaveProjectionCommunicationChannels
  nameWithType: SlaveProjectionCommunicationChannels.SlaveProjectionCommunicationChannels
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.SlaveProjectionCommunicationChannels
- uid: Dictionary{System.String,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel[]}
  commentId: '!:Dictionary{System.String,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel[]}'
  definition: Dictionary`2
  name: Dictionary<String, SlaveProjectionCommunicationChannel[]>
  nameWithType: Dictionary<String, SlaveProjectionCommunicationChannel[]>
  fullName: Dictionary<System.String, EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel[]>
  nameWithType.vb: Dictionary(Of String, SlaveProjectionCommunicationChannel())
  fullName.vb: Dictionary(Of System.String, EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel())
  name.vb: Dictionary(Of String, SlaveProjectionCommunicationChannel())
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
    name: SlaveProjectionCommunicationChannel
    nameWithType: SlaveProjectionCommunicationChannel
    fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
    name: SlaveProjectionCommunicationChannel
    nameWithType: SlaveProjectionCommunicationChannel
    fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.Channels*
  commentId: Overload:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.Channels
  name: Channels
  nameWithType: SlaveProjectionCommunicationChannels.Channels
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.Channels

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.ProjectionCoreWorkersNode
  commentId: T:EventStore.Projections.Core.ProjectionCoreWorkersNode
  id: ProjectionCoreWorkersNode
  parent: EventStore.Projections.Core
  children:
  - EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateCoreWorkers(EventStore.Core.StandardComponents,EventStore.Projections.Core.ProjectionsStandardComponents)
  - EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateTimeoutSchedulers(System.Int32)
  langs:
  - csharp
  - vb
  name: ProjectionCoreWorkersNode
  nameWithType: ProjectionCoreWorkersNode
  fullName: EventStore.Projections.Core.ProjectionCoreWorkersNode
  type: Class
  source:
    id: ProjectionCoreWorkersNode
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/ProjectionCoreWorkersNode.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core
  syntax:
    content: public static class ProjectionCoreWorkersNode
    content.vb: Public Module ProjectionCoreWorkersNode
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateCoreWorkers(EventStore.Core.StandardComponents,EventStore.Projections.Core.ProjectionsStandardComponents)
  commentId: M:EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateCoreWorkers(EventStore.Core.StandardComponents,EventStore.Projections.Core.ProjectionsStandardComponents)
  id: CreateCoreWorkers(EventStore.Core.StandardComponents,EventStore.Projections.Core.ProjectionsStandardComponents)
  parent: EventStore.Projections.Core.ProjectionCoreWorkersNode
  langs:
  - csharp
  - vb
  name: CreateCoreWorkers(StandardComponents, ProjectionsStandardComponents)
  nameWithType: ProjectionCoreWorkersNode.CreateCoreWorkers(StandardComponents, ProjectionsStandardComponents)
  fullName: EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateCoreWorkers(EventStore.Core.StandardComponents, EventStore.Projections.Core.ProjectionsStandardComponents)
  type: Method
  source:
    id: CreateCoreWorkers
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/ProjectionCoreWorkersNode.cs
    startLine: 19
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core
  syntax:
    content: public static Dictionary<Guid, IQueuedHandler> CreateCoreWorkers(StandardComponents standardComponents, ProjectionsStandardComponents projectionsStandardComponents)
    parameters:
    - id: standardComponents
      type: EventStore.Core.StandardComponents
    - id: projectionsStandardComponents
      type: EventStore.Projections.Core.ProjectionsStandardComponents
    return:
      type: System.Collections.Generic.Dictionary{System.Guid,EventStore.Core.Bus.IQueuedHandler}
    content.vb: Public Shared Function CreateCoreWorkers(standardComponents As StandardComponents, projectionsStandardComponents As ProjectionsStandardComponents) As Dictionary(Of Guid, IQueuedHandler)
  overload: EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateCoreWorkers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateTimeoutSchedulers(System.Int32)
  commentId: M:EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateTimeoutSchedulers(System.Int32)
  id: CreateTimeoutSchedulers(System.Int32)
  parent: EventStore.Projections.Core.ProjectionCoreWorkersNode
  langs:
  - csharp
  - vb
  name: CreateTimeoutSchedulers(Int32)
  nameWithType: ProjectionCoreWorkersNode.CreateTimeoutSchedulers(Int32)
  fullName: EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateTimeoutSchedulers(System.Int32)
  type: Method
  source:
    id: CreateTimeoutSchedulers
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/ProjectionCoreWorkersNode.cs
    startLine: 95
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core
  syntax:
    content: public static TimeoutScheduler[] CreateTimeoutSchedulers(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.Projections.Core.Services.Management.TimeoutScheduler[]
    content.vb: Public Shared Function CreateTimeoutSchedulers(count As Integer) As TimeoutScheduler()
  overload: EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateTimeoutSchedulers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Projections.Core
  commentId: N:EventStore.Projections.Core
  name: EventStore.Projections.Core
  nameWithType: EventStore.Projections.Core
  fullName: EventStore.Projections.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateCoreWorkers*
  commentId: Overload:EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateCoreWorkers
  name: CreateCoreWorkers
  nameWithType: ProjectionCoreWorkersNode.CreateCoreWorkers
  fullName: EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateCoreWorkers
- uid: EventStore.Core.StandardComponents
  commentId: T:EventStore.Core.StandardComponents
  parent: EventStore.Core
  name: StandardComponents
  nameWithType: StandardComponents
  fullName: EventStore.Core.StandardComponents
- uid: EventStore.Projections.Core.ProjectionsStandardComponents
  commentId: T:EventStore.Projections.Core.ProjectionsStandardComponents
  parent: EventStore.Projections.Core
  name: ProjectionsStandardComponents
  nameWithType: ProjectionsStandardComponents
  fullName: EventStore.Projections.Core.ProjectionsStandardComponents
- uid: System.Collections.Generic.Dictionary{System.Guid,EventStore.Core.Bus.IQueuedHandler}
  commentId: T:System.Collections.Generic.Dictionary{System.Guid,EventStore.Core.Bus.IQueuedHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Guid, IQueuedHandler>
  nameWithType: Dictionary<Guid, IQueuedHandler>
  fullName: System.Collections.Generic.Dictionary<System.Guid, EventStore.Core.Bus.IQueuedHandler>
  nameWithType.vb: Dictionary(Of Guid, IQueuedHandler)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Guid, EventStore.Core.Bus.IQueuedHandler)
  name.vb: Dictionary(Of Guid, IQueuedHandler)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IQueuedHandler
    name: IQueuedHandler
    nameWithType: IQueuedHandler
    fullName: EventStore.Core.Bus.IQueuedHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IQueuedHandler
    name: IQueuedHandler
    nameWithType: IQueuedHandler
    fullName: EventStore.Core.Bus.IQueuedHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core
  commentId: N:EventStore.Core
  name: EventStore.Core
  nameWithType: EventStore.Core
  fullName: EventStore.Core
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateTimeoutSchedulers*
  commentId: Overload:EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateTimeoutSchedulers
  name: CreateTimeoutSchedulers
  nameWithType: ProjectionCoreWorkersNode.CreateTimeoutSchedulers
  fullName: EventStore.Projections.Core.ProjectionCoreWorkersNode.CreateTimeoutSchedulers
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Services.Management.TimeoutScheduler[]
  isExternal: true
  name: TimeoutScheduler[]
  nameWithType: TimeoutScheduler[]
  fullName: EventStore.Projections.Core.Services.Management.TimeoutScheduler[]
  nameWithType.vb: TimeoutScheduler()
  fullName.vb: EventStore.Projections.Core.Services.Management.TimeoutScheduler()
  name.vb: TimeoutScheduler()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Management.TimeoutScheduler
    name: TimeoutScheduler
    nameWithType: TimeoutScheduler
    fullName: EventStore.Projections.Core.Services.Management.TimeoutScheduler
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Management.TimeoutScheduler
    name: TimeoutScheduler
    nameWithType: TimeoutScheduler
    fullName: EventStore.Projections.Core.Services.Management.TimeoutScheduler
  - name: ()
    nameWithType: ()
    fullName: ()

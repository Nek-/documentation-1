### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.ProjectionManagerNode
  commentId: T:EventStore.Projections.Core.ProjectionManagerNode
  id: ProjectionManagerNode
  parent: EventStore.Projections.Core
  children:
  - EventStore.Projections.Core.ProjectionManagerNode.CreateManagerService(EventStore.Core.StandardComponents,EventStore.Projections.Core.ProjectionsStandardComponents,IDictionary{Guid,EventStore.Core.Bus.IPublisher},TimeSpan)
  langs:
  - csharp
  - vb
  name: ProjectionManagerNode
  nameWithType: ProjectionManagerNode
  fullName: EventStore.Projections.Core.ProjectionManagerNode
  type: Class
  source:
    id: ProjectionManagerNode
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/ProjectionManagerNode.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core
  syntax:
    content: 'public class ProjectionManagerNode : object'
    content.vb: >-
      Public Class ProjectionManagerNode
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.ProjectionManagerNode.CreateManagerService(EventStore.Core.StandardComponents,EventStore.Projections.Core.ProjectionsStandardComponents,IDictionary{Guid,EventStore.Core.Bus.IPublisher},TimeSpan)
  commentId: M:EventStore.Projections.Core.ProjectionManagerNode.CreateManagerService(EventStore.Core.StandardComponents,EventStore.Projections.Core.ProjectionsStandardComponents,IDictionary{Guid,EventStore.Core.Bus.IPublisher},TimeSpan)
  id: CreateManagerService(EventStore.Core.StandardComponents,EventStore.Projections.Core.ProjectionsStandardComponents,IDictionary{Guid,EventStore.Core.Bus.IPublisher},TimeSpan)
  parent: EventStore.Projections.Core.ProjectionManagerNode
  langs:
  - csharp
  - vb
  name: CreateManagerService(StandardComponents, ProjectionsStandardComponents, IDictionary<Guid, IPublisher>, TimeSpan)
  nameWithType: ProjectionManagerNode.CreateManagerService(StandardComponents, ProjectionsStandardComponents, IDictionary<Guid, IPublisher>, TimeSpan)
  fullName: EventStore.Projections.Core.ProjectionManagerNode.CreateManagerService(EventStore.Core.StandardComponents, EventStore.Projections.Core.ProjectionsStandardComponents, IDictionary<Guid, EventStore.Core.Bus.IPublisher>, TimeSpan)
  type: Method
  source:
    id: CreateManagerService
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/ProjectionManagerNode.cs
    startLine: 19
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core
  syntax:
    content: public static void CreateManagerService(StandardComponents standardComponents, ProjectionsStandardComponents projectionsStandardComponents, IDictionary<Guid, IPublisher> queues, TimeSpan projectionQueryExpiry)
    parameters:
    - id: standardComponents
      type: EventStore.Core.StandardComponents
    - id: projectionsStandardComponents
      type: EventStore.Projections.Core.ProjectionsStandardComponents
    - id: queues
      type: IDictionary{Guid,EventStore.Core.Bus.IPublisher}
    - id: projectionQueryExpiry
      type: TimeSpan
    content.vb: Public Shared Sub CreateManagerService(standardComponents As StandardComponents, projectionsStandardComponents As ProjectionsStandardComponents, queues As IDictionary(Of Guid, IPublisher), projectionQueryExpiry As TimeSpan)
  overload: EventStore.Projections.Core.ProjectionManagerNode.CreateManagerService*
  nameWithType.vb: ProjectionManagerNode.CreateManagerService(StandardComponents, ProjectionsStandardComponents, IDictionary(Of Guid, IPublisher), TimeSpan)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Projections.Core.ProjectionManagerNode.CreateManagerService(EventStore.Core.StandardComponents, EventStore.Projections.Core.ProjectionsStandardComponents, IDictionary(Of Guid, EventStore.Core.Bus.IPublisher), TimeSpan)
  name.vb: CreateManagerService(StandardComponents, ProjectionsStandardComponents, IDictionary(Of Guid, IPublisher), TimeSpan)
references:
- uid: EventStore.Projections.Core
  commentId: N:EventStore.Projections.Core
  name: EventStore.Projections.Core
  nameWithType: EventStore.Projections.Core
  fullName: EventStore.Projections.Core
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.ProjectionManagerNode.CreateManagerService*
  commentId: Overload:EventStore.Projections.Core.ProjectionManagerNode.CreateManagerService
  name: CreateManagerService
  nameWithType: ProjectionManagerNode.CreateManagerService
  fullName: EventStore.Projections.Core.ProjectionManagerNode.CreateManagerService
- uid: EventStore.Core.StandardComponents
  commentId: T:EventStore.Core.StandardComponents
  parent: EventStore.Core
  name: StandardComponents
  nameWithType: StandardComponents
  fullName: EventStore.Core.StandardComponents
- uid: EventStore.Projections.Core.ProjectionsStandardComponents
  commentId: T:EventStore.Projections.Core.ProjectionsStandardComponents
  parent: EventStore.Projections.Core
  name: ProjectionsStandardComponents
  nameWithType: ProjectionsStandardComponents
  fullName: EventStore.Projections.Core.ProjectionsStandardComponents
- uid: IDictionary{Guid,EventStore.Core.Bus.IPublisher}
  commentId: '!:IDictionary{Guid,EventStore.Core.Bus.IPublisher}'
  definition: IDictionary`2
  name: IDictionary<Guid, IPublisher>
  nameWithType: IDictionary<Guid, IPublisher>
  fullName: IDictionary<Guid, EventStore.Core.Bus.IPublisher>
  nameWithType.vb: IDictionary(Of Guid, IPublisher)
  fullName.vb: IDictionary(Of Guid, EventStore.Core.Bus.IPublisher)
  name.vb: IDictionary(Of Guid, IPublisher)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: EventStore.Core
  commentId: N:EventStore.Core
  name: EventStore.Core
  nameWithType: EventStore.Core
  fullName: EventStore.Core
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

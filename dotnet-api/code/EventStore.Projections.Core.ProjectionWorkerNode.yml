### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.ProjectionWorkerNode
  commentId: T:EventStore.Projections.Core.ProjectionWorkerNode
  id: ProjectionWorkerNode
  parent: EventStore.Projections.Core
  children:
  - EventStore.Projections.Core.ProjectionWorkerNode.#ctor(Guid,EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.Bus.IQueuedHandler,EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Projections.Core.Services.ISingletonTimeoutScheduler,EventStore.Common.Options.ProjectionType)
  - EventStore.Projections.Core.ProjectionWorkerNode.CoreOutput
  - EventStore.Projections.Core.ProjectionWorkerNode.SetupMessaging(EventStore.Core.Bus.IBus)
  - EventStore.Projections.Core.ProjectionWorkerNode.SlaveProjectionResponseWriter
  langs:
  - csharp
  - vb
  name: ProjectionWorkerNode
  nameWithType: ProjectionWorkerNode
  fullName: EventStore.Projections.Core.ProjectionWorkerNode
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/ProjectionWorkerNode.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ProjectionWorkerNode
    path: ../EventStore/src/EventStore.Projections.Core/ProjectionWorkerNode.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core
  syntax:
    content: 'public class ProjectionWorkerNode : object'
    content.vb: >-
      Public Class ProjectionWorkerNode
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.ProjectionWorkerNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.ProjectionWorkerNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.ProjectionWorkerNode.#ctor(Guid,EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.Bus.IQueuedHandler,EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Projections.Core.Services.ISingletonTimeoutScheduler,EventStore.Common.Options.ProjectionType)
  commentId: M:EventStore.Projections.Core.ProjectionWorkerNode.#ctor(Guid,EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.Bus.IQueuedHandler,EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Projections.Core.Services.ISingletonTimeoutScheduler,EventStore.Common.Options.ProjectionType)
  id: '#ctor(Guid,EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.Bus.IQueuedHandler,EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Projections.Core.Services.ISingletonTimeoutScheduler,EventStore.Common.Options.ProjectionType)'
  parent: EventStore.Projections.Core.ProjectionWorkerNode
  langs:
  - csharp
  - vb
  name: ProjectionWorkerNode(Guid, TFChunkDb, IQueuedHandler, ITimeProvider, ISingletonTimeoutScheduler, ProjectionType)
  nameWithType: ProjectionWorkerNode.ProjectionWorkerNode(Guid, TFChunkDb, IQueuedHandler, ITimeProvider, ISingletonTimeoutScheduler, ProjectionType)
  fullName: EventStore.Projections.Core.ProjectionWorkerNode.ProjectionWorkerNode(Guid, EventStore.Core.TransactionLog.Chunks.TFChunkDb, EventStore.Core.Bus.IQueuedHandler, EventStore.Core.Services.TimerService.ITimeProvider, EventStore.Projections.Core.Services.ISingletonTimeoutScheduler, EventStore.Common.Options.ProjectionType)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/ProjectionWorkerNode.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/ProjectionWorkerNode.cs
    startLine: 35
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core
  syntax:
    content: public ProjectionWorkerNode(Guid workerId, TFChunkDb db, IQueuedHandler inputQueue, ITimeProvider timeProvider, ISingletonTimeoutScheduler timeoutScheduler, ProjectionType runProjections)
    parameters:
    - id: workerId
      type: Guid
    - id: db
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDb
    - id: inputQueue
      type: EventStore.Core.Bus.IQueuedHandler
    - id: timeProvider
      type: EventStore.Core.Services.TimerService.ITimeProvider
    - id: timeoutScheduler
      type: EventStore.Projections.Core.Services.ISingletonTimeoutScheduler
    - id: runProjections
      type: EventStore.Common.Options.ProjectionType
    content.vb: Public Sub New(workerId As Guid, db As TFChunkDb, inputQueue As IQueuedHandler, timeProvider As ITimeProvider, timeoutScheduler As ISingletonTimeoutScheduler, runProjections As ProjectionType)
  overload: EventStore.Projections.Core.ProjectionWorkerNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.ProjectionWorkerNode.CoreOutput
  commentId: P:EventStore.Projections.Core.ProjectionWorkerNode.CoreOutput
  id: CoreOutput
  parent: EventStore.Projections.Core.ProjectionWorkerNode
  langs:
  - csharp
  - vb
  name: CoreOutput
  nameWithType: ProjectionWorkerNode.CoreOutput
  fullName: EventStore.Projections.Core.ProjectionWorkerNode.CoreOutput
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/ProjectionWorkerNode.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CoreOutput
    path: ../EventStore/src/EventStore.Projections.Core/ProjectionWorkerNode.cs
    startLine: 86
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core
  syntax:
    content: public InMemoryBus CoreOutput { get; }
    parameters: []
    return:
      type: EventStore.Core.Bus.InMemoryBus
    content.vb: Public ReadOnly Property CoreOutput As InMemoryBus
  overload: EventStore.Projections.Core.ProjectionWorkerNode.CoreOutput*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.ProjectionWorkerNode.SlaveProjectionResponseWriter
  commentId: P:EventStore.Projections.Core.ProjectionWorkerNode.SlaveProjectionResponseWriter
  id: SlaveProjectionResponseWriter
  parent: EventStore.Projections.Core.ProjectionWorkerNode
  langs:
  - csharp
  - vb
  name: SlaveProjectionResponseWriter
  nameWithType: ProjectionWorkerNode.SlaveProjectionResponseWriter
  fullName: EventStore.Projections.Core.ProjectionWorkerNode.SlaveProjectionResponseWriter
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/ProjectionWorkerNode.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SlaveProjectionResponseWriter
    path: ../EventStore/src/EventStore.Projections.Core/ProjectionWorkerNode.cs
    startLine: 91
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core
  syntax:
    content: public SlaveProjectionResponseWriter SlaveProjectionResponseWriter { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Management.SlaveProjectionResponseWriter
    content.vb: Public ReadOnly Property SlaveProjectionResponseWriter As SlaveProjectionResponseWriter
  overload: EventStore.Projections.Core.ProjectionWorkerNode.SlaveProjectionResponseWriter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.ProjectionWorkerNode.SetupMessaging(EventStore.Core.Bus.IBus)
  commentId: M:EventStore.Projections.Core.ProjectionWorkerNode.SetupMessaging(EventStore.Core.Bus.IBus)
  id: SetupMessaging(EventStore.Core.Bus.IBus)
  parent: EventStore.Projections.Core.ProjectionWorkerNode
  langs:
  - csharp
  - vb
  name: SetupMessaging(IBus)
  nameWithType: ProjectionWorkerNode.SetupMessaging(IBus)
  fullName: EventStore.Projections.Core.ProjectionWorkerNode.SetupMessaging(EventStore.Core.Bus.IBus)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/ProjectionWorkerNode.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SetupMessaging
    path: ../EventStore/src/EventStore.Projections.Core/ProjectionWorkerNode.cs
    startLine: 96
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core
  syntax:
    content: public void SetupMessaging(IBus coreInputBus)
    parameters:
    - id: coreInputBus
      type: EventStore.Core.Bus.IBus
    content.vb: Public Sub SetupMessaging(coreInputBus As IBus)
  overload: EventStore.Projections.Core.ProjectionWorkerNode.SetupMessaging*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core
  commentId: N:EventStore.Projections.Core
  name: EventStore.Projections.Core
  nameWithType: EventStore.Projections.Core
  fullName: EventStore.Projections.Core
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.ProjectionWorkerNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ProjectionWorkerNode>()
  nameWithType: ProtobufExtensions.Serialize<ProjectionWorkerNode>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.ProjectionWorkerNode>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ProjectionWorkerNode)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.ProjectionWorkerNode)()
  name.vb: Serialize(Of ProjectionWorkerNode)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ProjectionWorkerNode>
    nameWithType: ProtobufExtensions.Serialize<ProjectionWorkerNode>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.ProjectionWorkerNode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ProjectionWorkerNode)
    nameWithType: ProtobufExtensions.Serialize(Of ProjectionWorkerNode)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.ProjectionWorkerNode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.ProjectionWorkerNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ProjectionWorkerNode>()
  nameWithType: ProtobufExtensions.SerializeToArray<ProjectionWorkerNode>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.ProjectionWorkerNode>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ProjectionWorkerNode)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.ProjectionWorkerNode)()
  name.vb: SerializeToArray(Of ProjectionWorkerNode)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ProjectionWorkerNode>
    nameWithType: ProtobufExtensions.SerializeToArray<ProjectionWorkerNode>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.ProjectionWorkerNode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ProjectionWorkerNode)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ProjectionWorkerNode)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.ProjectionWorkerNode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.ProjectionWorkerNode.#ctor*
  commentId: Overload:EventStore.Projections.Core.ProjectionWorkerNode.#ctor
  name: ProjectionWorkerNode
  nameWithType: ProjectionWorkerNode.ProjectionWorkerNode
  fullName: EventStore.Projections.Core.ProjectionWorkerNode.ProjectionWorkerNode
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDb
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDb
  parent: EventStore.Core.TransactionLog.Chunks
  name: TFChunkDb
  nameWithType: TFChunkDb
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDb
- uid: EventStore.Core.Bus.IQueuedHandler
  commentId: T:EventStore.Core.Bus.IQueuedHandler
  parent: EventStore.Core.Bus
  name: IQueuedHandler
  nameWithType: IQueuedHandler
  fullName: EventStore.Core.Bus.IQueuedHandler
- uid: EventStore.Core.Services.TimerService.ITimeProvider
  commentId: T:EventStore.Core.Services.TimerService.ITimeProvider
  parent: EventStore.Core.Services.TimerService
  name: ITimeProvider
  nameWithType: ITimeProvider
  fullName: EventStore.Core.Services.TimerService.ITimeProvider
- uid: EventStore.Projections.Core.Services.ISingletonTimeoutScheduler
  commentId: T:EventStore.Projections.Core.Services.ISingletonTimeoutScheduler
  parent: EventStore.Projections.Core.Services
  name: ISingletonTimeoutScheduler
  nameWithType: ISingletonTimeoutScheduler
  fullName: EventStore.Projections.Core.Services.ISingletonTimeoutScheduler
- uid: EventStore.Common.Options.ProjectionType
  commentId: T:EventStore.Common.Options.ProjectionType
  parent: EventStore.Common.Options
  name: ProjectionType
  nameWithType: ProjectionType
  fullName: EventStore.Common.Options.ProjectionType
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Services.TimerService
  commentId: N:EventStore.Core.Services.TimerService
  name: EventStore.Core.Services.TimerService
  nameWithType: EventStore.Core.Services.TimerService
  fullName: EventStore.Core.Services.TimerService
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: EventStore.Projections.Core.ProjectionWorkerNode.CoreOutput*
  commentId: Overload:EventStore.Projections.Core.ProjectionWorkerNode.CoreOutput
  name: CoreOutput
  nameWithType: ProjectionWorkerNode.CoreOutput
  fullName: EventStore.Projections.Core.ProjectionWorkerNode.CoreOutput
- uid: EventStore.Core.Bus.InMemoryBus
  commentId: T:EventStore.Core.Bus.InMemoryBus
  parent: EventStore.Core.Bus
  name: InMemoryBus
  nameWithType: InMemoryBus
  fullName: EventStore.Core.Bus.InMemoryBus
- uid: EventStore.Projections.Core.ProjectionWorkerNode.SlaveProjectionResponseWriter*
  commentId: Overload:EventStore.Projections.Core.ProjectionWorkerNode.SlaveProjectionResponseWriter
  name: SlaveProjectionResponseWriter
  nameWithType: ProjectionWorkerNode.SlaveProjectionResponseWriter
  fullName: EventStore.Projections.Core.ProjectionWorkerNode.SlaveProjectionResponseWriter
- uid: EventStore.Projections.Core.Services.Management.SlaveProjectionResponseWriter
  commentId: T:EventStore.Projections.Core.Services.Management.SlaveProjectionResponseWriter
  parent: EventStore.Projections.Core.Services.Management
  name: SlaveProjectionResponseWriter
  nameWithType: SlaveProjectionResponseWriter
  fullName: EventStore.Projections.Core.Services.Management.SlaveProjectionResponseWriter
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: EventStore.Projections.Core.ProjectionWorkerNode.SetupMessaging*
  commentId: Overload:EventStore.Projections.Core.ProjectionWorkerNode.SetupMessaging
  name: SetupMessaging
  nameWithType: ProjectionWorkerNode.SetupMessaging
  fullName: EventStore.Projections.Core.ProjectionWorkerNode.SetupMessaging
- uid: EventStore.Core.Bus.IBus
  commentId: T:EventStore.Core.Bus.IBus
  parent: EventStore.Core.Bus
  name: IBus
  nameWithType: IBus
  fullName: EventStore.Core.Bus.IBus

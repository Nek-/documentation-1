### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  commentId: T:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  id: ProjectionsController.ProjectionConfigData
  parent: EventStore.Projections.Core.Services.Http
  children:
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointAfterMs
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointHandledThreshold
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointUnhandledBytesThreshold
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EmitEnabled
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxAllowedWritesInFlight
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxWriteBatchLength
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.PendingEventsThreshold
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.TrackEmittedStreams
  langs:
  - csharp
  - vb
  name: ProjectionsController.ProjectionConfigData
  nameWithType: ProjectionsController.ProjectionConfigData
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ProjectionConfigData
    path: ../EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 648
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: 'public class ProjectionConfigData : object'
    content.vb: >-
      Public Class ProjectionConfigData
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EmitEnabled
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EmitEnabled
  id: EmitEnabled
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  langs:
  - csharp
  - vb
  name: EmitEnabled
  nameWithType: ProjectionsController.ProjectionConfigData.EmitEnabled
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EmitEnabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EmitEnabled
    path: ../EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 650
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public bool EmitEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EmitEnabled As Boolean
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EmitEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.TrackEmittedStreams
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.TrackEmittedStreams
  id: TrackEmittedStreams
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  langs:
  - csharp
  - vb
  name: TrackEmittedStreams
  nameWithType: ProjectionsController.ProjectionConfigData.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.TrackEmittedStreams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TrackEmittedStreams
    path: ../EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 651
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public bool TrackEmittedStreams { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TrackEmittedStreams As Boolean
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.TrackEmittedStreams*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointAfterMs
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointAfterMs
  id: CheckpointAfterMs
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  langs:
  - csharp
  - vb
  name: CheckpointAfterMs
  nameWithType: ProjectionsController.ProjectionConfigData.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointAfterMs
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CheckpointAfterMs
    path: ../EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 652
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public int CheckpointAfterMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CheckpointAfterMs As Integer
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointAfterMs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointHandledThreshold
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointHandledThreshold
  id: CheckpointHandledThreshold
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  langs:
  - csharp
  - vb
  name: CheckpointHandledThreshold
  nameWithType: ProjectionsController.ProjectionConfigData.CheckpointHandledThreshold
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointHandledThreshold
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CheckpointHandledThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 653
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public int CheckpointHandledThreshold { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CheckpointHandledThreshold As Integer
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointHandledThreshold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointUnhandledBytesThreshold
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointUnhandledBytesThreshold
  id: CheckpointUnhandledBytesThreshold
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  langs:
  - csharp
  - vb
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ProjectionsController.ProjectionConfigData.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointUnhandledBytesThreshold
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CheckpointUnhandledBytesThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 654
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public int CheckpointUnhandledBytesThreshold { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CheckpointUnhandledBytesThreshold As Integer
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointUnhandledBytesThreshold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.PendingEventsThreshold
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.PendingEventsThreshold
  id: PendingEventsThreshold
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  langs:
  - csharp
  - vb
  name: PendingEventsThreshold
  nameWithType: ProjectionsController.ProjectionConfigData.PendingEventsThreshold
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.PendingEventsThreshold
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: PendingEventsThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 655
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public int PendingEventsThreshold { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PendingEventsThreshold As Integer
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.PendingEventsThreshold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxWriteBatchLength
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxWriteBatchLength
  id: MaxWriteBatchLength
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  langs:
  - csharp
  - vb
  name: MaxWriteBatchLength
  nameWithType: ProjectionsController.ProjectionConfigData.MaxWriteBatchLength
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxWriteBatchLength
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: MaxWriteBatchLength
    path: ../EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 656
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public int MaxWriteBatchLength { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxWriteBatchLength As Integer
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxWriteBatchLength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxAllowedWritesInFlight
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxAllowedWritesInFlight
  id: MaxAllowedWritesInFlight
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData
  langs:
  - csharp
  - vb
  name: MaxAllowedWritesInFlight
  nameWithType: ProjectionsController.ProjectionConfigData.MaxAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxAllowedWritesInFlight
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: MaxAllowedWritesInFlight
    path: ../EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 657
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public int MaxAllowedWritesInFlight { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxAllowedWritesInFlight As Integer
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxAllowedWritesInFlight*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Http
  commentId: N:EventStore.Projections.Core.Services.Http
  name: EventStore.Projections.Core.Services.Http
  nameWithType: EventStore.Projections.Core.Services.Http
  fullName: EventStore.Projections.Core.Services.Http
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ProjectionsController.ProjectionConfigData>()
  nameWithType: ProtobufExtensions.Serialize<ProjectionsController.ProjectionConfigData>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ProjectionsController.ProjectionConfigData)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData)()
  name.vb: Serialize(Of ProjectionsController.ProjectionConfigData)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ProjectionsController.ProjectionConfigData>
    nameWithType: ProtobufExtensions.Serialize<ProjectionsController.ProjectionConfigData>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ProjectionsController.ProjectionConfigData)
    nameWithType: ProtobufExtensions.Serialize(Of ProjectionsController.ProjectionConfigData)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ProjectionsController.ProjectionConfigData>()
  nameWithType: ProtobufExtensions.SerializeToArray<ProjectionsController.ProjectionConfigData>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ProjectionsController.ProjectionConfigData)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData)()
  name.vb: SerializeToArray(Of ProjectionsController.ProjectionConfigData)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ProjectionsController.ProjectionConfigData>
    nameWithType: ProtobufExtensions.SerializeToArray<ProjectionsController.ProjectionConfigData>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ProjectionsController.ProjectionConfigData)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ProjectionsController.ProjectionConfigData)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EmitEnabled*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EmitEnabled
  name: EmitEnabled
  nameWithType: ProjectionsController.ProjectionConfigData.EmitEnabled
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.EmitEnabled
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.TrackEmittedStreams*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.TrackEmittedStreams
  name: TrackEmittedStreams
  nameWithType: ProjectionsController.ProjectionConfigData.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.TrackEmittedStreams
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointAfterMs*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointAfterMs
  name: CheckpointAfterMs
  nameWithType: ProjectionsController.ProjectionConfigData.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointAfterMs
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointHandledThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointHandledThreshold
  name: CheckpointHandledThreshold
  nameWithType: ProjectionsController.ProjectionConfigData.CheckpointHandledThreshold
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointHandledThreshold
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointUnhandledBytesThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointUnhandledBytesThreshold
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ProjectionsController.ProjectionConfigData.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.CheckpointUnhandledBytesThreshold
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.PendingEventsThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.PendingEventsThreshold
  name: PendingEventsThreshold
  nameWithType: ProjectionsController.ProjectionConfigData.PendingEventsThreshold
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.PendingEventsThreshold
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxWriteBatchLength*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxWriteBatchLength
  name: MaxWriteBatchLength
  nameWithType: ProjectionsController.ProjectionConfigData.MaxWriteBatchLength
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxWriteBatchLength
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxAllowedWritesInFlight*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxAllowedWritesInFlight
  name: MaxAllowedWritesInFlight
  nameWithType: ProjectionsController.ProjectionConfigData.MaxAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.MaxAllowedWritesInFlight

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody
  commentId: T:EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody
  id: ProjectionsController.ReadEventsBody
  parent: EventStore.Projections.Core.Services.Http
  children:
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.MaxEvents
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Position
  - EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Query
  langs:
  - csharp
  - vb
  name: ProjectionsController.ReadEventsBody
  nameWithType: ProjectionsController.ReadEventsBody
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody
  type: Class
  source:
    id: ReadEventsBody
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 314
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: 'public class ReadEventsBody : object'
    content.vb: >-
      Public Class ReadEventsBody

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Query
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Query
  id: Query
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ProjectionsController.ReadEventsBody.Query
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Query
  type: Property
  source:
    id: Query
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 315
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public QuerySourcesDefinition Query { get; set; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Messages.QuerySourcesDefinition
    content.vb: Public Property Query As QuerySourcesDefinition
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Query*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Position
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Position
  id: Position
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ProjectionsController.ReadEventsBody.Position
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Position
  type: Property
  source:
    id: Position
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 316
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public JObject Position { get; set; }
    parameters: []
    return:
      type: JObject
    content.vb: Public Property Position As JObject
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.MaxEvents
  commentId: P:EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.MaxEvents
  id: MaxEvents
  parent: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody
  langs:
  - csharp
  - vb
  name: MaxEvents
  nameWithType: ProjectionsController.ReadEventsBody.MaxEvents
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.MaxEvents
  type: Property
  source:
    id: MaxEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Http/ProjectionsController.cs
    startLine: 317
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Http
  syntax:
    content: public int? MaxEvents { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property MaxEvents As Integer?
  overload: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.MaxEvents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Http
  commentId: N:EventStore.Projections.Core.Services.Http
  name: EventStore.Projections.Core.Services.Http
  nameWithType: EventStore.Projections.Core.Services.Http
  fullName: EventStore.Projections.Core.Services.Http
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Query*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Query
  name: Query
  nameWithType: ProjectionsController.ReadEventsBody.Query
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Query
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  commentId: T:EventStore.Projections.Core.Messages.QuerySourcesDefinition
  parent: EventStore.Projections.Core.Messages
  name: QuerySourcesDefinition
  nameWithType: QuerySourcesDefinition
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Position*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Position
  name: Position
  nameWithType: ProjectionsController.ReadEventsBody.Position
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.Position
- uid: JObject
  commentId: '!:JObject'
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.MaxEvents*
  commentId: Overload:EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.MaxEvents
  name: MaxEvents
  nameWithType: ProjectionsController.ReadEventsBody.MaxEvents
  fullName: EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.MaxEvents
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler
  commentId: T:EventStore.Projections.Core.Services.IProjectionStateHandler
  id: IProjectionStateHandler
  parent: EventStore.Projections.Core.Services
  children:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  - EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  - EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  - EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  - EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  - EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  - EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  - EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  - EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  - EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  langs:
  - csharp
  - vb
  name: IProjectionStateHandler
  nameWithType: IProjectionStateHandler
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler
  type: Interface
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IProjectionStateHandler
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: 'public interface IProjectionStateHandler : IDisposable, ISourceDefinitionSource'
    content.vb: >-
      Public Interface IProjectionStateHandler
          Inherits IDisposable, ISourceDefinitionSource
  inheritedMembers:
  - EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.IProjectionStateHandler.EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  - EventStore.Projections.Core.Services.IProjectionStateHandler.EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  - EventStore.Projections.Core.Services.IProjectionStateHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.IProjectionStateHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  id: Load(System.String)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  langs:
  - csharp
  - vb
  name: Load(String)
  nameWithType: IProjectionStateHandler.Load(String)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Load
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: void Load(string state)
    parameters:
    - id: state
      type: System.String
    content.vb: Sub Load(state As String)
  overload: EventStore.Projections.Core.Services.IProjectionStateHandler.Load*
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  id: LoadShared(System.String)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  langs:
  - csharp
  - vb
  name: LoadShared(String)
  nameWithType: IProjectionStateHandler.LoadShared(String)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LoadShared
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 17
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: void LoadShared(string state)
    parameters:
    - id: state
      type: System.String
    content.vb: Sub LoadShared(state As String)
  overload: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared*
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  id: Initialize
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: IProjectionStateHandler.Initialize()
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Initialize
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: void Initialize()
    content.vb: Sub Initialize
  overload: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize*
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  id: InitializeShared
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  langs:
  - csharp
  - vb
  name: InitializeShared()
  nameWithType: IProjectionStateHandler.InitializeShared()
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: InitializeShared
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 19
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: void InitializeShared()
    content.vb: Sub InitializeShared
  overload: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared*
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  id: GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  langs:
  - csharp
  - vb
  name: GetStatePartition(CheckpointTag, String, ResolvedEvent)
  nameWithType: IProjectionStateHandler.GetStatePartition(CheckpointTag, String, ResolvedEvent)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetStatePartition
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 25
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  summary: "\nGet state partition from the event\n"
  example: []
  syntax:
    content: string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent data)
    parameters:
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: category
      type: System.String
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    return:
      type: System.String
      description: partition name
    content.vb: Function GetStatePartition(eventPosition As CheckpointTag, category As String, data As ResolvedEvent) As String
  overload: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition*
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  id: TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  langs:
  - csharp
  - vb
  name: TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  nameWithType: IProjectionStateHandler.TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TransformCatalogEvent
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  summary: "\ntransforms a catalog event to streamId\n"
  example: []
  syntax:
    content: string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data)
    parameters:
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
      description: ''
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Function TransformCatalogEvent(eventPosition As CheckpointTag, data As ResolvedEvent) As String
  overload: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent*
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  id: ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  langs:
  - csharp
  - vb
  name: ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[])
  nameWithType: IProjectionStateHandler.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent, out System.String, out System.String, out EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ProcessEvent
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 39
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  summary: "\nProcesses event and updates internal state if necessary.  \n"
  example: []
  syntax:
    content: bool ProcessEvent(string partition, CheckpointTag eventPosition, string category, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents)
    parameters:
    - id: partition
      type: System.String
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: category
      type: System.String
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: newState
      type: System.String
    - id: newSharedState
      type: System.String
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    return:
      type: System.Boolean
      description: 'true - if event was processed (new state must be returned) '
    content.vb: Function ProcessEvent(partition As String, eventPosition As CheckpointTag, category As String, data As ResolvedEvent, ByRef newState As String, ByRef newSharedState As String, ByRef emittedEvents As EmittedEventEnvelope()) As Boolean
  overload: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent*
  nameWithType.vb: IProjectionStateHandler.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, ByRef String, ByRef String, ByRef EmittedEventEnvelope())
  fullName.vb: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent, ByRef System.String, ByRef System.String, ByRef EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ProcessEvent(String, CheckpointTag, String, ResolvedEvent, ByRef String, ByRef String, ByRef EmittedEventEnvelope())
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  id: ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  langs:
  - csharp
  - vb
  name: ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[])
  nameWithType: IProjectionStateHandler.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent, out EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ProcessPartitionCreated
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 51
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  summary: "\nProcesses partition created notification and updates internal state if necessary.  \n"
  example: []
  syntax:
    content: bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents)
    parameters:
    - id: partition
      type: System.String
      description: ''
    - id: createPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
      description: ''
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
      description: ''
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
      description: ''
    return:
      type: System.Boolean
      description: true - if notification was processed (new state must be returned)
    content.vb: Function ProcessPartitionCreated(partition As String, createPosition As CheckpointTag, data As ResolvedEvent, ByRef emittedEvents As EmittedEventEnvelope()) As Boolean
  overload: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated*
  nameWithType.vb: IProjectionStateHandler.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, ByRef EmittedEventEnvelope())
  fullName.vb: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent, ByRef EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, ByRef EmittedEventEnvelope())
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  id: ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  langs:
  - csharp
  - vb
  name: ProcessPartitionDeleted(String, CheckpointTag, out String)
  nameWithType: IProjectionStateHandler.ProcessPartitionDeleted(String, CheckpointTag, out String)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, out System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ProcessPartitionDeleted
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 58
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  summary: "\nProcesses partition deleted notification and updates internal state if necessary.  \n"
  example: []
  syntax:
    content: bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState)
    parameters:
    - id: partition
      type: System.String
    - id: deletePosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: newState
      type: System.String
    return:
      type: System.Boolean
      description: 'true - if event was processed (new state must be returned) '
    content.vb: Function ProcessPartitionDeleted(partition As String, deletePosition As CheckpointTag, ByRef newState As String) As Boolean
  overload: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted*
  nameWithType.vb: IProjectionStateHandler.ProcessPartitionDeleted(String, CheckpointTag, ByRef String)
  fullName.vb: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, ByRef System.String)
  name.vb: ProcessPartitionDeleted(String, CheckpointTag, ByRef String)
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  id: TransformStateToResult
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  langs:
  - csharp
  - vb
  name: TransformStateToResult()
  nameWithType: IProjectionStateHandler.TransformStateToResult()
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TransformStateToResult
    path: ../EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 64
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  summary: "\nTransforms current state into a projection result.  Should not call any emit/linkTo etc \n"
  example: []
  syntax:
    content: string TransformStateToResult()
    return:
      type: System.String
      description: result JSON or NULL if current state has been skipped
    content.vb: Function TransformStateToResult As String
  overload: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult*
references:
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  commentId: M:EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  parent: EventStore.Projections.Core.Services.ISourceDefinitionSource
  name: GetSourceDefinition()
  nameWithType: ISourceDefinitionSource.GetSourceDefinition()
  fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
    name: GetSourceDefinition
    nameWithType: ISourceDefinitionSource.GetSourceDefinition
    fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
    name: GetSourceDefinition
    nameWithType: ISourceDefinitionSource.GetSourceDefinition
    fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  parent: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
  definition: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  name: ProcessEvent(String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, EmittedEventEnvelope[], Boolean)
  nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent(String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, EmittedEventEnvelope[], Boolean)
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, Guid, System.Int64, System.String, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], System.Boolean)
  nameWithType.vb: ProjectionStateHandlerTestExtensions.ProcessEvent(String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, EmittedEventEnvelope(), Boolean)
  fullName.vb: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, Guid, System.Int64, System.String, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), System.Boolean)
  name.vb: ProcessEvent(String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, EmittedEventEnvelope(), Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
    name: ProcessEvent
    nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent
    fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
    name: ProcessEvent
    nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent
    fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  parent: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
  definition: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  name: ProcessEvent(String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, String, EmittedEventEnvelope[], Boolean)
  nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent(String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, String, EmittedEventEnvelope[], Boolean)
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, Guid, System.Int64, System.String, System.String, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], System.Boolean)
  nameWithType.vb: ProjectionStateHandlerTestExtensions.ProcessEvent(String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, String, EmittedEventEnvelope(), Boolean)
  fullName.vb: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, Guid, System.Int64, System.String, System.String, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), System.Boolean)
  name.vb: ProcessEvent(String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, String, EmittedEventEnvelope(), Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
    name: ProcessEvent
    nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent
    fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
    name: ProcessEvent
    nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent
    fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IProjectionStateHandler>()
  nameWithType: ProtobufExtensions.Serialize<IProjectionStateHandler>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.IProjectionStateHandler>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IProjectionStateHandler)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.IProjectionStateHandler)()
  name.vb: Serialize(Of IProjectionStateHandler)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IProjectionStateHandler>
    nameWithType: ProtobufExtensions.Serialize<IProjectionStateHandler>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.IProjectionStateHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IProjectionStateHandler)
    nameWithType: ProtobufExtensions.Serialize(Of IProjectionStateHandler)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.IProjectionStateHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IProjectionStateHandler>()
  nameWithType: ProtobufExtensions.SerializeToArray<IProjectionStateHandler>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.IProjectionStateHandler>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IProjectionStateHandler)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.IProjectionStateHandler)()
  name.vb: SerializeToArray(Of IProjectionStateHandler)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IProjectionStateHandler>
    nameWithType: ProtobufExtensions.SerializeToArray<IProjectionStateHandler>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.IProjectionStateHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IProjectionStateHandler)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IProjectionStateHandler)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.IProjectionStateHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.ISourceDefinitionSource
  commentId: T:EventStore.Projections.Core.Services.ISourceDefinitionSource
  parent: EventStore.Projections.Core.Services
  name: ISourceDefinitionSource
  nameWithType: ISourceDefinitionSource
  fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  isExternal: true
  name: ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, EmittedEventEnvelope[], Boolean)
  nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, EmittedEventEnvelope[], Boolean)
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, Guid, System.Int64, System.String, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], System.Boolean)
  nameWithType.vb: ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, EmittedEventEnvelope(), Boolean)
  fullName.vb: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, Guid, System.Int64, System.String, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), System.Boolean)
  name.vb: ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, EmittedEventEnvelope(), Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
    name: ProcessEvent
    nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent
    fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler
    name: IProjectionStateHandler
    nameWithType: IProjectionStateHandler
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
    name: ProcessEvent
    nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent
    fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler
    name: IProjectionStateHandler
    nameWithType: IProjectionStateHandler
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
  commentId: T:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
  parent: EventStore.Projections.Core.Services
  name: ProjectionStateHandlerTestExtensions
  nameWithType: ProjectionStateHandlerTestExtensions
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
- uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  isExternal: true
  name: ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, String, EmittedEventEnvelope[], Boolean)
  nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, String, EmittedEventEnvelope[], Boolean)
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, Guid, System.Int64, System.String, System.String, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], System.Boolean)
  nameWithType.vb: ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, String, EmittedEventEnvelope(), Boolean)
  fullName.vb: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, Guid, System.Int64, System.String, System.String, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), System.Boolean)
  name.vb: ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, String, String, EmittedEventEnvelope(), Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
    name: ProcessEvent
    nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent
    fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler
    name: IProjectionStateHandler
    nameWithType: IProjectionStateHandler
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
    name: ProcessEvent
    nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent
    fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler
    name: IProjectionStateHandler
    nameWithType: IProjectionStateHandler
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Load*
  commentId: Overload:EventStore.Projections.Core.Services.IProjectionStateHandler.Load
  name: Load
  nameWithType: IProjectionStateHandler.Load
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Load
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared*
  commentId: Overload:EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared
  name: LoadShared
  nameWithType: IProjectionStateHandler.LoadShared
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize*
  commentId: Overload:EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  name: Initialize
  nameWithType: IProjectionStateHandler.Initialize
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared*
  commentId: Overload:EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  name: InitializeShared
  nameWithType: IProjectionStateHandler.InitializeShared
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition*
  commentId: Overload:EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition
  name: GetStatePartition
  nameWithType: IProjectionStateHandler.GetStatePartition
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent*
  commentId: Overload:EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent
  name: TransformCatalogEvent
  nameWithType: IProjectionStateHandler.TransformCatalogEvent
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent*
  commentId: Overload:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent
  name: ProcessEvent
  nameWithType: IProjectionStateHandler.ProcessEvent
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  isExternal: true
  name: EmittedEventEnvelope[]
  nameWithType: EmittedEventEnvelope[]
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  nameWithType.vb: EmittedEventEnvelope()
  fullName.vb: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope()
  name.vb: EmittedEventEnvelope()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated*
  commentId: Overload:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated
  name: ProcessPartitionCreated
  nameWithType: IProjectionStateHandler.ProcessPartitionCreated
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted*
  commentId: Overload:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted
  name: ProcessPartitionDeleted
  nameWithType: IProjectionStateHandler.ProcessPartitionDeleted
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult*
  commentId: Overload:EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  name: TransformStateToResult
  nameWithType: IProjectionStateHandler.TransformStateToResult
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult

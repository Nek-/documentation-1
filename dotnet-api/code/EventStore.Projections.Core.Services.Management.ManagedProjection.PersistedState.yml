### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  commentId: T:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  id: ManagedProjection.PersistedState
  parent: EventStore.Projections.Core.Services.Management
  children:
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.#ctor
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointAfterMs
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointHandledThreshold
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointsDisabled
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointUnhandledBytesThreshold
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CreateTempStreams
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteCheckpointStream
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleted
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteEmittedStreams
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteStateStream
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleting
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EmitEnabled
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Enabled
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Epoch
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.HandlerType
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxAllowedWritesInFlight
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxWriteBatchLength
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Message
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Mode
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.NumberOfPrequisitesMetForDeletion
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.PendingEventsThreshold
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Query
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.RunAs
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.SourceDefinition
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.TrackEmittedStreams
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Version
  langs:
  - csharp
  - vb
  name: ManagedProjection.PersistedState
  nameWithType: ManagedProjection.PersistedState
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PersistedState
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 27
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: 'public class PersistedState : object'
    content.vb: >-
      Public Class PersistedState
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.HandlerType
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.HandlerType
  id: HandlerType
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: HandlerType
  nameWithType: ManagedProjection.PersistedState.HandlerType
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.HandlerType
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: HandlerType
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public string HandlerType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HandlerType As String
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.HandlerType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Query
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Query
  id: Query
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ManagedProjection.PersistedState.Query
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Query
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Query
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 30
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public string Query { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Query As String
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Query*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Mode
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Mode
  id: Mode
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: ManagedProjection.PersistedState.Mode
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Mode
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Mode
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 31
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public ProjectionMode Mode { get; set; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.ProjectionMode
    content.vb: Public Property Mode As ProjectionMode
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Mode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Enabled
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Enabled
  id: Enabled
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: ManagedProjection.PersistedState.Enabled
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Enabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Enabled
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 32
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleted
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleted
  id: Deleted
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: ManagedProjection.PersistedState.Deleted
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleted
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Deleted
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool Deleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Deleted As Boolean
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleting
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleting
  id: Deleting
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: Deleting
  nameWithType: ManagedProjection.PersistedState.Deleting
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleting
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Deleting
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 34
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool Deleting { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Deleting As Boolean
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleting*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteEmittedStreams
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteEmittedStreams
  id: DeleteEmittedStreams
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: DeleteEmittedStreams
  nameWithType: ManagedProjection.PersistedState.DeleteEmittedStreams
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteEmittedStreams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DeleteEmittedStreams
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 35
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool DeleteEmittedStreams { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DeleteEmittedStreams As Boolean
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteEmittedStreams*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteCheckpointStream
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteCheckpointStream
  id: DeleteCheckpointStream
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: DeleteCheckpointStream
  nameWithType: ManagedProjection.PersistedState.DeleteCheckpointStream
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteCheckpointStream
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DeleteCheckpointStream
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 36
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool DeleteCheckpointStream { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DeleteCheckpointStream As Boolean
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteCheckpointStream*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteStateStream
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteStateStream
  id: DeleteStateStream
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: DeleteStateStream
  nameWithType: ManagedProjection.PersistedState.DeleteStateStream
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteStateStream
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DeleteStateStream
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 37
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool DeleteStateStream { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DeleteStateStream As Boolean
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteStateStream*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.NumberOfPrequisitesMetForDeletion
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.NumberOfPrequisitesMetForDeletion
  id: NumberOfPrequisitesMetForDeletion
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: NumberOfPrequisitesMetForDeletion
  nameWithType: ManagedProjection.PersistedState.NumberOfPrequisitesMetForDeletion
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.NumberOfPrequisitesMetForDeletion
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NumberOfPrequisitesMetForDeletion
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 38
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public int NumberOfPrequisitesMetForDeletion
    return:
      type: System.Int32
    content.vb: Public NumberOfPrequisitesMetForDeletion As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Message
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Message
  id: Message
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ManagedProjection.PersistedState.Message
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Message
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Message
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 39
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.SourceDefinition
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.SourceDefinition
  id: SourceDefinition
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: SourceDefinition
  nameWithType: ManagedProjection.PersistedState.SourceDefinition
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.SourceDefinition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SourceDefinition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 41
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public ProjectionSourceDefinition SourceDefinition { get; set; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
    content.vb: Public Property SourceDefinition As ProjectionSourceDefinition
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.SourceDefinition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EmitEnabled
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EmitEnabled
  id: EmitEnabled
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: EmitEnabled
  nameWithType: ManagedProjection.PersistedState.EmitEnabled
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EmitEnabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EmitEnabled
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 42
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool? EmitEnabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property EmitEnabled As Boolean?
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EmitEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CreateTempStreams
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CreateTempStreams
  id: CreateTempStreams
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: CreateTempStreams
  nameWithType: ManagedProjection.PersistedState.CreateTempStreams
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CreateTempStreams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CreateTempStreams
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 43
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool? CreateTempStreams { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property CreateTempStreams As Boolean?
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CreateTempStreams*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointsDisabled
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointsDisabled
  id: CheckpointsDisabled
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: CheckpointsDisabled
  nameWithType: ManagedProjection.PersistedState.CheckpointsDisabled
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointsDisabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CheckpointsDisabled
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 44
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool? CheckpointsDisabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property CheckpointsDisabled As Boolean?
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointsDisabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.TrackEmittedStreams
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.TrackEmittedStreams
  id: TrackEmittedStreams
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: TrackEmittedStreams
  nameWithType: ManagedProjection.PersistedState.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.TrackEmittedStreams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TrackEmittedStreams
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 45
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool? TrackEmittedStreams { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property TrackEmittedStreams As Boolean?
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.TrackEmittedStreams*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Epoch
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Epoch
  id: Epoch
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: Epoch
  nameWithType: ManagedProjection.PersistedState.Epoch
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Epoch
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Epoch
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 46
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public long? Epoch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property Epoch As Long?
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Epoch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Version
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Version
  id: Version
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ManagedProjection.PersistedState.Version
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Version
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 47
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public long? Version { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property Version As Long?
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.RunAs
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.RunAs
  id: RunAs
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: RunAs
  nameWithType: ManagedProjection.PersistedState.RunAs
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.RunAs
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: RunAs
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 48
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public SerializedRunAs RunAs { get; set; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Management.SerializedRunAs
    content.vb: Public Property RunAs As SerializedRunAs
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.RunAs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointHandledThreshold
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointHandledThreshold
  id: CheckpointHandledThreshold
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: CheckpointHandledThreshold
  nameWithType: ManagedProjection.PersistedState.CheckpointHandledThreshold
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointHandledThreshold
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CheckpointHandledThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 49
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public int CheckpointHandledThreshold { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CheckpointHandledThreshold As Integer
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointHandledThreshold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointAfterMs
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointAfterMs
  id: CheckpointAfterMs
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: CheckpointAfterMs
  nameWithType: ManagedProjection.PersistedState.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointAfterMs
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CheckpointAfterMs
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 50
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public int CheckpointAfterMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CheckpointAfterMs As Integer
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointAfterMs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointUnhandledBytesThreshold
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointUnhandledBytesThreshold
  id: CheckpointUnhandledBytesThreshold
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ManagedProjection.PersistedState.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointUnhandledBytesThreshold
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CheckpointUnhandledBytesThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 51
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public int CheckpointUnhandledBytesThreshold { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CheckpointUnhandledBytesThreshold As Integer
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointUnhandledBytesThreshold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.PendingEventsThreshold
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.PendingEventsThreshold
  id: PendingEventsThreshold
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: PendingEventsThreshold
  nameWithType: ManagedProjection.PersistedState.PendingEventsThreshold
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.PendingEventsThreshold
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PendingEventsThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 52
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public int PendingEventsThreshold { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PendingEventsThreshold As Integer
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.PendingEventsThreshold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxWriteBatchLength
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxWriteBatchLength
  id: MaxWriteBatchLength
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: MaxWriteBatchLength
  nameWithType: ManagedProjection.PersistedState.MaxWriteBatchLength
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxWriteBatchLength
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MaxWriteBatchLength
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 53
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public int MaxWriteBatchLength { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxWriteBatchLength As Integer
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxWriteBatchLength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxAllowedWritesInFlight
  commentId: P:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxAllowedWritesInFlight
  id: MaxAllowedWritesInFlight
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: MaxAllowedWritesInFlight
  nameWithType: ManagedProjection.PersistedState.MaxAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxAllowedWritesInFlight
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MaxAllowedWritesInFlight
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 54
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public int MaxAllowedWritesInFlight { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxAllowedWritesInFlight As Integer
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxAllowedWritesInFlight*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.#ctor
  commentId: M:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.#ctor
  id: '#ctor'
  parent: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState
  langs:
  - csharp
  - vb
  name: PersistedState()
  nameWithType: ManagedProjection.PersistedState.PersistedState()
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.PersistedState()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 55
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public PersistedState()
    content.vb: Public Sub New
  overload: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ManagedProjection.PersistedState>()
  nameWithType: ProtobufExtensions.Serialize<ManagedProjection.PersistedState>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ManagedProjection.PersistedState)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState)()
  name.vb: Serialize(Of ManagedProjection.PersistedState)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ManagedProjection.PersistedState>
    nameWithType: ProtobufExtensions.Serialize<ManagedProjection.PersistedState>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ManagedProjection.PersistedState)
    nameWithType: ProtobufExtensions.Serialize(Of ManagedProjection.PersistedState)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ManagedProjection.PersistedState>()
  nameWithType: ProtobufExtensions.SerializeToArray<ManagedProjection.PersistedState>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ManagedProjection.PersistedState)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState)()
  name.vb: SerializeToArray(Of ManagedProjection.PersistedState)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ManagedProjection.PersistedState>
    nameWithType: ProtobufExtensions.SerializeToArray<ManagedProjection.PersistedState>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ManagedProjection.PersistedState)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ManagedProjection.PersistedState)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.HandlerType*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.HandlerType
  name: HandlerType
  nameWithType: ManagedProjection.PersistedState.HandlerType
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.HandlerType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Query*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Query
  name: Query
  nameWithType: ManagedProjection.PersistedState.Query
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Query
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Mode*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Mode
  name: Mode
  nameWithType: ManagedProjection.PersistedState.Mode
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Mode
- uid: EventStore.Projections.Core.Services.ProjectionMode
  commentId: T:EventStore.Projections.Core.Services.ProjectionMode
  parent: EventStore.Projections.Core.Services
  name: ProjectionMode
  nameWithType: ProjectionMode
  fullName: EventStore.Projections.Core.Services.ProjectionMode
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Enabled*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Enabled
  name: Enabled
  nameWithType: ManagedProjection.PersistedState.Enabled
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleted*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleted
  name: Deleted
  nameWithType: ManagedProjection.PersistedState.Deleted
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleted
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleting*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleting
  name: Deleting
  nameWithType: ManagedProjection.PersistedState.Deleting
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Deleting
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteEmittedStreams*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteEmittedStreams
  name: DeleteEmittedStreams
  nameWithType: ManagedProjection.PersistedState.DeleteEmittedStreams
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteEmittedStreams
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteCheckpointStream*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteCheckpointStream
  name: DeleteCheckpointStream
  nameWithType: ManagedProjection.PersistedState.DeleteCheckpointStream
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteCheckpointStream
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteStateStream*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteStateStream
  name: DeleteStateStream
  nameWithType: ManagedProjection.PersistedState.DeleteStateStream
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.DeleteStateStream
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Message*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Message
  name: Message
  nameWithType: ManagedProjection.PersistedState.Message
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Message
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.SourceDefinition*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.SourceDefinition
  name: SourceDefinition
  nameWithType: ManagedProjection.PersistedState.SourceDefinition
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.SourceDefinition
- uid: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionSourceDefinition
  nameWithType: ProjectionSourceDefinition
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EmitEnabled*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EmitEnabled
  name: EmitEnabled
  nameWithType: ManagedProjection.PersistedState.EmitEnabled
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.EmitEnabled
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CreateTempStreams*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CreateTempStreams
  name: CreateTempStreams
  nameWithType: ManagedProjection.PersistedState.CreateTempStreams
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CreateTempStreams
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointsDisabled*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointsDisabled
  name: CheckpointsDisabled
  nameWithType: ManagedProjection.PersistedState.CheckpointsDisabled
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointsDisabled
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.TrackEmittedStreams*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.TrackEmittedStreams
  name: TrackEmittedStreams
  nameWithType: ManagedProjection.PersistedState.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.TrackEmittedStreams
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Epoch*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Epoch
  name: Epoch
  nameWithType: ManagedProjection.PersistedState.Epoch
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Epoch
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Version*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Version
  name: Version
  nameWithType: ManagedProjection.PersistedState.Version
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.Version
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.RunAs*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.RunAs
  name: RunAs
  nameWithType: ManagedProjection.PersistedState.RunAs
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.RunAs
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs
  commentId: T:EventStore.Projections.Core.Services.Management.SerializedRunAs
  parent: EventStore.Projections.Core.Services.Management
  name: SerializedRunAs
  nameWithType: SerializedRunAs
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointHandledThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointHandledThreshold
  name: CheckpointHandledThreshold
  nameWithType: ManagedProjection.PersistedState.CheckpointHandledThreshold
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointHandledThreshold
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointAfterMs*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointAfterMs
  name: CheckpointAfterMs
  nameWithType: ManagedProjection.PersistedState.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointAfterMs
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointUnhandledBytesThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointUnhandledBytesThreshold
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ManagedProjection.PersistedState.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.CheckpointUnhandledBytesThreshold
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.PendingEventsThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.PendingEventsThreshold
  name: PendingEventsThreshold
  nameWithType: ManagedProjection.PersistedState.PendingEventsThreshold
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.PendingEventsThreshold
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxWriteBatchLength*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxWriteBatchLength
  name: MaxWriteBatchLength
  nameWithType: ManagedProjection.PersistedState.MaxWriteBatchLength
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxWriteBatchLength
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxAllowedWritesInFlight*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxAllowedWritesInFlight
  name: MaxAllowedWritesInFlight
  nameWithType: ManagedProjection.PersistedState.MaxAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.MaxAllowedWritesInFlight
- uid: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.#ctor
  name: PersistedState
  nameWithType: ManagedProjection.PersistedState.PersistedState
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.PersistedState

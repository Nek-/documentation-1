### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  commentId: T:EventStore.Projections.Core.Services.Management.ManagedProjectionState
  id: ManagedProjectionState
  parent: EventStore.Projections.Core.Services.Management
  children:
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Aborted
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Aborting
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Completed
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Creating
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Deleting
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Faulted
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Loaded
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Loading
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.LoadingStopped
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Prepared
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Preparing
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Running
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Starting
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Stopped
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.Stopping
  langs:
  - csharp
  - vb
  name: ManagedProjectionState
  nameWithType: ManagedProjectionState
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  type: Enum
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ManagedProjectionState
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 1
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: 'public enum ManagedProjectionState : int'
    content.vb: Public Enum ManagedProjectionState As Integer
  extensionMethods:
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Management.ManagedProjectionState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Creating
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Creating
  id: Creating
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Creating
  nameWithType: ManagedProjectionState.Creating
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Creating
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Creating
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 2
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Creating = 0
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Loading
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Loading
  id: Loading
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Loading
  nameWithType: ManagedProjectionState.Loading
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Loading
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Loading
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Loading = 1
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Loaded
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Loaded
  id: Loaded
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Loaded
  nameWithType: ManagedProjectionState.Loaded
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Loaded
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Loaded
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Loaded = 2
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Preparing
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Preparing
  id: Preparing
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Preparing
  nameWithType: ManagedProjectionState.Preparing
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Preparing
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Preparing
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Preparing = 3
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Prepared
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Prepared
  id: Prepared
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Prepared
  nameWithType: ManagedProjectionState.Prepared
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Prepared
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Prepared
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Prepared = 4
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Starting
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Starting
  id: Starting
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Starting
  nameWithType: ManagedProjectionState.Starting
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Starting
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Starting
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Starting = 5
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.LoadingStopped
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.LoadingStopped
  id: LoadingStopped
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: LoadingStopped
  nameWithType: ManagedProjectionState.LoadingStopped
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.LoadingStopped
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LoadingStopped
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: LoadingStopped = 6
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Running
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Running
  id: Running
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Running
  nameWithType: ManagedProjectionState.Running
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Running
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Running
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Running = 7
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Stopping
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Stopping
  id: Stopping
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Stopping
  nameWithType: ManagedProjectionState.Stopping
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Stopping
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Stopping
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Stopping = 8
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Aborting
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Aborting
  id: Aborting
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Aborting
  nameWithType: ManagedProjectionState.Aborting
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Aborting
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Aborting
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Aborting = 9
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Stopped
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Stopped
  id: Stopped
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Stopped
  nameWithType: ManagedProjectionState.Stopped
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Stopped
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Stopped
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Stopped = 10
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Completed
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Completed
  id: Completed
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: ManagedProjectionState.Completed
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Completed
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Completed
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Completed = 11
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Aborted
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Aborted
  id: Aborted
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Aborted
  nameWithType: ManagedProjectionState.Aborted
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Aborted
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Aborted
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Aborted = 12
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Faulted
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Faulted
  id: Faulted
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Faulted
  nameWithType: ManagedProjectionState.Faulted
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Faulted
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Faulted
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 15
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Faulted = 13
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Deleting
  commentId: F:EventStore.Projections.Core.Services.Management.ManagedProjectionState.Deleting
  id: Deleting
  parent: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  langs:
  - csharp
  - vb
  name: Deleting
  nameWithType: ManagedProjectionState.Deleting
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState.Deleting
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Deleting
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjectionState.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: Deleting = 14
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<ManagedProjectionState>()
  nameWithType: EnumExtensions.EnumValueName<ManagedProjectionState>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Projections.Core.Services.Management.ManagedProjectionState>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of ManagedProjectionState)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Projections.Core.Services.Management.ManagedProjectionState)()
  name.vb: EnumValueName(Of ManagedProjectionState)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<ManagedProjectionState>
    nameWithType: EnumExtensions.EnumValueName<ManagedProjectionState>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Projections.Core.Services.Management.ManagedProjectionState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of ManagedProjectionState)
    nameWithType: EnumExtensions.EnumValueName(Of ManagedProjectionState)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Projections.Core.Services.Management.ManagedProjectionState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ManagedProjectionState>()
  nameWithType: ProtobufExtensions.Serialize<ManagedProjectionState>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.ManagedProjectionState>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ManagedProjectionState)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.ManagedProjectionState)()
  name.vb: Serialize(Of ManagedProjectionState)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ManagedProjectionState>
    nameWithType: ProtobufExtensions.Serialize<ManagedProjectionState>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.ManagedProjectionState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ManagedProjectionState)
    nameWithType: ProtobufExtensions.Serialize(Of ManagedProjectionState)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.ManagedProjectionState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ManagedProjectionState>()
  nameWithType: ProtobufExtensions.SerializeToArray<ManagedProjectionState>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.ManagedProjectionState>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ManagedProjectionState)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.ManagedProjectionState)()
  name.vb: SerializeToArray(Of ManagedProjectionState)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ManagedProjectionState>
    nameWithType: ProtobufExtensions.SerializeToArray<ManagedProjectionState>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.ManagedProjectionState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ManagedProjectionState)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ManagedProjectionState)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.ManagedProjectionState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  commentId: T:EventStore.Projections.Core.Services.Management.ManagedProjectionState
  parent: EventStore.Projections.Core.Services.Management
  name: ManagedProjectionState
  nameWithType: ManagedProjectionState
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState

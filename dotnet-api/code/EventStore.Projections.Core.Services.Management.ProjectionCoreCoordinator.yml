### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  commentId: T:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  id: ProjectionCoreCoordinator
  parent: EventStore.Projections.Core.Services.Management
  children:
  - EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.#ctor(EventStore.Common.Options.ProjectionType,EventStore.Projections.Core.Services.Management.TimeoutScheduler[],EventStore.Core.Bus.IPublisher[],EventStore.Core.Bus.IPublisher,EventStore.Core.Messaging.IEnvelope)
  - EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  - EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  - EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  - EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  - EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  - EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  - EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.SetupMessaging(EventStore.Core.Bus.IBus)
  langs:
  - csharp
  - vb
  name: ProjectionCoreCoordinator
  nameWithType: ProjectionCoreCoordinator
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ProjectionCoreCoordinator
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: 'public class ProjectionCoreCoordinator : object, IHandle<ProjectionManagementMessage.Internal.RegularTimeout>, IHandle<SystemMessage.StateChangeMessage>, IHandle<SystemMessage.SystemCoreReady>, IHandle<SystemMessage.EpochWritten>, IHandle<ProjectionCoreServiceMessage.SubComponentStarted>, IHandle<ProjectionCoreServiceMessage.SubComponentStopped>'
    content.vb: >-
      Public Class ProjectionCoreCoordinator
          Inherits Object
          Implements IHandle(Of ProjectionManagementMessage.Internal.RegularTimeout), IHandle(Of SystemMessage.StateChangeMessage), IHandle(Of SystemMessage.SystemCoreReady), IHandle(Of SystemMessage.EpochWritten), IHandle(Of ProjectionCoreServiceMessage.SubComponentStarted), IHandle(Of ProjectionCoreServiceMessage.SubComponentStopped)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped}
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.#ctor(EventStore.Common.Options.ProjectionType,EventStore.Projections.Core.Services.Management.TimeoutScheduler[],EventStore.Core.Bus.IPublisher[],EventStore.Core.Bus.IPublisher,EventStore.Core.Messaging.IEnvelope)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.#ctor(EventStore.Common.Options.ProjectionType,EventStore.Projections.Core.Services.Management.TimeoutScheduler[],EventStore.Core.Bus.IPublisher[],EventStore.Core.Bus.IPublisher,EventStore.Core.Messaging.IEnvelope)
  id: '#ctor(EventStore.Common.Options.ProjectionType,EventStore.Projections.Core.Services.Management.TimeoutScheduler[],EventStore.Core.Bus.IPublisher[],EventStore.Core.Bus.IPublisher,EventStore.Core.Messaging.IEnvelope)'
  parent: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  langs:
  - csharp
  - vb
  name: ProjectionCoreCoordinator(ProjectionType, TimeoutScheduler[], IPublisher[], IPublisher, IEnvelope)
  nameWithType: ProjectionCoreCoordinator.ProjectionCoreCoordinator(ProjectionType, TimeoutScheduler[], IPublisher[], IPublisher, IEnvelope)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.ProjectionCoreCoordinator(EventStore.Common.Options.ProjectionType, EventStore.Projections.Core.Services.Management.TimeoutScheduler[], EventStore.Core.Bus.IPublisher[], EventStore.Core.Bus.IPublisher, EventStore.Core.Messaging.IEnvelope)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
    startLine: 32
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public ProjectionCoreCoordinator(ProjectionType runProjections, TimeoutScheduler[] timeoutSchedulers, IPublisher[] queues, IPublisher publisher, IEnvelope publishEnvelope)
    parameters:
    - id: runProjections
      type: EventStore.Common.Options.ProjectionType
    - id: timeoutSchedulers
      type: EventStore.Projections.Core.Services.Management.TimeoutScheduler[]
    - id: queues
      type: EventStore.Core.Bus.IPublisher[]
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: publishEnvelope
      type: EventStore.Core.Messaging.IEnvelope
    content.vb: Public Sub New(runProjections As ProjectionType, timeoutSchedulers As TimeoutScheduler(), queues As IPublisher(), publisher As IPublisher, publishEnvelope As IEnvelope)
  overload: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.#ctor*
  nameWithType.vb: ProjectionCoreCoordinator.ProjectionCoreCoordinator(ProjectionType, TimeoutScheduler(), IPublisher(), IPublisher, IEnvelope)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.ProjectionCoreCoordinator(EventStore.Common.Options.ProjectionType, EventStore.Projections.Core.Services.Management.TimeoutScheduler(), EventStore.Core.Bus.IPublisher(), EventStore.Core.Bus.IPublisher, EventStore.Core.Messaging.IEnvelope)
  name.vb: ProjectionCoreCoordinator(ProjectionType, TimeoutScheduler(), IPublisher(), IPublisher, IEnvelope)
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  parent: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Internal.RegularTimeout)
  nameWithType: ProjectionCoreCoordinator.Handle(ProjectionManagementMessage.Internal.RegularTimeout)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
    startLine: 47
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Internal.RegularTimeout message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Internal.RegularTimeout)
  overload: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  id: Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  parent: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  langs:
  - csharp
  - vb
  name: Handle(SystemMessage.SystemCoreReady)
  nameWithType: ProjectionCoreCoordinator.Handle(SystemMessage.SystemCoreReady)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
    startLine: 59
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(SystemMessage.SystemCoreReady message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.SystemCoreReady
    content.vb: Public Sub Handle(message As SystemMessage.SystemCoreReady)
  overload: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  id: Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  parent: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  langs:
  - csharp
  - vb
  name: Handle(SystemMessage.StateChangeMessage)
  nameWithType: ProjectionCoreCoordinator.Handle(SystemMessage.StateChangeMessage)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
    startLine: 65
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(SystemMessage.StateChangeMessage message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    content.vb: Public Sub Handle(message As SystemMessage.StateChangeMessage)
  overload: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  id: Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  parent: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  langs:
  - csharp
  - vb
  name: Handle(SystemMessage.EpochWritten)
  nameWithType: ProjectionCoreCoordinator.Handle(SystemMessage.EpochWritten)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
    startLine: 74
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(SystemMessage.EpochWritten message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.EpochWritten
    content.vb: Public Sub Handle(message As SystemMessage.EpochWritten)
  overload: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  parent: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  langs:
  - csharp
  - vb
  name: Handle(ProjectionCoreServiceMessage.SubComponentStarted)
  nameWithType: ProjectionCoreCoordinator.Handle(ProjectionCoreServiceMessage.SubComponentStarted)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
    startLine: 162
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionCoreServiceMessage.SubComponentStarted message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
    content.vb: Public Sub Handle(message As ProjectionCoreServiceMessage.SubComponentStarted)
  overload: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted}.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  parent: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  langs:
  - csharp
  - vb
  name: Handle(ProjectionCoreServiceMessage.SubComponentStopped)
  nameWithType: ProjectionCoreCoordinator.Handle(ProjectionCoreServiceMessage.SubComponentStopped)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
    startLine: 172
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionCoreServiceMessage.SubComponentStopped message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
    content.vb: Public Sub Handle(message As ProjectionCoreServiceMessage.SubComponentStopped)
  overload: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped}.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.SetupMessaging(EventStore.Core.Bus.IBus)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.SetupMessaging(EventStore.Core.Bus.IBus)
  id: SetupMessaging(EventStore.Core.Bus.IBus)
  parent: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator
  langs:
  - csharp
  - vb
  name: SetupMessaging(IBus)
  nameWithType: ProjectionCoreCoordinator.SetupMessaging(IBus)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.SetupMessaging(EventStore.Core.Bus.IBus)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetupMessaging
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionCoreCoordinator.cs
    startLine: 180
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void SetupMessaging(IBus bus)
    parameters:
    - id: bus
      type: EventStore.Core.Bus.IBus
    content.vb: Public Sub SetupMessaging(bus As IBus)
  overload: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.SetupMessaging*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Internal.RegularTimeout>
  nameWithType: IHandle<ProjectionManagementMessage.Internal.RegularTimeout>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Internal.RegularTimeout)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  name.vb: IHandle(Of ProjectionManagementMessage.Internal.RegularTimeout)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
    name: ProjectionManagementMessage.Internal.RegularTimeout
    nameWithType: ProjectionManagementMessage.Internal.RegularTimeout
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
    name: ProjectionManagementMessage.Internal.RegularTimeout
    nameWithType: ProjectionManagementMessage.Internal.RegularTimeout
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.StateChangeMessage>
  nameWithType: IHandle<SystemMessage.StateChangeMessage>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>
  nameWithType.vb: IHandle(Of SystemMessage.StateChangeMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  name.vb: IHandle(Of SystemMessage.StateChangeMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.SystemCoreReady>
  nameWithType: IHandle<SystemMessage.SystemCoreReady>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemCoreReady>
  nameWithType.vb: IHandle(Of SystemMessage.SystemCoreReady)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  name.vb: IHandle(Of SystemMessage.SystemCoreReady)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.SystemCoreReady
    name: SystemMessage.SystemCoreReady
    nameWithType: SystemMessage.SystemCoreReady
    fullName: EventStore.Core.Messages.SystemMessage.SystemCoreReady
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.SystemCoreReady
    name: SystemMessage.SystemCoreReady
    nameWithType: SystemMessage.SystemCoreReady
    fullName: EventStore.Core.Messages.SystemMessage.SystemCoreReady
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.EpochWritten>
  nameWithType: IHandle<SystemMessage.EpochWritten>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.EpochWritten>
  nameWithType.vb: IHandle(Of SystemMessage.EpochWritten)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.EpochWritten)
  name.vb: IHandle(Of SystemMessage.EpochWritten)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.EpochWritten
    name: SystemMessage.EpochWritten
    nameWithType: SystemMessage.EpochWritten
    fullName: EventStore.Core.Messages.SystemMessage.EpochWritten
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.EpochWritten
    name: SystemMessage.EpochWritten
    nameWithType: SystemMessage.EpochWritten
    fullName: EventStore.Core.Messages.SystemMessage.EpochWritten
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionCoreServiceMessage.SubComponentStarted>
  nameWithType: IHandle<ProjectionCoreServiceMessage.SubComponentStarted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted>
  nameWithType.vb: IHandle(Of ProjectionCoreServiceMessage.SubComponentStarted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  name.vb: IHandle(Of ProjectionCoreServiceMessage.SubComponentStarted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
    name: ProjectionCoreServiceMessage.SubComponentStarted
    nameWithType: ProjectionCoreServiceMessage.SubComponentStarted
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
    name: ProjectionCoreServiceMessage.SubComponentStarted
    nameWithType: ProjectionCoreServiceMessage.SubComponentStarted
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionCoreServiceMessage.SubComponentStopped>
  nameWithType: IHandle<ProjectionCoreServiceMessage.SubComponentStopped>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped>
  nameWithType.vb: IHandle(Of ProjectionCoreServiceMessage.SubComponentStopped)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  name.vb: IHandle(Of ProjectionCoreServiceMessage.SubComponentStopped)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
    name: ProjectionCoreServiceMessage.SubComponentStopped
    nameWithType: ProjectionCoreServiceMessage.SubComponentStopped
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
    name: ProjectionCoreServiceMessage.SubComponentStopped
    nameWithType: ProjectionCoreServiceMessage.SubComponentStopped
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ProjectionCoreCoordinator>()
  nameWithType: ProtobufExtensions.Serialize<ProjectionCoreCoordinator>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ProjectionCoreCoordinator)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator)()
  name.vb: Serialize(Of ProjectionCoreCoordinator)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ProjectionCoreCoordinator>
    nameWithType: ProtobufExtensions.Serialize<ProjectionCoreCoordinator>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ProjectionCoreCoordinator)
    nameWithType: ProtobufExtensions.Serialize(Of ProjectionCoreCoordinator)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ProjectionCoreCoordinator>()
  nameWithType: ProtobufExtensions.SerializeToArray<ProjectionCoreCoordinator>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ProjectionCoreCoordinator)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator)()
  name.vb: SerializeToArray(Of ProjectionCoreCoordinator)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ProjectionCoreCoordinator>
    nameWithType: ProtobufExtensions.SerializeToArray<ProjectionCoreCoordinator>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ProjectionCoreCoordinator)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ProjectionCoreCoordinator)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.#ctor
  name: ProjectionCoreCoordinator
  nameWithType: ProjectionCoreCoordinator.ProjectionCoreCoordinator
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.ProjectionCoreCoordinator
- uid: EventStore.Common.Options.ProjectionType
  commentId: T:EventStore.Common.Options.ProjectionType
  parent: EventStore.Common.Options
  name: ProjectionType
  nameWithType: ProjectionType
  fullName: EventStore.Common.Options.ProjectionType
- uid: EventStore.Projections.Core.Services.Management.TimeoutScheduler[]
  isExternal: true
  name: TimeoutScheduler[]
  nameWithType: TimeoutScheduler[]
  fullName: EventStore.Projections.Core.Services.Management.TimeoutScheduler[]
  nameWithType.vb: TimeoutScheduler()
  fullName.vb: EventStore.Projections.Core.Services.Management.TimeoutScheduler()
  name.vb: TimeoutScheduler()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Management.TimeoutScheduler
    name: TimeoutScheduler
    nameWithType: TimeoutScheduler
    fullName: EventStore.Projections.Core.Services.Management.TimeoutScheduler
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Management.TimeoutScheduler
    name: TimeoutScheduler
    nameWithType: TimeoutScheduler
    fullName: EventStore.Projections.Core.Services.Management.TimeoutScheduler
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Bus.IPublisher[]
  isExternal: true
  name: IPublisher[]
  nameWithType: IPublisher[]
  fullName: EventStore.Core.Bus.IPublisher[]
  nameWithType.vb: IPublisher()
  fullName.vb: EventStore.Core.Bus.IPublisher()
  name.vb: IPublisher()
  spec.csharp:
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle
  name: Handle
  nameWithType: ProjectionCoreCoordinator.Handle
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Internal.RegularTimeout)
  nameWithType: IHandle<ProjectionManagementMessage.Internal.RegularTimeout>.Handle(ProjectionManagementMessage.Internal.RegularTimeout)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Internal.RegularTimeout).Handle(ProjectionManagementMessage.Internal.RegularTimeout)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Internal.RegularTimeout>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
    name: ProjectionManagementMessage.Internal.RegularTimeout
    nameWithType: ProjectionManagementMessage.Internal.RegularTimeout
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Internal.RegularTimeout).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
    name: ProjectionManagementMessage.Internal.RegularTimeout
    nameWithType: ProjectionManagementMessage.Internal.RegularTimeout
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Internal.RegularTimeout
  nameWithType: ProjectionManagementMessage.Internal.RegularTimeout
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.SystemCoreReady)
  nameWithType: IHandle<SystemMessage.SystemCoreReady>.Handle(SystemMessage.SystemCoreReady)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemCoreReady>.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  nameWithType.vb: IHandle(Of SystemMessage.SystemCoreReady).Handle(SystemMessage.SystemCoreReady)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemCoreReady).Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.SystemCoreReady>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemCoreReady>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.SystemCoreReady
    name: SystemMessage.SystemCoreReady
    nameWithType: SystemMessage.SystemCoreReady
    fullName: EventStore.Core.Messages.SystemMessage.SystemCoreReady
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.SystemCoreReady).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemCoreReady).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.SystemCoreReady
    name: SystemMessage.SystemCoreReady
    nameWithType: SystemMessage.SystemCoreReady
    fullName: EventStore.Core.Messages.SystemMessage.SystemCoreReady
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.SystemCoreReady
  commentId: T:EventStore.Core.Messages.SystemMessage.SystemCoreReady
  parent: EventStore.Core.Messages
  name: SystemMessage.SystemCoreReady
  nameWithType: SystemMessage.SystemCoreReady
  fullName: EventStore.Core.Messages.SystemMessage.SystemCoreReady
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.StateChangeMessage)
  nameWithType: IHandle<SystemMessage.StateChangeMessage>.Handle(SystemMessage.StateChangeMessage)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  nameWithType.vb: IHandle(Of SystemMessage.StateChangeMessage).Handle(SystemMessage.StateChangeMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage).Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.StateChangeMessage>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.StateChangeMessage).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  commentId: T:EventStore.Core.Messages.SystemMessage.StateChangeMessage
  parent: EventStore.Core.Messages
  name: SystemMessage.StateChangeMessage
  nameWithType: SystemMessage.StateChangeMessage
  fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.EpochWritten)
  nameWithType: IHandle<SystemMessage.EpochWritten>.Handle(SystemMessage.EpochWritten)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.EpochWritten>.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  nameWithType.vb: IHandle(Of SystemMessage.EpochWritten).Handle(SystemMessage.EpochWritten)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.EpochWritten).Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.EpochWritten>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.EpochWritten>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.EpochWritten
    name: SystemMessage.EpochWritten
    nameWithType: SystemMessage.EpochWritten
    fullName: EventStore.Core.Messages.SystemMessage.EpochWritten
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.EpochWritten).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.EpochWritten).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.EpochWritten
    name: SystemMessage.EpochWritten
    nameWithType: SystemMessage.EpochWritten
    fullName: EventStore.Core.Messages.SystemMessage.EpochWritten
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.EpochWritten
  commentId: T:EventStore.Core.Messages.SystemMessage.EpochWritten
  parent: EventStore.Core.Messages
  name: SystemMessage.EpochWritten
  nameWithType: SystemMessage.EpochWritten
  fullName: EventStore.Core.Messages.SystemMessage.EpochWritten
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted}.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted}.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionCoreServiceMessage.SubComponentStarted)
  nameWithType: IHandle<ProjectionCoreServiceMessage.SubComponentStarted>.Handle(ProjectionCoreServiceMessage.SubComponentStarted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted>.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  nameWithType.vb: IHandle(Of ProjectionCoreServiceMessage.SubComponentStarted).Handle(ProjectionCoreServiceMessage.SubComponentStarted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted).Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionCoreServiceMessage.SubComponentStarted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
    name: ProjectionCoreServiceMessage.SubComponentStarted
    nameWithType: ProjectionCoreServiceMessage.SubComponentStarted
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionCoreServiceMessage.SubComponentStarted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
    name: ProjectionCoreServiceMessage.SubComponentStarted
    nameWithType: ProjectionCoreServiceMessage.SubComponentStarted
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
  commentId: T:EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
  parent: EventStore.Projections.Core.Messages
  name: ProjectionCoreServiceMessage.SubComponentStarted
  nameWithType: ProjectionCoreServiceMessage.SubComponentStarted
  fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped}.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped}.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionCoreServiceMessage.SubComponentStopped)
  nameWithType: IHandle<ProjectionCoreServiceMessage.SubComponentStopped>.Handle(ProjectionCoreServiceMessage.SubComponentStopped)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped>.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  nameWithType.vb: IHandle(Of ProjectionCoreServiceMessage.SubComponentStopped).Handle(ProjectionCoreServiceMessage.SubComponentStopped)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped).Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionCoreServiceMessage.SubComponentStopped>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
    name: ProjectionCoreServiceMessage.SubComponentStopped
    nameWithType: ProjectionCoreServiceMessage.SubComponentStopped
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionCoreServiceMessage.SubComponentStopped).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
    name: ProjectionCoreServiceMessage.SubComponentStopped
    nameWithType: ProjectionCoreServiceMessage.SubComponentStopped
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
  commentId: T:EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
  parent: EventStore.Projections.Core.Messages
  name: ProjectionCoreServiceMessage.SubComponentStopped
  nameWithType: ProjectionCoreServiceMessage.SubComponentStopped
  fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
- uid: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.SetupMessaging*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.SetupMessaging
  name: SetupMessaging
  nameWithType: ProjectionCoreCoordinator.SetupMessaging
  fullName: EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.SetupMessaging
- uid: EventStore.Core.Bus.IBus
  commentId: T:EventStore.Core.Bus.IBus
  parent: EventStore.Core.Bus
  name: IBus
  nameWithType: IBus
  fullName: EventStore.Core.Bus.IBus

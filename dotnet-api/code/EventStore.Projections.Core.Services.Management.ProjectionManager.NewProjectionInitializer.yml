### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer
  commentId: T:EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer
  id: ProjectionManager.NewProjectionInitializer
  parent: EventStore.Projections.Core.Services.Management
  children:
  - EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.#ctor(System.Int64,System.String,EventStore.Projections.Core.Services.ProjectionMode,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,EventStore.Core.Messaging.IEnvelope)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection(EventStore.Projections.Core.Services.Management.ProjectionManager,Guid,Guid,System.Boolean,Guid,Guid,System.Nullable{System.Int64})
  langs:
  - csharp
  - vb
  name: ProjectionManager.NewProjectionInitializer
  nameWithType: ProjectionManager.NewProjectionInitializer
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NewProjectionInitializer
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 999
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: 'public class NewProjectionInitializer : object'
    content.vb: >-
      Public Class NewProjectionInitializer
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.#ctor(System.Int64,System.String,EventStore.Projections.Core.Services.ProjectionMode,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,EventStore.Core.Messaging.IEnvelope)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.#ctor(System.Int64,System.String,EventStore.Projections.Core.Services.ProjectionMode,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,EventStore.Core.Messaging.IEnvelope)
  id: '#ctor(System.Int64,System.String,EventStore.Projections.Core.Services.ProjectionMode,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs,EventStore.Core.Messaging.IEnvelope)'
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer
  langs:
  - csharp
  - vb
  name: NewProjectionInitializer(Int64, String, ProjectionMode, String, String, Boolean, Boolean, Boolean, Boolean, Boolean, ProjectionManagementMessage.RunAs, IEnvelope)
  nameWithType: ProjectionManager.NewProjectionInitializer.NewProjectionInitializer(Int64, String, ProjectionMode, String, String, Boolean, Boolean, Boolean, Boolean, Boolean, ProjectionManagementMessage.RunAs, IEnvelope)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.NewProjectionInitializer(System.Int64, System.String, EventStore.Projections.Core.Services.ProjectionMode, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs, EventStore.Core.Messaging.IEnvelope)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1014
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public NewProjectionInitializer(long projectionId, string name, ProjectionMode projectionMode, string handlerType, string query, bool enabled, bool emitEnabled, bool checkpointsEnabled, bool enableRunAs, bool trackEmittedStreams, ProjectionManagementMessage.RunAs runAs, IEnvelope replyEnvelope)
    parameters:
    - id: projectionId
      type: System.Int64
    - id: name
      type: System.String
    - id: projectionMode
      type: EventStore.Projections.Core.Services.ProjectionMode
    - id: handlerType
      type: System.String
    - id: query
      type: System.String
    - id: enabled
      type: System.Boolean
    - id: emitEnabled
      type: System.Boolean
    - id: checkpointsEnabled
      type: System.Boolean
    - id: enableRunAs
      type: System.Boolean
    - id: trackEmittedStreams
      type: System.Boolean
    - id: runAs
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
    - id: replyEnvelope
      type: EventStore.Core.Messaging.IEnvelope
    content.vb: Public Sub New(projectionId As Long, name As String, projectionMode As ProjectionMode, handlerType As String, query As String, enabled As Boolean, emitEnabled As Boolean, checkpointsEnabled As Boolean, enableRunAs As Boolean, trackEmittedStreams As Boolean, runAs As ProjectionManagementMessage.RunAs, replyEnvelope As IEnvelope)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection(EventStore.Projections.Core.Services.Management.ProjectionManager,Guid,Guid,System.Boolean,Guid,Guid,System.Nullable{System.Int64})
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection(EventStore.Projections.Core.Services.Management.ProjectionManager,Guid,Guid,System.Boolean,Guid,Guid,System.Nullable{System.Int64})
  id: CreateAndInitializeNewProjection(EventStore.Projections.Core.Services.Management.ProjectionManager,Guid,Guid,System.Boolean,Guid,Guid,System.Nullable{System.Int64})
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer
  langs:
  - csharp
  - vb
  name: CreateAndInitializeNewProjection(ProjectionManager, Guid, Guid, Boolean, Guid, Guid, Nullable<Int64>)
  nameWithType: ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection(ProjectionManager, Guid, Guid, Boolean, Guid, Guid, Nullable<Int64>)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection(EventStore.Projections.Core.Services.Management.ProjectionManager, Guid, Guid, System.Boolean, Guid, Guid, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CreateAndInitializeNewProjection
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1048
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void CreateAndInitializeNewProjection(ProjectionManager projectionManager, Guid projectionCorrelationId, Guid workerId, bool isSlave = false, Guid slaveMasterWorkerId = null, Guid slaveMasterCorrelationId = null, long? version = null)
    parameters:
    - id: projectionManager
      type: EventStore.Projections.Core.Services.Management.ProjectionManager
    - id: projectionCorrelationId
      type: Guid
    - id: workerId
      type: Guid
    - id: isSlave
      type: System.Boolean
    - id: slaveMasterWorkerId
      type: Guid
    - id: slaveMasterCorrelationId
      type: Guid
    - id: version
      type: System.Nullable{System.Int64}
    content.vb: Public Sub CreateAndInitializeNewProjection(projectionManager As ProjectionManager, projectionCorrelationId As Guid, workerId As Guid, isSlave As Boolean = False, slaveMasterWorkerId As Guid = Nothing, slaveMasterCorrelationId As Guid = Nothing, version As Long? = Nothing)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection*
  nameWithType.vb: ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection(ProjectionManager, Guid, Guid, Boolean, Guid, Guid, Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection(EventStore.Projections.Core.Services.Management.ProjectionManager, Guid, Guid, System.Boolean, Guid, Guid, System.Nullable(Of System.Int64))
  name.vb: CreateAndInitializeNewProjection(ProjectionManager, Guid, Guid, Boolean, Guid, Guid, Nullable(Of Int64))
references:
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ProjectionManager.NewProjectionInitializer>()
  nameWithType: ProtobufExtensions.Serialize<ProjectionManager.NewProjectionInitializer>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ProjectionManager.NewProjectionInitializer)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer)()
  name.vb: Serialize(Of ProjectionManager.NewProjectionInitializer)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ProjectionManager.NewProjectionInitializer>
    nameWithType: ProtobufExtensions.Serialize<ProjectionManager.NewProjectionInitializer>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ProjectionManager.NewProjectionInitializer)
    nameWithType: ProtobufExtensions.Serialize(Of ProjectionManager.NewProjectionInitializer)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ProjectionManager.NewProjectionInitializer>()
  nameWithType: ProtobufExtensions.SerializeToArray<ProjectionManager.NewProjectionInitializer>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ProjectionManager.NewProjectionInitializer)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer)()
  name.vb: SerializeToArray(Of ProjectionManager.NewProjectionInitializer)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ProjectionManager.NewProjectionInitializer>
    nameWithType: ProtobufExtensions.SerializeToArray<ProjectionManager.NewProjectionInitializer>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ProjectionManager.NewProjectionInitializer)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ProjectionManager.NewProjectionInitializer)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.#ctor
  name: NewProjectionInitializer
  nameWithType: ProjectionManager.NewProjectionInitializer.NewProjectionInitializer
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.NewProjectionInitializer
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.ProjectionMode
  commentId: T:EventStore.Projections.Core.Services.ProjectionMode
  parent: EventStore.Projections.Core.Services
  name: ProjectionMode
  nameWithType: ProjectionMode
  fullName: EventStore.Projections.Core.Services.ProjectionMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.RunAs
  nameWithType: ProjectionManagementMessage.RunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection
  name: CreateAndInitializeNewProjection
  nameWithType: ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.CreateAndInitializeNewProjection
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager
  commentId: T:EventStore.Projections.Core.Services.Management.ProjectionManager
  parent: EventStore.Projections.Core.Services.Management
  name: ProjectionManager
  nameWithType: ProjectionManager
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  commentId: T:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  id: ProjectionManager.PendingProjection
  parent: EventStore.Projections.Core.Services.Management
  children:
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor(System.Int64,EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor(System.Int64,EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor(System.Int64,EventStore.Projections.Core.Services.ProjectionMode,EventStore.Projections.Core.Services.Management.SerializedRunAs,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CheckpointsEnabled
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CreateInitializer(EventStore.Core.Messaging.IEnvelope)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EmitEnabled
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Enabled
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EnableRunAs
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.HandlerType
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Mode
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Name
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.ProjectionId
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Query
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.RunAs
  - EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.TrackEmittedStreams
  langs:
  - csharp
  - vb
  name: ProjectionManager.PendingProjection
  nameWithType: ProjectionManager.PendingProjection
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  type: Class
  source:
    id: PendingProjection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1223
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: 'public class PendingProjection : object'
    content.vb: >-
      Public Class PendingProjection

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Mode
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Mode
  id: Mode
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: ProjectionManager.PendingProjection.Mode
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Mode
  type: Property
  source:
    id: Mode
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1224
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public ProjectionMode Mode { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.ProjectionMode
    content.vb: Public ReadOnly Property Mode As ProjectionMode
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Mode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.RunAs
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.RunAs
  id: RunAs
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: RunAs
  nameWithType: ProjectionManager.PendingProjection.RunAs
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.RunAs
  type: Property
  source:
    id: RunAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1225
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public SerializedRunAs RunAs { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Management.SerializedRunAs
    content.vb: Public ReadOnly Property RunAs As SerializedRunAs
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.RunAs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Name
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Name
  id: Name
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectionManager.PendingProjection.Name
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Name
  type: Property
  source:
    id: Name
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1226
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.HandlerType
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.HandlerType
  id: HandlerType
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: HandlerType
  nameWithType: ProjectionManager.PendingProjection.HandlerType
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.HandlerType
  type: Property
  source:
    id: HandlerType
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1227
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public string HandlerType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property HandlerType As String
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.HandlerType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Query
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Query
  id: Query
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: ProjectionManager.PendingProjection.Query
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Query
  type: Property
  source:
    id: Query
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1228
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public string Query { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Query As String
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Query*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Enabled
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Enabled
  id: Enabled
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: ProjectionManager.PendingProjection.Enabled
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Enabled
  type: Property
  source:
    id: Enabled
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1229
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool Enabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Enabled As Boolean
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Enabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CheckpointsEnabled
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CheckpointsEnabled
  id: CheckpointsEnabled
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: CheckpointsEnabled
  nameWithType: ProjectionManager.PendingProjection.CheckpointsEnabled
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CheckpointsEnabled
  type: Property
  source:
    id: CheckpointsEnabled
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1230
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool CheckpointsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CheckpointsEnabled As Boolean
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CheckpointsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EmitEnabled
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EmitEnabled
  id: EmitEnabled
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: EmitEnabled
  nameWithType: ProjectionManager.PendingProjection.EmitEnabled
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EmitEnabled
  type: Property
  source:
    id: EmitEnabled
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1231
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool EmitEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EmitEnabled As Boolean
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EmitEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EnableRunAs
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EnableRunAs
  id: EnableRunAs
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: EnableRunAs
  nameWithType: ProjectionManager.PendingProjection.EnableRunAs
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EnableRunAs
  type: Property
  source:
    id: EnableRunAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1232
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool EnableRunAs { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EnableRunAs As Boolean
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EnableRunAs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.TrackEmittedStreams
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.TrackEmittedStreams
  id: TrackEmittedStreams
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: TrackEmittedStreams
  nameWithType: ProjectionManager.PendingProjection.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.TrackEmittedStreams
  type: Property
  source:
    id: TrackEmittedStreams
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1233
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public bool TrackEmittedStreams { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property TrackEmittedStreams As Boolean
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.TrackEmittedStreams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.ProjectionId
  commentId: P:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.ProjectionId
  id: ProjectionId
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: ProjectionId
  nameWithType: ProjectionManager.PendingProjection.ProjectionId
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.ProjectionId
  type: Property
  source:
    id: ProjectionId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1234
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public long ProjectionId { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property ProjectionId As Long
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.ProjectionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor(System.Int64,EventStore.Projections.Core.Services.ProjectionMode,EventStore.Projections.Core.Services.Management.SerializedRunAs,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor(System.Int64,EventStore.Projections.Core.Services.ProjectionMode,EventStore.Projections.Core.Services.Management.SerializedRunAs,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Int64,EventStore.Projections.Core.Services.ProjectionMode,EventStore.Projections.Core.Services.Management.SerializedRunAs,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: PendingProjection(Int64, ProjectionMode, SerializedRunAs, String, String, String, Boolean, Boolean, Boolean, Boolean, Boolean)
  nameWithType: ProjectionManager.PendingProjection.PendingProjection(Int64, ProjectionMode, SerializedRunAs, String, String, String, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.PendingProjection(System.Int64, EventStore.Projections.Core.Services.ProjectionMode, EventStore.Projections.Core.Services.Management.SerializedRunAs, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1236
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public PendingProjection(long projectionId, ProjectionMode mode, SerializedRunAs runAs, string name, string handlerType, string query, bool enabled, bool checkpointsEnabled, bool emitEnabled, bool enableRunAs, bool trackEmittedStreams)
    parameters:
    - id: projectionId
      type: System.Int64
    - id: mode
      type: EventStore.Projections.Core.Services.ProjectionMode
    - id: runAs
      type: EventStore.Projections.Core.Services.Management.SerializedRunAs
    - id: name
      type: System.String
    - id: handlerType
      type: System.String
    - id: query
      type: System.String
    - id: enabled
      type: System.Boolean
    - id: checkpointsEnabled
      type: System.Boolean
    - id: emitEnabled
      type: System.Boolean
    - id: enableRunAs
      type: System.Boolean
    - id: trackEmittedStreams
      type: System.Boolean
    content.vb: Public Sub New(projectionId As Long, mode As ProjectionMode, runAs As SerializedRunAs, name As String, handlerType As String, query As String, enabled As Boolean, checkpointsEnabled As Boolean, emitEnabled As Boolean, enableRunAs As Boolean, trackEmittedStreams As Boolean)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor(System.Int64,EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor(System.Int64,EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost)
  id: '#ctor(System.Int64,EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost)'
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: PendingProjection(Int64, ProjectionManagementMessage.Command.PostBatch.ProjectionPost)
  nameWithType: ProjectionManager.PendingProjection.PendingProjection(Int64, ProjectionManagementMessage.Command.PostBatch.ProjectionPost)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.PendingProjection(System.Int64, EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1253
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public PendingProjection(long projectionId, ProjectionManagementMessage.Command.PostBatch.ProjectionPost projection)
    parameters:
    - id: projectionId
      type: System.Int64
    - id: projection
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
    content.vb: Public Sub New(projectionId As Long, projection As ProjectionManagementMessage.Command.PostBatch.ProjectionPost)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor(System.Int64,EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor(System.Int64,EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  id: '#ctor(System.Int64,EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)'
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: PendingProjection(Int64, ProjectionManagementMessage.Command.Post)
  nameWithType: ProjectionManager.PendingProjection.PendingProjection(Int64, ProjectionManagementMessage.Command.Post)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.PendingProjection(System.Int64, EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1258
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public PendingProjection(long projectionId, ProjectionManagementMessage.Command.Post projection)
    parameters:
    - id: projectionId
      type: System.Int64
    - id: projection
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
    content.vb: Public Sub New(projectionId As Long, projection As ProjectionManagementMessage.Command.Post)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CreateInitializer(EventStore.Core.Messaging.IEnvelope)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CreateInitializer(EventStore.Core.Messaging.IEnvelope)
  id: CreateInitializer(EventStore.Core.Messaging.IEnvelope)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection
  langs:
  - csharp
  - vb
  name: CreateInitializer(IEnvelope)
  nameWithType: ProjectionManager.PendingProjection.CreateInitializer(IEnvelope)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CreateInitializer(EventStore.Core.Messaging.IEnvelope)
  type: Method
  source:
    id: CreateInitializer
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1263
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public ProjectionManager.NewProjectionInitializer CreateInitializer(IEnvelope replyEnvelope)
    parameters:
    - id: replyEnvelope
      type: EventStore.Core.Messaging.IEnvelope
    return:
      type: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer
    content.vb: Public Function CreateInitializer(replyEnvelope As IEnvelope) As ProjectionManager.NewProjectionInitializer
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CreateInitializer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Mode*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Mode
  name: Mode
  nameWithType: ProjectionManager.PendingProjection.Mode
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Mode
- uid: EventStore.Projections.Core.Services.ProjectionMode
  commentId: T:EventStore.Projections.Core.Services.ProjectionMode
  parent: EventStore.Projections.Core.Services
  name: ProjectionMode
  nameWithType: ProjectionMode
  fullName: EventStore.Projections.Core.Services.ProjectionMode
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.RunAs*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.RunAs
  name: RunAs
  nameWithType: ProjectionManager.PendingProjection.RunAs
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.RunAs
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs
  commentId: T:EventStore.Projections.Core.Services.Management.SerializedRunAs
  parent: EventStore.Projections.Core.Services.Management
  name: SerializedRunAs
  nameWithType: SerializedRunAs
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Name*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Name
  name: Name
  nameWithType: ProjectionManager.PendingProjection.Name
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.HandlerType*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.HandlerType
  name: HandlerType
  nameWithType: ProjectionManager.PendingProjection.HandlerType
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.HandlerType
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Query*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Query
  name: Query
  nameWithType: ProjectionManager.PendingProjection.Query
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Query
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Enabled*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Enabled
  name: Enabled
  nameWithType: ProjectionManager.PendingProjection.Enabled
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CheckpointsEnabled*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CheckpointsEnabled
  name: CheckpointsEnabled
  nameWithType: ProjectionManager.PendingProjection.CheckpointsEnabled
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CheckpointsEnabled
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EmitEnabled*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EmitEnabled
  name: EmitEnabled
  nameWithType: ProjectionManager.PendingProjection.EmitEnabled
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EmitEnabled
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EnableRunAs*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EnableRunAs
  name: EnableRunAs
  nameWithType: ProjectionManager.PendingProjection.EnableRunAs
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.EnableRunAs
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.TrackEmittedStreams*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.TrackEmittedStreams
  name: TrackEmittedStreams
  nameWithType: ProjectionManager.PendingProjection.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.TrackEmittedStreams
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.ProjectionId*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.ProjectionId
  name: ProjectionId
  nameWithType: ProjectionManager.PendingProjection.ProjectionId
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.ProjectionId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.#ctor
  name: PendingProjection
  nameWithType: ProjectionManager.PendingProjection.PendingProjection
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.PendingProjection
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  nameWithType: ProjectionManagementMessage.Command.PostBatch.ProjectionPost
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.PostBatch.ProjectionPost
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.Post
  nameWithType: ProjectionManagementMessage.Command.Post
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CreateInitializer*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CreateInitializer
  name: CreateInitializer
  nameWithType: ProjectionManager.PendingProjection.CreateInitializer
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.PendingProjection.CreateInitializer
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer
  commentId: T:EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer
  parent: EventStore.Projections.Core.Services.Management
  name: ProjectionManager.NewProjectionInitializer
  nameWithType: ProjectionManager.NewProjectionInitializer
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging

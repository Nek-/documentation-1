### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager
  commentId: T:EventStore.Projections.Core.Services.Management.ProjectionManager
  id: ProjectionManager
  parent: EventStore.Projections.Core.Services.Management
  children:
  - EventStore.Projections.Core.Services.Management.ProjectionManager.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,IDictionary{Guid,EventStore.Core.Bus.IPublisher},EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Common.Options.ProjectionType,EventStore.Core.Helpers.IODispatcher,TimeSpan,System.Boolean)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Dispose
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  - EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionCreationRetryCount
  - EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionQueryId
  langs:
  - csharp
  - vb
  name: ProjectionManager
  nameWithType: ProjectionManager
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager
  type: Class
  source:
    id: ProjectionManager
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 19
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: 'public class ProjectionManager : IDisposable, IHandle<SystemMessage.StateChangeMessage>, IHandle<SystemMessage.SystemCoreReady>, IHandle<SystemMessage.EpochWritten>, IHandle<ClientMessage.ReadStreamEventsBackwardCompleted>, IHandle<ClientMessage.ReadStreamEventsForwardCompleted>, IHandle<ClientMessage.WriteEventsCompleted>, IHandle<ClientMessage.DeleteStreamCompleted>, IHandle<ProjectionManagementMessage.Command.Post>, IHandle<ProjectionManagementMessage.Command.UpdateQuery>, IHandle<ProjectionManagementMessage.Command.GetQuery>, IHandle<ProjectionManagementMessage.Command.Delete>, IHandle<ProjectionManagementMessage.Command.GetStatistics>, IHandle<ProjectionManagementMessage.Command.GetState>, IHandle<ProjectionManagementMessage.Command.GetResult>, IHandle<ProjectionManagementMessage.Command.Disable>, IHandle<ProjectionManagementMessage.Command.Enable>, IHandle<ProjectionManagementMessage.Command.Abort>, IHandle<ProjectionManagementMessage.Command.SetRunAs>, IHandle<ProjectionManagementMessage.Command.Reset>, IHandle<ProjectionManagementMessage.Command.StartSlaveProjections>, IHandle<ProjectionManagementMessage.Command.GetConfig>, IHandle<ProjectionManagementMessage.Command.UpdateConfig>, IHandle<ProjectionManagementMessage.Internal.CleanupExpired>, IHandle<ProjectionManagementMessage.Internal.Deleted>, IHandle<CoreProjectionStatusMessage.Started>, IHandle<CoreProjectionStatusMessage.Stopped>, IHandle<CoreProjectionStatusMessage.Faulted>, IHandle<CoreProjectionStatusMessage.Prepared>, IHandle<CoreProjectionStatusMessage.StateReport>, IHandle<CoreProjectionStatusMessage.ResultReport>, IHandle<CoreProjectionStatusMessage.StatisticsReport>, IHandle<CoreProjectionManagementMessage.SlaveProjectionReaderAssigned>, IHandle<ProjectionManagementMessage.RegisterSystemProjection>, IHandle<CoreProjectionStatusMessage.ProjectionWorkerStarted>, IHandle<ProjectionManagementMessage.ReaderReady>'
    content.vb: >-
      Public Class ProjectionManager
          Inherits IDisposable
          Implements IHandle(Of SystemMessage.StateChangeMessage), IHandle(Of SystemMessage.SystemCoreReady), IHandle(Of SystemMessage.EpochWritten), IHandle(Of ClientMessage.ReadStreamEventsBackwardCompleted), IHandle(Of ClientMessage.ReadStreamEventsForwardCompleted), IHandle(Of ClientMessage.WriteEventsCompleted), IHandle(Of ClientMessage.DeleteStreamCompleted), IHandle(Of ProjectionManagementMessage.Command.Post), IHandle(Of ProjectionManagementMessage.Command.UpdateQuery), IHandle(Of ProjectionManagementMessage.Command.GetQuery), IHandle(Of ProjectionManagementMessage.Command.Delete), IHandle(Of ProjectionManagementMessage.Command.GetStatistics), IHandle(Of ProjectionManagementMessage.Command.GetState), IHandle(Of ProjectionManagementMessage.Command.GetResult), IHandle(Of ProjectionManagementMessage.Command.Disable), IHandle(Of ProjectionManagementMessage.Command.Enable), IHandle(Of ProjectionManagementMessage.Command.Abort), IHandle(Of ProjectionManagementMessage.Command.SetRunAs), IHandle(Of ProjectionManagementMessage.Command.Reset), IHandle(Of ProjectionManagementMessage.Command.StartSlaveProjections), IHandle(Of ProjectionManagementMessage.Command.GetConfig), IHandle(Of ProjectionManagementMessage.Command.UpdateConfig), IHandle(Of ProjectionManagementMessage.Internal.CleanupExpired), IHandle(Of ProjectionManagementMessage.Internal.Deleted), IHandle(Of CoreProjectionStatusMessage.Started), IHandle(Of CoreProjectionStatusMessage.Stopped), IHandle(Of CoreProjectionStatusMessage.Faulted), IHandle(Of CoreProjectionStatusMessage.Prepared), IHandle(Of CoreProjectionStatusMessage.StateReport), IHandle(Of CoreProjectionStatusMessage.ResultReport), IHandle(Of CoreProjectionStatusMessage.StatisticsReport), IHandle(Of CoreProjectionManagementMessage.SlaveProjectionReaderAssigned), IHandle(Of ProjectionManagementMessage.RegisterSystemProjection), IHandle(Of CoreProjectionStatusMessage.ProjectionWorkerStarted), IHandle(Of ProjectionManagementMessage.ReaderReady)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.WriteEventsCompleted}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionQueryId
  commentId: F:EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionQueryId
  id: ProjectionQueryId
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: ProjectionQueryId
  nameWithType: ProjectionManager.ProjectionQueryId
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionQueryId
  type: Field
  source:
    id: ProjectionQueryId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 56
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public const int ProjectionQueryId = null
    return:
      type: System.Int32
    content.vb: Public Const ProjectionQueryId As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionCreationRetryCount
  commentId: F:EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionCreationRetryCount
  id: ProjectionCreationRetryCount
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: ProjectionCreationRetryCount
  nameWithType: ProjectionManager.ProjectionCreationRetryCount
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionCreationRetryCount
  type: Field
  source:
    id: ProjectionCreationRetryCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 57
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public const int ProjectionCreationRetryCount = null
    return:
      type: System.Int32
    content.vb: Public Const ProjectionCreationRetryCount As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,IDictionary{Guid,EventStore.Core.Bus.IPublisher},EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Common.Options.ProjectionType,EventStore.Core.Helpers.IODispatcher,TimeSpan,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,IDictionary{Guid,EventStore.Core.Bus.IPublisher},EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Common.Options.ProjectionType,EventStore.Core.Helpers.IODispatcher,TimeSpan,System.Boolean)
  id: '#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,IDictionary{Guid,EventStore.Core.Bus.IPublisher},EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Common.Options.ProjectionType,EventStore.Core.Helpers.IODispatcher,TimeSpan,System.Boolean)'
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: ProjectionManager(IPublisher, IPublisher, IDictionary<Guid, IPublisher>, ITimeProvider, ProjectionType, IODispatcher, TimeSpan, Boolean)
  nameWithType: ProjectionManager.ProjectionManager(IPublisher, IPublisher, IDictionary<Guid, IPublisher>, ITimeProvider, ProjectionType, IODispatcher, TimeSpan, Boolean)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionManager(EventStore.Core.Bus.IPublisher, EventStore.Core.Bus.IPublisher, IDictionary<Guid, EventStore.Core.Bus.IPublisher>, EventStore.Core.Services.TimerService.ITimeProvider, EventStore.Common.Options.ProjectionType, EventStore.Core.Helpers.IODispatcher, TimeSpan, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 107
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public ProjectionManager(IPublisher inputQueue, IPublisher publisher, IDictionary<Guid, IPublisher> queueMap, ITimeProvider timeProvider, ProjectionType runProjections, IODispatcher ioDispatcher, TimeSpan projectionQueryExpiry, bool initializeSystemProjections = true)
    parameters:
    - id: inputQueue
      type: EventStore.Core.Bus.IPublisher
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: queueMap
      type: IDictionary{Guid,EventStore.Core.Bus.IPublisher}
    - id: timeProvider
      type: EventStore.Core.Services.TimerService.ITimeProvider
    - id: runProjections
      type: EventStore.Common.Options.ProjectionType
    - id: ioDispatcher
      type: EventStore.Core.Helpers.IODispatcher
    - id: projectionQueryExpiry
      type: TimeSpan
    - id: initializeSystemProjections
      type: System.Boolean
    content.vb: Public Sub New(inputQueue As IPublisher, publisher As IPublisher, queueMap As IDictionary(Of Guid, IPublisher), timeProvider As ITimeProvider, runProjections As ProjectionType, ioDispatcher As IODispatcher, projectionQueryExpiry As TimeSpan, initializeSystemProjections As Boolean = True)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.#ctor*
  nameWithType.vb: ProjectionManager.ProjectionManager(IPublisher, IPublisher, IDictionary(Of Guid, IPublisher), ITimeProvider, ProjectionType, IODispatcher, TimeSpan, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionManager(EventStore.Core.Bus.IPublisher, EventStore.Core.Bus.IPublisher, IDictionary(Of Guid, EventStore.Core.Bus.IPublisher), EventStore.Core.Services.TimerService.ITimeProvider, EventStore.Common.Options.ProjectionType, EventStore.Core.Helpers.IODispatcher, TimeSpan, System.Boolean)
  name.vb: ProjectionManager(IPublisher, IPublisher, IDictionary(Of Guid, IPublisher), ITimeProvider, ProjectionType, IODispatcher, TimeSpan, Boolean)
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.ReaderReady)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.ReaderReady)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 185
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.ReaderReady message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.ReaderReady)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.Post)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.Post)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 217
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.Post message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.Post)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.Delete)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.Delete)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 242
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.Delete message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.Delete)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.GetQuery)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.GetQuery)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 273
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.GetQuery message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.GetQuery)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.UpdateQuery)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.UpdateQuery)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 286
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.UpdateQuery message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.UpdateQuery)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.Disable)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.Disable)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 304
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.Disable message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.Disable)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.Enable)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.Enable)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 319
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.Enable message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.Enable)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.Abort)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.Abort)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 335
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.Abort message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.Abort)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.SetRunAs)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.SetRunAs)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 350
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.SetRunAs message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.SetRunAs)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.Reset)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.Reset)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 369
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.Reset message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.Reset)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.GetStatistics)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.GetStatistics)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 385
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.GetStatistics message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.GetStatistics)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.GetState)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.GetState)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 409
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.GetState message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.GetState)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.GetResult)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.GetResult)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 419
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.GetResult message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.GetResult)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.GetConfig)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.GetConfig)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 429
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.GetConfig message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.GetConfig)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.UpdateConfig)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.UpdateConfig)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 442
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.UpdateConfig message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.UpdateConfig)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Internal.CleanupExpired)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Internal.CleanupExpired)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 460
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Internal.CleanupExpired message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Internal.CleanupExpired)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionStatusMessage.Started)
  nameWithType: ProjectionManager.Handle(CoreProjectionStatusMessage.Started)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 471
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionStatusMessage.Started message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
    content.vb: Public Sub Handle(message As CoreProjectionStatusMessage.Started)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionStatusMessage.Stopped)
  nameWithType: ProjectionManager.Handle(CoreProjectionStatusMessage.Stopped)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 479
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionStatusMessage.Stopped message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
    content.vb: Public Sub Handle(message As CoreProjectionStatusMessage.Stopped)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionStatusMessage.Faulted)
  nameWithType: ProjectionManager.Handle(CoreProjectionStatusMessage.Faulted)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 487
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionStatusMessage.Faulted message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
    content.vb: Public Sub Handle(message As CoreProjectionStatusMessage.Faulted)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionStatusMessage.Prepared)
  nameWithType: ProjectionManager.Handle(CoreProjectionStatusMessage.Prepared)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 495
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionStatusMessage.Prepared message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
    content.vb: Public Sub Handle(message As CoreProjectionStatusMessage.Prepared)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionStatusMessage.StateReport)
  nameWithType: ProjectionManager.Handle(CoreProjectionStatusMessage.StateReport)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 503
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionStatusMessage.StateReport message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
    content.vb: Public Sub Handle(message As CoreProjectionStatusMessage.StateReport)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionStatusMessage.ResultReport)
  nameWithType: ProjectionManager.Handle(CoreProjectionStatusMessage.ResultReport)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 507
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionStatusMessage.ResultReport message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
    content.vb: Public Sub Handle(message As CoreProjectionStatusMessage.ResultReport)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionStatusMessage.StatisticsReport)
  nameWithType: ProjectionManager.Handle(CoreProjectionStatusMessage.StatisticsReport)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 511
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionStatusMessage.StatisticsReport message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
    content.vb: Public Sub Handle(message As CoreProjectionStatusMessage.StatisticsReport)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  nameWithType: ProjectionManager.Handle(CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 519
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.SlaveProjectionReaderAssigned message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  id: Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ClientMessage.ReadStreamEventsBackwardCompleted)
  nameWithType: ProjectionManager.Handle(ClientMessage.ReadStreamEventsBackwardCompleted)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 526
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ClientMessage.ReadStreamEventsBackwardCompleted message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
    content.vb: Public Sub Handle(message As ClientMessage.ReadStreamEventsBackwardCompleted)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted}.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  id: Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ClientMessage.ReadStreamEventsForwardCompleted)
  nameWithType: ProjectionManager.Handle(ClientMessage.ReadStreamEventsForwardCompleted)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 530
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ClientMessage.ReadStreamEventsForwardCompleted message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
    content.vb: Public Sub Handle(message As ClientMessage.ReadStreamEventsForwardCompleted)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted}.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  id: Handle(EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ClientMessage.WriteEventsCompleted)
  nameWithType: ProjectionManager.Handle(ClientMessage.WriteEventsCompleted)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 534
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ClientMessage.WriteEventsCompleted message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
    content.vb: Public Sub Handle(message As ClientMessage.WriteEventsCompleted)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.WriteEventsCompleted}.Handle(EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  id: Handle(EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ClientMessage.DeleteStreamCompleted)
  nameWithType: ProjectionManager.Handle(ClientMessage.DeleteStreamCompleted)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 538
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ClientMessage.DeleteStreamCompleted message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
    content.vb: Public Sub Handle(message As ClientMessage.DeleteStreamCompleted)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted}.Handle(EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  id: Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(SystemMessage.SystemCoreReady)
  nameWithType: ProjectionManager.Handle(SystemMessage.SystemCoreReady)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 547
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(SystemMessage.SystemCoreReady message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.SystemCoreReady
    content.vb: Public Sub Handle(message As SystemMessage.SystemCoreReady)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  id: Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(SystemMessage.StateChangeMessage)
  nameWithType: ProjectionManager.Handle(SystemMessage.StateChangeMessage)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 552
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(SystemMessage.StateChangeMessage message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    content.vb: Public Sub Handle(message As SystemMessage.StateChangeMessage)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  id: Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(SystemMessage.EpochWritten)
  nameWithType: ProjectionManager.Handle(SystemMessage.EpochWritten)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 560
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(SystemMessage.EpochWritten message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.EpochWritten
    content.vb: Public Sub Handle(message As SystemMessage.EpochWritten)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Internal.Deleted)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Internal.Deleted)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 586
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Internal.Deleted message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Internal.Deleted)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.RegisterSystemProjection)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.RegisterSystemProjection)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 610
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.RegisterSystemProjection message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.RegisterSystemProjection)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Dispose
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Dispose
  id: Dispose
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ProjectionManager.Dispose()
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Dispose()
  type: Method
  source:
    id: Dispose
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 628
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Command.StartSlaveProjections)
  nameWithType: ProjectionManager.Handle(ProjectionManagementMessage.Command.StartSlaveProjections)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1113
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Command.StartSlaveProjections message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Command.StartSlaveProjections)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionStatusMessage.ProjectionWorkerStarted)
  nameWithType: ProjectionManager.Handle(CoreProjectionStatusMessage.ProjectionWorkerStarted)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManager.cs
    startLine: 1217
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionStatusMessage.ProjectionWorkerStarted message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
    content.vb: Public Sub Handle(message As CoreProjectionStatusMessage.ProjectionWorkerStarted)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.StateChangeMessage>
  nameWithType: IHandle<SystemMessage.StateChangeMessage>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>
  nameWithType.vb: IHandle(Of SystemMessage.StateChangeMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  name.vb: IHandle(Of SystemMessage.StateChangeMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.SystemCoreReady>
  nameWithType: IHandle<SystemMessage.SystemCoreReady>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemCoreReady>
  nameWithType.vb: IHandle(Of SystemMessage.SystemCoreReady)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  name.vb: IHandle(Of SystemMessage.SystemCoreReady)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.SystemCoreReady
    name: SystemMessage.SystemCoreReady
    nameWithType: SystemMessage.SystemCoreReady
    fullName: EventStore.Core.Messages.SystemMessage.SystemCoreReady
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.SystemCoreReady
    name: SystemMessage.SystemCoreReady
    nameWithType: SystemMessage.SystemCoreReady
    fullName: EventStore.Core.Messages.SystemMessage.SystemCoreReady
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.EpochWritten>
  nameWithType: IHandle<SystemMessage.EpochWritten>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.EpochWritten>
  nameWithType.vb: IHandle(Of SystemMessage.EpochWritten)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.EpochWritten)
  name.vb: IHandle(Of SystemMessage.EpochWritten)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.EpochWritten
    name: SystemMessage.EpochWritten
    nameWithType: SystemMessage.EpochWritten
    fullName: EventStore.Core.Messages.SystemMessage.EpochWritten
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.EpochWritten
    name: SystemMessage.EpochWritten
    nameWithType: SystemMessage.EpochWritten
    fullName: EventStore.Core.Messages.SystemMessage.EpochWritten
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.ReadStreamEventsBackwardCompleted>
  nameWithType: IHandle<ClientMessage.ReadStreamEventsBackwardCompleted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted>
  nameWithType.vb: IHandle(Of ClientMessage.ReadStreamEventsBackwardCompleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  name.vb: IHandle(Of ClientMessage.ReadStreamEventsBackwardCompleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
    name: ClientMessage.ReadStreamEventsBackwardCompleted
    nameWithType: ClientMessage.ReadStreamEventsBackwardCompleted
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
    name: ClientMessage.ReadStreamEventsBackwardCompleted
    nameWithType: ClientMessage.ReadStreamEventsBackwardCompleted
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.ReadStreamEventsForwardCompleted>
  nameWithType: IHandle<ClientMessage.ReadStreamEventsForwardCompleted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted>
  nameWithType.vb: IHandle(Of ClientMessage.ReadStreamEventsForwardCompleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  name.vb: IHandle(Of ClientMessage.ReadStreamEventsForwardCompleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
    name: ClientMessage.ReadStreamEventsForwardCompleted
    nameWithType: ClientMessage.ReadStreamEventsForwardCompleted
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
    name: ClientMessage.ReadStreamEventsForwardCompleted
    nameWithType: ClientMessage.ReadStreamEventsForwardCompleted
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.WriteEventsCompleted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.WriteEventsCompleted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.WriteEventsCompleted>
  nameWithType: IHandle<ClientMessage.WriteEventsCompleted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.WriteEventsCompleted>
  nameWithType.vb: IHandle(Of ClientMessage.WriteEventsCompleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  name.vb: IHandle(Of ClientMessage.WriteEventsCompleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
    name: ClientMessage.WriteEventsCompleted
    nameWithType: ClientMessage.WriteEventsCompleted
    fullName: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
    name: ClientMessage.WriteEventsCompleted
    nameWithType: ClientMessage.WriteEventsCompleted
    fullName: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.DeleteStreamCompleted>
  nameWithType: IHandle<ClientMessage.DeleteStreamCompleted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted>
  nameWithType.vb: IHandle(Of ClientMessage.DeleteStreamCompleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  name.vb: IHandle(Of ClientMessage.DeleteStreamCompleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
    name: ClientMessage.DeleteStreamCompleted
    nameWithType: ClientMessage.DeleteStreamCompleted
    fullName: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
    name: ClientMessage.DeleteStreamCompleted
    nameWithType: ClientMessage.DeleteStreamCompleted
    fullName: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.Post>
  nameWithType: IHandle<ProjectionManagementMessage.Command.Post>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Post)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.Post)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
    name: ProjectionManagementMessage.Command.Post
    nameWithType: ProjectionManagementMessage.Command.Post
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
    name: ProjectionManagementMessage.Command.Post
    nameWithType: ProjectionManagementMessage.Command.Post
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.UpdateQuery>
  nameWithType: IHandle<ProjectionManagementMessage.Command.UpdateQuery>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.UpdateQuery)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.UpdateQuery)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
    name: ProjectionManagementMessage.Command.UpdateQuery
    nameWithType: ProjectionManagementMessage.Command.UpdateQuery
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
    name: ProjectionManagementMessage.Command.UpdateQuery
    nameWithType: ProjectionManagementMessage.Command.UpdateQuery
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.GetQuery>
  nameWithType: IHandle<ProjectionManagementMessage.Command.GetQuery>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.GetQuery)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.GetQuery)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
    name: ProjectionManagementMessage.Command.GetQuery
    nameWithType: ProjectionManagementMessage.Command.GetQuery
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
    name: ProjectionManagementMessage.Command.GetQuery
    nameWithType: ProjectionManagementMessage.Command.GetQuery
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.Delete>
  nameWithType: IHandle<ProjectionManagementMessage.Command.Delete>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Delete)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.Delete)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
    name: ProjectionManagementMessage.Command.Delete
    nameWithType: ProjectionManagementMessage.Command.Delete
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
    name: ProjectionManagementMessage.Command.Delete
    nameWithType: ProjectionManagementMessage.Command.Delete
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.GetStatistics>
  nameWithType: IHandle<ProjectionManagementMessage.Command.GetStatistics>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.GetStatistics)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.GetStatistics)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
    name: ProjectionManagementMessage.Command.GetStatistics
    nameWithType: ProjectionManagementMessage.Command.GetStatistics
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
    name: ProjectionManagementMessage.Command.GetStatistics
    nameWithType: ProjectionManagementMessage.Command.GetStatistics
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.GetState>
  nameWithType: IHandle<ProjectionManagementMessage.Command.GetState>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
    name: ProjectionManagementMessage.Command.GetState
    nameWithType: ProjectionManagementMessage.Command.GetState
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
    name: ProjectionManagementMessage.Command.GetState
    nameWithType: ProjectionManagementMessage.Command.GetState
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.GetResult>
  nameWithType: IHandle<ProjectionManagementMessage.Command.GetResult>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
    name: ProjectionManagementMessage.Command.GetResult
    nameWithType: ProjectionManagementMessage.Command.GetResult
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
    name: ProjectionManagementMessage.Command.GetResult
    nameWithType: ProjectionManagementMessage.Command.GetResult
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.Disable>
  nameWithType: IHandle<ProjectionManagementMessage.Command.Disable>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Disable)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.Disable)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
    name: ProjectionManagementMessage.Command.Disable
    nameWithType: ProjectionManagementMessage.Command.Disable
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
    name: ProjectionManagementMessage.Command.Disable
    nameWithType: ProjectionManagementMessage.Command.Disable
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.Enable>
  nameWithType: IHandle<ProjectionManagementMessage.Command.Enable>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Enable)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.Enable)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
    name: ProjectionManagementMessage.Command.Enable
    nameWithType: ProjectionManagementMessage.Command.Enable
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
    name: ProjectionManagementMessage.Command.Enable
    nameWithType: ProjectionManagementMessage.Command.Enable
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.Abort>
  nameWithType: IHandle<ProjectionManagementMessage.Command.Abort>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Abort)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.Abort)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
    name: ProjectionManagementMessage.Command.Abort
    nameWithType: ProjectionManagementMessage.Command.Abort
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
    name: ProjectionManagementMessage.Command.Abort
    nameWithType: ProjectionManagementMessage.Command.Abort
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.SetRunAs>
  nameWithType: IHandle<ProjectionManagementMessage.Command.SetRunAs>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.SetRunAs)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.SetRunAs)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
    name: ProjectionManagementMessage.Command.SetRunAs
    nameWithType: ProjectionManagementMessage.Command.SetRunAs
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
    name: ProjectionManagementMessage.Command.SetRunAs
    nameWithType: ProjectionManagementMessage.Command.SetRunAs
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.Reset>
  nameWithType: IHandle<ProjectionManagementMessage.Command.Reset>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Reset)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.Reset)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
    name: ProjectionManagementMessage.Command.Reset
    nameWithType: ProjectionManagementMessage.Command.Reset
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
    name: ProjectionManagementMessage.Command.Reset
    nameWithType: ProjectionManagementMessage.Command.Reset
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.StartSlaveProjections>
  nameWithType: IHandle<ProjectionManagementMessage.Command.StartSlaveProjections>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.StartSlaveProjections)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.StartSlaveProjections)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
    name: ProjectionManagementMessage.Command.StartSlaveProjections
    nameWithType: ProjectionManagementMessage.Command.StartSlaveProjections
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
    name: ProjectionManagementMessage.Command.StartSlaveProjections
    nameWithType: ProjectionManagementMessage.Command.StartSlaveProjections
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.GetConfig>
  nameWithType: IHandle<ProjectionManagementMessage.Command.GetConfig>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.GetConfig)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.GetConfig)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
    name: ProjectionManagementMessage.Command.GetConfig
    nameWithType: ProjectionManagementMessage.Command.GetConfig
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
    name: ProjectionManagementMessage.Command.GetConfig
    nameWithType: ProjectionManagementMessage.Command.GetConfig
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Command.UpdateConfig>
  nameWithType: IHandle<ProjectionManagementMessage.Command.UpdateConfig>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.UpdateConfig)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  name.vb: IHandle(Of ProjectionManagementMessage.Command.UpdateConfig)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
    name: ProjectionManagementMessage.Command.UpdateConfig
    nameWithType: ProjectionManagementMessage.Command.UpdateConfig
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
    name: ProjectionManagementMessage.Command.UpdateConfig
    nameWithType: ProjectionManagementMessage.Command.UpdateConfig
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Internal.CleanupExpired>
  nameWithType: IHandle<ProjectionManagementMessage.Internal.CleanupExpired>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Internal.CleanupExpired)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  name.vb: IHandle(Of ProjectionManagementMessage.Internal.CleanupExpired)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
    name: ProjectionManagementMessage.Internal.CleanupExpired
    nameWithType: ProjectionManagementMessage.Internal.CleanupExpired
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
    name: ProjectionManagementMessage.Internal.CleanupExpired
    nameWithType: ProjectionManagementMessage.Internal.CleanupExpired
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Internal.Deleted>
  nameWithType: IHandle<ProjectionManagementMessage.Internal.Deleted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Internal.Deleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  name.vb: IHandle(Of ProjectionManagementMessage.Internal.Deleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
    name: ProjectionManagementMessage.Internal.Deleted
    nameWithType: ProjectionManagementMessage.Internal.Deleted
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
    name: ProjectionManagementMessage.Internal.Deleted
    nameWithType: ProjectionManagementMessage.Internal.Deleted
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionStatusMessage.Started>
  nameWithType: IHandle<CoreProjectionStatusMessage.Started>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started>
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.Started)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  name.vb: IHandle(Of CoreProjectionStatusMessage.Started)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
    name: CoreProjectionStatusMessage.Started
    nameWithType: CoreProjectionStatusMessage.Started
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
    name: CoreProjectionStatusMessage.Started
    nameWithType: CoreProjectionStatusMessage.Started
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionStatusMessage.Stopped>
  nameWithType: IHandle<CoreProjectionStatusMessage.Stopped>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped>
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.Stopped)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  name.vb: IHandle(Of CoreProjectionStatusMessage.Stopped)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
    name: CoreProjectionStatusMessage.Stopped
    nameWithType: CoreProjectionStatusMessage.Stopped
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
    name: CoreProjectionStatusMessage.Stopped
    nameWithType: CoreProjectionStatusMessage.Stopped
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionStatusMessage.Faulted>
  nameWithType: IHandle<CoreProjectionStatusMessage.Faulted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted>
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.Faulted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  name.vb: IHandle(Of CoreProjectionStatusMessage.Faulted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
    name: CoreProjectionStatusMessage.Faulted
    nameWithType: CoreProjectionStatusMessage.Faulted
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
    name: CoreProjectionStatusMessage.Faulted
    nameWithType: CoreProjectionStatusMessage.Faulted
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionStatusMessage.Prepared>
  nameWithType: IHandle<CoreProjectionStatusMessage.Prepared>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared>
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.Prepared)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  name.vb: IHandle(Of CoreProjectionStatusMessage.Prepared)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
    name: CoreProjectionStatusMessage.Prepared
    nameWithType: CoreProjectionStatusMessage.Prepared
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
    name: CoreProjectionStatusMessage.Prepared
    nameWithType: CoreProjectionStatusMessage.Prepared
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionStatusMessage.StateReport>
  nameWithType: IHandle<CoreProjectionStatusMessage.StateReport>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport>
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.StateReport)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  name.vb: IHandle(Of CoreProjectionStatusMessage.StateReport)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
    name: CoreProjectionStatusMessage.StateReport
    nameWithType: CoreProjectionStatusMessage.StateReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
    name: CoreProjectionStatusMessage.StateReport
    nameWithType: CoreProjectionStatusMessage.StateReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionStatusMessage.ResultReport>
  nameWithType: IHandle<CoreProjectionStatusMessage.ResultReport>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport>
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.ResultReport)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  name.vb: IHandle(Of CoreProjectionStatusMessage.ResultReport)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
    name: CoreProjectionStatusMessage.ResultReport
    nameWithType: CoreProjectionStatusMessage.ResultReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
    name: CoreProjectionStatusMessage.ResultReport
    nameWithType: CoreProjectionStatusMessage.ResultReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionStatusMessage.StatisticsReport>
  nameWithType: IHandle<CoreProjectionStatusMessage.StatisticsReport>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport>
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.StatisticsReport)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  name.vb: IHandle(Of CoreProjectionStatusMessage.StatisticsReport)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
    name: CoreProjectionStatusMessage.StatisticsReport
    nameWithType: CoreProjectionStatusMessage.StatisticsReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
    name: CoreProjectionStatusMessage.StatisticsReport
    nameWithType: CoreProjectionStatusMessage.StatisticsReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.SlaveProjectionReaderAssigned>
  nameWithType: IHandle<CoreProjectionManagementMessage.SlaveProjectionReaderAssigned>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  name.vb: IHandle(Of CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    name: CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    nameWithType: CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    name: CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    nameWithType: CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.RegisterSystemProjection>
  nameWithType: IHandle<ProjectionManagementMessage.RegisterSystemProjection>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.RegisterSystemProjection)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  name.vb: IHandle(Of ProjectionManagementMessage.RegisterSystemProjection)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
    name: ProjectionManagementMessage.RegisterSystemProjection
    nameWithType: ProjectionManagementMessage.RegisterSystemProjection
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
    name: ProjectionManagementMessage.RegisterSystemProjection
    nameWithType: ProjectionManagementMessage.RegisterSystemProjection
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionStatusMessage.ProjectionWorkerStarted>
  nameWithType: IHandle<CoreProjectionStatusMessage.ProjectionWorkerStarted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted>
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.ProjectionWorkerStarted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  name.vb: IHandle(Of CoreProjectionStatusMessage.ProjectionWorkerStarted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
    name: CoreProjectionStatusMessage.ProjectionWorkerStarted
    nameWithType: CoreProjectionStatusMessage.ProjectionWorkerStarted
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
    name: CoreProjectionStatusMessage.ProjectionWorkerStarted
    nameWithType: CoreProjectionStatusMessage.ProjectionWorkerStarted
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.ReaderReady>
  nameWithType: IHandle<ProjectionManagementMessage.ReaderReady>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.ReaderReady)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  name.vb: IHandle(Of ProjectionManagementMessage.ReaderReady)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
    name: ProjectionManagementMessage.ReaderReady
    nameWithType: ProjectionManagementMessage.ReaderReady
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
    name: ProjectionManagementMessage.ReaderReady
    nameWithType: ProjectionManagementMessage.ReaderReady
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.#ctor
  name: ProjectionManager
  nameWithType: ProjectionManager.ProjectionManager
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.ProjectionManager
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: IDictionary{Guid,EventStore.Core.Bus.IPublisher}
  commentId: '!:IDictionary{Guid,EventStore.Core.Bus.IPublisher}'
  definition: IDictionary`2
  name: IDictionary<Guid, IPublisher>
  nameWithType: IDictionary<Guid, IPublisher>
  fullName: IDictionary<Guid, EventStore.Core.Bus.IPublisher>
  nameWithType.vb: IDictionary(Of Guid, IPublisher)
  fullName.vb: IDictionary(Of Guid, EventStore.Core.Bus.IPublisher)
  name.vb: IDictionary(Of Guid, IPublisher)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.TimerService.ITimeProvider
  commentId: T:EventStore.Core.Services.TimerService.ITimeProvider
  parent: EventStore.Core.Services.TimerService
  name: ITimeProvider
  nameWithType: ITimeProvider
  fullName: EventStore.Core.Services.TimerService.ITimeProvider
- uid: EventStore.Common.Options.ProjectionType
  commentId: T:EventStore.Common.Options.ProjectionType
  parent: EventStore.Common.Options
  name: ProjectionType
  nameWithType: ProjectionType
  fullName: EventStore.Common.Options.ProjectionType
- uid: EventStore.Core.Helpers.IODispatcher
  commentId: T:EventStore.Core.Helpers.IODispatcher
  parent: EventStore.Core.Helpers
  name: IODispatcher
  nameWithType: IODispatcher
  fullName: EventStore.Core.Helpers.IODispatcher
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.TimerService
  commentId: N:EventStore.Core.Services.TimerService
  name: EventStore.Core.Services.TimerService
  nameWithType: EventStore.Core.Services.TimerService
  fullName: EventStore.Core.Services.TimerService
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: EventStore.Core.Helpers
  commentId: N:EventStore.Core.Helpers
  name: EventStore.Core.Helpers
  nameWithType: EventStore.Core.Helpers
  fullName: EventStore.Core.Helpers
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.Handle
  name: Handle
  nameWithType: ProjectionManager.Handle
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.ReaderReady)
  nameWithType: IHandle<ProjectionManagementMessage.ReaderReady>.Handle(ProjectionManagementMessage.ReaderReady)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.ReaderReady).Handle(ProjectionManagementMessage.ReaderReady)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.ReaderReady>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
    name: ProjectionManagementMessage.ReaderReady
    nameWithType: ProjectionManagementMessage.ReaderReady
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.ReaderReady).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
    name: ProjectionManagementMessage.ReaderReady
    nameWithType: ProjectionManagementMessage.ReaderReady
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.ReaderReady
  nameWithType: ProjectionManagementMessage.ReaderReady
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.Post)
  nameWithType: IHandle<ProjectionManagementMessage.Command.Post>.Handle(ProjectionManagementMessage.Command.Post)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Post).Handle(ProjectionManagementMessage.Command.Post)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.Post>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
    name: ProjectionManagementMessage.Command.Post
    nameWithType: ProjectionManagementMessage.Command.Post
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.Post).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
    name: ProjectionManagementMessage.Command.Post
    nameWithType: ProjectionManagementMessage.Command.Post
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.Post
  nameWithType: ProjectionManagementMessage.Command.Post
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.Delete)
  nameWithType: IHandle<ProjectionManagementMessage.Command.Delete>.Handle(ProjectionManagementMessage.Command.Delete)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Delete).Handle(ProjectionManagementMessage.Command.Delete)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.Delete>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
    name: ProjectionManagementMessage.Command.Delete
    nameWithType: ProjectionManagementMessage.Command.Delete
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.Delete).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
    name: ProjectionManagementMessage.Command.Delete
    nameWithType: ProjectionManagementMessage.Command.Delete
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.Delete
  nameWithType: ProjectionManagementMessage.Command.Delete
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.GetQuery)
  nameWithType: IHandle<ProjectionManagementMessage.Command.GetQuery>.Handle(ProjectionManagementMessage.Command.GetQuery)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.GetQuery).Handle(ProjectionManagementMessage.Command.GetQuery)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.GetQuery>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
    name: ProjectionManagementMessage.Command.GetQuery
    nameWithType: ProjectionManagementMessage.Command.GetQuery
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.GetQuery).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
    name: ProjectionManagementMessage.Command.GetQuery
    nameWithType: ProjectionManagementMessage.Command.GetQuery
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.GetQuery
  nameWithType: ProjectionManagementMessage.Command.GetQuery
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.UpdateQuery)
  nameWithType: IHandle<ProjectionManagementMessage.Command.UpdateQuery>.Handle(ProjectionManagementMessage.Command.UpdateQuery)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.UpdateQuery).Handle(ProjectionManagementMessage.Command.UpdateQuery)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.UpdateQuery>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
    name: ProjectionManagementMessage.Command.UpdateQuery
    nameWithType: ProjectionManagementMessage.Command.UpdateQuery
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.UpdateQuery).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
    name: ProjectionManagementMessage.Command.UpdateQuery
    nameWithType: ProjectionManagementMessage.Command.UpdateQuery
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.UpdateQuery
  nameWithType: ProjectionManagementMessage.Command.UpdateQuery
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.Disable)
  nameWithType: IHandle<ProjectionManagementMessage.Command.Disable>.Handle(ProjectionManagementMessage.Command.Disable)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Disable).Handle(ProjectionManagementMessage.Command.Disable)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.Disable>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
    name: ProjectionManagementMessage.Command.Disable
    nameWithType: ProjectionManagementMessage.Command.Disable
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.Disable).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
    name: ProjectionManagementMessage.Command.Disable
    nameWithType: ProjectionManagementMessage.Command.Disable
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.Disable
  nameWithType: ProjectionManagementMessage.Command.Disable
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.Enable)
  nameWithType: IHandle<ProjectionManagementMessage.Command.Enable>.Handle(ProjectionManagementMessage.Command.Enable)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Enable).Handle(ProjectionManagementMessage.Command.Enable)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.Enable>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
    name: ProjectionManagementMessage.Command.Enable
    nameWithType: ProjectionManagementMessage.Command.Enable
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.Enable).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
    name: ProjectionManagementMessage.Command.Enable
    nameWithType: ProjectionManagementMessage.Command.Enable
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.Enable
  nameWithType: ProjectionManagementMessage.Command.Enable
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.Abort)
  nameWithType: IHandle<ProjectionManagementMessage.Command.Abort>.Handle(ProjectionManagementMessage.Command.Abort)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Abort).Handle(ProjectionManagementMessage.Command.Abort)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.Abort>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
    name: ProjectionManagementMessage.Command.Abort
    nameWithType: ProjectionManagementMessage.Command.Abort
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.Abort).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
    name: ProjectionManagementMessage.Command.Abort
    nameWithType: ProjectionManagementMessage.Command.Abort
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.Abort
  nameWithType: ProjectionManagementMessage.Command.Abort
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.SetRunAs)
  nameWithType: IHandle<ProjectionManagementMessage.Command.SetRunAs>.Handle(ProjectionManagementMessage.Command.SetRunAs)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.SetRunAs).Handle(ProjectionManagementMessage.Command.SetRunAs)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.SetRunAs>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
    name: ProjectionManagementMessage.Command.SetRunAs
    nameWithType: ProjectionManagementMessage.Command.SetRunAs
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.SetRunAs).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
    name: ProjectionManagementMessage.Command.SetRunAs
    nameWithType: ProjectionManagementMessage.Command.SetRunAs
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.SetRunAs
  nameWithType: ProjectionManagementMessage.Command.SetRunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.Reset)
  nameWithType: IHandle<ProjectionManagementMessage.Command.Reset>.Handle(ProjectionManagementMessage.Command.Reset)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.Reset).Handle(ProjectionManagementMessage.Command.Reset)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.Reset>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
    name: ProjectionManagementMessage.Command.Reset
    nameWithType: ProjectionManagementMessage.Command.Reset
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.Reset).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
    name: ProjectionManagementMessage.Command.Reset
    nameWithType: ProjectionManagementMessage.Command.Reset
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.Reset
  nameWithType: ProjectionManagementMessage.Command.Reset
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.GetStatistics)
  nameWithType: IHandle<ProjectionManagementMessage.Command.GetStatistics>.Handle(ProjectionManagementMessage.Command.GetStatistics)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.GetStatistics).Handle(ProjectionManagementMessage.Command.GetStatistics)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.GetStatistics>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
    name: ProjectionManagementMessage.Command.GetStatistics
    nameWithType: ProjectionManagementMessage.Command.GetStatistics
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.GetStatistics).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
    name: ProjectionManagementMessage.Command.GetStatistics
    nameWithType: ProjectionManagementMessage.Command.GetStatistics
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.GetStatistics
  nameWithType: ProjectionManagementMessage.Command.GetStatistics
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.GetState)
  nameWithType: IHandle<ProjectionManagementMessage.Command.GetState>.Handle(ProjectionManagementMessage.Command.GetState)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.GetState).Handle(ProjectionManagementMessage.Command.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.GetState>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
    name: ProjectionManagementMessage.Command.GetState
    nameWithType: ProjectionManagementMessage.Command.GetState
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.GetState).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
    name: ProjectionManagementMessage.Command.GetState
    nameWithType: ProjectionManagementMessage.Command.GetState
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.GetState
  nameWithType: ProjectionManagementMessage.Command.GetState
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.GetResult)
  nameWithType: IHandle<ProjectionManagementMessage.Command.GetResult>.Handle(ProjectionManagementMessage.Command.GetResult)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.GetResult).Handle(ProjectionManagementMessage.Command.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.GetResult>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
    name: ProjectionManagementMessage.Command.GetResult
    nameWithType: ProjectionManagementMessage.Command.GetResult
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.GetResult).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
    name: ProjectionManagementMessage.Command.GetResult
    nameWithType: ProjectionManagementMessage.Command.GetResult
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.GetResult
  nameWithType: ProjectionManagementMessage.Command.GetResult
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.GetConfig)
  nameWithType: IHandle<ProjectionManagementMessage.Command.GetConfig>.Handle(ProjectionManagementMessage.Command.GetConfig)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.GetConfig).Handle(ProjectionManagementMessage.Command.GetConfig)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.GetConfig>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
    name: ProjectionManagementMessage.Command.GetConfig
    nameWithType: ProjectionManagementMessage.Command.GetConfig
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.GetConfig).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
    name: ProjectionManagementMessage.Command.GetConfig
    nameWithType: ProjectionManagementMessage.Command.GetConfig
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.GetConfig
  nameWithType: ProjectionManagementMessage.Command.GetConfig
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.UpdateConfig)
  nameWithType: IHandle<ProjectionManagementMessage.Command.UpdateConfig>.Handle(ProjectionManagementMessage.Command.UpdateConfig)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.UpdateConfig).Handle(ProjectionManagementMessage.Command.UpdateConfig)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.UpdateConfig>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
    name: ProjectionManagementMessage.Command.UpdateConfig
    nameWithType: ProjectionManagementMessage.Command.UpdateConfig
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.UpdateConfig).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
    name: ProjectionManagementMessage.Command.UpdateConfig
    nameWithType: ProjectionManagementMessage.Command.UpdateConfig
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.UpdateConfig
  nameWithType: ProjectionManagementMessage.Command.UpdateConfig
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Internal.CleanupExpired)
  nameWithType: IHandle<ProjectionManagementMessage.Internal.CleanupExpired>.Handle(ProjectionManagementMessage.Internal.CleanupExpired)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Internal.CleanupExpired).Handle(ProjectionManagementMessage.Internal.CleanupExpired)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Internal.CleanupExpired>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
    name: ProjectionManagementMessage.Internal.CleanupExpired
    nameWithType: ProjectionManagementMessage.Internal.CleanupExpired
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Internal.CleanupExpired).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
    name: ProjectionManagementMessage.Internal.CleanupExpired
    nameWithType: ProjectionManagementMessage.Internal.CleanupExpired
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Internal.CleanupExpired
  nameWithType: ProjectionManagementMessage.Internal.CleanupExpired
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionStatusMessage.Started)
  nameWithType: IHandle<CoreProjectionStatusMessage.Started>.Handle(CoreProjectionStatusMessage.Started)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started>.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.Started).Handle(CoreProjectionStatusMessage.Started)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started).Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionStatusMessage.Started>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
    name: CoreProjectionStatusMessage.Started
    nameWithType: CoreProjectionStatusMessage.Started
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionStatusMessage.Started).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
    name: CoreProjectionStatusMessage.Started
    nameWithType: CoreProjectionStatusMessage.Started
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionStatusMessage.Started
  nameWithType: CoreProjectionStatusMessage.Started
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionStatusMessage.Stopped)
  nameWithType: IHandle<CoreProjectionStatusMessage.Stopped>.Handle(CoreProjectionStatusMessage.Stopped)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped>.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.Stopped).Handle(CoreProjectionStatusMessage.Stopped)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped).Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionStatusMessage.Stopped>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
    name: CoreProjectionStatusMessage.Stopped
    nameWithType: CoreProjectionStatusMessage.Stopped
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionStatusMessage.Stopped).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
    name: CoreProjectionStatusMessage.Stopped
    nameWithType: CoreProjectionStatusMessage.Stopped
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionStatusMessage.Stopped
  nameWithType: CoreProjectionStatusMessage.Stopped
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionStatusMessage.Faulted)
  nameWithType: IHandle<CoreProjectionStatusMessage.Faulted>.Handle(CoreProjectionStatusMessage.Faulted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted>.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.Faulted).Handle(CoreProjectionStatusMessage.Faulted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted).Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionStatusMessage.Faulted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
    name: CoreProjectionStatusMessage.Faulted
    nameWithType: CoreProjectionStatusMessage.Faulted
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionStatusMessage.Faulted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
    name: CoreProjectionStatusMessage.Faulted
    nameWithType: CoreProjectionStatusMessage.Faulted
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionStatusMessage.Faulted
  nameWithType: CoreProjectionStatusMessage.Faulted
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionStatusMessage.Prepared)
  nameWithType: IHandle<CoreProjectionStatusMessage.Prepared>.Handle(CoreProjectionStatusMessage.Prepared)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared>.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.Prepared).Handle(CoreProjectionStatusMessage.Prepared)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared).Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionStatusMessage.Prepared>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
    name: CoreProjectionStatusMessage.Prepared
    nameWithType: CoreProjectionStatusMessage.Prepared
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionStatusMessage.Prepared).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
    name: CoreProjectionStatusMessage.Prepared
    nameWithType: CoreProjectionStatusMessage.Prepared
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionStatusMessage.Prepared
  nameWithType: CoreProjectionStatusMessage.Prepared
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionStatusMessage.StateReport)
  nameWithType: IHandle<CoreProjectionStatusMessage.StateReport>.Handle(CoreProjectionStatusMessage.StateReport)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport>.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.StateReport).Handle(CoreProjectionStatusMessage.StateReport)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport).Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionStatusMessage.StateReport>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
    name: CoreProjectionStatusMessage.StateReport
    nameWithType: CoreProjectionStatusMessage.StateReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionStatusMessage.StateReport).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
    name: CoreProjectionStatusMessage.StateReport
    nameWithType: CoreProjectionStatusMessage.StateReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionStatusMessage.StateReport
  nameWithType: CoreProjectionStatusMessage.StateReport
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionStatusMessage.ResultReport)
  nameWithType: IHandle<CoreProjectionStatusMessage.ResultReport>.Handle(CoreProjectionStatusMessage.ResultReport)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport>.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.ResultReport).Handle(CoreProjectionStatusMessage.ResultReport)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport).Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionStatusMessage.ResultReport>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
    name: CoreProjectionStatusMessage.ResultReport
    nameWithType: CoreProjectionStatusMessage.ResultReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionStatusMessage.ResultReport).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
    name: CoreProjectionStatusMessage.ResultReport
    nameWithType: CoreProjectionStatusMessage.ResultReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionStatusMessage.ResultReport
  nameWithType: CoreProjectionStatusMessage.ResultReport
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionStatusMessage.StatisticsReport)
  nameWithType: IHandle<CoreProjectionStatusMessage.StatisticsReport>.Handle(CoreProjectionStatusMessage.StatisticsReport)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport>.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.StatisticsReport).Handle(CoreProjectionStatusMessage.StatisticsReport)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport).Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionStatusMessage.StatisticsReport>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
    name: CoreProjectionStatusMessage.StatisticsReport
    nameWithType: CoreProjectionStatusMessage.StatisticsReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionStatusMessage.StatisticsReport).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
    name: CoreProjectionStatusMessage.StatisticsReport
    nameWithType: CoreProjectionStatusMessage.StatisticsReport
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionStatusMessage.StatisticsReport
  nameWithType: CoreProjectionStatusMessage.StatisticsReport
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  nameWithType: IHandle<CoreProjectionManagementMessage.SlaveProjectionReaderAssigned>.Handle(CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.SlaveProjectionReaderAssigned).Handle(CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.SlaveProjectionReaderAssigned>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    name: CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    nameWithType: CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.SlaveProjectionReaderAssigned).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    name: CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    nameWithType: CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
  nameWithType: CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted}.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted}.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ClientMessage.ReadStreamEventsBackwardCompleted)
  nameWithType: IHandle<ClientMessage.ReadStreamEventsBackwardCompleted>.Handle(ClientMessage.ReadStreamEventsBackwardCompleted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted>.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  nameWithType.vb: IHandle(Of ClientMessage.ReadStreamEventsBackwardCompleted).Handle(ClientMessage.ReadStreamEventsBackwardCompleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted).Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ClientMessage.ReadStreamEventsBackwardCompleted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
    name: ClientMessage.ReadStreamEventsBackwardCompleted
    nameWithType: ClientMessage.ReadStreamEventsBackwardCompleted
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ClientMessage.ReadStreamEventsBackwardCompleted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
    name: ClientMessage.ReadStreamEventsBackwardCompleted
    nameWithType: ClientMessage.ReadStreamEventsBackwardCompleted
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
  parent: EventStore.Core.Messages
  name: ClientMessage.ReadStreamEventsBackwardCompleted
  nameWithType: ClientMessage.ReadStreamEventsBackwardCompleted
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted}.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted}.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ClientMessage.ReadStreamEventsForwardCompleted)
  nameWithType: IHandle<ClientMessage.ReadStreamEventsForwardCompleted>.Handle(ClientMessage.ReadStreamEventsForwardCompleted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted>.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  nameWithType.vb: IHandle(Of ClientMessage.ReadStreamEventsForwardCompleted).Handle(ClientMessage.ReadStreamEventsForwardCompleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted).Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ClientMessage.ReadStreamEventsForwardCompleted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
    name: ClientMessage.ReadStreamEventsForwardCompleted
    nameWithType: ClientMessage.ReadStreamEventsForwardCompleted
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ClientMessage.ReadStreamEventsForwardCompleted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
    name: ClientMessage.ReadStreamEventsForwardCompleted
    nameWithType: ClientMessage.ReadStreamEventsForwardCompleted
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
  parent: EventStore.Core.Messages
  name: ClientMessage.ReadStreamEventsForwardCompleted
  nameWithType: ClientMessage.ReadStreamEventsForwardCompleted
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.WriteEventsCompleted}.Handle(EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.WriteEventsCompleted}.Handle(EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.WriteEventsCompleted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ClientMessage.WriteEventsCompleted)
  nameWithType: IHandle<ClientMessage.WriteEventsCompleted>.Handle(ClientMessage.WriteEventsCompleted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.WriteEventsCompleted>.Handle(EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  nameWithType.vb: IHandle(Of ClientMessage.WriteEventsCompleted).Handle(ClientMessage.WriteEventsCompleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.WriteEventsCompleted).Handle(EventStore.Core.Messages.ClientMessage.WriteEventsCompleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ClientMessage.WriteEventsCompleted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.WriteEventsCompleted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
    name: ClientMessage.WriteEventsCompleted
    nameWithType: ClientMessage.WriteEventsCompleted
    fullName: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ClientMessage.WriteEventsCompleted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.WriteEventsCompleted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
    name: ClientMessage.WriteEventsCompleted
    nameWithType: ClientMessage.WriteEventsCompleted
    fullName: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
  parent: EventStore.Core.Messages
  name: ClientMessage.WriteEventsCompleted
  nameWithType: ClientMessage.WriteEventsCompleted
  fullName: EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted}.Handle(EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted}.Handle(EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ClientMessage.DeleteStreamCompleted)
  nameWithType: IHandle<ClientMessage.DeleteStreamCompleted>.Handle(ClientMessage.DeleteStreamCompleted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted>.Handle(EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  nameWithType.vb: IHandle(Of ClientMessage.DeleteStreamCompleted).Handle(ClientMessage.DeleteStreamCompleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted).Handle(EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ClientMessage.DeleteStreamCompleted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
    name: ClientMessage.DeleteStreamCompleted
    nameWithType: ClientMessage.DeleteStreamCompleted
    fullName: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ClientMessage.DeleteStreamCompleted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
    name: ClientMessage.DeleteStreamCompleted
    nameWithType: ClientMessage.DeleteStreamCompleted
    fullName: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
  parent: EventStore.Core.Messages
  name: ClientMessage.DeleteStreamCompleted
  nameWithType: ClientMessage.DeleteStreamCompleted
  fullName: EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.SystemCoreReady}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.SystemCoreReady)
  nameWithType: IHandle<SystemMessage.SystemCoreReady>.Handle(SystemMessage.SystemCoreReady)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemCoreReady>.Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  nameWithType.vb: IHandle(Of SystemMessage.SystemCoreReady).Handle(SystemMessage.SystemCoreReady)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemCoreReady).Handle(EventStore.Core.Messages.SystemMessage.SystemCoreReady)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.SystemCoreReady>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.SystemCoreReady>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.SystemCoreReady
    name: SystemMessage.SystemCoreReady
    nameWithType: SystemMessage.SystemCoreReady
    fullName: EventStore.Core.Messages.SystemMessage.SystemCoreReady
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.SystemCoreReady).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.SystemCoreReady).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.SystemCoreReady
    name: SystemMessage.SystemCoreReady
    nameWithType: SystemMessage.SystemCoreReady
    fullName: EventStore.Core.Messages.SystemMessage.SystemCoreReady
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.SystemCoreReady
  commentId: T:EventStore.Core.Messages.SystemMessage.SystemCoreReady
  parent: EventStore.Core.Messages
  name: SystemMessage.SystemCoreReady
  nameWithType: SystemMessage.SystemCoreReady
  fullName: EventStore.Core.Messages.SystemMessage.SystemCoreReady
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.StateChangeMessage)
  nameWithType: IHandle<SystemMessage.StateChangeMessage>.Handle(SystemMessage.StateChangeMessage)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  nameWithType.vb: IHandle(Of SystemMessage.StateChangeMessage).Handle(SystemMessage.StateChangeMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage).Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.StateChangeMessage>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.StateChangeMessage).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  commentId: T:EventStore.Core.Messages.SystemMessage.StateChangeMessage
  parent: EventStore.Core.Messages
  name: SystemMessage.StateChangeMessage
  nameWithType: SystemMessage.StateChangeMessage
  fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.EpochWritten}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.EpochWritten)
  nameWithType: IHandle<SystemMessage.EpochWritten>.Handle(SystemMessage.EpochWritten)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.EpochWritten>.Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  nameWithType.vb: IHandle(Of SystemMessage.EpochWritten).Handle(SystemMessage.EpochWritten)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.EpochWritten).Handle(EventStore.Core.Messages.SystemMessage.EpochWritten)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.EpochWritten>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.EpochWritten>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.EpochWritten
    name: SystemMessage.EpochWritten
    nameWithType: SystemMessage.EpochWritten
    fullName: EventStore.Core.Messages.SystemMessage.EpochWritten
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.EpochWritten).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.EpochWritten).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.EpochWritten
    name: SystemMessage.EpochWritten
    nameWithType: SystemMessage.EpochWritten
    fullName: EventStore.Core.Messages.SystemMessage.EpochWritten
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.EpochWritten
  commentId: T:EventStore.Core.Messages.SystemMessage.EpochWritten
  parent: EventStore.Core.Messages
  name: SystemMessage.EpochWritten
  nameWithType: SystemMessage.EpochWritten
  fullName: EventStore.Core.Messages.SystemMessage.EpochWritten
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Internal.Deleted)
  nameWithType: IHandle<ProjectionManagementMessage.Internal.Deleted>.Handle(ProjectionManagementMessage.Internal.Deleted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Internal.Deleted).Handle(ProjectionManagementMessage.Internal.Deleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Internal.Deleted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
    name: ProjectionManagementMessage.Internal.Deleted
    nameWithType: ProjectionManagementMessage.Internal.Deleted
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Internal.Deleted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
    name: ProjectionManagementMessage.Internal.Deleted
    nameWithType: ProjectionManagementMessage.Internal.Deleted
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Internal.Deleted
  nameWithType: ProjectionManagementMessage.Internal.Deleted
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.RegisterSystemProjection)
  nameWithType: IHandle<ProjectionManagementMessage.RegisterSystemProjection>.Handle(ProjectionManagementMessage.RegisterSystemProjection)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.RegisterSystemProjection).Handle(ProjectionManagementMessage.RegisterSystemProjection)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.RegisterSystemProjection>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
    name: ProjectionManagementMessage.RegisterSystemProjection
    nameWithType: ProjectionManagementMessage.RegisterSystemProjection
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.RegisterSystemProjection).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
    name: ProjectionManagementMessage.RegisterSystemProjection
    nameWithType: ProjectionManagementMessage.RegisterSystemProjection
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.RegisterSystemProjection
  nameWithType: ProjectionManagementMessage.RegisterSystemProjection
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
- uid: EventStore.Projections.Core.Services.Management.ProjectionManager.Dispose*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManager.Dispose
  name: Dispose
  nameWithType: ProjectionManager.Dispose
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManager.Dispose
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Command.StartSlaveProjections)
  nameWithType: IHandle<ProjectionManagementMessage.Command.StartSlaveProjections>.Handle(ProjectionManagementMessage.Command.StartSlaveProjections)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Command.StartSlaveProjections).Handle(ProjectionManagementMessage.Command.StartSlaveProjections)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Command.StartSlaveProjections>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
    name: ProjectionManagementMessage.Command.StartSlaveProjections
    nameWithType: ProjectionManagementMessage.Command.StartSlaveProjections
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Command.StartSlaveProjections).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
    name: ProjectionManagementMessage.Command.StartSlaveProjections
    nameWithType: ProjectionManagementMessage.Command.StartSlaveProjections
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Command.StartSlaveProjections
  nameWithType: ProjectionManagementMessage.Command.StartSlaveProjections
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted}.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionStatusMessage.ProjectionWorkerStarted)
  nameWithType: IHandle<CoreProjectionStatusMessage.ProjectionWorkerStarted>.Handle(CoreProjectionStatusMessage.ProjectionWorkerStarted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted>.Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  nameWithType.vb: IHandle(Of CoreProjectionStatusMessage.ProjectionWorkerStarted).Handle(CoreProjectionStatusMessage.ProjectionWorkerStarted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted).Handle(EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionStatusMessage.ProjectionWorkerStarted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
    name: CoreProjectionStatusMessage.ProjectionWorkerStarted
    nameWithType: CoreProjectionStatusMessage.ProjectionWorkerStarted
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionStatusMessage.ProjectionWorkerStarted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
    name: CoreProjectionStatusMessage.ProjectionWorkerStarted
    nameWithType: CoreProjectionStatusMessage.ProjectionWorkerStarted
    fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionStatusMessage.ProjectionWorkerStarted
  nameWithType: CoreProjectionStatusMessage.ProjectionWorkerStarted
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  commentId: T:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  id: ProjectionManagerCommandWriter
  parent: EventStore.Projections.Core.Services.Management
  children:
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.#ctor(EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  langs:
  - csharp
  - vb
  name: ProjectionManagerCommandWriter
  nameWithType: ProjectionManagerCommandWriter
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  type: Class
  source:
    id: ProjectionManagerCommandWriter
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: 'public sealed class ProjectionManagerCommandWriter : object, IHandle<CoreProjectionManagementMessage.CreatePrepared>, IHandle<CoreProjectionManagementMessage.CreateAndPrepare>, IHandle<CoreProjectionManagementMessage.CreateAndPrepareSlave>, IHandle<CoreProjectionManagementMessage.LoadStopped>, IHandle<CoreProjectionManagementMessage.Start>, IHandle<CoreProjectionManagementMessage.Stop>, IHandle<CoreProjectionManagementMessage.Kill>, IHandle<CoreProjectionManagementMessage.Dispose>, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<ProjectionManagementMessage.SlaveProjectionsStarted>, IHandle<ProjectionManagementMessage.Starting>'
    content.vb: >-
      Public NotInheritable Class ProjectionManagerCommandWriter

          Inherits Object

          Implements IHandle(Of CoreProjectionManagementMessage.CreatePrepared), IHandle(Of CoreProjectionManagementMessage.CreateAndPrepare), IHandle(Of CoreProjectionManagementMessage.CreateAndPrepareSlave), IHandle(Of CoreProjectionManagementMessage.LoadStopped), IHandle(Of CoreProjectionManagementMessage.Start), IHandle(Of CoreProjectionManagementMessage.Stop), IHandle(Of CoreProjectionManagementMessage.Kill), IHandle(Of CoreProjectionManagementMessage.Dispose), IHandle(Of CoreProjectionManagementMessage.GetState), IHandle(Of CoreProjectionManagementMessage.GetResult), IHandle(Of ProjectionManagementMessage.SlaveProjectionsStarted), IHandle(Of ProjectionManagementMessage.Starting)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.#ctor(EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.#ctor(EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter)
  id: '#ctor(EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter)'
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: ProjectionManagerCommandWriter(IMultiStreamMessageWriter)
  nameWithType: ProjectionManagerCommandWriter.ProjectionManagerCommandWriter(IMultiStreamMessageWriter)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.ProjectionManagerCommandWriter(EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public ProjectionManagerCommandWriter(IMultiStreamMessageWriter commandWriter)
    parameters:
    - id: commandWriter
      type: EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter
    content.vb: Public Sub New(commandWriter As IMultiStreamMessageWriter)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Starting)
  nameWithType: ProjectionManagerCommandWriter.Handle(ProjectionManagementMessage.Starting)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 25
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Starting message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Starting)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.CreatePrepared)
  nameWithType: ProjectionManagerCommandWriter.Handle(CoreProjectionManagementMessage.CreatePrepared)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.CreatePrepared message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.CreatePrepared)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.CreateAndPrepare)
  nameWithType: ProjectionManagerCommandWriter.Handle(CoreProjectionManagementMessage.CreateAndPrepare)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 42
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.CreateAndPrepare message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.CreateAndPrepare)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.CreateAndPrepareSlave)
  nameWithType: ProjectionManagerCommandWriter.Handle(CoreProjectionManagementMessage.CreateAndPrepareSlave)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 54
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.CreateAndPrepareSlave message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.CreateAndPrepareSlave)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.LoadStopped)
  nameWithType: ProjectionManagerCommandWriter.Handle(CoreProjectionManagementMessage.LoadStopped)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 68
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.LoadStopped message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.LoadStopped)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.Start)
  nameWithType: ProjectionManagerCommandWriter.Handle(CoreProjectionManagementMessage.Start)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 75
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.Start message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.Start)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.Stop)
  nameWithType: ProjectionManagerCommandWriter.Handle(CoreProjectionManagementMessage.Stop)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 82
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.Stop message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.Stop)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.Kill)
  nameWithType: ProjectionManagerCommandWriter.Handle(CoreProjectionManagementMessage.Kill)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 89
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.Kill message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.Kill)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.Dispose)
  nameWithType: ProjectionManagerCommandWriter.Handle(CoreProjectionManagementMessage.Dispose)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 96
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.Dispose message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.Dispose)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.GetState)
  nameWithType: ProjectionManagerCommandWriter.Handle(CoreProjectionManagementMessage.GetState)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 103
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.GetState message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.GetState)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.GetResult)
  nameWithType: ProjectionManagerCommandWriter.Handle(CoreProjectionManagementMessage.GetResult)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 112
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.GetResult message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.GetResult)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.SlaveProjectionsStarted)
  nameWithType: ProjectionManagerCommandWriter.Handle(ProjectionManagementMessage.SlaveProjectionsStarted)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerCommandWriter.cs
    startLine: 121
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.SlaveProjectionsStarted message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.SlaveProjectionsStarted)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.CreatePrepared>
  nameWithType: IHandle<CoreProjectionManagementMessage.CreatePrepared>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.CreatePrepared)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  name.vb: IHandle(Of CoreProjectionManagementMessage.CreatePrepared)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
    name: CoreProjectionManagementMessage.CreatePrepared
    nameWithType: CoreProjectionManagementMessage.CreatePrepared
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
    name: CoreProjectionManagementMessage.CreatePrepared
    nameWithType: CoreProjectionManagementMessage.CreatePrepared
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.CreateAndPrepare>
  nameWithType: IHandle<CoreProjectionManagementMessage.CreateAndPrepare>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.CreateAndPrepare)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  name.vb: IHandle(Of CoreProjectionManagementMessage.CreateAndPrepare)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
    name: CoreProjectionManagementMessage.CreateAndPrepare
    nameWithType: CoreProjectionManagementMessage.CreateAndPrepare
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
    name: CoreProjectionManagementMessage.CreateAndPrepare
    nameWithType: CoreProjectionManagementMessage.CreateAndPrepare
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.CreateAndPrepareSlave>
  nameWithType: IHandle<CoreProjectionManagementMessage.CreateAndPrepareSlave>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.CreateAndPrepareSlave)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  name.vb: IHandle(Of CoreProjectionManagementMessage.CreateAndPrepareSlave)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
    name: CoreProjectionManagementMessage.CreateAndPrepareSlave
    nameWithType: CoreProjectionManagementMessage.CreateAndPrepareSlave
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
    name: CoreProjectionManagementMessage.CreateAndPrepareSlave
    nameWithType: CoreProjectionManagementMessage.CreateAndPrepareSlave
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.LoadStopped>
  nameWithType: IHandle<CoreProjectionManagementMessage.LoadStopped>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.LoadStopped)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  name.vb: IHandle(Of CoreProjectionManagementMessage.LoadStopped)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
    name: CoreProjectionManagementMessage.LoadStopped
    nameWithType: CoreProjectionManagementMessage.LoadStopped
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
    name: CoreProjectionManagementMessage.LoadStopped
    nameWithType: CoreProjectionManagementMessage.LoadStopped
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.Start>
  nameWithType: IHandle<CoreProjectionManagementMessage.Start>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.Start)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  name.vb: IHandle(Of CoreProjectionManagementMessage.Start)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
    name: CoreProjectionManagementMessage.Start
    nameWithType: CoreProjectionManagementMessage.Start
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
    name: CoreProjectionManagementMessage.Start
    nameWithType: CoreProjectionManagementMessage.Start
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.Stop>
  nameWithType: IHandle<CoreProjectionManagementMessage.Stop>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.Stop)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  name.vb: IHandle(Of CoreProjectionManagementMessage.Stop)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
    name: CoreProjectionManagementMessage.Stop
    nameWithType: CoreProjectionManagementMessage.Stop
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
    name: CoreProjectionManagementMessage.Stop
    nameWithType: CoreProjectionManagementMessage.Stop
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.Kill>
  nameWithType: IHandle<CoreProjectionManagementMessage.Kill>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.Kill)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  name.vb: IHandle(Of CoreProjectionManagementMessage.Kill)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
    name: CoreProjectionManagementMessage.Kill
    nameWithType: CoreProjectionManagementMessage.Kill
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
    name: CoreProjectionManagementMessage.Kill
    nameWithType: CoreProjectionManagementMessage.Kill
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.Dispose>
  nameWithType: IHandle<CoreProjectionManagementMessage.Dispose>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.Dispose)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  name.vb: IHandle(Of CoreProjectionManagementMessage.Dispose)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
    name: CoreProjectionManagementMessage.Dispose
    nameWithType: CoreProjectionManagementMessage.Dispose
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
    name: CoreProjectionManagementMessage.Dispose
    nameWithType: CoreProjectionManagementMessage.Dispose
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.GetState>
  nameWithType: IHandle<CoreProjectionManagementMessage.GetState>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  name.vb: IHandle(Of CoreProjectionManagementMessage.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.GetResult>
  nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  name.vb: IHandle(Of CoreProjectionManagementMessage.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.SlaveProjectionsStarted>
  nameWithType: IHandle<ProjectionManagementMessage.SlaveProjectionsStarted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.SlaveProjectionsStarted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  name.vb: IHandle(Of ProjectionManagementMessage.SlaveProjectionsStarted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
    name: ProjectionManagementMessage.SlaveProjectionsStarted
    nameWithType: ProjectionManagementMessage.SlaveProjectionsStarted
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
    name: ProjectionManagementMessage.SlaveProjectionsStarted
    nameWithType: ProjectionManagementMessage.SlaveProjectionsStarted
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Starting>
  nameWithType: IHandle<ProjectionManagementMessage.Starting>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Starting)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  name.vb: IHandle(Of ProjectionManagementMessage.Starting)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
    name: ProjectionManagementMessage.Starting
    nameWithType: ProjectionManagementMessage.Starting
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
    name: ProjectionManagementMessage.Starting
    nameWithType: ProjectionManagementMessage.Starting
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.#ctor
  name: ProjectionManagerCommandWriter
  nameWithType: ProjectionManagerCommandWriter.ProjectionManagerCommandWriter
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.ProjectionManagerCommandWriter
- uid: EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter
  commentId: T:EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter
  parent: EventStore.Projections.Core.Services.Management
  name: IMultiStreamMessageWriter
  nameWithType: IMultiStreamMessageWriter
  fullName: EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle
  name: Handle
  nameWithType: ProjectionManagerCommandWriter.Handle
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Starting)
  nameWithType: IHandle<ProjectionManagementMessage.Starting>.Handle(ProjectionManagementMessage.Starting)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Starting).Handle(ProjectionManagementMessage.Starting)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Starting>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
    name: ProjectionManagementMessage.Starting
    nameWithType: ProjectionManagementMessage.Starting
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Starting).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
    name: ProjectionManagementMessage.Starting
    nameWithType: ProjectionManagementMessage.Starting
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Starting
  nameWithType: ProjectionManagementMessage.Starting
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.CreatePrepared)
  nameWithType: IHandle<CoreProjectionManagementMessage.CreatePrepared>.Handle(CoreProjectionManagementMessage.CreatePrepared)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.CreatePrepared).Handle(CoreProjectionManagementMessage.CreatePrepared)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.CreatePrepared>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
    name: CoreProjectionManagementMessage.CreatePrepared
    nameWithType: CoreProjectionManagementMessage.CreatePrepared
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.CreatePrepared).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
    name: CoreProjectionManagementMessage.CreatePrepared
    nameWithType: CoreProjectionManagementMessage.CreatePrepared
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.CreatePrepared
  nameWithType: CoreProjectionManagementMessage.CreatePrepared
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.CreateAndPrepare)
  nameWithType: IHandle<CoreProjectionManagementMessage.CreateAndPrepare>.Handle(CoreProjectionManagementMessage.CreateAndPrepare)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.CreateAndPrepare).Handle(CoreProjectionManagementMessage.CreateAndPrepare)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.CreateAndPrepare>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
    name: CoreProjectionManagementMessage.CreateAndPrepare
    nameWithType: CoreProjectionManagementMessage.CreateAndPrepare
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.CreateAndPrepare).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
    name: CoreProjectionManagementMessage.CreateAndPrepare
    nameWithType: CoreProjectionManagementMessage.CreateAndPrepare
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.CreateAndPrepare
  nameWithType: CoreProjectionManagementMessage.CreateAndPrepare
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.CreateAndPrepareSlave)
  nameWithType: IHandle<CoreProjectionManagementMessage.CreateAndPrepareSlave>.Handle(CoreProjectionManagementMessage.CreateAndPrepareSlave)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.CreateAndPrepareSlave).Handle(CoreProjectionManagementMessage.CreateAndPrepareSlave)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.CreateAndPrepareSlave>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
    name: CoreProjectionManagementMessage.CreateAndPrepareSlave
    nameWithType: CoreProjectionManagementMessage.CreateAndPrepareSlave
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.CreateAndPrepareSlave).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
    name: CoreProjectionManagementMessage.CreateAndPrepareSlave
    nameWithType: CoreProjectionManagementMessage.CreateAndPrepareSlave
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.CreateAndPrepareSlave
  nameWithType: CoreProjectionManagementMessage.CreateAndPrepareSlave
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.LoadStopped)
  nameWithType: IHandle<CoreProjectionManagementMessage.LoadStopped>.Handle(CoreProjectionManagementMessage.LoadStopped)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.LoadStopped).Handle(CoreProjectionManagementMessage.LoadStopped)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.LoadStopped>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
    name: CoreProjectionManagementMessage.LoadStopped
    nameWithType: CoreProjectionManagementMessage.LoadStopped
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.LoadStopped).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
    name: CoreProjectionManagementMessage.LoadStopped
    nameWithType: CoreProjectionManagementMessage.LoadStopped
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.LoadStopped
  nameWithType: CoreProjectionManagementMessage.LoadStopped
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.Start)
  nameWithType: IHandle<CoreProjectionManagementMessage.Start>.Handle(CoreProjectionManagementMessage.Start)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.Start).Handle(CoreProjectionManagementMessage.Start)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.Start>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
    name: CoreProjectionManagementMessage.Start
    nameWithType: CoreProjectionManagementMessage.Start
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.Start).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
    name: CoreProjectionManagementMessage.Start
    nameWithType: CoreProjectionManagementMessage.Start
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.Start
  nameWithType: CoreProjectionManagementMessage.Start
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.Stop)
  nameWithType: IHandle<CoreProjectionManagementMessage.Stop>.Handle(CoreProjectionManagementMessage.Stop)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.Stop).Handle(CoreProjectionManagementMessage.Stop)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.Stop>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
    name: CoreProjectionManagementMessage.Stop
    nameWithType: CoreProjectionManagementMessage.Stop
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.Stop).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
    name: CoreProjectionManagementMessage.Stop
    nameWithType: CoreProjectionManagementMessage.Stop
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.Stop
  nameWithType: CoreProjectionManagementMessage.Stop
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.Kill)
  nameWithType: IHandle<CoreProjectionManagementMessage.Kill>.Handle(CoreProjectionManagementMessage.Kill)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.Kill).Handle(CoreProjectionManagementMessage.Kill)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.Kill>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
    name: CoreProjectionManagementMessage.Kill
    nameWithType: CoreProjectionManagementMessage.Kill
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.Kill).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
    name: CoreProjectionManagementMessage.Kill
    nameWithType: CoreProjectionManagementMessage.Kill
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.Kill
  nameWithType: CoreProjectionManagementMessage.Kill
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.Dispose)
  nameWithType: IHandle<CoreProjectionManagementMessage.Dispose>.Handle(CoreProjectionManagementMessage.Dispose)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.Dispose).Handle(CoreProjectionManagementMessage.Dispose)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.Dispose>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
    name: CoreProjectionManagementMessage.Dispose
    nameWithType: CoreProjectionManagementMessage.Dispose
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.Dispose).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
    name: CoreProjectionManagementMessage.Dispose
    nameWithType: CoreProjectionManagementMessage.Dispose
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.Dispose
  nameWithType: CoreProjectionManagementMessage.Dispose
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.GetState)
  nameWithType: IHandle<CoreProjectionManagementMessage.GetState>.Handle(CoreProjectionManagementMessage.GetState)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetState).Handle(CoreProjectionManagementMessage.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.GetState>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.GetState).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.GetState
  nameWithType: CoreProjectionManagementMessage.GetState
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.GetResult)
  nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>.Handle(CoreProjectionManagementMessage.GetResult)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetResult).Handle(CoreProjectionManagementMessage.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.GetResult).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.GetResult
  nameWithType: CoreProjectionManagementMessage.GetResult
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.SlaveProjectionsStarted)
  nameWithType: IHandle<ProjectionManagementMessage.SlaveProjectionsStarted>.Handle(ProjectionManagementMessage.SlaveProjectionsStarted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.SlaveProjectionsStarted).Handle(ProjectionManagementMessage.SlaveProjectionsStarted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.SlaveProjectionsStarted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
    name: ProjectionManagementMessage.SlaveProjectionsStarted
    nameWithType: ProjectionManagementMessage.SlaveProjectionsStarted
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.SlaveProjectionsStarted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
    name: ProjectionManagementMessage.SlaveProjectionsStarted
    nameWithType: ProjectionManagementMessage.SlaveProjectionsStarted
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.SlaveProjectionsStarted
  nameWithType: ProjectionManagementMessage.SlaveProjectionsStarted
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted

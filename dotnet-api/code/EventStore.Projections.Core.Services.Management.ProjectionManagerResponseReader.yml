### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader
  commentId: T:EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader
  id: ProjectionManagerResponseReader
  parent: EventStore.Projections.Core.Services.Management
  children:
  - EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,System.Int32)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  - EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  langs:
  - csharp
  - vb
  name: ProjectionManagerResponseReader
  nameWithType: ProjectionManagerResponseReader
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader
  type: Class
  source:
    id: ProjectionManagerResponseReader
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerResponseReader.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: 'public class ProjectionManagerResponseReader : object, IHandle<ProjectionManagementMessage.Starting>, IHandle<ProjectionManagementMessage.Internal.ReadTimeout>'
    content.vb: >-
      Public Class ProjectionManagerResponseReader

          Inherits Object

          Implements IHandle(Of ProjectionManagementMessage.Starting), IHandle(Of ProjectionManagementMessage.Internal.ReadTimeout)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,System.Int32)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,System.Int32)
  id: '#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,System.Int32)'
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader
  langs:
  - csharp
  - vb
  name: ProjectionManagerResponseReader(IPublisher, IODispatcher, Int32)
  nameWithType: ProjectionManagerResponseReader.ProjectionManagerResponseReader(IPublisher, IODispatcher, Int32)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.ProjectionManagerResponseReader(EventStore.Core.Bus.IPublisher, EventStore.Core.Helpers.IODispatcher, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerResponseReader.cs
    startLine: 32
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public ProjectionManagerResponseReader(IPublisher publisher, IODispatcher ioDispatcher, int numberOfWorkers)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: ioDispatcher
      type: EventStore.Core.Helpers.IODispatcher
    - id: numberOfWorkers
      type: System.Int32
    content.vb: Public Sub New(publisher As IPublisher, ioDispatcher As IODispatcher, numberOfWorkers As Integer)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Starting)
  nameWithType: ProjectionManagerResponseReader.Handle(ProjectionManagementMessage.Starting)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerResponseReader.cs
    startLine: 41
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Starting message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
    content.vb: Public Sub Handle(message As ProjectionManagementMessage.Starting)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  commentId: M:EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  id: Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  parent: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader
  langs:
  - csharp
  - vb
  name: Handle(ProjectionManagementMessage.Internal.ReadTimeout)
  nameWithType: ProjectionManagerResponseReader.Handle(ProjectionManagementMessage.Internal.ReadTimeout)
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Management/ProjectionManagerResponseReader.cs
    startLine: 157
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Handle(ProjectionManagementMessage.Internal.ReadTimeout timeout)
    parameters:
    - id: timeout
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
    content.vb: Public Sub Handle(timeout As ProjectionManagementMessage.Internal.ReadTimeout)
  overload: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Starting>
  nameWithType: IHandle<ProjectionManagementMessage.Starting>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Starting)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  name.vb: IHandle(Of ProjectionManagementMessage.Starting)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
    name: ProjectionManagementMessage.Starting
    nameWithType: ProjectionManagementMessage.Starting
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
    name: ProjectionManagementMessage.Starting
    nameWithType: ProjectionManagementMessage.Starting
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionManagementMessage.Internal.ReadTimeout>
  nameWithType: IHandle<ProjectionManagementMessage.Internal.ReadTimeout>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout>
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Internal.ReadTimeout)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  name.vb: IHandle(Of ProjectionManagementMessage.Internal.ReadTimeout)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
    name: ProjectionManagementMessage.Internal.ReadTimeout
    nameWithType: ProjectionManagementMessage.Internal.ReadTimeout
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
    name: ProjectionManagementMessage.Internal.ReadTimeout
    nameWithType: ProjectionManagementMessage.Internal.ReadTimeout
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.#ctor
  name: ProjectionManagerResponseReader
  nameWithType: ProjectionManagerResponseReader.ProjectionManagerResponseReader
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.ProjectionManagerResponseReader
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Helpers.IODispatcher
  commentId: T:EventStore.Core.Helpers.IODispatcher
  parent: EventStore.Core.Helpers
  name: IODispatcher
  nameWithType: IODispatcher
  fullName: EventStore.Core.Helpers.IODispatcher
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Helpers
  commentId: N:EventStore.Core.Helpers
  name: EventStore.Core.Helpers
  nameWithType: EventStore.Core.Helpers
  fullName: EventStore.Core.Helpers
- uid: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle
  name: Handle
  nameWithType: ProjectionManagerResponseReader.Handle
  fullName: EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Starting)
  nameWithType: IHandle<ProjectionManagementMessage.Starting>.Handle(ProjectionManagementMessage.Starting)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Starting).Handle(ProjectionManagementMessage.Starting)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Starting>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
    name: ProjectionManagementMessage.Starting
    nameWithType: ProjectionManagementMessage.Starting
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Starting).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
    name: ProjectionManagementMessage.Starting
    nameWithType: ProjectionManagementMessage.Starting
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Starting
  nameWithType: ProjectionManagementMessage.Starting
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout}.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ProjectionManagementMessage.Internal.ReadTimeout)
  nameWithType: IHandle<ProjectionManagementMessage.Internal.ReadTimeout>.Handle(ProjectionManagementMessage.Internal.ReadTimeout)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout>.Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  nameWithType.vb: IHandle(Of ProjectionManagementMessage.Internal.ReadTimeout).Handle(ProjectionManagementMessage.Internal.ReadTimeout)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout).Handle(EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ProjectionManagementMessage.Internal.ReadTimeout>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
    name: ProjectionManagementMessage.Internal.ReadTimeout
    nameWithType: ProjectionManagementMessage.Internal.ReadTimeout
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ProjectionManagementMessage.Internal.ReadTimeout).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
    name: ProjectionManagementMessage.Internal.ReadTimeout
    nameWithType: ProjectionManagementMessage.Internal.ReadTimeout
    fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
  parent: EventStore.Projections.Core.Messages
  name: ProjectionManagementMessage.Internal.ReadTimeout
  nameWithType: ProjectionManagementMessage.Internal.ReadTimeout
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout

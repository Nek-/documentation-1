### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Management.ResponseWriter
  commentId: T:EventStore.Projections.Core.Services.Management.ResponseWriter
  id: ResponseWriter
  parent: EventStore.Projections.Core.Services.Management
  children:
  - EventStore.Projections.Core.Services.Management.ResponseWriter.#ctor(EventStore.Core.Helpers.IODispatcher)
  - EventStore.Projections.Core.Services.Management.ResponseWriter.PublishCommand(System.String,System.Object)
  - EventStore.Projections.Core.Services.Management.ResponseWriter.Reset
  langs:
  - csharp
  - vb
  name: ResponseWriter
  nameWithType: ResponseWriter
  fullName: EventStore.Projections.Core.Services.Management.ResponseWriter
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ResponseWriter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ResponseWriter
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ResponseWriter.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: 'public sealed class ResponseWriter : object, IResponseWriter'
    content.vb: >-
      Public NotInheritable Class ResponseWriter
          Inherits Object
          Implements IResponseWriter
  inheritance:
  - System.Object
  implements:
  - EventStore.Projections.Core.Services.Management.IResponseWriter
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Management.ResponseWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Management.ResponseWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Services.Management.ResponseWriter.#ctor(EventStore.Core.Helpers.IODispatcher)
  commentId: M:EventStore.Projections.Core.Services.Management.ResponseWriter.#ctor(EventStore.Core.Helpers.IODispatcher)
  id: '#ctor(EventStore.Core.Helpers.IODispatcher)'
  parent: EventStore.Projections.Core.Services.Management.ResponseWriter
  langs:
  - csharp
  - vb
  name: ResponseWriter(IODispatcher)
  nameWithType: ResponseWriter.ResponseWriter(IODispatcher)
  fullName: EventStore.Projections.Core.Services.Management.ResponseWriter.ResponseWriter(EventStore.Core.Helpers.IODispatcher)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ResponseWriter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ResponseWriter.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public ResponseWriter(IODispatcher ioDispatcher)
    parameters:
    - id: ioDispatcher
      type: EventStore.Core.Helpers.IODispatcher
    content.vb: Public Sub New(ioDispatcher As IODispatcher)
  overload: EventStore.Projections.Core.Services.Management.ResponseWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ResponseWriter.Reset
  commentId: M:EventStore.Projections.Core.Services.Management.ResponseWriter.Reset
  id: Reset
  parent: EventStore.Projections.Core.Services.Management.ResponseWriter
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ResponseWriter.Reset()
  fullName: EventStore.Projections.Core.Services.Management.ResponseWriter.Reset()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ResponseWriter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Reset
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ResponseWriter.cs
    startLine: 31
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: EventStore.Projections.Core.Services.Management.ResponseWriter.Reset*
  implements:
  - EventStore.Projections.Core.Services.Management.IResponseWriter.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.ResponseWriter.PublishCommand(System.String,System.Object)
  commentId: M:EventStore.Projections.Core.Services.Management.ResponseWriter.PublishCommand(System.String,System.Object)
  id: PublishCommand(System.String,System.Object)
  parent: EventStore.Projections.Core.Services.Management.ResponseWriter
  langs:
  - csharp
  - vb
  name: PublishCommand(String, Object)
  nameWithType: ResponseWriter.PublishCommand(String, Object)
  fullName: EventStore.Projections.Core.Services.Management.ResponseWriter.PublishCommand(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ResponseWriter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PublishCommand
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ResponseWriter.cs
    startLine: 39
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public void PublishCommand(string command, object body)
    parameters:
    - id: command
      type: System.String
    - id: body
      type: System.Object
    content.vb: Public Sub PublishCommand(command As String, body As Object)
  overload: EventStore.Projections.Core.Services.Management.ResponseWriter.PublishCommand*
  implements:
  - EventStore.Projections.Core.Services.Management.IResponseWriter.PublishCommand(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Management.IResponseWriter
  commentId: T:EventStore.Projections.Core.Services.Management.IResponseWriter
  parent: EventStore.Projections.Core.Services.Management
  name: IResponseWriter
  nameWithType: IResponseWriter
  fullName: EventStore.Projections.Core.Services.Management.IResponseWriter
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ResponseWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ResponseWriter>()
  nameWithType: ProtobufExtensions.Serialize<ResponseWriter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.ResponseWriter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ResponseWriter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.ResponseWriter)()
  name.vb: Serialize(Of ResponseWriter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ResponseWriter>
    nameWithType: ProtobufExtensions.Serialize<ResponseWriter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.ResponseWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ResponseWriter)
    nameWithType: ProtobufExtensions.Serialize(Of ResponseWriter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.ResponseWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ResponseWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ResponseWriter>()
  nameWithType: ProtobufExtensions.SerializeToArray<ResponseWriter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.ResponseWriter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ResponseWriter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.ResponseWriter)()
  name.vb: SerializeToArray(Of ResponseWriter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ResponseWriter>
    nameWithType: ProtobufExtensions.SerializeToArray<ResponseWriter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.ResponseWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ResponseWriter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ResponseWriter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.ResponseWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Management.ResponseWriter.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ResponseWriter.#ctor
  name: ResponseWriter
  nameWithType: ResponseWriter.ResponseWriter
  fullName: EventStore.Projections.Core.Services.Management.ResponseWriter.ResponseWriter
- uid: EventStore.Core.Helpers.IODispatcher
  commentId: T:EventStore.Core.Helpers.IODispatcher
  parent: EventStore.Core.Helpers
  name: IODispatcher
  nameWithType: IODispatcher
  fullName: EventStore.Core.Helpers.IODispatcher
- uid: EventStore.Core.Helpers
  commentId: N:EventStore.Core.Helpers
  name: EventStore.Core.Helpers
  nameWithType: EventStore.Core.Helpers
  fullName: EventStore.Core.Helpers
- uid: EventStore.Projections.Core.Services.Management.ResponseWriter.Reset*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ResponseWriter.Reset
  name: Reset
  nameWithType: ResponseWriter.Reset
  fullName: EventStore.Projections.Core.Services.Management.ResponseWriter.Reset
- uid: EventStore.Projections.Core.Services.Management.IResponseWriter.Reset
  commentId: M:EventStore.Projections.Core.Services.Management.IResponseWriter.Reset
  parent: EventStore.Projections.Core.Services.Management.IResponseWriter
  name: Reset()
  nameWithType: IResponseWriter.Reset()
  fullName: EventStore.Projections.Core.Services.Management.IResponseWriter.Reset()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Management.IResponseWriter.Reset
    name: Reset
    nameWithType: IResponseWriter.Reset
    fullName: EventStore.Projections.Core.Services.Management.IResponseWriter.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Management.IResponseWriter.Reset
    name: Reset
    nameWithType: IResponseWriter.Reset
    fullName: EventStore.Projections.Core.Services.Management.IResponseWriter.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.ResponseWriter.PublishCommand*
  commentId: Overload:EventStore.Projections.Core.Services.Management.ResponseWriter.PublishCommand
  name: PublishCommand
  nameWithType: ResponseWriter.PublishCommand
  fullName: EventStore.Projections.Core.Services.Management.ResponseWriter.PublishCommand
- uid: EventStore.Projections.Core.Services.Management.IResponseWriter.PublishCommand(System.String,System.Object)
  commentId: M:EventStore.Projections.Core.Services.Management.IResponseWriter.PublishCommand(System.String,System.Object)
  parent: EventStore.Projections.Core.Services.Management.IResponseWriter
  isExternal: true
  name: PublishCommand(String, Object)
  nameWithType: IResponseWriter.PublishCommand(String, Object)
  fullName: EventStore.Projections.Core.Services.Management.IResponseWriter.PublishCommand(System.String, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Management.IResponseWriter.PublishCommand(System.String,System.Object)
    name: PublishCommand
    nameWithType: IResponseWriter.PublishCommand
    fullName: EventStore.Projections.Core.Services.Management.IResponseWriter.PublishCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Management.IResponseWriter.PublishCommand(System.String,System.Object)
    name: PublishCommand
    nameWithType: IResponseWriter.PublishCommand
    fullName: EventStore.Projections.Core.Services.Management.IResponseWriter.PublishCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

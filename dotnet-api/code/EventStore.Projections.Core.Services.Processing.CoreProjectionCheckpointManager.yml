### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  commentId: T:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  id: CoreProjectionCheckpointManager
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Projections.Core.Services.Processing.PositionTagger,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._currentCheckpoint
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._logger
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._namingBuilder
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._projectionConfig
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._publisher
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._stopped
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._stopping
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginWriteCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CapturePartitionStateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointWritten(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CreateProjectionCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EmitPartitionCheckpoints
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EnsureStarted
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.Failed)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.RestartRequested)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Initialize
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.LastProcessedEventPosition
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PartitionCompleted(System.String)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PrerecordedEventsLoaded(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Progress(System.Single)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RequestRestart(System.String)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.SendPrerecordedEvent(EventStore.Core.Data.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Int64)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopped
  - EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopping
  langs:
  - csharp
  - vb
  name: CoreProjectionCheckpointManager
  nameWithType: CoreProjectionCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  type: Class
  source:
    id: CoreProjectionCheckpointManager
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public abstract class CoreProjectionCheckpointManager : object, IProjectionCheckpointManager, IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed>, ICoreProjectionCheckpointManager, IEmittedEventWriter'
    content.vb: >-
      Public MustInherit Class CoreProjectionCheckpointManager
          Inherits Object
          Implements IProjectionCheckpointManager, IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint), IHandle(Of CoreProjectionProcessingMessage.RestartRequested), IHandle(Of CoreProjectionProcessingMessage.Failed), ICoreProjectionCheckpointManager, IEmittedEventWriter
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Projections.Core.Services.Processing.DefaultCheckpointManager
  implements:
  - EventStore.Projections.Core.Messages.IProjectionCheckpointManager
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  - EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._namingBuilder
  commentId: F:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._namingBuilder
  id: _namingBuilder
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: _namingBuilder
  nameWithType: CoreProjectionCheckpointManager._namingBuilder
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._namingBuilder
  type: Field
  source:
    id: _namingBuilder
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly ProjectionNamesBuilder _namingBuilder
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
    content.vb: Protected ReadOnly _namingBuilder As ProjectionNamesBuilder
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._projectionConfig
  commentId: F:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._projectionConfig
  id: _projectionConfig
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: _projectionConfig
  nameWithType: CoreProjectionCheckpointManager._projectionConfig
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._projectionConfig
  type: Field
  source:
    id: _projectionConfig
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly ProjectionConfig _projectionConfig
    return:
      type: EventStore.Projections.Core.Services.ProjectionConfig
    content.vb: Protected ReadOnly _projectionConfig As ProjectionConfig
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._logger
  commentId: F:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._logger
  id: _logger
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: _logger
  nameWithType: CoreProjectionCheckpointManager._logger
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._logger
  type: Field
  source:
    id: _logger
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly ILogger _logger
    return:
      type: EventStore.Common.Log.ILogger
    content.vb: Protected ReadOnly _logger As ILogger
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._publisher
  commentId: F:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._publisher
  id: _publisher
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: _publisher
  nameWithType: CoreProjectionCheckpointManager._publisher
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._publisher
  type: Field
  source:
    id: _publisher
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly IPublisher _publisher
    return:
      type: EventStore.Core.Bus.IPublisher
    content.vb: Protected ReadOnly _publisher As IPublisher
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._currentCheckpoint
  commentId: F:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._currentCheckpoint
  id: _currentCheckpoint
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: _currentCheckpoint
  nameWithType: CoreProjectionCheckpointManager._currentCheckpoint
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._currentCheckpoint
  type: Field
  source:
    id: _currentCheckpoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected ProjectionCheckpoint _currentCheckpoint
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionCheckpoint
    content.vb: Protected _currentCheckpoint As ProjectionCheckpoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._stopping
  commentId: F:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._stopping
  id: _stopping
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: _stopping
  nameWithType: CoreProjectionCheckpointManager._stopping
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._stopping
  type: Field
  source:
    id: _stopping
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 32
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected bool _stopping
    return:
      type: System.Boolean
    content.vb: Protected _stopping As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._stopped
  commentId: F:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._stopped
  id: _stopped
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: _stopped
  nameWithType: CoreProjectionCheckpointManager._stopped
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager._stopped
  type: Field
  source:
    id: _stopped
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected bool _stopped
    return:
      type: System.Boolean
    content.vb: Protected _stopped As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Projections.Core.Services.Processing.PositionTagger,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Projections.Core.Services.Processing.PositionTagger,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder,System.Boolean)
  id: '#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Projections.Core.Services.Processing.PositionTagger,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder,System.Boolean)'
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: CoreProjectionCheckpointManager(IPublisher, Guid, ProjectionConfig, String, PositionTagger, ProjectionNamesBuilder, Boolean)
  nameWithType: CoreProjectionCheckpointManager.CoreProjectionCheckpointManager(IPublisher, Guid, ProjectionConfig, String, PositionTagger, ProjectionNamesBuilder, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CoreProjectionCheckpointManager(EventStore.Core.Bus.IPublisher, Guid, EventStore.Projections.Core.Services.ProjectionConfig, System.String, EventStore.Projections.Core.Services.Processing.PositionTagger, EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 37
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected CoreProjectionCheckpointManager(IPublisher publisher, Guid projectionCorrelationId, ProjectionConfig projectionConfig, string name, PositionTagger positionTagger, ProjectionNamesBuilder namingBuilder, bool usePersistentCheckpoints)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: projectionCorrelationId
      type: Guid
    - id: projectionConfig
      type: EventStore.Projections.Core.Services.ProjectionConfig
    - id: name
      type: System.String
    - id: positionTagger
      type: EventStore.Projections.Core.Services.Processing.PositionTagger
    - id: namingBuilder
      type: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
    - id: usePersistentCheckpoints
      type: System.Boolean
    content.vb: Protected Sub New(publisher As IPublisher, projectionCorrelationId As Guid, projectionConfig As ProjectionConfig, name As String, positionTagger As PositionTagger, namingBuilder As ProjectionNamesBuilder, usePersistentCheckpoints As Boolean)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CreateProjectionCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CreateProjectionCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: CreateProjectionCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: CreateProjectionCheckpoint(CheckpointTag)
  nameWithType: CoreProjectionCheckpointManager.CreateProjectionCheckpoint(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CreateProjectionCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: CreateProjectionCheckpoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 65
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected abstract ProjectionCheckpoint CreateProjectionCheckpoint(CheckpointTag checkpointPosition)
    parameters:
    - id: checkpointPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionCheckpoint
    content.vb: Protected MustOverride Function CreateProjectionCheckpoint(checkpointPosition As CheckpointTag) As ProjectionCheckpoint
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CreateProjectionCheckpoint*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginWriteCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginWriteCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String)
  id: BeginWriteCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: BeginWriteCheckpoint(CheckpointTag, String)
  nameWithType: CoreProjectionCheckpointManager.BeginWriteCheckpoint(CheckpointTag, String)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginWriteCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String)
  type: Method
  source:
    id: BeginWriteCheckpoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 67
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected abstract void BeginWriteCheckpoint(CheckpointTag requestedCheckpointPosition, string requestedCheckpointState)
    parameters:
    - id: requestedCheckpointPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: requestedCheckpointState
      type: System.String
    content.vb: Protected MustOverride Sub BeginWriteCheckpoint(requestedCheckpointPosition As CheckpointTag, requestedCheckpointState As String)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginWriteCheckpoint*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CapturePartitionStateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CapturePartitionStateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  id: CapturePartitionStateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: CapturePartitionStateUpdated(String, PartitionState, PartitionState)
  nameWithType: CoreProjectionCheckpointManager.CapturePartitionStateUpdated(String, PartitionState, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CapturePartitionStateUpdated(System.String, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState)
  type: Method
  source:
    id: CapturePartitionStateUpdated
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 70
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected abstract void CapturePartitionStateUpdated(string partition, PartitionState oldState, PartitionState newState)
    parameters:
    - id: partition
      type: System.String
    - id: oldState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    - id: newState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    content.vb: Protected MustOverride Sub CapturePartitionStateUpdated(partition As String, oldState As PartitionState, newState As PartitionState)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CapturePartitionStateUpdated*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EmitPartitionCheckpoints
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EmitPartitionCheckpoints
  id: EmitPartitionCheckpoints
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: EmitPartitionCheckpoints()
  nameWithType: CoreProjectionCheckpointManager.EmitPartitionCheckpoints()
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EmitPartitionCheckpoints()
  type: Method
  source:
    id: EmitPartitionCheckpoints
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 73
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected abstract void EmitPartitionCheckpoints()
    content.vb: Protected MustOverride Sub EmitPartitionCheckpoints
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EmitPartitionCheckpoints*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  id: RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  nameWithType: CoreProjectionCheckpointManager.RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action)
  type: Method
  source:
    id: RecordEventOrder
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 75
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public abstract void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action committed)
    parameters:
    - id: resolvedEvent
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: orderCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: committed
      type: Action
    content.vb: Public MustOverride Sub RecordEventOrder(resolvedEvent As ResolvedEvent, orderCheckpointTag As CheckpointTag, committed As Action)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RecordEventOrder*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  id: BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>)
  nameWithType: CoreProjectionCheckpointManager.BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action<EventStore.Projections.Core.Services.Processing.PartitionState>)
  type: Method
  source:
    id: BeginLoadPartitionStateAt
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 78
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public abstract void BeginLoadPartitionStateAt(string statePartition, CheckpointTag requestedStateCheckpointTag, Action<PartitionState> loadCompleted)
    parameters:
    - id: statePartition
      type: System.String
    - id: requestedStateCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: loadCompleted
      type: Action{EventStore.Projections.Core.Services.Processing.PartitionState}
    content.vb: Public MustOverride Sub BeginLoadPartitionStateAt(statePartition As String, requestedStateCheckpointTag As CheckpointTag, loadCompleted As Action(Of PartitionState))
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPartitionStateAt*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  nameWithType.vb: CoreProjectionCheckpointManager.BeginLoadPartitionStateAt(String, CheckpointTag, Action(Of PartitionState))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action(Of EventStore.Projections.Core.Services.Processing.PartitionState))
  name.vb: BeginLoadPartitionStateAt(String, CheckpointTag, Action(Of PartitionState))
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PartitionCompleted(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PartitionCompleted(System.String)
  id: PartitionCompleted(System.String)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: PartitionCompleted(String)
  nameWithType: CoreProjectionCheckpointManager.PartitionCompleted(String)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PartitionCompleted(System.String)
  type: Method
  source:
    id: PartitionCompleted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 81
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public abstract void PartitionCompleted(string partition)
    parameters:
    - id: partition
      type: System.String
    content.vb: Public MustOverride Sub PartitionCompleted(partition As String)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PartitionCompleted*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Initialize
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Initialize
  id: Initialize
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: CoreProjectionCheckpointManager.Initialize()
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Initialize()
  type: Method
  source:
    id: Initialize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 83
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public virtual void Initialize()
    content.vb: Public Overridable Sub Initialize
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Initialize*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  id: Start(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: Start(CheckpointTag, PartitionState)
  nameWithType: CoreProjectionCheckpointManager.Start(CheckpointTag, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.PartitionState)
  type: Method
  source:
    id: Start
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 102
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public virtual void Start(CheckpointTag checkpointTag, PartitionState rootPartitionState)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: rootPartitionState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    content.vb: Public Overridable Sub Start(checkpointTag As CheckpointTag, rootPartitionState As PartitionState)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Start*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopping
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopping
  id: Stopping
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: Stopping()
  nameWithType: CoreProjectionCheckpointManager.Stopping()
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopping()
  type: Method
  source:
    id: Stopping
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 119
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Stopping()
    content.vb: Public Sub Stopping
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopping*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopped
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopped
  id: Stopped
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: Stopped()
  nameWithType: CoreProjectionCheckpointManager.Stopped()
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopped()
  type: Method
  source:
    id: Stopped
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 127
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Stopped()
    content.vb: Public Sub Stopped
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopped*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  id: GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: GetStatistics(ProjectionStatistics)
  nameWithType: CoreProjectionCheckpointManager.GetStatistics(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  type: Method
  source:
    id: GetStatistics
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 139
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public virtual void GetStatistics(ProjectionStatistics info)
    parameters:
    - id: info
      type: EventStore.Projections.Core.Services.ProjectionStatistics
    content.vb: Public Overridable Sub GetStatistics(info As ProjectionStatistics)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.GetStatistics*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  id: StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: StateUpdated(String, PartitionState, PartitionState)
  nameWithType: CoreProjectionCheckpointManager.StateUpdated(String, PartitionState, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.StateUpdated(System.String, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState)
  type: Method
  source:
    id: StateUpdated
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 160
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void StateUpdated(string partition, PartitionState oldState, PartitionState newState)
    parameters:
    - id: partition
      type: System.String
    - id: oldState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    - id: newState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    content.vb: Public Sub StateUpdated(partition As String, oldState As PartitionState, newState As PartitionState)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.StateUpdated*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  id: EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: EventProcessed(CheckpointTag, Single)
  nameWithType: CoreProjectionCheckpointManager.EventProcessed(CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  type: Method
  source:
    id: EventProcessed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 179
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void EventProcessed(CheckpointTag checkpointTag, float progress)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: progress
      type: System.Single
    content.vb: Public Sub EventProcessed(checkpointTag As CheckpointTag, progress As Single)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventProcessed*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  id: EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: EventsEmitted(EmittedEventEnvelope[], Guid, String)
  nameWithType: CoreProjectionCheckpointManager.EventsEmitted(EmittedEventEnvelope[], Guid, String)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], Guid, System.String)
  type: Method
  source:
    id: EventsEmitted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 191
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void EventsEmitted(EmittedEventEnvelope[] scheduledWrites, Guid causedBy, string correlationId)
    parameters:
    - id: scheduledWrites
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    - id: causedBy
      type: Guid
    - id: correlationId
      type: System.String
    content.vb: Public Sub EventsEmitted(scheduledWrites As EmittedEventEnvelope(), causedBy As Guid, correlationId As String)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventsEmitted*
  implements:
  - EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  nameWithType.vb: CoreProjectionCheckpointManager.EventsEmitted(EmittedEventEnvelope(), Guid, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), Guid, System.String)
  name.vb: EventsEmitted(EmittedEventEnvelope(), Guid, String)
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  id: CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: CheckpointSuggested(CheckpointTag, Single)
  nameWithType: CoreProjectionCheckpointManager.CheckpointSuggested(CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  type: Method
  source:
    id: CheckpointSuggested
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 213
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool CheckpointSuggested(CheckpointTag checkpointTag, float progress)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: progress
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function CheckpointSuggested(checkpointTag As CheckpointTag, progress As Single) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointSuggested*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Progress(System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Progress(System.Single)
  id: Progress(System.Single)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: Progress(Single)
  nameWithType: CoreProjectionCheckpointManager.Progress(Single)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Progress(System.Single)
  type: Method
  source:
    id: Progress
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 225
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Progress(float progress)
    parameters:
    - id: progress
      type: System.Single
    content.vb: Public Sub Progress(progress As Single)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Progress*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.LastProcessedEventPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.LastProcessedEventPosition
  id: LastProcessedEventPosition
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: LastProcessedEventPosition
  nameWithType: CoreProjectionCheckpointManager.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.LastProcessedEventPosition
  type: Property
  source:
    id: LastProcessedEventPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 231
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag LastProcessedEventPosition { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property LastProcessedEventPosition As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.LastProcessedEventPosition*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.LastProcessedEventPosition
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  id: Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  nameWithType: CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 236
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint message)
    parameters:
    - id: message
      type: CoreProjectionProcessingMessage.ReadyForCheckpoint
    content.vb: Public Sub Handle(message As CoreProjectionProcessingMessage.ReadyForCheckpoint)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.RestartRequested)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.RestartRequested)
  id: Handle(CoreProjectionProcessingMessage.RestartRequested)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionProcessingMessage.RestartRequested)
  nameWithType: CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.RestartRequested)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.RestartRequested)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 251
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(CoreProjectionProcessingMessage.RestartRequested message)
    parameters:
    - id: message
      type: CoreProjectionProcessingMessage.RestartRequested
    content.vb: Public Sub Handle(message As CoreProjectionProcessingMessage.RestartRequested)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}.Handle(CoreProjectionProcessingMessage.RestartRequested)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.Failed)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.Failed)
  id: Handle(CoreProjectionProcessingMessage.Failed)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionProcessingMessage.Failed)
  nameWithType: CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.Failed)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.Failed)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 257
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(CoreProjectionProcessingMessage.Failed message)
    parameters:
    - id: message
      type: CoreProjectionProcessingMessage.Failed
    content.vb: Public Sub Handle(message As CoreProjectionProcessingMessage.Failed)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}.Handle(CoreProjectionProcessingMessage.Failed)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PrerecordedEventsLoaded(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PrerecordedEventsLoaded(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: PrerecordedEventsLoaded(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: PrerecordedEventsLoaded(CheckpointTag)
  nameWithType: CoreProjectionCheckpointManager.PrerecordedEventsLoaded(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PrerecordedEventsLoaded(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: PrerecordedEventsLoaded
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 263
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void PrerecordedEventsLoaded(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Protected Sub PrerecordedEventsLoaded(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PrerecordedEventsLoaded*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EnsureStarted
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EnsureStarted
  id: EnsureStarted
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: EnsureStarted()
  nameWithType: CoreProjectionCheckpointManager.EnsureStarted()
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EnsureStarted()
  type: Method
  source:
    id: EnsureStarted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 288
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void EnsureStarted()
    content.vb: Protected Sub EnsureStarted
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EnsureStarted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.SendPrerecordedEvent(EventStore.Core.Data.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.SendPrerecordedEvent(EventStore.Core.Data.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Int64)
  id: SendPrerecordedEvent(EventStore.Core.Data.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Int64)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: SendPrerecordedEvent(ResolvedEvent, CheckpointTag, Int64)
  nameWithType: CoreProjectionCheckpointManager.SendPrerecordedEvent(ResolvedEvent, CheckpointTag, Int64)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.SendPrerecordedEvent(EventStore.Core.Data.ResolvedEvent, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Int64)
  type: Method
  source:
    id: SendPrerecordedEvent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 325
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void SendPrerecordedEvent(ResolvedEvent pair, CheckpointTag positionTag, long prerecordedEventMessageSequenceNumber)
    parameters:
    - id: pair
      type: EventStore.Core.Data.ResolvedEvent
    - id: positionTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: prerecordedEventMessageSequenceNumber
      type: System.Int64
    content.vb: Protected Sub SendPrerecordedEvent(pair As ResolvedEvent, positionTag As CheckpointTag, prerecordedEventMessageSequenceNumber As Long)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.SendPrerecordedEvent*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RequestRestart(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RequestRestart(System.String)
  id: RequestRestart(System.String)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: RequestRestart(String)
  nameWithType: CoreProjectionCheckpointManager.RequestRestart(String)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RequestRestart(System.String)
  type: Method
  source:
    id: RequestRestart
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 337
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void RequestRestart(string reason)
    parameters:
    - id: reason
      type: System.String
    content.vb: Protected Sub RequestRestart(reason As String)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RequestRestart*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointWritten(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointWritten(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: CheckpointWritten(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: CheckpointWritten(CheckpointTag)
  nameWithType: CoreProjectionCheckpointManager.CheckpointWritten(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointWritten(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: CheckpointWritten
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 347
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void CheckpointWritten(CheckpointTag lastCompletedCheckpointPosition)
    parameters:
    - id: lastCompletedCheckpointPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Protected Sub CheckpointWritten(lastCompletedCheckpointPosition As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointWritten*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager
  langs:
  - csharp
  - vb
  name: BeginLoadPrerecordedEvents(CheckpointTag)
  nameWithType: CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: BeginLoadPrerecordedEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/CoreProjectionCheckpointManager.cs
    startLine: 363
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public virtual void BeginLoadPrerecordedEvents(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Overridable Sub BeginLoadPrerecordedEvents(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Messages.IProjectionCheckpointManager
  commentId: T:EventStore.Projections.Core.Messages.IProjectionCheckpointManager
  parent: EventStore.Projections.Core.Messages
  name: IProjectionCheckpointManager
  nameWithType: IProjectionCheckpointManager
  fullName: EventStore.Projections.Core.Messages.IProjectionCheckpointManager
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>
  nameWithType: IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.ReadyForCheckpoint
    name: CoreProjectionProcessingMessage.ReadyForCheckpoint
    nameWithType: CoreProjectionProcessingMessage.ReadyForCheckpoint
    fullName: CoreProjectionProcessingMessage.ReadyForCheckpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.ReadyForCheckpoint
    name: CoreProjectionProcessingMessage.ReadyForCheckpoint
    nameWithType: CoreProjectionProcessingMessage.ReadyForCheckpoint
    fullName: CoreProjectionProcessingMessage.ReadyForCheckpoint
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.RestartRequested>
  nameWithType: IHandle<CoreProjectionProcessingMessage.RestartRequested>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.RestartRequested>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.RestartRequested)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.RestartRequested)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.RestartRequested)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.RestartRequested
    name: CoreProjectionProcessingMessage.RestartRequested
    nameWithType: CoreProjectionProcessingMessage.RestartRequested
    fullName: CoreProjectionProcessingMessage.RestartRequested
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.RestartRequested
    name: CoreProjectionProcessingMessage.RestartRequested
    nameWithType: CoreProjectionProcessingMessage.RestartRequested
    fullName: CoreProjectionProcessingMessage.RestartRequested
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.Failed>
  nameWithType: IHandle<CoreProjectionProcessingMessage.Failed>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.Failed>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.Failed)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.Failed)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.Failed)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.Failed
    name: CoreProjectionProcessingMessage.Failed
    nameWithType: CoreProjectionProcessingMessage.Failed
    fullName: CoreProjectionProcessingMessage.Failed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.Failed
    name: CoreProjectionProcessingMessage.Failed
    nameWithType: CoreProjectionProcessingMessage.Failed
    fullName: CoreProjectionProcessingMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  commentId: T:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  parent: EventStore.Projections.Core.Services.Processing
  name: ICoreProjectionCheckpointManager
  nameWithType: ICoreProjectionCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
- uid: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
  commentId: T:EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
  parent: EventStore.Projections.Core.Services.Processing
  name: IEmittedEventWriter
  nameWithType: IEmittedEventWriter
  fullName: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionNamesBuilder
  nameWithType: ProjectionNamesBuilder
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
- uid: EventStore.Projections.Core.Services.ProjectionConfig
  commentId: T:EventStore.Projections.Core.Services.ProjectionConfig
  parent: EventStore.Projections.Core.Services
  name: ProjectionConfig
  nameWithType: ProjectionConfig
  fullName: EventStore.Projections.Core.Services.ProjectionConfig
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Common.Log.ILogger
  commentId: T:EventStore.Common.Log.ILogger
  parent: EventStore.Common.Log
  name: ILogger
  nameWithType: ILogger
  fullName: EventStore.Common.Log.ILogger
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Projections.Core.Services.Processing.ProjectionCheckpoint
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionCheckpoint
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionCheckpoint
  nameWithType: ProjectionCheckpoint
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionCheckpoint
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.#ctor
  name: CoreProjectionCheckpointManager
  nameWithType: CoreProjectionCheckpointManager.CoreProjectionCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CoreProjectionCheckpointManager
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.PositionTagger
  commentId: T:EventStore.Projections.Core.Services.Processing.PositionTagger
  parent: EventStore.Projections.Core.Services.Processing
  name: PositionTagger
  nameWithType: PositionTagger
  fullName: EventStore.Projections.Core.Services.Processing.PositionTagger
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CreateProjectionCheckpoint*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CreateProjectionCheckpoint
  name: CreateProjectionCheckpoint
  nameWithType: CoreProjectionCheckpointManager.CreateProjectionCheckpoint
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CreateProjectionCheckpoint
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginWriteCheckpoint*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginWriteCheckpoint
  name: BeginWriteCheckpoint
  nameWithType: CoreProjectionCheckpointManager.BeginWriteCheckpoint
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginWriteCheckpoint
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CapturePartitionStateUpdated*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CapturePartitionStateUpdated
  name: CapturePartitionStateUpdated
  nameWithType: CoreProjectionCheckpointManager.CapturePartitionStateUpdated
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CapturePartitionStateUpdated
- uid: EventStore.Projections.Core.Services.Processing.PartitionState
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionState
  parent: EventStore.Projections.Core.Services.Processing
  name: PartitionState
  nameWithType: PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EmitPartitionCheckpoints*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EmitPartitionCheckpoints
  name: EmitPartitionCheckpoints
  nameWithType: CoreProjectionCheckpointManager.EmitPartitionCheckpoints
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EmitPartitionCheckpoints
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RecordEventOrder*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RecordEventOrder
  name: RecordEventOrder
  nameWithType: CoreProjectionCheckpointManager.RecordEventOrder
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RecordEventOrder
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  nameWithType: ICoreProjectionCheckpointManager.RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
    name: RecordEventOrder
    nameWithType: ICoreProjectionCheckpointManager.RecordEventOrder
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
    name: RecordEventOrder
    nameWithType: ICoreProjectionCheckpointManager.RecordEventOrder
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPartitionStateAt*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPartitionStateAt
  name: BeginLoadPartitionStateAt
  nameWithType: CoreProjectionCheckpointManager.BeginLoadPartitionStateAt
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPartitionStateAt
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>)
  nameWithType: ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action<EventStore.Projections.Core.Services.Processing.PartitionState>)
  nameWithType.vb: ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(String, CheckpointTag, Action(Of PartitionState))
  fullName.vb: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action(Of EventStore.Projections.Core.Services.Processing.PartitionState))
  name.vb: BeginLoadPartitionStateAt(String, CheckpointTag, Action(Of PartitionState))
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
    name: BeginLoadPartitionStateAt
    nameWithType: ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
    name: BeginLoadPartitionStateAt
    nameWithType: ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{EventStore.Projections.Core.Services.Processing.PartitionState}
  commentId: '!:Action{EventStore.Projections.Core.Services.Processing.PartitionState}'
  definition: Action`1
  name: Action<PartitionState>
  nameWithType: Action<PartitionState>
  fullName: Action<EventStore.Projections.Core.Services.Processing.PartitionState>
  nameWithType.vb: Action(Of PartitionState)
  fullName.vb: Action(Of EventStore.Projections.Core.Services.Processing.PartitionState)
  name.vb: Action(Of PartitionState)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PartitionCompleted*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PartitionCompleted
  name: PartitionCompleted
  nameWithType: CoreProjectionCheckpointManager.PartitionCompleted
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PartitionCompleted
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: PartitionCompleted(String)
  nameWithType: ICoreProjectionCheckpointManager.PartitionCompleted(String)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
    name: PartitionCompleted
    nameWithType: ICoreProjectionCheckpointManager.PartitionCompleted
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
    name: PartitionCompleted
    nameWithType: ICoreProjectionCheckpointManager.PartitionCompleted
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Initialize*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Initialize
  name: Initialize
  nameWithType: CoreProjectionCheckpointManager.Initialize
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Initialize
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  name: Initialize()
  nameWithType: ICoreProjectionCheckpointManager.Initialize()
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
    name: Initialize
    nameWithType: ICoreProjectionCheckpointManager.Initialize
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
    name: Initialize
    nameWithType: ICoreProjectionCheckpointManager.Initialize
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Start*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Start
  name: Start
  nameWithType: CoreProjectionCheckpointManager.Start
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Start
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  name: Start(CheckpointTag, PartitionState)
  nameWithType: ICoreProjectionCheckpointManager.Start(CheckpointTag, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.PartitionState)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
    name: Start
    nameWithType: ICoreProjectionCheckpointManager.Start
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
    name: Start
    nameWithType: ICoreProjectionCheckpointManager.Start
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopping*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopping
  name: Stopping
  nameWithType: CoreProjectionCheckpointManager.Stopping
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopping
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  name: Stopping()
  nameWithType: ICoreProjectionCheckpointManager.Stopping()
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
    name: Stopping
    nameWithType: ICoreProjectionCheckpointManager.Stopping
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
    name: Stopping
    nameWithType: ICoreProjectionCheckpointManager.Stopping
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopped*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopped
  name: Stopped
  nameWithType: CoreProjectionCheckpointManager.Stopped
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Stopped
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  name: Stopped()
  nameWithType: ICoreProjectionCheckpointManager.Stopped()
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
    name: Stopped
    nameWithType: ICoreProjectionCheckpointManager.Stopped
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
    name: Stopped
    nameWithType: ICoreProjectionCheckpointManager.Stopped
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.GetStatistics*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.GetStatistics
  name: GetStatistics
  nameWithType: CoreProjectionCheckpointManager.GetStatistics
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.GetStatistics
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  name: GetStatistics(ProjectionStatistics)
  nameWithType: ICoreProjectionCheckpointManager.GetStatistics(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
    name: GetStatistics
    nameWithType: ICoreProjectionCheckpointManager.GetStatistics
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.ProjectionStatistics
    name: ProjectionStatistics
    nameWithType: ProjectionStatistics
    fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
    name: GetStatistics
    nameWithType: ICoreProjectionCheckpointManager.GetStatistics
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.ProjectionStatistics
    name: ProjectionStatistics
    nameWithType: ProjectionStatistics
    fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.ProjectionStatistics
  commentId: T:EventStore.Projections.Core.Services.ProjectionStatistics
  parent: EventStore.Projections.Core.Services
  name: ProjectionStatistics
  nameWithType: ProjectionStatistics
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.StateUpdated*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.StateUpdated
  name: StateUpdated
  nameWithType: CoreProjectionCheckpointManager.StateUpdated
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.StateUpdated
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: StateUpdated(String, PartitionState, PartitionState)
  nameWithType: ICoreProjectionCheckpointManager.StateUpdated(String, PartitionState, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
    name: StateUpdated
    nameWithType: ICoreProjectionCheckpointManager.StateUpdated
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
    name: StateUpdated
    nameWithType: ICoreProjectionCheckpointManager.StateUpdated
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventProcessed*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventProcessed
  name: EventProcessed
  nameWithType: CoreProjectionCheckpointManager.EventProcessed
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventProcessed
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: EventProcessed(CheckpointTag, Single)
  nameWithType: ICoreProjectionCheckpointManager.EventProcessed(CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
    name: EventProcessed
    nameWithType: ICoreProjectionCheckpointManager.EventProcessed
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
    name: EventProcessed
    nameWithType: ICoreProjectionCheckpointManager.EventProcessed
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventsEmitted*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventsEmitted
  name: EventsEmitted
  nameWithType: CoreProjectionCheckpointManager.EventsEmitted
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EventsEmitted
- uid: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  parent: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
  isExternal: true
  name: EventsEmitted(EmittedEventEnvelope[], Guid, String)
  nameWithType: IEmittedEventWriter.EventsEmitted(EmittedEventEnvelope[], Guid, String)
  fullName: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], Guid, System.String)
  nameWithType.vb: IEmittedEventWriter.EventsEmitted(EmittedEventEnvelope(), Guid, String)
  fullName.vb: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), Guid, System.String)
  name.vb: EventsEmitted(EmittedEventEnvelope(), Guid, String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
    name: EventsEmitted
    nameWithType: IEmittedEventWriter.EventsEmitted
    fullName: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.EventsEmitted
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
    name: EventsEmitted
    nameWithType: IEmittedEventWriter.EventsEmitted
    fullName: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.EventsEmitted
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  isExternal: true
  name: EmittedEventEnvelope[]
  nameWithType: EmittedEventEnvelope[]
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  nameWithType.vb: EmittedEventEnvelope()
  fullName.vb: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope()
  name.vb: EmittedEventEnvelope()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointSuggested*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointSuggested
  name: CheckpointSuggested
  nameWithType: CoreProjectionCheckpointManager.CheckpointSuggested
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointSuggested
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: CheckpointSuggested(CheckpointTag, Single)
  nameWithType: ICoreProjectionCheckpointManager.CheckpointSuggested(CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
    name: CheckpointSuggested
    nameWithType: ICoreProjectionCheckpointManager.CheckpointSuggested
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
    name: CheckpointSuggested
    nameWithType: ICoreProjectionCheckpointManager.CheckpointSuggested
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Progress*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Progress
  name: Progress
  nameWithType: CoreProjectionCheckpointManager.Progress
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Progress
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: Progress(Single)
  nameWithType: ICoreProjectionCheckpointManager.Progress(Single)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
    name: Progress
    nameWithType: ICoreProjectionCheckpointManager.Progress
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
    name: Progress
    nameWithType: ICoreProjectionCheckpointManager.Progress
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.LastProcessedEventPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.LastProcessedEventPosition
  name: LastProcessedEventPosition
  nameWithType: CoreProjectionCheckpointManager.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.LastProcessedEventPosition
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.LastProcessedEventPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.LastProcessedEventPosition
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  name: LastProcessedEventPosition
  nameWithType: ICoreProjectionCheckpointManager.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.LastProcessedEventPosition
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle
  name: Handle
  nameWithType: CoreProjectionCheckpointManager.Handle
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.Handle
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.ReadyForCheckpoint}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  nameWithType: IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint).Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint).Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.ReadyForCheckpoint
    name: CoreProjectionProcessingMessage.ReadyForCheckpoint
    nameWithType: CoreProjectionProcessingMessage.ReadyForCheckpoint
    fullName: CoreProjectionProcessingMessage.ReadyForCheckpoint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.ReadyForCheckpoint).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.ReadyForCheckpoint
    name: CoreProjectionProcessingMessage.ReadyForCheckpoint
    nameWithType: CoreProjectionProcessingMessage.ReadyForCheckpoint
    fullName: CoreProjectionProcessingMessage.ReadyForCheckpoint
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreProjectionProcessingMessage.ReadyForCheckpoint
  commentId: T:CoreProjectionProcessingMessage.ReadyForCheckpoint
  name: CoreProjectionProcessingMessage.ReadyForCheckpoint
  nameWithType: CoreProjectionProcessingMessage.ReadyForCheckpoint
  fullName: CoreProjectionProcessingMessage.ReadyForCheckpoint
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}.Handle(CoreProjectionProcessingMessage.RestartRequested)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}.Handle(CoreProjectionProcessingMessage.RestartRequested)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.RestartRequested}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.RestartRequested)
  nameWithType: IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle(CoreProjectionProcessingMessage.RestartRequested)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle(CoreProjectionProcessingMessage.RestartRequested)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.RestartRequested).Handle(CoreProjectionProcessingMessage.RestartRequested)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.RestartRequested).Handle(CoreProjectionProcessingMessage.RestartRequested)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.RestartRequested
    name: CoreProjectionProcessingMessage.RestartRequested
    nameWithType: CoreProjectionProcessingMessage.RestartRequested
    fullName: CoreProjectionProcessingMessage.RestartRequested
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.RestartRequested).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.RestartRequested).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.RestartRequested
    name: CoreProjectionProcessingMessage.RestartRequested
    nameWithType: CoreProjectionProcessingMessage.RestartRequested
    fullName: CoreProjectionProcessingMessage.RestartRequested
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreProjectionProcessingMessage.RestartRequested
  commentId: T:CoreProjectionProcessingMessage.RestartRequested
  name: CoreProjectionProcessingMessage.RestartRequested
  nameWithType: CoreProjectionProcessingMessage.RestartRequested
  fullName: CoreProjectionProcessingMessage.RestartRequested
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}.Handle(CoreProjectionProcessingMessage.Failed)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}.Handle(CoreProjectionProcessingMessage.Failed)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.Failed}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.Failed)
  nameWithType: IHandle<CoreProjectionProcessingMessage.Failed>.Handle(CoreProjectionProcessingMessage.Failed)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.Failed>.Handle(CoreProjectionProcessingMessage.Failed)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.Failed).Handle(CoreProjectionProcessingMessage.Failed)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.Failed).Handle(CoreProjectionProcessingMessage.Failed)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.Failed>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.Failed>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.Failed
    name: CoreProjectionProcessingMessage.Failed
    nameWithType: CoreProjectionProcessingMessage.Failed
    fullName: CoreProjectionProcessingMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.Failed).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.Failed).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.Failed
    name: CoreProjectionProcessingMessage.Failed
    nameWithType: CoreProjectionProcessingMessage.Failed
    fullName: CoreProjectionProcessingMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreProjectionProcessingMessage.Failed
  commentId: T:CoreProjectionProcessingMessage.Failed
  name: CoreProjectionProcessingMessage.Failed
  nameWithType: CoreProjectionProcessingMessage.Failed
  fullName: CoreProjectionProcessingMessage.Failed
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PrerecordedEventsLoaded*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PrerecordedEventsLoaded
  name: PrerecordedEventsLoaded
  nameWithType: CoreProjectionCheckpointManager.PrerecordedEventsLoaded
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.PrerecordedEventsLoaded
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EnsureStarted*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EnsureStarted
  name: EnsureStarted
  nameWithType: CoreProjectionCheckpointManager.EnsureStarted
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.EnsureStarted
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.SendPrerecordedEvent*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.SendPrerecordedEvent
  name: SendPrerecordedEvent
  nameWithType: CoreProjectionCheckpointManager.SendPrerecordedEvent
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.SendPrerecordedEvent
- uid: EventStore.Core.Data.ResolvedEvent
  commentId: T:EventStore.Core.Data.ResolvedEvent
  parent: EventStore.Core.Data
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Core.Data.ResolvedEvent
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RequestRestart*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RequestRestart
  name: RequestRestart
  nameWithType: CoreProjectionCheckpointManager.RequestRestart
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.RequestRestart
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointWritten*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointWritten
  name: CheckpointWritten
  nameWithType: CoreProjectionCheckpointManager.CheckpointWritten
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.CheckpointWritten
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
  name: BeginLoadPrerecordedEvents
  nameWithType: CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  name: BeginLoadPrerecordedEvents(CheckpointTag)
  nameWithType: ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: BeginLoadPrerecordedEvents
    nameWithType: ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: BeginLoadPrerecordedEvents
    nameWithType: ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )

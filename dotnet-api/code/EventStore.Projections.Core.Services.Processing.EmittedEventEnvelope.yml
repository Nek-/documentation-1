### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  commentId: T:EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  id: EmittedEventEnvelope
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.#ctor(EventStore.Projections.Core.Services.Processing.EmittedEvent,EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata)
  - EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.Event
  - EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.StreamMetadata
  langs:
  - csharp
  - vb
  name: EmittedEventEnvelope
  nameWithType: EmittedEventEnvelope
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EmittedEventEnvelope.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: EmittedEventEnvelope
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EmittedEventEnvelope.cs
    startLine: 1
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public sealed class EmittedEventEnvelope : object'
    content.vb: >-
      Public NotInheritable Class EmittedEventEnvelope

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.Event
  commentId: F:EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.Event
  id: Event
  parent: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: EmittedEventEnvelope.Event
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.Event
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EmittedEventEnvelope.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Event
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EmittedEventEnvelope.cs
    startLine: 2
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly EmittedEvent Event
    return:
      type: EventStore.Projections.Core.Services.Processing.EmittedEvent
    content.vb: Public ReadOnly Event As EmittedEvent
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.StreamMetadata
  commentId: F:EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.StreamMetadata
  id: StreamMetadata
  parent: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  langs:
  - csharp
  - vb
  name: StreamMetadata
  nameWithType: EmittedEventEnvelope.StreamMetadata
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.StreamMetadata
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EmittedEventEnvelope.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: StreamMetadata
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EmittedEventEnvelope.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly EmittedStream.WriterConfiguration.StreamMetadata StreamMetadata
    return:
      type: EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata
    content.vb: Public ReadOnly StreamMetadata As EmittedStream.WriterConfiguration.StreamMetadata
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.#ctor(EventStore.Projections.Core.Services.Processing.EmittedEvent,EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata)
  commentId: M:EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.#ctor(EventStore.Projections.Core.Services.Processing.EmittedEvent,EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata)
  id: '#ctor(EventStore.Projections.Core.Services.Processing.EmittedEvent,EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata)'
  parent: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  langs:
  - csharp
  - vb
  name: EmittedEventEnvelope(EmittedEvent, EmittedStream.WriterConfiguration.StreamMetadata)
  nameWithType: EmittedEventEnvelope.EmittedEventEnvelope(EmittedEvent, EmittedStream.WriterConfiguration.StreamMetadata)
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.EmittedEventEnvelope(EventStore.Projections.Core.Services.Processing.EmittedEvent, EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EmittedEventEnvelope.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EmittedEventEnvelope.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public EmittedEventEnvelope(EmittedEvent event, EmittedStream.WriterConfiguration.StreamMetadata streamMetadata = null)
    parameters:
    - id: event
      type: EventStore.Projections.Core.Services.Processing.EmittedEvent
    - id: streamMetadata
      type: EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata
    content.vb: Public Sub New(event As EmittedEvent, streamMetadata As EmittedStream.WriterConfiguration.StreamMetadata = Nothing)
  overload: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Projections.Core.Services.Processing.EmittedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.EmittedEvent
  parent: EventStore.Projections.Core.Services.Processing
  name: EmittedEvent
  nameWithType: EmittedEvent
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEvent
- uid: EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata
  commentId: T:EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata
  parent: EventStore.Projections.Core.Services.Processing
  name: EmittedStream.WriterConfiguration.StreamMetadata
  nameWithType: EmittedStream.WriterConfiguration.StreamMetadata
  fullName: EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.#ctor
  name: EmittedEventEnvelope
  nameWithType: EmittedEventEnvelope.EmittedEventEnvelope
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.EmittedEventEnvelope

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.EventFilter
  commentId: T:EventStore.Projections.Core.Services.Processing.EventFilter
  id: EventFilter
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.EventFilter.#ctor(System.Boolean,System.Boolean,HashSet{System.String})
  - EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses(System.String)
  - EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory(System.String)
  - EventStore.Projections.Core.Services.Processing.EventFilter.Passes(System.Boolean,System.String,System.String,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification(System.String)
  - EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource(System.Boolean,System.String,System.String)
  langs:
  - csharp
  - vb
  name: EventFilter
  nameWithType: EventFilter
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventFilter
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public abstract class EventFilter : object'
    content.vb: >-
      Public MustInherit Class EventFilter
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Projections.Core.Services.Processing.BypassingEventFilter
  - EventStore.Projections.Core.Services.Processing.CategoryEventFilter
  - EventStore.Projections.Core.Services.Processing.EventByTypeIndexEventFilter
  - EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter
  - EventStore.Projections.Core.Services.Processing.StreamEventFilter
  - EventStore.Projections.Core.Services.Processing.TransactionFileEventFilter
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.EventFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.EventFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.#ctor(System.Boolean,System.Boolean,HashSet{System.String})
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.#ctor(System.Boolean,System.Boolean,HashSet{System.String})
  id: '#ctor(System.Boolean,System.Boolean,HashSet{System.String})'
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  langs:
  - csharp
  - vb
  name: EventFilter(Boolean, Boolean, HashSet<String>)
  nameWithType: EventFilter.EventFilter(Boolean, Boolean, HashSet<String>)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.EventFilter(System.Boolean, System.Boolean, HashSet<System.String>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  summary: "\n\n"
  example: []
  syntax:
    content: protected EventFilter(bool allEvents, bool includeDeletedStreamEvents, HashSet<string> events)
    parameters:
    - id: allEvents
      type: System.Boolean
      description: ''
    - id: includeDeletedStreamEvents
      type: System.Boolean
      description: "indicates whether non-link stream tombstone or \nmetastream stream deleted events should be included. Links resolved into metastream \nstream deleted events are not restricted"
    - id: events
      type: HashSet{System.String}
      description: ''
    content.vb: Protected Sub New(allEvents As Boolean, includeDeletedStreamEvents As Boolean, events As HashSet(Of String))
  overload: EventStore.Projections.Core.Services.Processing.EventFilter.#ctor*
  nameWithType.vb: EventFilter.EventFilter(Boolean, Boolean, HashSet(Of String))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Projections.Core.Services.Processing.EventFilter.EventFilter(System.Boolean, System.Boolean, HashSet(Of System.String))
  name.vb: EventFilter(Boolean, Boolean, HashSet(Of String))
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.Passes(System.Boolean,System.String,System.String,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.Passes(System.Boolean,System.String,System.String,System.Boolean)
  id: Passes(System.Boolean,System.String,System.String,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  langs:
  - csharp
  - vb
  name: Passes(Boolean, String, String, Boolean)
  nameWithType: EventFilter.Passes(Boolean, String, String, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.Passes(System.Boolean, System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Passes
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
    startLine: 25
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool Passes(bool resolvedFromLinkTo, string eventStreamId, string eventName, bool isStreamDeletedEvent = false)
    parameters:
    - id: resolvedFromLinkTo
      type: System.Boolean
    - id: eventStreamId
      type: System.String
    - id: eventName
      type: System.String
    - id: isStreamDeletedEvent
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function Passes(resolvedFromLinkTo As Boolean, eventStreamId As String, eventName As String, isStreamDeletedEvent As Boolean = False) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.EventFilter.Passes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses(System.String)
  id: DeletedNotificationPasses(System.String)
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  langs:
  - csharp
  - vb
  name: DeletedNotificationPasses(String)
  nameWithType: EventFilter.DeletedNotificationPasses(String)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DeletedNotificationPasses
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected abstract bool DeletedNotificationPasses(string positionStreamId)
    parameters:
    - id: positionStreamId
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected MustOverride Function DeletedNotificationPasses(positionStreamId As String) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource(System.Boolean,System.String,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource(System.Boolean,System.String,System.String)
  id: PassesSource(System.Boolean,System.String,System.String)
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  langs:
  - csharp
  - vb
  name: PassesSource(Boolean, String, String)
  nameWithType: EventFilter.PassesSource(Boolean, String, String)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PassesSource
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
    startLine: 34
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public abstract bool PassesSource(bool resolvedFromLinkTo, string positionStreamId, string eventType)
    parameters:
    - id: resolvedFromLinkTo
      type: System.Boolean
    - id: positionStreamId
      type: System.String
    - id: eventType
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function PassesSource(resolvedFromLinkTo As Boolean, positionStreamId As String, eventType As String) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory(System.String)
  id: GetCategory(System.String)
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  langs:
  - csharp
  - vb
  name: GetCategory(String)
  nameWithType: EventFilter.GetCategory(String)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetCategory
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
    startLine: 35
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public abstract string GetCategory(string positionStreamId)
    parameters:
    - id: positionStreamId
      type: System.String
    return:
      type: System.String
    content.vb: Public MustOverride Function GetCategory(positionStreamId As String) As String
  overload: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification(System.String)
  id: PassesDeleteNotification(System.String)
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  langs:
  - csharp
  - vb
  name: PassesDeleteNotification(String)
  nameWithType: EventFilter.PassesDeleteNotification(String)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PassesDeleteNotification
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventFilter.cs
    startLine: 37
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool PassesDeleteNotification(string positionStreamId)
    parameters:
    - id: positionStreamId
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function PassesDeleteNotification(positionStreamId As String) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<EventFilter>()
  nameWithType: ProtobufExtensions.Serialize<EventFilter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.EventFilter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of EventFilter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.EventFilter)()
  name.vb: Serialize(Of EventFilter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<EventFilter>
    nameWithType: ProtobufExtensions.Serialize<EventFilter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.EventFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of EventFilter)
    nameWithType: ProtobufExtensions.Serialize(Of EventFilter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.EventFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<EventFilter>()
  nameWithType: ProtobufExtensions.SerializeToArray<EventFilter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.EventFilter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of EventFilter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.EventFilter)()
  name.vb: SerializeToArray(Of EventFilter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<EventFilter>
    nameWithType: ProtobufExtensions.SerializeToArray<EventFilter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.EventFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of EventFilter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of EventFilter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.EventFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventFilter.#ctor
  name: EventFilter
  nameWithType: EventFilter.EventFilter
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.EventFilter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: HashSet{System.String}
  commentId: '!:HashSet{System.String}'
  definition: HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: HashSet`1
  isExternal: true
  name: HashSet<>
  nameWithType: HashSet<>
  fullName: HashSet<>
  nameWithType.vb: HashSet(Of )
  fullName.vb: HashSet(Of )
  name.vb: HashSet(Of )
  spec.csharp:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.Passes*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventFilter.Passes
  name: Passes
  nameWithType: EventFilter.Passes
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.Passes
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses
  name: DeletedNotificationPasses
  nameWithType: EventFilter.DeletedNotificationPasses
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource
  name: PassesSource
  nameWithType: EventFilter.PassesSource
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory
  name: GetCategory
  nameWithType: EventFilter.GetCategory
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification
  name: PassesDeleteNotification
  nameWithType: EventFilter.PassesDeleteNotification
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification

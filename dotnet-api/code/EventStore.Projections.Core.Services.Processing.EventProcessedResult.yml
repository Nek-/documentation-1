### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  commentId: T:EventStore.Projections.Core.Services.Processing.EventProcessedResult
  id: EventProcessedResult
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.#ctor(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],System.Guid,System.String,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.CausedBy
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.CheckpointTag
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.CorrelationId
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.EmittedEvents
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.IsPartitionTombstone
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewSharedState
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewState
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldSharedState
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldState
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.Partition
  langs:
  - csharp
  - vb
  name: EventProcessedResult
  nameWithType: EventProcessedResult
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  type: Class
  source:
    id: EventProcessedResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public class EventProcessedResult
    content.vb: Public Class EventProcessedResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.EventProcessedResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.#ctor(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],System.Guid,System.String,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventProcessedResult.#ctor(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],System.Guid,System.String,System.Boolean)
  id: '#ctor(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],System.Guid,System.String,System.Boolean)'
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: EventProcessedResult(String, CheckpointTag, PartitionState, PartitionState, PartitionState, PartitionState, EmittedEventEnvelope[], Guid, String, Boolean)
  nameWithType: EventProcessedResult.EventProcessedResult(String, CheckpointTag, PartitionState, PartitionState, PartitionState, PartitionState, EmittedEventEnvelope[], Guid, String, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.EventProcessedResult(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], System.Guid, System.String, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 15
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public EventProcessedResult(string partition, CheckpointTag checkpointTag, PartitionState oldState, PartitionState newState, PartitionState oldSharedState, PartitionState newSharedState, EmittedEventEnvelope[] emittedEvents, Guid causedBy, string correlationId, bool isPartitionTombstone = false)
    parameters:
    - id: partition
      type: System.String
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: oldState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    - id: newState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    - id: oldSharedState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    - id: newSharedState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    - id: causedBy
      type: System.Guid
    - id: correlationId
      type: System.String
    - id: isPartitionTombstone
      type: System.Boolean
    content.vb: Public Sub New(partition As String, checkpointTag As CheckpointTag, oldState As PartitionState, newState As PartitionState, oldSharedState As PartitionState, newSharedState As PartitionState, emittedEvents As EmittedEventEnvelope(), causedBy As Guid, correlationId As String, isPartitionTombstone As Boolean = False)
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.#ctor*
  nameWithType.vb: EventProcessedResult.EventProcessedResult(String, CheckpointTag, PartitionState, PartitionState, PartitionState, PartitionState, EmittedEventEnvelope(), Guid, String, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.EventProcessedResult.EventProcessedResult(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), System.Guid, System.String, System.Boolean)
  name.vb: EventProcessedResult(String, CheckpointTag, PartitionState, PartitionState, PartitionState, PartitionState, EmittedEventEnvelope(), Guid, String, Boolean)
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.EmittedEvents
  commentId: P:EventStore.Projections.Core.Services.Processing.EventProcessedResult.EmittedEvents
  id: EmittedEvents
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: EmittedEvents
  nameWithType: EventProcessedResult.EmittedEvents
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.EmittedEvents
  type: Property
  source:
    id: EmittedEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public EmittedEventEnvelope[] EmittedEvents { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    content.vb: Public ReadOnly Property EmittedEvents As EmittedEventEnvelope()
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.EmittedEvents*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldState
  commentId: P:EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldState
  id: OldState
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: OldState
  nameWithType: EventProcessedResult.OldState
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldState
  type: Property
  source:
    id: OldState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 37
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public PartitionState OldState { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    content.vb: Public ReadOnly Property OldState As PartitionState
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewState
  commentId: P:EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewState
  id: NewState
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: NewState
  nameWithType: EventProcessedResult.NewState
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewState
  type: Property
  source:
    id: NewState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 44
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  summary: "\nnull - means no state change\n"
  example: []
  syntax:
    content: public PartitionState NewState { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    content.vb: Public ReadOnly Property NewState As PartitionState
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldSharedState
  commentId: P:EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldSharedState
  id: OldSharedState
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: OldSharedState
  nameWithType: EventProcessedResult.OldSharedState
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldSharedState
  type: Property
  source:
    id: OldSharedState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 48
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public PartitionState OldSharedState { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    content.vb: Public ReadOnly Property OldSharedState As PartitionState
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldSharedState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewSharedState
  commentId: P:EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewSharedState
  id: NewSharedState
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: NewSharedState
  nameWithType: EventProcessedResult.NewSharedState
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewSharedState
  type: Property
  source:
    id: NewSharedState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 55
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  summary: "\nnull - means no state change\n"
  example: []
  syntax:
    content: public PartitionState NewSharedState { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    content.vb: Public ReadOnly Property NewSharedState As PartitionState
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewSharedState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.Partition
  commentId: P:EventStore.Projections.Core.Services.Processing.EventProcessedResult.Partition
  id: Partition
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: Partition
  nameWithType: EventProcessedResult.Partition
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.Partition
  type: Property
  source:
    id: Partition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 59
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string Partition { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Partition As String
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.Partition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CheckpointTag
  commentId: P:EventStore.Projections.Core.Services.Processing.EventProcessedResult.CheckpointTag
  id: CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: CheckpointTag
  nameWithType: EventProcessedResult.CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CheckpointTag
  type: Property
  source:
    id: CheckpointTag
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 63
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag CheckpointTag { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property CheckpointTag As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CheckpointTag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CausedBy
  commentId: P:EventStore.Projections.Core.Services.Processing.EventProcessedResult.CausedBy
  id: CausedBy
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: CausedBy
  nameWithType: EventProcessedResult.CausedBy
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CausedBy
  type: Property
  source:
    id: CausedBy
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 67
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public Guid CausedBy { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property CausedBy As Guid
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CausedBy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CorrelationId
  commentId: P:EventStore.Projections.Core.Services.Processing.EventProcessedResult.CorrelationId
  id: CorrelationId
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: EventProcessedResult.CorrelationId
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CorrelationId
  type: Property
  source:
    id: CorrelationId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 71
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string CorrelationId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CorrelationId As String
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CorrelationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.IsPartitionTombstone
  commentId: P:EventStore.Projections.Core.Services.Processing.EventProcessedResult.IsPartitionTombstone
  id: IsPartitionTombstone
  parent: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  langs:
  - csharp
  - vb
  name: IsPartitionTombstone
  nameWithType: EventProcessedResult.IsPartitionTombstone
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.IsPartitionTombstone
  type: Property
  source:
    id: IsPartitionTombstone
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventProcessedResult.cs
    startLine: 75
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool IsPartitionTombstone { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPartitionTombstone As Boolean
  overload: EventStore.Projections.Core.Services.Processing.EventProcessedResult.IsPartitionTombstone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<EventProcessedResult>()
  nameWithType: ProtobufExtensions.Serialize<EventProcessedResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.EventProcessedResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of EventProcessedResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.EventProcessedResult)()
  name.vb: Serialize(Of EventProcessedResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<EventProcessedResult>
    nameWithType: ProtobufExtensions.Serialize<EventProcessedResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.EventProcessedResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of EventProcessedResult)
    nameWithType: ProtobufExtensions.Serialize(Of EventProcessedResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<EventProcessedResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<EventProcessedResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.EventProcessedResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of EventProcessedResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.EventProcessedResult)()
  name.vb: SerializeToArray(Of EventProcessedResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<EventProcessedResult>
    nameWithType: ProtobufExtensions.SerializeToArray<EventProcessedResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.EventProcessedResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of EventProcessedResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of EventProcessedResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.#ctor
  name: EventProcessedResult
  nameWithType: EventProcessedResult.EventProcessedResult
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.EventProcessedResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.PartitionState
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionState
  parent: EventStore.Projections.Core.Services.Processing
  name: PartitionState
  nameWithType: PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  isExternal: true
  name: EmittedEventEnvelope[]
  nameWithType: EmittedEventEnvelope[]
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  nameWithType.vb: EmittedEventEnvelope()
  fullName.vb: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope()
  name.vb: EmittedEventEnvelope()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.EmittedEvents*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.EmittedEvents
  name: EmittedEvents
  nameWithType: EventProcessedResult.EmittedEvents
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.EmittedEvents
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldState*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldState
  name: OldState
  nameWithType: EventProcessedResult.OldState
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldState
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewState*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewState
  name: NewState
  nameWithType: EventProcessedResult.NewState
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewState
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldSharedState*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldSharedState
  name: OldSharedState
  nameWithType: EventProcessedResult.OldSharedState
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.OldSharedState
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewSharedState*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewSharedState
  name: NewSharedState
  nameWithType: EventProcessedResult.NewSharedState
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.NewSharedState
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.Partition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.Partition
  name: Partition
  nameWithType: EventProcessedResult.Partition
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.Partition
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CheckpointTag*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.CheckpointTag
  name: CheckpointTag
  nameWithType: EventProcessedResult.CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CausedBy*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.CausedBy
  name: CausedBy
  nameWithType: EventProcessedResult.CausedBy
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CausedBy
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CorrelationId*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.CorrelationId
  name: CorrelationId
  nameWithType: EventProcessedResult.CorrelationId
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.CorrelationId
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult.IsPartitionTombstone*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventProcessedResult.IsPartitionTombstone
  name: IsPartitionTombstone
  nameWithType: EventProcessedResult.IsPartitionTombstone
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult.IsPartitionTombstone

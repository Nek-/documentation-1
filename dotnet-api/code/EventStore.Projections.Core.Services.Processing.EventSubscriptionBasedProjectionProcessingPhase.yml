### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  commentId: T:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  id: EventSubscriptionBasedProjectionProcessingPhase
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase,Guid,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Common.Log.ILogger,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionStateCache,EventStore.Projections.Core.Services.Processing.IResultWriter,Action,EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.Processing.IReaderStrategy,System.Boolean,System.Boolean,System.Boolean,System.Boolean,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._checkpointManager
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._coreProjection
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._logger
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._processingQueue
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionConfig
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionName
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._publisher
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._readerStrategy
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._resultWriter
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._state
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._stopOnEof
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscribed
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(System.String,Exception)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  langs:
  - csharp
  - vb
  name: EventSubscriptionBasedProjectionProcessingPhase
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  type: Class
  source:
    id: EventSubscriptionBasedProjectionProcessingPhase
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public abstract class EventSubscriptionBasedProjectionProcessingPhase : object, IProjectionPhaseCompleter, IProjectionPhaseCheckpointManager, IHandle<EventReaderSubscriptionMessage.ProgressChanged>, IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>, IHandle<EventReaderSubscriptionMessage.NotAuthorized>, IHandle<EventReaderSubscriptionMessage.EofReached>, IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>, IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>, IHandle<EventReaderSubscriptionMessage.Failed>, IProjectionProcessingPhase, IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>, IProjectionPhaseStateManager'
    content.vb: >-
      Public MustInherit Class EventSubscriptionBasedProjectionProcessingPhase
          Inherits Object
          Implements IProjectionPhaseCompleter, IProjectionPhaseCheckpointManager, IHandle(Of EventReaderSubscriptionMessage.ProgressChanged), IHandle(Of EventReaderSubscriptionMessage.SubscriptionStarted), IHandle(Of EventReaderSubscriptionMessage.NotAuthorized), IHandle(Of EventReaderSubscriptionMessage.EofReached), IHandle(Of EventReaderSubscriptionMessage.CheckpointSuggested), IHandle(Of EventReaderSubscriptionMessage.ReaderAssignedReader), IHandle(Of EventReaderSubscriptionMessage.Failed), IProjectionProcessingPhase, IDisposable, IHandle(Of CoreProjectionManagementMessage.GetState), IHandle(Of CoreProjectionManagementMessage.GetResult), IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded), IProjectionPhaseStateManager
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Projections.Core.Services.Processing.EventProcessingProjectionProcessingPhase
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed}
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  - IDisposable
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._publisher
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._publisher
  id: _publisher
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _publisher
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._publisher
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._publisher
  type: Field
  source:
    id: _publisher
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly IPublisher _publisher
    return:
      type: EventStore.Core.Bus.IPublisher
    content.vb: Protected ReadOnly _publisher As IPublisher
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._coreProjection
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._coreProjection
  id: _coreProjection
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _coreProjection
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._coreProjection
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._coreProjection
  type: Field
  source:
    id: _coreProjection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 24
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly ICoreProjectionForProcessingPhase _coreProjection
    return:
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase
    content.vb: Protected ReadOnly _coreProjection As ICoreProjectionForProcessingPhase
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId
  id: _projectionCorrelationId
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _projectionCorrelationId
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId
  type: Field
  source:
    id: _projectionCorrelationId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 25
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly Guid _projectionCorrelationId
    return:
      type: Guid
    content.vb: Protected ReadOnly _projectionCorrelationId As Guid
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._checkpointManager
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._checkpointManager
  id: _checkpointManager
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _checkpointManager
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._checkpointManager
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._checkpointManager
  type: Field
  source:
    id: _checkpointManager
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly ICoreProjectionCheckpointManager _checkpointManager
    return:
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
    content.vb: Protected ReadOnly _checkpointManager As ICoreProjectionCheckpointManager
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter
  id: _progressResultWriter
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _progressResultWriter
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter
  type: Field
  source:
    id: _progressResultWriter
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 27
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly IProgressResultWriter _progressResultWriter
    return:
      type: EventStore.Projections.Core.Services.Processing.IProgressResultWriter
    content.vb: Protected ReadOnly _progressResultWriter As IProgressResultWriter
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionConfig
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionConfig
  id: _projectionConfig
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _projectionConfig
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._projectionConfig
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionConfig
  type: Field
  source:
    id: _projectionConfig
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 28
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly ProjectionConfig _projectionConfig
    return:
      type: EventStore.Projections.Core.Services.ProjectionConfig
    content.vb: Protected ReadOnly _projectionConfig As ProjectionConfig
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionName
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionName
  id: _projectionName
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _projectionName
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._projectionName
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionName
  type: Field
  source:
    id: _projectionName
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly string _projectionName
    return:
      type: System.String
    content.vb: Protected ReadOnly _projectionName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._logger
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._logger
  id: _logger
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _logger
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._logger
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._logger
  type: Field
  source:
    id: _logger
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 30
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly ILogger _logger
    return:
      type: EventStore.Common.Log.ILogger
    content.vb: Protected ReadOnly _logger As ILogger
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag
  id: _zeroCheckpointTag
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _zeroCheckpointTag
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag
  type: Field
  source:
    id: _zeroCheckpointTag
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 31
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly CheckpointTag _zeroCheckpointTag
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Protected ReadOnly _zeroCheckpointTag As CheckpointTag
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._processingQueue
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._processingQueue
  id: _processingQueue
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _processingQueue
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._processingQueue
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._processingQueue
  type: Field
  source:
    id: _processingQueue
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 32
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly CoreProjectionQueue _processingQueue
    return:
      type: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
    content.vb: Protected ReadOnly _processingQueue As CoreProjectionQueue
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache
  id: _partitionStateCache
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _partitionStateCache
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache
  type: Field
  source:
    id: _partitionStateCache
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly PartitionStateCache _partitionStateCache
    return:
      type: EventStore.Projections.Core.Services.Processing.PartitionStateCache
    content.vb: Protected ReadOnly _partitionStateCache As PartitionStateCache
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher
  id: _subscriptionDispatcher
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _subscriptionDispatcher
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher
  type: Field
  source:
    id: _subscriptionDispatcher
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 34
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly ReaderSubscriptionDispatcher _subscriptionDispatcher
    return:
      type: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
    content.vb: Protected ReadOnly _subscriptionDispatcher As ReaderSubscriptionDispatcher
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._readerStrategy
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._readerStrategy
  id: _readerStrategy
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _readerStrategy
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._readerStrategy
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._readerStrategy
  type: Field
  source:
    id: _readerStrategy
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 35
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly IReaderStrategy _readerStrategy
    return:
      type: EventStore.Projections.Core.Services.Processing.IReaderStrategy
    content.vb: Protected ReadOnly _readerStrategy As IReaderStrategy
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._resultWriter
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._resultWriter
  id: _resultWriter
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _resultWriter
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._resultWriter
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._resultWriter
  type: Field
  source:
    id: _resultWriter
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 36
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly IResultWriter _resultWriter
    return:
      type: EventStore.Projections.Core.Services.Processing.IResultWriter
    content.vb: Protected ReadOnly _resultWriter As IResultWriter
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints
  id: _useCheckpoints
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _useCheckpoints
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints
  type: Field
  source:
    id: _useCheckpoints
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 37
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly bool _useCheckpoints
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly _useCheckpoints As Boolean
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber
  id: _expectedSubscriptionMessageSequenceNumber
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _expectedSubscriptionMessageSequenceNumber
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber
  type: Field
  source:
    id: _expectedSubscriptionMessageSequenceNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 38
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected long _expectedSubscriptionMessageSequenceNumber
    return:
      type: System.Int64
    content.vb: Protected _expectedSubscriptionMessageSequenceNumber As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId
  id: _currentSubscriptionId
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _currentSubscriptionId
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId
  type: Field
  source:
    id: _currentSubscriptionId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 39
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected Guid _currentSubscriptionId
    return:
      type: Guid
    content.vb: Protected _currentSubscriptionId As Guid
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscribed
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscribed
  id: _subscribed
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _subscribed
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._subscribed
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscribed
  type: Field
  source:
    id: _subscribed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 40
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected bool _subscribed
    return:
      type: System.Boolean
    content.vb: Protected _subscribed As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._state
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._state
  id: _state
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _state
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._state
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._state
  type: Field
  source:
    id: _state
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 41
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected PhaseState _state
    return:
      type: EventStore.Projections.Core.Services.Processing.PhaseState
    content.vb: Protected _state As PhaseState
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._stopOnEof
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._stopOnEof
  id: _stopOnEof
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _stopOnEof
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._stopOnEof
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._stopOnEof
  type: Field
  source:
    id: _stopOnEof
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 42
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly bool _stopOnEof
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly _stopOnEof As Boolean
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker
  id: _emittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _emittedStreamsTracker
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker
  type: Field
  source:
    id: _emittedStreamsTracker
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 44
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly IEmittedStreamsTracker _emittedStreamsTracker
    return:
      type: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
    content.vb: Protected ReadOnly _emittedStreamsTracker As IEmittedStreamsTracker
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase,Guid,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Common.Log.ILogger,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionStateCache,EventStore.Projections.Core.Services.Processing.IResultWriter,Action,EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.Processing.IReaderStrategy,System.Boolean,System.Boolean,System.Boolean,System.Boolean,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase,Guid,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Common.Log.ILogger,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionStateCache,EventStore.Projections.Core.Services.Processing.IResultWriter,Action,EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.Processing.IReaderStrategy,System.Boolean,System.Boolean,System.Boolean,System.Boolean,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  id: '#ctor(EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase,Guid,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Common.Log.ILogger,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionStateCache,EventStore.Projections.Core.Services.Processing.IResultWriter,Action,EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.Processing.IReaderStrategy,System.Boolean,System.Boolean,System.Boolean,System.Boolean,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)'
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: EventSubscriptionBasedProjectionProcessingPhase(IPublisher, IPublisher, ICoreProjectionForProcessingPhase, Guid, ICoreProjectionCheckpointManager, ProjectionConfig, String, ILogger, CheckpointTag, PartitionStateCache, IResultWriter, Action, ReaderSubscriptionDispatcher, IReaderStrategy, Boolean, Boolean, Boolean, Boolean, IEmittedStreamsTracker)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EventSubscriptionBasedProjectionProcessingPhase(IPublisher, IPublisher, ICoreProjectionForProcessingPhase, Guid, ICoreProjectionCheckpointManager, ProjectionConfig, String, ILogger, CheckpointTag, PartitionStateCache, IResultWriter, Action, ReaderSubscriptionDispatcher, IReaderStrategy, Boolean, Boolean, Boolean, Boolean, IEmittedStreamsTracker)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EventSubscriptionBasedProjectionProcessingPhase(EventStore.Core.Bus.IPublisher, EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase, Guid, EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager, EventStore.Projections.Core.Services.ProjectionConfig, System.String, EventStore.Common.Log.ILogger, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.PartitionStateCache, EventStore.Projections.Core.Services.Processing.IResultWriter, Action, EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher, EventStore.Projections.Core.Services.Processing.IReaderStrategy, System.Boolean, System.Boolean, System.Boolean, System.Boolean, EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 48
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected EventSubscriptionBasedProjectionProcessingPhase(IPublisher publisher, IPublisher inputQueue, ICoreProjectionForProcessingPhase coreProjection, Guid projectionCorrelationId, ICoreProjectionCheckpointManager checkpointManager, ProjectionConfig projectionConfig, string projectionName, ILogger logger, CheckpointTag zeroCheckpointTag, PartitionStateCache partitionStateCache, IResultWriter resultWriter, Action updateStatistics, ReaderSubscriptionDispatcher subscriptionDispatcher, IReaderStrategy readerStrategy, bool useCheckpoints, bool stopOnEof, bool orderedPartitionProcessing, bool isBiState, IEmittedStreamsTracker emittedStreamsTracker)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: inputQueue
      type: EventStore.Core.Bus.IPublisher
    - id: coreProjection
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase
    - id: projectionCorrelationId
      type: Guid
    - id: checkpointManager
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
    - id: projectionConfig
      type: EventStore.Projections.Core.Services.ProjectionConfig
    - id: projectionName
      type: System.String
    - id: logger
      type: EventStore.Common.Log.ILogger
    - id: zeroCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: partitionStateCache
      type: EventStore.Projections.Core.Services.Processing.PartitionStateCache
    - id: resultWriter
      type: EventStore.Projections.Core.Services.Processing.IResultWriter
    - id: updateStatistics
      type: Action
    - id: subscriptionDispatcher
      type: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
    - id: readerStrategy
      type: EventStore.Projections.Core.Services.Processing.IReaderStrategy
    - id: useCheckpoints
      type: System.Boolean
    - id: stopOnEof
      type: System.Boolean
    - id: orderedPartitionProcessing
      type: System.Boolean
    - id: isBiState
      type: System.Boolean
    - id: emittedStreamsTracker
      type: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
    content.vb: Protected Sub New(publisher As IPublisher, inputQueue As IPublisher, coreProjection As ICoreProjectionForProcessingPhase, projectionCorrelationId As Guid, checkpointManager As ICoreProjectionCheckpointManager, projectionConfig As ProjectionConfig, projectionName As String, logger As ILogger, zeroCheckpointTag As CheckpointTag, partitionStateCache As PartitionStateCache, resultWriter As IResultWriter, updateStatistics As Action, subscriptionDispatcher As ReaderSubscriptionDispatcher, readerStrategy As IReaderStrategy, useCheckpoints As Boolean, stopOnEof As Boolean, orderedPartitionProcessing As Boolean, isBiState As Boolean, emittedStreamsTracker As IEmittedStreamsTracker)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: UnlockAndForgetBefore(CheckpointTag)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: UnlockAndForgetBefore
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 94
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void UnlockAndForgetBefore(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub UnlockAndForgetBefore(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  id: LastProcessedEventPosition
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: LastProcessedEventPosition
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  type: Property
  source:
    id: LastProcessedEventPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 98
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag LastProcessedEventPosition { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property LastProcessedEventPosition As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  commentId: P:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  id: CheckpointManager
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: CheckpointManager
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  type: Property
  source:
    id: CheckpointManager
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 102
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ICoreProjectionCheckpointManager CheckpointManager { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
    content.vb: Public ReadOnly Property CheckpointManager As ICoreProjectionCheckpointManager
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  commentId: P:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  id: EmittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: EmittedStreamsTracker
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  type: Property
  source:
    id: EmittedStreamsTracker
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 106
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public IEmittedStreamsTracker EmittedStreamsTracker { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
    content.vb: Public ReadOnly Property EmittedStreamsTracker As IEmittedStreamsTracker
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  id: IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: IsOutOfOrderSubscriptionMessage(EventReaderSubscriptionMessageBase)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventReaderSubscriptionMessageBase)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  type: Method
  source:
    id: IsOutOfOrderSubscriptionMessage
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 110
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected bool IsOutOfOrderSubscriptionMessage(EventReaderSubscriptionMessageBase message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
    return:
      type: System.Boolean
    content.vb: Protected Function IsOutOfOrderSubscriptionMessage(message As EventReaderSubscriptionMessageBase) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  id: RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: RegisterSubscriptionMessage(EventReaderSubscriptionMessageBase)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventReaderSubscriptionMessageBase)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  type: Method
  source:
    id: RegisterSubscriptionMessage
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 118
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void RegisterSubscriptionMessage(EventReaderSubscriptionMessageBase message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
    content.vb: Protected Sub RegisterSubscriptionMessage(message As EventReaderSubscriptionMessageBase)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
  id: EnsureTickPending
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: EnsureTickPending()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending()
  type: Method
  source:
    id: EnsureTickPending
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 122
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void EnsureTickPending()
    content.vb: Protected Sub EnsureTickPending
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  id: AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: AssignSlaves(SlaveProjectionCommunicationChannels)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(SlaveProjectionCommunicationChannels)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  type: Method
  source:
    id: AssignSlaves
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 126
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public virtual void AssignSlaves(SlaveProjectionCommunicationChannels slaveProjections)
    parameters:
    - id: slaveProjections
      type: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    content.vb: Public Overridable Sub AssignSlaves(slaveProjections As SlaveProjectionCommunicationChannels)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
  id: ProcessEvent
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: ProcessEvent()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent()
  type: Method
  source:
    id: ProcessEvent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 130
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void ProcessEvent()
    content.vb: Public Sub ProcessEvent
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  id: Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(EventReaderSubscriptionMessage.ProgressChanged)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.ProgressChanged)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 156
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(EventReaderSubscriptionMessage.ProgressChanged message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    content.vb: Public Sub Handle(message As EventReaderSubscriptionMessage.ProgressChanged)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  id: Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(EventReaderSubscriptionMessage.SubscriptionStarted)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.SubscriptionStarted)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 170
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(EventReaderSubscriptionMessage.SubscriptionStarted message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    content.vb: Public Sub Handle(message As EventReaderSubscriptionMessage.SubscriptionStarted)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  id: Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(EventReaderSubscriptionMessage.NotAuthorized)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.NotAuthorized)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 181
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(EventReaderSubscriptionMessage.NotAuthorized message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    content.vb: Public Sub Handle(message As EventReaderSubscriptionMessage.NotAuthorized)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
  id: Unsubscribed
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Unsubscribed()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed()
  type: Method
  source:
    id: Unsubscribed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 194
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Unsubscribed()
    content.vb: Public Sub Unsubscribed
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  id: Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(EventReaderSubscriptionMessage.EofReached)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.EofReached)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 200
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(EventReaderSubscriptionMessage.EofReached message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    content.vb: Public Sub Handle(message As EventReaderSubscriptionMessage.EofReached)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  id: Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(EventReaderSubscriptionMessage.CheckpointSuggested)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.CheckpointSuggested)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 214
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(EventReaderSubscriptionMessage.CheckpointSuggested message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    content.vb: Public Sub Handle(message As EventReaderSubscriptionMessage.CheckpointSuggested)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.GetState)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionManagementMessage.GetState)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 233
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.GetState message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.GetState)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.GetResult)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionManagementMessage.GetResult)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 248
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.GetResult message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.GetResult)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  id: Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(EventReaderSubscriptionMessage.Failed)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.Failed)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 263
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(EventReaderSubscriptionMessage.Failed message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
    content.vb: Public Sub Handle(message As EventReaderSubscriptionMessage.Failed)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
  id: UnsubscribeFromPreRecordedOrderEvents
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: UnsubscribeFromPreRecordedOrderEvents()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents()
  type: Method
  source:
    id: UnsubscribeFromPreRecordedOrderEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 267
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void UnsubscribeFromPreRecordedOrderEvents()
    content.vb: Protected Sub UnsubscribeFromPreRecordedOrderEvents
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
  id: Subscribed(Guid)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Subscribed(Guid)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
  type: Method
  source:
    id: Subscribed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 273
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Subscribed(Guid subscriptionId)
    parameters:
    - id: subscriptionId
      type: Guid
    content.vb: Public Sub Subscribed(subscriptionId As Guid)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
  id: GetSubscriptionOptions
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: GetSubscriptionOptions()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions()
  type: Method
  source:
    id: GetSubscriptionOptions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 277
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ReaderSubscriptionOptions GetSubscriptionOptions()
    return:
      type: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
    content.vb: Public Function GetSubscriptionOptions As ReaderSubscriptionOptions
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: SubscribeReaders(CheckpointTag)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: SubscribeReaders
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 284
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void SubscribeReaders(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Protected Sub SubscribeReaders(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
  id: SubscribeToPreRecordedOrderEvents
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: SubscribeToPreRecordedOrderEvents()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents()
  type: Method
  source:
    id: SubscribeToPreRecordedOrderEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 305
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void SubscribeToPreRecordedOrderEvents()
    content.vb: Public Sub SubscribeToPreRecordedOrderEvents
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  id: Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Subscribe(CheckpointTag, Boolean)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Subscribe(CheckpointTag, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean)
  type: Method
  source:
    id: Subscribe
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 315
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public virtual void Subscribe(CheckpointTag from, bool fromCheckpoint)
    parameters:
    - id: from
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: fromCheckpoint
      type: System.Boolean
    content.vb: Public Overridable Sub Subscribe(from As CheckpointTag, fromCheckpoint As Boolean)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  id: Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 324
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded message)
    parameters:
    - id: message
      type: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    content.vb: Public Sub Handle(message As CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: AdjustTag(CheckpointTag)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: AdjustTag
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 329
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag AdjustTag(CheckpointTag tag)
    parameters:
    - id: tag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Function AdjustTag(tag As CheckpointTag) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(System.String,Exception)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(System.String,Exception)
  id: SetFaulting(System.String,Exception)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: SetFaulting(String, Exception)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(String, Exception)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(System.String, Exception)
  type: Method
  source:
    id: SetFaulting
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 333
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void SetFaulting(string faultedReason, Exception ex = null)
    parameters:
    - id: faultedReason
      type: System.String
    - id: ex
      type: Exception
    content.vb: Protected Sub SetFaulting(faultedReason As String, ex As Exception = Nothing)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  id: ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: ValidateEmittedEvents(EmittedEventEnvelope[])
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  type: Method
  source:
    id: ValidateEmittedEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 344
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected bool ValidateEmittedEvents(EmittedEventEnvelope[] emittedEvents)
    parameters:
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    return:
      type: System.Boolean
    content.vb: Protected Function ValidateEmittedEvents(emittedEvents As EmittedEventEnvelope()) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents*
  nameWithType.vb: EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EmittedEventEnvelope())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ValidateEmittedEvents(EmittedEventEnvelope())
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: NewCheckpointStarted(CheckpointTag)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: NewCheckpointStarted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 355
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public abstract void NewCheckpointStarted(CheckpointTag at)
    parameters:
    - id: at
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public MustOverride Sub NewCheckpointStarted(at As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: InitializeFromCheckpoint(CheckpointTag)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: InitializeFromCheckpoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 357
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void InitializeFromCheckpoint(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub InitializeFromCheckpoint(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
  id: GetBufferedEventCount
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: GetBufferedEventCount()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount()
  type: Method
  source:
    id: GetBufferedEventCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 364
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public int GetBufferedEventCount()
    return:
      type: System.Int32
    content.vb: Public Function GetBufferedEventCount As Integer
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
  id: GetStatus
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: GetStatus()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetStatus()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus()
  type: Method
  source:
    id: GetStatus
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 368
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string GetStatus()
    return:
      type: System.String
    content.vb: Public Function GetStatus As String
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  id: InternalCommittedEventProcessed(System.String,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope[], PartitionState, PartitionState)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope[], PartitionState, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState)
  type: Method
  source:
    id: InternalCommittedEventProcessed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 372
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected EventProcessedResult InternalCommittedEventProcessed(string partition, EventReaderSubscriptionMessage.CommittedEventReceived message, EmittedEventEnvelope[] emittedEvents, PartitionState newPartitionState, PartitionState newSharedPartitionState)
    parameters:
    - id: partition
      type: System.String
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    - id: newPartitionState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    - id: newSharedPartitionState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    return:
      type: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    content.vb: Protected Function InternalCommittedEventProcessed(partition As String, message As EventReaderSubscriptionMessage.CommittedEventReceived, emittedEvents As EmittedEventEnvelope(), newPartitionState As PartitionState, newSharedPartitionState As PartitionState) As EventProcessedResult
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed*
  nameWithType.vb: EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope(), PartitionState, PartitionState)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState)
  name.vb: InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope(), PartitionState, PartitionState)
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  id: InternalPartitionDeletedProcessed(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: InternalPartitionDeletedProcessed(String, CheckpointTag, PartitionState)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(String, CheckpointTag, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.PartitionState)
  type: Method
  source:
    id: InternalPartitionDeletedProcessed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 405
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected EventProcessedResult InternalPartitionDeletedProcessed(string partition, CheckpointTag deletePosition, PartitionState newPartitionState)
    parameters:
    - id: partition
      type: System.String
    - id: deletePosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: newPartitionState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    return:
      type: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    content.vb: Protected Function InternalPartitionDeletedProcessed(partition As String, deletePosition As CheckpointTag, newPartitionState As PartitionState) As EventProcessedResult
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  id: BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action<EventStore.Projections.Core.Services.Processing.PartitionState>, System.Boolean)
  type: Method
  source:
    id: BeginGetPartitionStateAt
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 427
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void BeginGetPartitionStateAt(string statePartition, CheckpointTag at, Action<PartitionState> loadCompleted, bool lockLoaded)
    parameters:
    - id: statePartition
      type: System.String
    - id: at
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: loadCompleted
      type: Action{EventStore.Projections.Core.Services.Processing.PartitionState}
    - id: lockLoaded
      type: System.Boolean
    content.vb: Public Sub BeginGetPartitionStateAt(statePartition As String, at As CheckpointTag, loadCompleted As Action(Of PartitionState), lockLoaded As Boolean)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  nameWithType.vb: EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(String, CheckpointTag, Action(Of PartitionState), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action(Of EventStore.Projections.Core.Services.Processing.PartitionState), System.Boolean)
  name.vb: BeginGetPartitionStateAt(String, CheckpointTag, Action(Of PartitionState), Boolean)
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  id: FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: FinalizeEventProcessing(EventProcessedResult, CheckpointTag, Single)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventProcessedResult, CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  type: Method
  source:
    id: FinalizeEventProcessing
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 458
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void FinalizeEventProcessing(EventProcessedResult result, CheckpointTag eventCheckpointTag, float progress)
    parameters:
    - id: result
      type: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    - id: eventCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: progress
      type: System.Single
    content.vb: Public Sub FinalizeEventProcessing(result As EventProcessedResult, eventCheckpointTag As CheckpointTag, progress As Single)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  id: EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: EmitEofResult(String, String, CheckpointTag, Guid, String)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(String, String, CheckpointTag, Guid, String)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(System.String, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Guid, System.String)
  type: Method
  source:
    id: EmitEofResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 485
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void EmitEofResult(string partition, string resultBody, CheckpointTag causedBy, Guid causedByGuid, string correlationId)
    parameters:
    - id: partition
      type: System.String
    - id: resultBody
      type: System.String
    - id: causedBy
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: causedByGuid
      type: Guid
    - id: correlationId
      type: System.String
    content.vb: Public Sub EmitEofResult(partition As String, resultBody As String, causedBy As CheckpointTag, causedByGuid As Guid, correlationId As String)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  id: RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action)
  type: Method
  source:
    id: RecordEventOrder
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 491
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action completed)
    parameters:
    - id: resolvedEvent
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: orderCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: completed
      type: Action
    content.vb: Public Sub RecordEventOrder(resolvedEvent As ResolvedEvent, orderCheckpointTag As CheckpointTag, completed As Action)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
  id: Complete
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Complete()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Complete()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete()
  type: Method
  source:
    id: Complete
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 504
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Complete()
    content.vb: Public Sub Complete
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter.Complete
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  id: SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  type: Method
  source:
    id: SetCurrentCheckpointSuggestedWorkItem
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 510
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem checkpointSuggestedWorkItem)
    parameters:
    - id: checkpointSuggestedWorkItem
      type: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
    content.vb: Public Sub SetCurrentCheckpointSuggestedWorkItem(checkpointSuggestedWorkItem As CheckpointSuggestedWorkItem)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  id: GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: GetStatistics(ProjectionStatistics)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  type: Method
  source:
    id: GetStatistics
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 514
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public virtual void GetStatistics(ProjectionStatistics info)
    parameters:
    - id: info
      type: EventStore.Projections.Core.Services.ProjectionStatistics
    content.vb: Public Overridable Sub GetStatistics(info As ProjectionStatistics)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
  id: MakeZeroCheckpointTag
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: MakeZeroCheckpointTag()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag()
  type: Method
  source:
    id: MakeZeroCheckpointTag
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 519
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag MakeZeroCheckpointTag()
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Function MakeZeroCheckpointTag As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
  id: EnsureUnsubscribed
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: EnsureUnsubscribed()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed()
  type: Method
  source:
    id: EnsureUnsubscribed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 523
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void EnsureUnsubscribed()
    content.vb: Public Sub EnsureUnsubscribed
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition
  id: _subscriptionStartedAtLastCommitPosition
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _subscriptionStartedAtLastCommitPosition
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition
  type: Field
  source:
    id: _subscriptionStartedAtLastCommitPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 535
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected long _subscriptionStartedAtLastCommitPosition
    return:
      type: System.Int64
    content.vb: Protected _subscriptionStartedAtLastCommitPosition As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  id: Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(EventReaderSubscriptionMessage.ReaderAssignedReader)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.ReaderAssignedReader)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 540
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(EventReaderSubscriptionMessage.ReaderAssignedReader message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
    content.vb: Public Sub Handle(message As EventReaderSubscriptionMessage.ReaderAssignedReader)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
  id: Dispose
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Dispose()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose()
  type: Method
  source:
    id: Dispose
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 555
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public abstract void Dispose()
    content.vb: Public MustOverride Sub Dispose
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  id: SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: SetProjectionState(PhaseState)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(PhaseState)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  type: Method
  source:
    id: SetProjectionState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/EventSubscriptionBasedProjectionProcessingPhase.cs
    startLine: 557
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void SetProjectionState(PhaseState state)
    parameters:
    - id: state
      type: EventStore.Projections.Core.Services.Processing.PhaseState
    content.vb: Public Sub SetProjectionState(state As PhaseState)
  overload: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter
  parent: EventStore.Projections.Core.Services.Processing
  name: IProjectionPhaseCompleter
  nameWithType: IProjectionPhaseCompleter
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager
  parent: EventStore.Projections.Core.Services.Processing
  name: IProjectionPhaseCheckpointManager
  nameWithType: IProjectionPhaseCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.ProgressChanged>
  nameWithType: IHandle<EventReaderSubscriptionMessage.ProgressChanged>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.ProgressChanged)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.ProgressChanged)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    name: EventReaderSubscriptionMessage.ProgressChanged
    nameWithType: EventReaderSubscriptionMessage.ProgressChanged
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    name: EventReaderSubscriptionMessage.ProgressChanged
    nameWithType: EventReaderSubscriptionMessage.ProgressChanged
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>
  nameWithType: IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.SubscriptionStarted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.SubscriptionStarted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    name: EventReaderSubscriptionMessage.SubscriptionStarted
    nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    name: EventReaderSubscriptionMessage.SubscriptionStarted
    nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.NotAuthorized>
  nameWithType: IHandle<EventReaderSubscriptionMessage.NotAuthorized>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.NotAuthorized)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.NotAuthorized)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    name: EventReaderSubscriptionMessage.NotAuthorized
    nameWithType: EventReaderSubscriptionMessage.NotAuthorized
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    name: EventReaderSubscriptionMessage.NotAuthorized
    nameWithType: EventReaderSubscriptionMessage.NotAuthorized
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.EofReached>
  nameWithType: IHandle<EventReaderSubscriptionMessage.EofReached>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.EofReached)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.EofReached)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    name: EventReaderSubscriptionMessage.EofReached
    nameWithType: EventReaderSubscriptionMessage.EofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    name: EventReaderSubscriptionMessage.EofReached
    nameWithType: EventReaderSubscriptionMessage.EofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>
  nameWithType: IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.CheckpointSuggested)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.CheckpointSuggested)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    name: EventReaderSubscriptionMessage.CheckpointSuggested
    nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    name: EventReaderSubscriptionMessage.CheckpointSuggested
    nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>
  nameWithType: IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.ReaderAssignedReader)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.ReaderAssignedReader)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
    name: EventReaderSubscriptionMessage.ReaderAssignedReader
    nameWithType: EventReaderSubscriptionMessage.ReaderAssignedReader
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
    name: EventReaderSubscriptionMessage.ReaderAssignedReader
    nameWithType: EventReaderSubscriptionMessage.ReaderAssignedReader
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.Failed>
  nameWithType: IHandle<EventReaderSubscriptionMessage.Failed>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.Failed)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.Failed)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
    name: EventReaderSubscriptionMessage.Failed
    nameWithType: EventReaderSubscriptionMessage.Failed
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
    name: EventReaderSubscriptionMessage.Failed
    nameWithType: EventReaderSubscriptionMessage.Failed
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  parent: EventStore.Projections.Core.Services.Processing
  name: IProjectionProcessingPhase
  nameWithType: IProjectionProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.GetState>
  nameWithType: IHandle<CoreProjectionManagementMessage.GetState>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  name.vb: IHandle(Of CoreProjectionManagementMessage.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.GetResult>
  nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  name.vb: IHandle(Of CoreProjectionManagementMessage.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  nameWithType: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  parent: EventStore.Projections.Core.Services.Processing
  name: IProjectionPhaseStateManager
  nameWithType: IProjectionPhaseStateManager
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase
  commentId: T:EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase
  parent: EventStore.Projections.Core.Services.Processing
  name: ICoreProjectionForProcessingPhase
  nameWithType: ICoreProjectionForProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  commentId: T:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  parent: EventStore.Projections.Core.Services.Processing
  name: ICoreProjectionCheckpointManager
  nameWithType: ICoreProjectionCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
- uid: EventStore.Projections.Core.Services.Processing.IProgressResultWriter
  commentId: T:EventStore.Projections.Core.Services.Processing.IProgressResultWriter
  parent: EventStore.Projections.Core.Services.Processing
  name: IProgressResultWriter
  nameWithType: IProgressResultWriter
  fullName: EventStore.Projections.Core.Services.Processing.IProgressResultWriter
- uid: EventStore.Projections.Core.Services.ProjectionConfig
  commentId: T:EventStore.Projections.Core.Services.ProjectionConfig
  parent: EventStore.Projections.Core.Services
  name: ProjectionConfig
  nameWithType: ProjectionConfig
  fullName: EventStore.Projections.Core.Services.ProjectionConfig
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Common.Log.ILogger
  commentId: T:EventStore.Common.Log.ILogger
  parent: EventStore.Common.Log
  name: ILogger
  nameWithType: ILogger
  fullName: EventStore.Common.Log.ILogger
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
  commentId: T:EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
  parent: EventStore.Projections.Core.Services.Processing
  name: CoreProjectionQueue
  nameWithType: CoreProjectionQueue
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateCache
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionStateCache
  parent: EventStore.Projections.Core.Services.Processing
  name: PartitionStateCache
  nameWithType: PartitionStateCache
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateCache
- uid: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
  commentId: T:EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
  parent: EventStore.Projections.Core.Services
  name: ReaderSubscriptionDispatcher
  nameWithType: ReaderSubscriptionDispatcher
  fullName: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  commentId: T:EventStore.Projections.Core.Services.Processing.IReaderStrategy
  parent: EventStore.Projections.Core.Services.Processing
  name: IReaderStrategy
  nameWithType: IReaderStrategy
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy
- uid: EventStore.Projections.Core.Services.Processing.IResultWriter
  commentId: T:EventStore.Projections.Core.Services.Processing.IResultWriter
  parent: EventStore.Projections.Core.Services.Processing
  name: IResultWriter
  nameWithType: IResultWriter
  fullName: EventStore.Projections.Core.Services.Processing.IResultWriter
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Services.Processing.PhaseState
  commentId: T:EventStore.Projections.Core.Services.Processing.PhaseState
  parent: EventStore.Projections.Core.Services.Processing
  name: PhaseState
  nameWithType: PhaseState
  fullName: EventStore.Projections.Core.Services.Processing.PhaseState
- uid: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
  commentId: T:EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing
  name: IEmittedStreamsTracker
  nameWithType: IEmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.#ctor
  name: EventSubscriptionBasedProjectionProcessingPhase
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EventSubscriptionBasedProjectionProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EventSubscriptionBasedProjectionProcessingPhase
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore
  name: UnlockAndForgetBefore
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  name: UnlockAndForgetBefore(CheckpointTag)
  nameWithType: IProjectionPhaseStateManager.UnlockAndForgetBefore(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: UnlockAndForgetBefore
    nameWithType: IProjectionPhaseStateManager.UnlockAndForgetBefore
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: UnlockAndForgetBefore
    nameWithType: IProjectionPhaseStateManager.UnlockAndForgetBefore
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  name: LastProcessedEventPosition
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  name: LastProcessedEventPosition
  nameWithType: IProjectionPhaseStateManager.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  name: CheckpointManager
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  commentId: P:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: CheckpointManager
  nameWithType: IProjectionProcessingPhase.CheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  name: EmittedStreamsTracker
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  commentId: P:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: EmittedStreamsTracker
  nameWithType: IProjectionProcessingPhase.EmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage
  name: IsOutOfOrderSubscriptionMessage
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessageBase
  nameWithType: EventReaderSubscriptionMessageBase
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage
  name: RegisterSubscriptionMessage
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
  name: EnsureTickPending
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves
  name: AssignSlaves
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: AssignSlaves(SlaveProjectionCommunicationChannels)
  nameWithType: IProjectionProcessingPhase.AssignSlaves(SlaveProjectionCommunicationChannels)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
    name: AssignSlaves
    nameWithType: IProjectionProcessingPhase.AssignSlaves
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    name: SlaveProjectionCommunicationChannels
    nameWithType: SlaveProjectionCommunicationChannels
    fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
    name: AssignSlaves
    nameWithType: IProjectionProcessingPhase.AssignSlaves
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    name: SlaveProjectionCommunicationChannels
    nameWithType: SlaveProjectionCommunicationChannels
    fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  commentId: T:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  parent: EventStore.Projections.Core.Messages
  name: SlaveProjectionCommunicationChannels
  nameWithType: SlaveProjectionCommunicationChannels
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
  name: ProcessEvent
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: ProcessEvent()
  nameWithType: IProjectionProcessingPhase.ProcessEvent()
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
    name: ProcessEvent
    nameWithType: IProjectionProcessingPhase.ProcessEvent
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
    name: ProcessEvent
    nameWithType: IProjectionProcessingPhase.ProcessEvent
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  name: Handle
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(EventReaderSubscriptionMessage.ProgressChanged)
  nameWithType: IHandle<EventReaderSubscriptionMessage.ProgressChanged>.Handle(EventReaderSubscriptionMessage.ProgressChanged)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged>.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.ProgressChanged).Handle(EventReaderSubscriptionMessage.ProgressChanged)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged).Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<EventReaderSubscriptionMessage.ProgressChanged>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    name: EventReaderSubscriptionMessage.ProgressChanged
    nameWithType: EventReaderSubscriptionMessage.ProgressChanged
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of EventReaderSubscriptionMessage.ProgressChanged).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    name: EventReaderSubscriptionMessage.ProgressChanged
    nameWithType: EventReaderSubscriptionMessage.ProgressChanged
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.ProgressChanged
  nameWithType: EventReaderSubscriptionMessage.ProgressChanged
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(EventReaderSubscriptionMessage.SubscriptionStarted)
  nameWithType: IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>.Handle(EventReaderSubscriptionMessage.SubscriptionStarted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted>.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.SubscriptionStarted).Handle(EventReaderSubscriptionMessage.SubscriptionStarted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted).Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    name: EventReaderSubscriptionMessage.SubscriptionStarted
    nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of EventReaderSubscriptionMessage.SubscriptionStarted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    name: EventReaderSubscriptionMessage.SubscriptionStarted
    nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.SubscriptionStarted
  nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(EventReaderSubscriptionMessage.NotAuthorized)
  nameWithType: IHandle<EventReaderSubscriptionMessage.NotAuthorized>.Handle(EventReaderSubscriptionMessage.NotAuthorized)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized>.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.NotAuthorized).Handle(EventReaderSubscriptionMessage.NotAuthorized)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized).Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<EventReaderSubscriptionMessage.NotAuthorized>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    name: EventReaderSubscriptionMessage.NotAuthorized
    nameWithType: EventReaderSubscriptionMessage.NotAuthorized
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of EventReaderSubscriptionMessage.NotAuthorized).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    name: EventReaderSubscriptionMessage.NotAuthorized
    nameWithType: EventReaderSubscriptionMessage.NotAuthorized
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.NotAuthorized
  nameWithType: EventReaderSubscriptionMessage.NotAuthorized
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
  name: Unsubscribed
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(EventReaderSubscriptionMessage.EofReached)
  nameWithType: IHandle<EventReaderSubscriptionMessage.EofReached>.Handle(EventReaderSubscriptionMessage.EofReached)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached>.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.EofReached).Handle(EventReaderSubscriptionMessage.EofReached)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached).Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<EventReaderSubscriptionMessage.EofReached>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    name: EventReaderSubscriptionMessage.EofReached
    nameWithType: EventReaderSubscriptionMessage.EofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of EventReaderSubscriptionMessage.EofReached).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    name: EventReaderSubscriptionMessage.EofReached
    nameWithType: EventReaderSubscriptionMessage.EofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.EofReached
  nameWithType: EventReaderSubscriptionMessage.EofReached
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(EventReaderSubscriptionMessage.CheckpointSuggested)
  nameWithType: IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>.Handle(EventReaderSubscriptionMessage.CheckpointSuggested)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested>.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.CheckpointSuggested).Handle(EventReaderSubscriptionMessage.CheckpointSuggested)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested).Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    name: EventReaderSubscriptionMessage.CheckpointSuggested
    nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of EventReaderSubscriptionMessage.CheckpointSuggested).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    name: EventReaderSubscriptionMessage.CheckpointSuggested
    nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.CheckpointSuggested
  nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.GetState)
  nameWithType: IHandle<CoreProjectionManagementMessage.GetState>.Handle(CoreProjectionManagementMessage.GetState)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetState).Handle(CoreProjectionManagementMessage.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.GetState>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.GetState).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.GetState
  nameWithType: CoreProjectionManagementMessage.GetState
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.GetResult)
  nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>.Handle(CoreProjectionManagementMessage.GetResult)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetResult).Handle(CoreProjectionManagementMessage.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.GetResult).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.GetResult
  nameWithType: CoreProjectionManagementMessage.GetResult
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(EventReaderSubscriptionMessage.Failed)
  nameWithType: IHandle<EventReaderSubscriptionMessage.Failed>.Handle(EventReaderSubscriptionMessage.Failed)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed>.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.Failed).Handle(EventReaderSubscriptionMessage.Failed)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed).Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<EventReaderSubscriptionMessage.Failed>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
    name: EventReaderSubscriptionMessage.Failed
    nameWithType: EventReaderSubscriptionMessage.Failed
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of EventReaderSubscriptionMessage.Failed).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
    name: EventReaderSubscriptionMessage.Failed
    nameWithType: EventReaderSubscriptionMessage.Failed
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.Failed
  nameWithType: EventReaderSubscriptionMessage.Failed
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
  name: UnsubscribeFromPreRecordedOrderEvents
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed
  name: Subscribed
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Subscribed
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
  name: GetSubscriptionOptions
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  commentId: T:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  parent: EventStore.Projections.Core.Services.Processing
  name: ReaderSubscriptionOptions
  nameWithType: ReaderSubscriptionOptions
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders
  name: SubscribeReaders
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
  name: SubscribeToPreRecordedOrderEvents
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe
  name: Subscribe
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Subscribe
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  isExternal: true
  name: Subscribe(CheckpointTag, Boolean)
  nameWithType: IProjectionProcessingPhase.Subscribe(CheckpointTag, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
    name: Subscribe
    nameWithType: IProjectionProcessingPhase.Subscribe
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
    name: Subscribe
    nameWithType: IProjectionProcessingPhase.Subscribe
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  nameWithType: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  commentId: T:CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag
  name: AdjustTag
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.AdjustTag
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: AdjustTag(CheckpointTag)
  nameWithType: IProjectionProcessingPhase.AdjustTag(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: AdjustTag
    nameWithType: IProjectionProcessingPhase.AdjustTag
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: AdjustTag
    nameWithType: IProjectionProcessingPhase.AdjustTag
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting
  name: SetFaulting
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetFaulting
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents
  name: ValidateEmittedEvents
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  isExternal: true
  name: EmittedEventEnvelope[]
  nameWithType: EmittedEventEnvelope[]
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  nameWithType.vb: EmittedEventEnvelope()
  fullName.vb: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope()
  name.vb: EmittedEventEnvelope()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted
  name: NewCheckpointStarted
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager
  name: NewCheckpointStarted(CheckpointTag)
  nameWithType: IProjectionPhaseCheckpointManager.NewCheckpointStarted(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: NewCheckpointStarted
    nameWithType: IProjectionPhaseCheckpointManager.NewCheckpointStarted
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.NewCheckpointStarted
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: NewCheckpointStarted
    nameWithType: IProjectionPhaseCheckpointManager.NewCheckpointStarted
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.NewCheckpointStarted
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint
  name: InitializeFromCheckpoint
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: InitializeFromCheckpoint(CheckpointTag)
  nameWithType: IProjectionProcessingPhase.InitializeFromCheckpoint(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: InitializeFromCheckpoint
    nameWithType: IProjectionProcessingPhase.InitializeFromCheckpoint
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: InitializeFromCheckpoint
    nameWithType: IProjectionProcessingPhase.InitializeFromCheckpoint
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
  name: GetBufferedEventCount
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
  name: GetStatus
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetStatus
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed
  name: InternalCommittedEventProcessed
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.CommittedEventReceived
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
- uid: EventStore.Projections.Core.Services.Processing.PartitionState
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionState
  parent: EventStore.Projections.Core.Services.Processing
  name: PartitionState
  nameWithType: PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  commentId: T:EventStore.Projections.Core.Services.Processing.EventProcessedResult
  parent: EventStore.Projections.Core.Services.Processing
  name: EventProcessedResult
  nameWithType: EventProcessedResult
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed
  name: InternalPartitionDeletedProcessed
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt
  name: BeginGetPartitionStateAt
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  isExternal: true
  name: BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean)
  nameWithType: IProjectionPhaseStateManager.BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action<EventStore.Projections.Core.Services.Processing.PartitionState>, System.Boolean)
  nameWithType.vb: IProjectionPhaseStateManager.BeginGetPartitionStateAt(String, CheckpointTag, Action(Of PartitionState), Boolean)
  fullName.vb: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action(Of EventStore.Projections.Core.Services.Processing.PartitionState), System.Boolean)
  name.vb: BeginGetPartitionStateAt(String, CheckpointTag, Action(Of PartitionState), Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
    name: BeginGetPartitionStateAt
    nameWithType: IProjectionPhaseStateManager.BeginGetPartitionStateAt
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
    name: BeginGetPartitionStateAt
    nameWithType: IProjectionPhaseStateManager.BeginGetPartitionStateAt
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{EventStore.Projections.Core.Services.Processing.PartitionState}
  commentId: '!:Action{EventStore.Projections.Core.Services.Processing.PartitionState}'
  definition: Action`1
  name: Action<PartitionState>
  nameWithType: Action<PartitionState>
  fullName: Action<EventStore.Projections.Core.Services.Processing.PartitionState>
  nameWithType.vb: Action(Of PartitionState)
  fullName.vb: Action(Of EventStore.Projections.Core.Services.Processing.PartitionState)
  name.vb: Action(Of PartitionState)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing
  name: FinalizeEventProcessing
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult
  name: EmitEofResult
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder
  name: RecordEventOrder
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
  name: Complete
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Complete
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter.Complete
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter.Complete
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter
  name: Complete()
  nameWithType: IProjectionPhaseCompleter.Complete()
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter.Complete()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter.Complete
    name: Complete
    nameWithType: IProjectionPhaseCompleter.Complete
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter.Complete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter.Complete
    name: Complete
    nameWithType: IProjectionPhaseCompleter.Complete
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter.Complete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem
  name: SetCurrentCheckpointSuggestedWorkItem
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager
  name: SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem)
  nameWithType: IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
    name: SetCurrentCheckpointSuggestedWorkItem
    nameWithType: IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
    name: CheckpointSuggestedWorkItem
    nameWithType: CheckpointSuggestedWorkItem
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
    name: SetCurrentCheckpointSuggestedWorkItem
    nameWithType: IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.SetCurrentCheckpointSuggestedWorkItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
    name: CheckpointSuggestedWorkItem
    nameWithType: CheckpointSuggestedWorkItem
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointSuggestedWorkItem
  nameWithType: CheckpointSuggestedWorkItem
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics
  name: GetStatistics
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetStatistics
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: GetStatistics(ProjectionStatistics)
  nameWithType: IProjectionProcessingPhase.GetStatistics(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
    name: GetStatistics
    nameWithType: IProjectionProcessingPhase.GetStatistics
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.ProjectionStatistics
    name: ProjectionStatistics
    nameWithType: ProjectionStatistics
    fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
    name: GetStatistics
    nameWithType: IProjectionProcessingPhase.GetStatistics
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.ProjectionStatistics
    name: ProjectionStatistics
    nameWithType: ProjectionStatistics
    fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.ProjectionStatistics
  commentId: T:EventStore.Projections.Core.Services.ProjectionStatistics
  parent: EventStore.Projections.Core.Services
  name: ProjectionStatistics
  nameWithType: ProjectionStatistics
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
  name: MakeZeroCheckpointTag
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: MakeZeroCheckpointTag()
  nameWithType: IProjectionProcessingPhase.MakeZeroCheckpointTag()
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
    name: MakeZeroCheckpointTag
    nameWithType: IProjectionProcessingPhase.MakeZeroCheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
    name: MakeZeroCheckpointTag
    nameWithType: IProjectionProcessingPhase.MakeZeroCheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
  name: EnsureUnsubscribed
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: EnsureUnsubscribed()
  nameWithType: IProjectionProcessingPhase.EnsureUnsubscribed()
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
    name: EnsureUnsubscribed
    nameWithType: IProjectionProcessingPhase.EnsureUnsubscribed
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
    name: EnsureUnsubscribed
    nameWithType: IProjectionProcessingPhase.EnsureUnsubscribed
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(EventReaderSubscriptionMessage.ReaderAssignedReader)
  nameWithType: IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>.Handle(EventReaderSubscriptionMessage.ReaderAssignedReader)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader>.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.ReaderAssignedReader).Handle(EventReaderSubscriptionMessage.ReaderAssignedReader)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader).Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
    name: EventReaderSubscriptionMessage.ReaderAssignedReader
    nameWithType: EventReaderSubscriptionMessage.ReaderAssignedReader
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of EventReaderSubscriptionMessage.ReaderAssignedReader).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
    name: EventReaderSubscriptionMessage.ReaderAssignedReader
    nameWithType: EventReaderSubscriptionMessage.ReaderAssignedReader
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.ReaderAssignedReader
  nameWithType: EventReaderSubscriptionMessage.ReaderAssignedReader
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
  name: Dispose
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Dispose
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState
  name: SetProjectionState
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: SetProjectionState(PhaseState)
  nameWithType: IProjectionProcessingPhase.SetProjectionState(PhaseState)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
    name: SetProjectionState
    nameWithType: IProjectionProcessingPhase.SetProjectionState
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.PhaseState
    name: PhaseState
    nameWithType: PhaseState
    fullName: EventStore.Projections.Core.Services.Processing.PhaseState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
    name: SetProjectionState
    nameWithType: IProjectionProcessingPhase.SetProjectionState
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.PhaseState
    name: PhaseState
    nameWithType: PhaseState
    fullName: EventStore.Projections.Core.Services.Processing.PhaseState
  - name: )
    nameWithType: )
    fullName: )

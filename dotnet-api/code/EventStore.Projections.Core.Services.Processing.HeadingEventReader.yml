### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader
  commentId: T:EventStore.Projections.Core.Services.Processing.HeadingEventReader
  id: HeadingEventReader
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.HeadingEventReader.#ctor(System.Int32,EventStore.Core.Bus.IPublisher)
  - EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  - EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  - EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  - EventStore.Projections.Core.Services.Processing.HeadingEventReader.Start(Guid,EventStore.Projections.Core.Services.Processing.IEventReader)
  - EventStore.Projections.Core.Services.Processing.HeadingEventReader.Stop
  - EventStore.Projections.Core.Services.Processing.HeadingEventReader.TrySubscribe(Guid,EventStore.Projections.Core.Services.Processing.IReaderSubscription,System.Int64)
  - EventStore.Projections.Core.Services.Processing.HeadingEventReader.Unsubscribe(Guid)
  langs:
  - csharp
  - vb
  name: HeadingEventReader
  nameWithType: HeadingEventReader
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: HeadingEventReader
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class HeadingEventReader : object'
    content.vb: >-
      Public Class HeadingEventReader

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.#ctor(System.Int32,EventStore.Core.Bus.IPublisher)
  commentId: M:EventStore.Projections.Core.Services.Processing.HeadingEventReader.#ctor(System.Int32,EventStore.Core.Bus.IPublisher)
  id: '#ctor(System.Int32,EventStore.Core.Bus.IPublisher)'
  parent: EventStore.Projections.Core.Services.Processing.HeadingEventReader
  langs:
  - csharp
  - vb
  name: HeadingEventReader(Int32, IPublisher)
  nameWithType: HeadingEventReader.HeadingEventReader(Int32, IPublisher)
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.HeadingEventReader(System.Int32, EventStore.Core.Bus.IPublisher)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
    startLine: 71
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public HeadingEventReader(int eventCacheSize, IPublisher publisher)
    parameters:
    - id: eventCacheSize
      type: System.Int32
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    content.vb: Public Sub New(eventCacheSize As Integer, publisher As IPublisher)
  overload: EventStore.Projections.Core.Services.Processing.HeadingEventReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  commentId: M:EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  id: Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  parent: EventStore.Projections.Core.Services.Processing.HeadingEventReader
  langs:
  - csharp
  - vb
  name: Handle(ReaderSubscriptionMessage.CommittedEventDistributed)
  nameWithType: HeadingEventReader.Handle(ReaderSubscriptionMessage.CommittedEventDistributed)
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
    startLine: 76
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool Handle(ReaderSubscriptionMessage.CommittedEventDistributed message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
    return:
      type: System.Boolean
    content.vb: Public Function Handle(message As ReaderSubscriptionMessage.CommittedEventDistributed) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  commentId: M:EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  id: Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  parent: EventStore.Projections.Core.Services.Processing.HeadingEventReader
  langs:
  - csharp
  - vb
  name: Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  nameWithType: HeadingEventReader.Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
    startLine: 90
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
    return:
      type: System.Boolean
    content.vb: Public Function Handle(message As ReaderSubscriptionMessage.EventReaderPartitionDeleted) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  commentId: M:EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  id: Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  parent: EventStore.Projections.Core.Services.Processing.HeadingEventReader
  langs:
  - csharp
  - vb
  name: Handle(ReaderSubscriptionMessage.EventReaderIdle)
  nameWithType: HeadingEventReader.Handle(ReaderSubscriptionMessage.EventReaderIdle)
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
    startLine: 103
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool Handle(ReaderSubscriptionMessage.EventReaderIdle message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
    return:
      type: System.Boolean
    content.vb: Public Function Handle(message As ReaderSubscriptionMessage.EventReaderIdle) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Start(Guid,EventStore.Projections.Core.Services.Processing.IEventReader)
  commentId: M:EventStore.Projections.Core.Services.Processing.HeadingEventReader.Start(Guid,EventStore.Projections.Core.Services.Processing.IEventReader)
  id: Start(Guid,EventStore.Projections.Core.Services.Processing.IEventReader)
  parent: EventStore.Projections.Core.Services.Processing.HeadingEventReader
  langs:
  - csharp
  - vb
  name: Start(Guid, IEventReader)
  nameWithType: HeadingEventReader.Start(Guid, IEventReader)
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Start(Guid, EventStore.Projections.Core.Services.Processing.IEventReader)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Start
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
    startLine: 130
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Start(Guid eventReaderId, IEventReader eventReader)
    parameters:
    - id: eventReaderId
      type: Guid
    - id: eventReader
      type: EventStore.Projections.Core.Services.Processing.IEventReader
    content.vb: Public Sub Start(eventReaderId As Guid, eventReader As IEventReader)
  overload: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Stop
  commentId: M:EventStore.Projections.Core.Services.Processing.HeadingEventReader.Stop
  id: Stop
  parent: EventStore.Projections.Core.Services.Processing.HeadingEventReader
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: HeadingEventReader.Stop()
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Stop()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Stop
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
    startLine: 140
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.TrySubscribe(Guid,EventStore.Projections.Core.Services.Processing.IReaderSubscription,System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.HeadingEventReader.TrySubscribe(Guid,EventStore.Projections.Core.Services.Processing.IReaderSubscription,System.Int64)
  id: TrySubscribe(Guid,EventStore.Projections.Core.Services.Processing.IReaderSubscription,System.Int64)
  parent: EventStore.Projections.Core.Services.Processing.HeadingEventReader
  langs:
  - csharp
  - vb
  name: TrySubscribe(Guid, IReaderSubscription, Int64)
  nameWithType: HeadingEventReader.TrySubscribe(Guid, IReaderSubscription, Int64)
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.TrySubscribe(Guid, EventStore.Projections.Core.Services.Processing.IReaderSubscription, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: TrySubscribe
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
    startLine: 147
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool TrySubscribe(Guid projectionId, IReaderSubscription readerSubscription, long fromTransactionFilePosition)
    parameters:
    - id: projectionId
      type: Guid
    - id: readerSubscription
      type: EventStore.Projections.Core.Services.Processing.IReaderSubscription
    - id: fromTransactionFilePosition
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Function TrySubscribe(projectionId As Guid, readerSubscription As IReaderSubscription, fromTransactionFilePosition As Long) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.HeadingEventReader.TrySubscribe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Unsubscribe(Guid)
  commentId: M:EventStore.Projections.Core.Services.Processing.HeadingEventReader.Unsubscribe(Guid)
  id: Unsubscribe(Guid)
  parent: EventStore.Projections.Core.Services.Processing.HeadingEventReader
  langs:
  - csharp
  - vb
  name: Unsubscribe(Guid)
  nameWithType: HeadingEventReader.Unsubscribe(Guid)
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Unsubscribe(Guid)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Unsubscribe
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/HeadingEventReader.cs
    startLine: 165
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Unsubscribe(Guid projectionId)
    parameters:
    - id: projectionId
      type: Guid
    content.vb: Public Sub Unsubscribe(projectionId As Guid)
  overload: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Unsubscribe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.HeadingEventReader.#ctor
  name: HeadingEventReader
  nameWithType: HeadingEventReader.HeadingEventReader
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.HeadingEventReader
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle
  name: Handle
  nameWithType: HeadingEventReader.Handle
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Handle
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  commentId: T:EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  parent: EventStore.Projections.Core.Messages
  name: ReaderSubscriptionMessage.CommittedEventDistributed
  nameWithType: ReaderSubscriptionMessage.CommittedEventDistributed
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
  commentId: T:EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
  parent: EventStore.Projections.Core.Messages
  name: ReaderSubscriptionMessage.EventReaderPartitionDeleted
  nameWithType: ReaderSubscriptionMessage.EventReaderPartitionDeleted
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
  commentId: T:EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
  parent: EventStore.Projections.Core.Messages
  name: ReaderSubscriptionMessage.EventReaderIdle
  nameWithType: ReaderSubscriptionMessage.EventReaderIdle
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Start*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.HeadingEventReader.Start
  name: Start
  nameWithType: HeadingEventReader.Start
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Start
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Services.Processing.IEventReader
  commentId: T:EventStore.Projections.Core.Services.Processing.IEventReader
  parent: EventStore.Projections.Core.Services.Processing
  name: IEventReader
  nameWithType: IEventReader
  fullName: EventStore.Projections.Core.Services.Processing.IEventReader
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Stop*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.HeadingEventReader.Stop
  name: Stop
  nameWithType: HeadingEventReader.Stop
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Stop
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.TrySubscribe*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.HeadingEventReader.TrySubscribe
  name: TrySubscribe
  nameWithType: HeadingEventReader.TrySubscribe
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.TrySubscribe
- uid: EventStore.Projections.Core.Services.Processing.IReaderSubscription
  commentId: T:EventStore.Projections.Core.Services.Processing.IReaderSubscription
  parent: EventStore.Projections.Core.Services.Processing
  name: IReaderSubscription
  nameWithType: IReaderSubscription
  fullName: EventStore.Projections.Core.Services.Processing.IReaderSubscription
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Unsubscribe*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.HeadingEventReader.Unsubscribe
  name: Unsubscribe
  nameWithType: HeadingEventReader.Unsubscribe
  fullName: EventStore.Projections.Core.Services.Processing.HeadingEventReader.Unsubscribe

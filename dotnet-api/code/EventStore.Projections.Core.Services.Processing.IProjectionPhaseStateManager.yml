### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  id: IProjectionPhaseStateManager
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  langs:
  - csharp
  - vb
  name: IProjectionPhaseStateManager
  nameWithType: IProjectionPhaseStateManager
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  type: Interface
  source:
    id: IProjectionPhaseStateManager
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public interface IProjectionPhaseStateManager
    content.vb: Public Interface IProjectionPhaseStateManager
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  id: BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  langs:
  - csharp
  - vb
  name: BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean)
  nameWithType: IProjectionPhaseStateManager.BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action<EventStore.Projections.Core.Services.Processing.PartitionState>, System.Boolean)
  type: Method
  source:
    id: BeginGetPartitionStateAt
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void BeginGetPartitionStateAt(string statePartition, CheckpointTag at, Action<PartitionState> loadCompleted, bool lockLoaded)
    parameters:
    - id: statePartition
      type: System.String
    - id: at
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: loadCompleted
      type: Action{EventStore.Projections.Core.Services.Processing.PartitionState}
    - id: lockLoaded
      type: System.Boolean
    content.vb: Sub BeginGetPartitionStateAt(statePartition As String, at As CheckpointTag, loadCompleted As Action(Of PartitionState), lockLoaded As Boolean)
  overload: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt*
  nameWithType.vb: IProjectionPhaseStateManager.BeginGetPartitionStateAt(String, CheckpointTag, Action(Of PartitionState), Boolean)
  fullName.vb: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action(Of EventStore.Projections.Core.Services.Processing.PartitionState), System.Boolean)
  name.vb: BeginGetPartitionStateAt(String, CheckpointTag, Action(Of PartitionState), Boolean)
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  langs:
  - csharp
  - vb
  name: UnlockAndForgetBefore(CheckpointTag)
  nameWithType: IProjectionPhaseStateManager.UnlockAndForgetBefore(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: UnlockAndForgetBefore
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void UnlockAndForgetBefore(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Sub UnlockAndForgetBefore(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore*
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  id: LastProcessedEventPosition
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  langs:
  - csharp
  - vb
  name: LastProcessedEventPosition
  nameWithType: IProjectionPhaseStateManager.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  type: Property
  source:
    id: LastProcessedEventPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: CheckpointTag LastProcessedEventPosition { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: ReadOnly Property LastProcessedEventPosition As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt
  name: BeginGetPartitionStateAt
  nameWithType: IProjectionPhaseStateManager.BeginGetPartitionStateAt
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: Action{EventStore.Projections.Core.Services.Processing.PartitionState}
  commentId: '!:Action{EventStore.Projections.Core.Services.Processing.PartitionState}'
  definition: Action`1
  name: Action<PartitionState>
  nameWithType: Action<PartitionState>
  fullName: Action<EventStore.Projections.Core.Services.Processing.PartitionState>
  nameWithType.vb: Action(Of PartitionState)
  fullName.vb: Action(Of EventStore.Projections.Core.Services.Processing.PartitionState)
  name.vb: Action(Of PartitionState)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore
  name: UnlockAndForgetBefore
  nameWithType: IProjectionPhaseStateManager.UnlockAndForgetBefore
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  name: LastProcessedEventPosition
  nameWithType: IProjectionPhaseStateManager.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition

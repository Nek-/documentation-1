### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter
  commentId: T:EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter
  id: MultiStreamEventFilter
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.#ctor(HashSet{System.String},System.Boolean,HashSet{System.String})
  - EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.DeletedNotificationPasses(System.String)
  - EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.GetCategory(System.String)
  - EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.PassesSource(System.Boolean,System.String,System.String)
  langs:
  - csharp
  - vb
  name: MultiStreamEventFilter
  nameWithType: MultiStreamEventFilter
  fullName: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/MultiStreamEventFilter.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: MultiStreamEventFilter
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/MultiStreamEventFilter.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class MultiStreamEventFilter : EventFilter'
    content.vb: >-
      Public Class MultiStreamEventFilter

          Inherits EventFilter
  inheritance:
  - System.Object
  - EventStore.Projections.Core.Services.Processing.EventFilter
  inheritedMembers:
  - EventStore.Projections.Core.Services.Processing.EventFilter.Passes(System.Boolean,System.String,System.String,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.#ctor(HashSet{System.String},System.Boolean,HashSet{System.String})
  commentId: M:EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.#ctor(HashSet{System.String},System.Boolean,HashSet{System.String})
  id: '#ctor(HashSet{System.String},System.Boolean,HashSet{System.String})'
  parent: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter
  langs:
  - csharp
  - vb
  name: MultiStreamEventFilter(HashSet<String>, Boolean, HashSet<String>)
  nameWithType: MultiStreamEventFilter.MultiStreamEventFilter(HashSet<String>, Boolean, HashSet<String>)
  fullName: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.MultiStreamEventFilter(HashSet<System.String>, System.Boolean, HashSet<System.String>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/MultiStreamEventFilter.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/MultiStreamEventFilter.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public MultiStreamEventFilter(HashSet<string> streams, bool allEvents, HashSet<string> events)
    parameters:
    - id: streams
      type: HashSet{System.String}
    - id: allEvents
      type: System.Boolean
    - id: events
      type: HashSet{System.String}
    content.vb: Public Sub New(streams As HashSet(Of String), allEvents As Boolean, events As HashSet(Of String))
  overload: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.#ctor*
  nameWithType.vb: MultiStreamEventFilter.MultiStreamEventFilter(HashSet(Of String), Boolean, HashSet(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.MultiStreamEventFilter(HashSet(Of System.String), System.Boolean, HashSet(Of System.String))
  name.vb: MultiStreamEventFilter(HashSet(Of String), Boolean, HashSet(Of String))
- uid: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.DeletedNotificationPasses(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.DeletedNotificationPasses(System.String)
  id: DeletedNotificationPasses(System.String)
  parent: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter
  langs:
  - csharp
  - vb
  name: DeletedNotificationPasses(String)
  nameWithType: MultiStreamEventFilter.DeletedNotificationPasses(String)
  fullName: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.DeletedNotificationPasses(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/MultiStreamEventFilter.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: DeletedNotificationPasses
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/MultiStreamEventFilter.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected override bool DeletedNotificationPasses(string positionStreamId)
    parameters:
    - id: positionStreamId
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function DeletedNotificationPasses(positionStreamId As String) As Boolean
  overridden: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses(System.String)
  overload: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.DeletedNotificationPasses*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.PassesSource(System.Boolean,System.String,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.PassesSource(System.Boolean,System.String,System.String)
  id: PassesSource(System.Boolean,System.String,System.String)
  parent: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter
  langs:
  - csharp
  - vb
  name: PassesSource(Boolean, String, String)
  nameWithType: MultiStreamEventFilter.PassesSource(Boolean, String, String)
  fullName: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.PassesSource(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/MultiStreamEventFilter.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: PassesSource
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/MultiStreamEventFilter.cs
    startLine: 15
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override bool PassesSource(bool resolvedFromLinkTo, string positionStreamId, string eventType)
    parameters:
    - id: resolvedFromLinkTo
      type: System.Boolean
    - id: positionStreamId
      type: System.String
    - id: eventType
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overrides Function PassesSource(resolvedFromLinkTo As Boolean, positionStreamId As String, eventType As String) As Boolean
  overridden: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource(System.Boolean,System.String,System.String)
  overload: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.PassesSource*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.GetCategory(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.GetCategory(System.String)
  id: GetCategory(System.String)
  parent: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter
  langs:
  - csharp
  - vb
  name: GetCategory(String)
  nameWithType: MultiStreamEventFilter.GetCategory(String)
  fullName: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.GetCategory(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/MultiStreamEventFilter.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: GetCategory
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/MultiStreamEventFilter.cs
    startLine: 19
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override string GetCategory(string positionStreamId)
    parameters:
    - id: positionStreamId
      type: System.String
    return:
      type: System.String
    content.vb: Public Overrides Function GetCategory(positionStreamId As String) As String
  overridden: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory(System.String)
  overload: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.GetCategory*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.EventFilter
  commentId: T:EventStore.Projections.Core.Services.Processing.EventFilter
  parent: EventStore.Projections.Core.Services.Processing
  name: EventFilter
  nameWithType: EventFilter
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.Passes(System.Boolean,System.String,System.String,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.Passes(System.Boolean,System.String,System.String,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  isExternal: true
  name: Passes(Boolean, String, String, Boolean)
  nameWithType: EventFilter.Passes(Boolean, String, String, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.Passes(System.Boolean, System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventFilter.Passes(System.Boolean,System.String,System.String,System.Boolean)
    name: Passes
    nameWithType: EventFilter.Passes
    fullName: EventStore.Projections.Core.Services.Processing.EventFilter.Passes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventFilter.Passes(System.Boolean,System.String,System.String,System.Boolean)
    name: Passes
    nameWithType: EventFilter.Passes
    fullName: EventStore.Projections.Core.Services.Processing.EventFilter.Passes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification(System.String)
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  isExternal: true
  name: PassesDeleteNotification(String)
  nameWithType: EventFilter.PassesDeleteNotification(String)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification(System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification(System.String)
    name: PassesDeleteNotification
    nameWithType: EventFilter.PassesDeleteNotification
    fullName: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification(System.String)
    name: PassesDeleteNotification
    nameWithType: EventFilter.PassesDeleteNotification
    fullName: EventStore.Projections.Core.Services.Processing.EventFilter.PassesDeleteNotification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.#ctor
  name: MultiStreamEventFilter
  nameWithType: MultiStreamEventFilter.MultiStreamEventFilter
  fullName: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.MultiStreamEventFilter
- uid: HashSet{System.String}
  commentId: '!:HashSet{System.String}'
  definition: HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: HashSet`1
  isExternal: true
  name: HashSet<>
  nameWithType: HashSet<>
  fullName: HashSet<>
  nameWithType.vb: HashSet(Of )
  fullName.vb: HashSet(Of )
  name.vb: HashSet(Of )
  spec.csharp:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses(System.String)
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  isExternal: true
  name: DeletedNotificationPasses(String)
  nameWithType: EventFilter.DeletedNotificationPasses(String)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses(System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses(System.String)
    name: DeletedNotificationPasses
    nameWithType: EventFilter.DeletedNotificationPasses
    fullName: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses(System.String)
    name: DeletedNotificationPasses
    nameWithType: EventFilter.DeletedNotificationPasses
    fullName: EventStore.Projections.Core.Services.Processing.EventFilter.DeletedNotificationPasses
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.DeletedNotificationPasses*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.DeletedNotificationPasses
  name: DeletedNotificationPasses
  nameWithType: MultiStreamEventFilter.DeletedNotificationPasses
  fullName: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.DeletedNotificationPasses
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource(System.Boolean,System.String,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource(System.Boolean,System.String,System.String)
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  isExternal: true
  name: PassesSource(Boolean, String, String)
  nameWithType: EventFilter.PassesSource(Boolean, String, String)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource(System.Boolean, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource(System.Boolean,System.String,System.String)
    name: PassesSource
    nameWithType: EventFilter.PassesSource
    fullName: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource(System.Boolean,System.String,System.String)
    name: PassesSource
    nameWithType: EventFilter.PassesSource
    fullName: EventStore.Projections.Core.Services.Processing.EventFilter.PassesSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.PassesSource*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.PassesSource
  name: PassesSource
  nameWithType: MultiStreamEventFilter.PassesSource
  fullName: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.PassesSource
- uid: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory(System.String)
  parent: EventStore.Projections.Core.Services.Processing.EventFilter
  isExternal: true
  name: GetCategory(String)
  nameWithType: EventFilter.GetCategory(String)
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory(System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory(System.String)
    name: GetCategory
    nameWithType: EventFilter.GetCategory
    fullName: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory(System.String)
    name: GetCategory
    nameWithType: EventFilter.GetCategory
    fullName: EventStore.Projections.Core.Services.Processing.EventFilter.GetCategory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.GetCategory*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.GetCategory
  name: GetCategory
  nameWithType: MultiStreamEventFilter.GetCategory
  fullName: EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.GetCategory

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter
  commentId: T:EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter
  id: NoopResultEventEmitter
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter.ResultUpdated(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  langs:
  - csharp
  - vb
  name: NoopResultEventEmitter
  nameWithType: NoopResultEventEmitter
  fullName: EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter
  type: Class
  source:
    id: NoopResultEventEmitter
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/NoopResultEventEmitter.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class NoopResultEventEmitter : object, IResultEventEmitter'
    content.vb: >-
      Public Class NoopResultEventEmitter
          Inherits Object
          Implements IResultEventEmitter
  inheritance:
  - System.Object
  implements:
  - EventStore.Projections.Core.Services.Processing.IResultEventEmitter
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter.ResultUpdated(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter.ResultUpdated(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: ResultUpdated(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter
  langs:
  - csharp
  - vb
  name: ResultUpdated(String, String, CheckpointTag)
  nameWithType: NoopResultEventEmitter.ResultUpdated(String, String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter.ResultUpdated(System.String, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: ResultUpdated
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/NoopResultEventEmitter.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public EmittedEventEnvelope[] ResultUpdated(string partition, string result, CheckpointTag at)
    parameters:
    - id: partition
      type: System.String
    - id: result
      type: System.String
    - id: at
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    content.vb: Public Function ResultUpdated(partition As String, result As String, at As CheckpointTag) As EmittedEventEnvelope()
  overload: EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter.ResultUpdated*
  implements:
  - EventStore.Projections.Core.Services.Processing.IResultEventEmitter.ResultUpdated(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.IResultEventEmitter
  commentId: T:EventStore.Projections.Core.Services.Processing.IResultEventEmitter
  parent: EventStore.Projections.Core.Services.Processing
  name: IResultEventEmitter
  nameWithType: IResultEventEmitter
  fullName: EventStore.Projections.Core.Services.Processing.IResultEventEmitter
- uid: EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter.ResultUpdated*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter.ResultUpdated
  name: ResultUpdated
  nameWithType: NoopResultEventEmitter.ResultUpdated
  fullName: EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter.ResultUpdated
- uid: EventStore.Projections.Core.Services.Processing.IResultEventEmitter.ResultUpdated(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IResultEventEmitter.ResultUpdated(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IResultEventEmitter
  isExternal: true
  name: ResultUpdated(String, String, CheckpointTag)
  nameWithType: IResultEventEmitter.ResultUpdated(String, String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IResultEventEmitter.ResultUpdated(System.String, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IResultEventEmitter.ResultUpdated(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: ResultUpdated
    nameWithType: IResultEventEmitter.ResultUpdated
    fullName: EventStore.Projections.Core.Services.Processing.IResultEventEmitter.ResultUpdated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IResultEventEmitter.ResultUpdated(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: ResultUpdated
    nameWithType: IResultEventEmitter.ResultUpdated
    fullName: EventStore.Projections.Core.Services.Processing.IResultEventEmitter.ResultUpdated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  isExternal: true
  name: EmittedEventEnvelope[]
  nameWithType: EmittedEventEnvelope[]
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  nameWithType.vb: EmittedEventEnvelope()
  fullName.vb: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope()
  name.vb: EmittedEventEnvelope()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()

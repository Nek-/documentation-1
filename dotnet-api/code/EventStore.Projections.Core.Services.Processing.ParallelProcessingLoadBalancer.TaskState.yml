### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState
  commentId: T:EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState
  id: ParallelProcessingLoadBalancer.TaskState
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.#ctor(Action{System.Int32})
  - EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.Measured
  - EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.Size
  langs:
  - csharp
  - vb
  name: ParallelProcessingLoadBalancer.TaskState
  nameWithType: ParallelProcessingLoadBalancer.TaskState
  fullName: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState
  type: Class
  source:
    id: TaskState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelProcessingLoadBalancer.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class TaskState : object'
    content.vb: >-
      Public Class TaskState

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.Size
  commentId: F:EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.Size
  id: Size
  parent: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: ParallelProcessingLoadBalancer.TaskState.Size
  fullName: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.Size
  type: Field
  source:
    id: Size
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelProcessingLoadBalancer.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public long Size
    return:
      type: System.Int64
    content.vb: Public Size As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.Measured
  commentId: F:EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.Measured
  id: Measured
  parent: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState
  langs:
  - csharp
  - vb
  name: Measured
  nameWithType: ParallelProcessingLoadBalancer.TaskState.Measured
  fullName: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.Measured
  type: Field
  source:
    id: Measured
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelProcessingLoadBalancer.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool Measured
    return:
      type: System.Boolean
    content.vb: Public Measured As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.#ctor(Action{System.Int32})
  commentId: M:EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.#ctor(Action{System.Int32})
  id: '#ctor(Action{System.Int32})'
  parent: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState
  langs:
  - csharp
  - vb
  name: TaskState(Action<Int32>)
  nameWithType: ParallelProcessingLoadBalancer.TaskState.TaskState(Action<Int32>)
  fullName: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.TaskState(Action<System.Int32>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelProcessingLoadBalancer.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public TaskState(Action<int> scheduled)
    parameters:
    - id: scheduled
      type: Action{System.Int32}
    content.vb: Public Sub New(scheduled As Action(Of Integer))
  overload: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.#ctor*
  nameWithType.vb: ParallelProcessingLoadBalancer.TaskState.TaskState(Action(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.TaskState(Action(Of System.Int32))
  name.vb: TaskState(Action(Of Int32))
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.#ctor
  name: TaskState
  nameWithType: ParallelProcessingLoadBalancer.TaskState.TaskState
  fullName: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.TaskState
- uid: Action{System.Int32}
  commentId: '!:Action{System.Int32}'
  definition: Action`1
  name: Action<Int32>
  nameWithType: Action<Int32>
  fullName: Action<System.Int32>
  nameWithType.vb: Action(Of Int32)
  fullName.vb: Action(Of System.Int32)
  name.vb: Action(Of Int32)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

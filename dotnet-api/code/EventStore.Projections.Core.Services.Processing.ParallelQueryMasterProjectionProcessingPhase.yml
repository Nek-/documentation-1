### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  commentId: T:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  id: ParallelQueryMasterProjectionProcessingPhase
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.#ctor(EventStore.Projections.Core.Services.Processing.CoreProjection,Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.ProjectionConfig,Action,EventStore.Projections.Core.Services.IProjectionStateHandler,EventStore.Projections.Core.Services.Processing.PartitionStateCache,System.String,EventStore.Common.Log.ILogger,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.Processing.IReaderStrategy,EventStore.Projections.Core.Services.Processing.IResultWriter,System.Boolean,System.Boolean,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase._maxScheduledSizePerWorker
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase._maxUnmeasuredTasksPerWorker
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.CompleteSpoolProcessingWorkItem(Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Dispose
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  langs:
  - csharp
  - vb
  name: ParallelQueryMasterProjectionProcessingPhase
  nameWithType: ParallelQueryMasterProjectionProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  type: Class
  source:
    id: ParallelQueryMasterProjectionProcessingPhase
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class ParallelQueryMasterProjectionProcessingPhase : EventSubscriptionBasedProjectionProcessingPhase, IProjectionPhaseCompleter, IProjectionPhaseCheckpointManager, IHandle<EventReaderSubscriptionMessage.ProgressChanged>, IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>, IHandle<EventReaderSubscriptionMessage.NotAuthorized>, IHandle<EventReaderSubscriptionMessage.EofReached>, IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>, IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>, IHandle<EventReaderSubscriptionMessage.Failed>, IProjectionProcessingPhase, IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>, IProjectionPhaseStateManager, IHandle<EventReaderSubscriptionMessage.CommittedEventReceived>, ISpoolStreamWorkItemContainer'
    content.vb: >-
      Public Class ParallelQueryMasterProjectionProcessingPhase
          Inherits EventSubscriptionBasedProjectionProcessingPhase
          Implements IProjectionPhaseCompleter, IProjectionPhaseCheckpointManager, IHandle(Of EventReaderSubscriptionMessage.ProgressChanged), IHandle(Of EventReaderSubscriptionMessage.SubscriptionStarted), IHandle(Of EventReaderSubscriptionMessage.NotAuthorized), IHandle(Of EventReaderSubscriptionMessage.EofReached), IHandle(Of EventReaderSubscriptionMessage.CheckpointSuggested), IHandle(Of EventReaderSubscriptionMessage.ReaderAssignedReader), IHandle(Of EventReaderSubscriptionMessage.Failed), IProjectionProcessingPhase, IDisposable, IHandle(Of CoreProjectionManagementMessage.GetState), IHandle(Of CoreProjectionManagementMessage.GetResult), IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded), IProjectionPhaseStateManager, IHandle(Of EventReaderSubscriptionMessage.CommittedEventReceived), ISpoolStreamWorkItemContainer
  inheritance:
  - System.Object
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed}
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  - IDisposable
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived}
  - EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer
  inheritedMembers:
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._publisher
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._coreProjection
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._checkpointManager
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionConfig
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionName
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._logger
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._processingQueue
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._readerStrategy
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._resultWriter
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscribed
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._state
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._stopOnEof
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(System.String,Exception)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  - EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase._maxScheduledSizePerWorker
  commentId: F:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase._maxScheduledSizePerWorker
  id: _maxScheduledSizePerWorker
  parent: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _maxScheduledSizePerWorker
  nameWithType: ParallelQueryMasterProjectionProcessingPhase._maxScheduledSizePerWorker
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase._maxScheduledSizePerWorker
  type: Field
  source:
    id: _maxScheduledSizePerWorker
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public const int _maxScheduledSizePerWorker = null
    return:
      type: System.Int32
    content.vb: Public Const _maxScheduledSizePerWorker As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase._maxUnmeasuredTasksPerWorker
  commentId: F:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase._maxUnmeasuredTasksPerWorker
  id: _maxUnmeasuredTasksPerWorker
  parent: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: _maxUnmeasuredTasksPerWorker
  nameWithType: ParallelQueryMasterProjectionProcessingPhase._maxUnmeasuredTasksPerWorker
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase._maxUnmeasuredTasksPerWorker
  type: Field
  source:
    id: _maxUnmeasuredTasksPerWorker
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public const int _maxUnmeasuredTasksPerWorker = null
    return:
      type: System.Int32
    content.vb: Public Const _maxUnmeasuredTasksPerWorker As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.#ctor(EventStore.Projections.Core.Services.Processing.CoreProjection,Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.ProjectionConfig,Action,EventStore.Projections.Core.Services.IProjectionStateHandler,EventStore.Projections.Core.Services.Processing.PartitionStateCache,System.String,EventStore.Common.Log.ILogger,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.Processing.IReaderStrategy,EventStore.Projections.Core.Services.Processing.IResultWriter,System.Boolean,System.Boolean,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  commentId: M:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.#ctor(EventStore.Projections.Core.Services.Processing.CoreProjection,Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.ProjectionConfig,Action,EventStore.Projections.Core.Services.IProjectionStateHandler,EventStore.Projections.Core.Services.Processing.PartitionStateCache,System.String,EventStore.Common.Log.ILogger,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.Processing.IReaderStrategy,EventStore.Projections.Core.Services.Processing.IResultWriter,System.Boolean,System.Boolean,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  id: '#ctor(EventStore.Projections.Core.Services.Processing.CoreProjection,Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.ProjectionConfig,Action,EventStore.Projections.Core.Services.IProjectionStateHandler,EventStore.Projections.Core.Services.Processing.PartitionStateCache,System.String,EventStore.Common.Log.ILogger,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.Processing.IReaderStrategy,EventStore.Projections.Core.Services.Processing.IResultWriter,System.Boolean,System.Boolean,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)'
  parent: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: ParallelQueryMasterProjectionProcessingPhase(CoreProjection, Guid, IPublisher, IPublisher, ProjectionConfig, Action, IProjectionStateHandler, PartitionStateCache, String, ILogger, CheckpointTag, ICoreProjectionCheckpointManager, ReaderSubscriptionDispatcher, IReaderStrategy, IResultWriter, Boolean, Boolean, SpooledStreamReadingDispatcher, IEmittedStreamsTracker)
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.ParallelQueryMasterProjectionProcessingPhase(CoreProjection, Guid, IPublisher, IPublisher, ProjectionConfig, Action, IProjectionStateHandler, PartitionStateCache, String, ILogger, CheckpointTag, ICoreProjectionCheckpointManager, ReaderSubscriptionDispatcher, IReaderStrategy, IResultWriter, Boolean, Boolean, SpooledStreamReadingDispatcher, IEmittedStreamsTracker)
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.ParallelQueryMasterProjectionProcessingPhase(EventStore.Projections.Core.Services.Processing.CoreProjection, Guid, EventStore.Core.Bus.IPublisher, EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Services.ProjectionConfig, Action, EventStore.Projections.Core.Services.IProjectionStateHandler, EventStore.Projections.Core.Services.Processing.PartitionStateCache, System.String, EventStore.Common.Log.ILogger, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager, EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher, EventStore.Projections.Core.Services.Processing.IReaderStrategy, EventStore.Projections.Core.Services.Processing.IResultWriter, System.Boolean, System.Boolean, EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher, EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ParallelQueryMasterProjectionProcessingPhase(CoreProjection coreProjection, Guid projectionCorrelationId, IPublisher publisher, IPublisher inputQueue, ProjectionConfig projectionConfig, Action updateStatistics, IProjectionStateHandler stateHandler, PartitionStateCache partitionStateCache, string name, ILogger logger, CheckpointTag zeroCheckpointTag, ICoreProjectionCheckpointManager checkpointManager, ReaderSubscriptionDispatcher subscriptionDispatcher, IReaderStrategy readerStrategy, IResultWriter resultWriter, bool checkpointsEnabled, bool stopOnEof, SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher, IEmittedStreamsTracker emittedStreamsTracker)
    parameters:
    - id: coreProjection
      type: EventStore.Projections.Core.Services.Processing.CoreProjection
    - id: projectionCorrelationId
      type: Guid
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: inputQueue
      type: EventStore.Core.Bus.IPublisher
    - id: projectionConfig
      type: EventStore.Projections.Core.Services.ProjectionConfig
    - id: updateStatistics
      type: Action
    - id: stateHandler
      type: EventStore.Projections.Core.Services.IProjectionStateHandler
    - id: partitionStateCache
      type: EventStore.Projections.Core.Services.Processing.PartitionStateCache
    - id: name
      type: System.String
    - id: logger
      type: EventStore.Common.Log.ILogger
    - id: zeroCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: checkpointManager
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
    - id: subscriptionDispatcher
      type: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
    - id: readerStrategy
      type: EventStore.Projections.Core.Services.Processing.IReaderStrategy
    - id: resultWriter
      type: EventStore.Projections.Core.Services.Processing.IResultWriter
    - id: checkpointsEnabled
      type: System.Boolean
    - id: stopOnEof
      type: System.Boolean
    - id: spoolProcessingResponseDispatcher
      type: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
    - id: emittedStreamsTracker
      type: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
    content.vb: Public Sub New(coreProjection As CoreProjection, projectionCorrelationId As Guid, publisher As IPublisher, inputQueue As IPublisher, projectionConfig As ProjectionConfig, updateStatistics As Action, stateHandler As IProjectionStateHandler, partitionStateCache As PartitionStateCache, name As String, logger As ILogger, zeroCheckpointTag As CheckpointTag, checkpointManager As ICoreProjectionCheckpointManager, subscriptionDispatcher As ReaderSubscriptionDispatcher, readerStrategy As IReaderStrategy, resultWriter As IResultWriter, checkpointsEnabled As Boolean, stopOnEof As Boolean, spoolProcessingResponseDispatcher As SpooledStreamReadingDispatcher, emittedStreamsTracker As IEmittedStreamsTracker)
  overload: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: NewCheckpointStarted(CheckpointTag)
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.NewCheckpointStarted(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: NewCheckpointStarted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 68
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override void NewCheckpointStarted(CheckpointTag at)
    parameters:
    - id: at
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Overrides Sub NewCheckpointStarted(at As CheckpointTag)
  overridden: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.NewCheckpointStarted*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Dispose
  commentId: M:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Dispose
  id: Dispose
  parent: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.Dispose()
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Dispose()
  type: Method
  source:
    id: Dispose
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 71
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
  overload: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  commentId: M:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  id: AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  parent: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: AssignSlaves(SlaveProjectionCommunicationChannels)
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.AssignSlaves(SlaveProjectionCommunicationChannels)
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  type: Method
  source:
    id: AssignSlaves
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 74
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override void AssignSlaves(SlaveProjectionCommunicationChannels slaveProjections)
    parameters:
    - id: slaveProjections
      type: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    content.vb: Public Overrides Sub AssignSlaves(slaveProjections As SlaveProjectionCommunicationChannels)
  overridden: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  overload: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.AssignSlaves*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  id: Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Subscribe(CheckpointTag, Boolean)
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.Subscribe(CheckpointTag, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean)
  type: Method
  source:
    id: Subscribe
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 81
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override void Subscribe(CheckpointTag from, bool fromCheckpoint)
    parameters:
    - id: from
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: fromCheckpoint
      type: System.Boolean
    content.vb: Public Overrides Sub Subscribe(from As CheckpointTag, fromCheckpoint As Boolean)
  overridden: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  overload: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Subscribe*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  commentId: M:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  id: Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  parent: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Handle(EventReaderSubscriptionMessage.CommittedEventReceived)
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.CommittedEventReceived)
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 88
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(EventReaderSubscriptionMessage.CommittedEventReceived message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    content.vb: Public Sub Handle(message As EventReaderSubscriptionMessage.CommittedEventReceived)
  overload: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  id: TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  type: Method
  source:
    id: TransformCatalogEvent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 116
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string TransformCatalogEvent(CheckpointTag position, ResolvedEvent event)
    parameters:
    - id: position
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: event
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    return:
      type: System.String
    content.vb: Public Function TransformCatalogEvent(position As CheckpointTag, event As ResolvedEvent) As String
  overload: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.TransformCatalogEvent*
  implements:
  - EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.CompleteSpoolProcessingWorkItem(Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.CompleteSpoolProcessingWorkItem(Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: CompleteSpoolProcessingWorkItem(Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: CompleteSpoolProcessingWorkItem(Guid, CheckpointTag)
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.CompleteSpoolProcessingWorkItem(Guid, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.CompleteSpoolProcessingWorkItem(Guid, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: CompleteSpoolProcessingWorkItem
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ParallelQueryMasterProjectionProcessingPhase.cs
    startLine: 120
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void CompleteSpoolProcessingWorkItem(Guid correlationId, CheckpointTag position)
    parameters:
    - id: correlationId
      type: Guid
    - id: position
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub CompleteSpoolProcessingWorkItem(correlationId As Guid, position As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.CompleteSpoolProcessingWorkItem*
  implements:
  - EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem(Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  commentId: T:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  parent: EventStore.Projections.Core.Services.Processing
  name: EventSubscriptionBasedProjectionProcessingPhase
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter
  parent: EventStore.Projections.Core.Services.Processing
  name: IProjectionPhaseCompleter
  nameWithType: IProjectionPhaseCompleter
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager
  parent: EventStore.Projections.Core.Services.Processing
  name: IProjectionPhaseCheckpointManager
  nameWithType: IProjectionPhaseCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.ProgressChanged>
  nameWithType: IHandle<EventReaderSubscriptionMessage.ProgressChanged>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.ProgressChanged)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.ProgressChanged)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    name: EventReaderSubscriptionMessage.ProgressChanged
    nameWithType: EventReaderSubscriptionMessage.ProgressChanged
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    name: EventReaderSubscriptionMessage.ProgressChanged
    nameWithType: EventReaderSubscriptionMessage.ProgressChanged
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>
  nameWithType: IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.SubscriptionStarted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.SubscriptionStarted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    name: EventReaderSubscriptionMessage.SubscriptionStarted
    nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    name: EventReaderSubscriptionMessage.SubscriptionStarted
    nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.NotAuthorized>
  nameWithType: IHandle<EventReaderSubscriptionMessage.NotAuthorized>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.NotAuthorized)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.NotAuthorized)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    name: EventReaderSubscriptionMessage.NotAuthorized
    nameWithType: EventReaderSubscriptionMessage.NotAuthorized
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    name: EventReaderSubscriptionMessage.NotAuthorized
    nameWithType: EventReaderSubscriptionMessage.NotAuthorized
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.EofReached>
  nameWithType: IHandle<EventReaderSubscriptionMessage.EofReached>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.EofReached)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.EofReached)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    name: EventReaderSubscriptionMessage.EofReached
    nameWithType: EventReaderSubscriptionMessage.EofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    name: EventReaderSubscriptionMessage.EofReached
    nameWithType: EventReaderSubscriptionMessage.EofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>
  nameWithType: IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.CheckpointSuggested)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.CheckpointSuggested)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    name: EventReaderSubscriptionMessage.CheckpointSuggested
    nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    name: EventReaderSubscriptionMessage.CheckpointSuggested
    nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>
  nameWithType: IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.ReaderAssignedReader)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.ReaderAssignedReader)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
    name: EventReaderSubscriptionMessage.ReaderAssignedReader
    nameWithType: EventReaderSubscriptionMessage.ReaderAssignedReader
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
    name: EventReaderSubscriptionMessage.ReaderAssignedReader
    nameWithType: EventReaderSubscriptionMessage.ReaderAssignedReader
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.Failed>
  nameWithType: IHandle<EventReaderSubscriptionMessage.Failed>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.Failed)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.Failed)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
    name: EventReaderSubscriptionMessage.Failed
    nameWithType: EventReaderSubscriptionMessage.Failed
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
    name: EventReaderSubscriptionMessage.Failed
    nameWithType: EventReaderSubscriptionMessage.Failed
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  parent: EventStore.Projections.Core.Services.Processing
  name: IProjectionProcessingPhase
  nameWithType: IProjectionProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.GetState>
  nameWithType: IHandle<CoreProjectionManagementMessage.GetState>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  name.vb: IHandle(Of CoreProjectionManagementMessage.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.GetResult>
  nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  name.vb: IHandle(Of CoreProjectionManagementMessage.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  nameWithType: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  parent: EventStore.Projections.Core.Services.Processing
  name: IProjectionPhaseStateManager
  nameWithType: IProjectionPhaseStateManager
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<EventReaderSubscriptionMessage.CommittedEventReceived>
  nameWithType: IHandle<EventReaderSubscriptionMessage.CommittedEventReceived>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived>
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.CommittedEventReceived)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  name.vb: IHandle(Of EventReaderSubscriptionMessage.CommittedEventReceived)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    name: EventReaderSubscriptionMessage.CommittedEventReceived
    nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    name: EventReaderSubscriptionMessage.CommittedEventReceived
    nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer
  commentId: T:EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer
  parent: EventStore.Projections.Core.Services.Processing
  name: ISpoolStreamWorkItemContainer
  nameWithType: ISpoolStreamWorkItemContainer
  fullName: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._publisher
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._publisher
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _publisher
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._publisher
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._publisher
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._coreProjection
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._coreProjection
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _coreProjection
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._coreProjection
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._coreProjection
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _projectionCorrelationId
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._checkpointManager
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._checkpointManager
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _checkpointManager
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._checkpointManager
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._checkpointManager
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _progressResultWriter
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionConfig
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionConfig
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _projectionConfig
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._projectionConfig
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionConfig
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionName
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionName
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _projectionName
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._projectionName
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._projectionName
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._logger
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._logger
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _logger
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._logger
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._logger
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _zeroCheckpointTag
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._processingQueue
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._processingQueue
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _processingQueue
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._processingQueue
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._processingQueue
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _partitionStateCache
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _subscriptionDispatcher
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._readerStrategy
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._readerStrategy
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _readerStrategy
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._readerStrategy
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._readerStrategy
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._resultWriter
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._resultWriter
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _resultWriter
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._resultWriter
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._resultWriter
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _useCheckpoints
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _expectedSubscriptionMessageSequenceNumber
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _currentSubscriptionId
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscribed
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscribed
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _subscribed
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._subscribed
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscribed
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._state
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._state
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _state
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._state
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._state
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._stopOnEof
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._stopOnEof
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _stopOnEof
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._stopOnEof
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._stopOnEof
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _emittedStreamsTracker
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: UnlockAndForgetBefore(CheckpointTag)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: UnlockAndForgetBefore
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: UnlockAndForgetBefore
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: LastProcessedEventPosition
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  commentId: P:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: CheckpointManager
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  commentId: P:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: EmittedStreamsTracker
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: IsOutOfOrderSubscriptionMessage(EventReaderSubscriptionMessageBase)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventReaderSubscriptionMessageBase)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
    name: IsOutOfOrderSubscriptionMessage
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
    name: EventReaderSubscriptionMessageBase
    nameWithType: EventReaderSubscriptionMessageBase
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
    name: IsOutOfOrderSubscriptionMessage
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
    name: EventReaderSubscriptionMessageBase
    nameWithType: EventReaderSubscriptionMessageBase
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: RegisterSubscriptionMessage(EventReaderSubscriptionMessageBase)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventReaderSubscriptionMessageBase)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
    name: RegisterSubscriptionMessage
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
    name: EventReaderSubscriptionMessageBase
    nameWithType: EventReaderSubscriptionMessageBase
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
    name: RegisterSubscriptionMessage
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
    name: EventReaderSubscriptionMessageBase
    nameWithType: EventReaderSubscriptionMessageBase
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: EnsureTickPending()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
    name: EnsureTickPending
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
    name: EnsureTickPending
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: ProcessEvent()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
    name: ProcessEvent
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
    name: ProcessEvent
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Handle(EventReaderSubscriptionMessage.ProgressChanged)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.ProgressChanged)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    name: EventReaderSubscriptionMessage.ProgressChanged
    nameWithType: EventReaderSubscriptionMessage.ProgressChanged
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    name: EventReaderSubscriptionMessage.ProgressChanged
    nameWithType: EventReaderSubscriptionMessage.ProgressChanged
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Handle(EventReaderSubscriptionMessage.SubscriptionStarted)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.SubscriptionStarted)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    name: EventReaderSubscriptionMessage.SubscriptionStarted
    nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    name: EventReaderSubscriptionMessage.SubscriptionStarted
    nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Handle(EventReaderSubscriptionMessage.NotAuthorized)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.NotAuthorized)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    name: EventReaderSubscriptionMessage.NotAuthorized
    nameWithType: EventReaderSubscriptionMessage.NotAuthorized
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    name: EventReaderSubscriptionMessage.NotAuthorized
    nameWithType: EventReaderSubscriptionMessage.NotAuthorized
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Unsubscribed()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
    name: Unsubscribed
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
    name: Unsubscribed
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Handle(EventReaderSubscriptionMessage.EofReached)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.EofReached)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    name: EventReaderSubscriptionMessage.EofReached
    nameWithType: EventReaderSubscriptionMessage.EofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    name: EventReaderSubscriptionMessage.EofReached
    nameWithType: EventReaderSubscriptionMessage.EofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Handle(EventReaderSubscriptionMessage.CheckpointSuggested)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.CheckpointSuggested)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    name: EventReaderSubscriptionMessage.CheckpointSuggested
    nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    name: EventReaderSubscriptionMessage.CheckpointSuggested
    nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Handle(CoreProjectionManagementMessage.GetState)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionManagementMessage.GetState)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Handle(CoreProjectionManagementMessage.GetResult)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionManagementMessage.GetResult)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Handle(EventReaderSubscriptionMessage.Failed)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.Failed)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
    name: EventReaderSubscriptionMessage.Failed
    nameWithType: EventReaderSubscriptionMessage.Failed
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
    name: EventReaderSubscriptionMessage.Failed
    nameWithType: EventReaderSubscriptionMessage.Failed
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: UnsubscribeFromPreRecordedOrderEvents()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
    name: UnsubscribeFromPreRecordedOrderEvents
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
    name: UnsubscribeFromPreRecordedOrderEvents
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  isExternal: true
  name: Subscribed(Guid)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
    name: Subscribed
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Subscribed
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid)
    name: Subscribed
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Subscribed
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: GetSubscriptionOptions()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
    name: GetSubscriptionOptions
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
    name: GetSubscriptionOptions
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: SubscribeReaders(CheckpointTag)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: SubscribeReaders
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: SubscribeReaders
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: SubscribeToPreRecordedOrderEvents()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
    name: SubscribeToPreRecordedOrderEvents
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
    name: SubscribeToPreRecordedOrderEvents
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: AdjustTag(CheckpointTag)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: AdjustTag
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.AdjustTag
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: AdjustTag
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.AdjustTag
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AdjustTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(System.String,Exception)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(System.String,Exception)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  isExternal: true
  name: SetFaulting(String, Exception)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(String, Exception)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(System.String, Exception)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(System.String,Exception)
    name: SetFaulting
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetFaulting
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(System.String,Exception)
    name: SetFaulting
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetFaulting
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetFaulting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: ValidateEmittedEvents(EmittedEventEnvelope[])
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  nameWithType.vb: EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EmittedEventEnvelope())
  fullName.vb: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ValidateEmittedEvents(EmittedEventEnvelope())
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
    name: ValidateEmittedEvents
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
    name: ValidateEmittedEvents
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: InitializeFromCheckpoint(CheckpointTag)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: InitializeFromCheckpoint
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: InitializeFromCheckpoint
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: GetBufferedEventCount()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
    name: GetBufferedEventCount
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
    name: GetBufferedEventCount
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: GetStatus()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetStatus()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
    name: GetStatus
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetStatus
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
    name: GetStatus
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetStatus
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  isExternal: true
  name: InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope[], PartitionState, PartitionState)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope[], PartitionState, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState)
  nameWithType.vb: EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope(), PartitionState, PartitionState)
  fullName.vb: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState)
  name.vb: InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope(), PartitionState, PartitionState)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
    name: InternalCommittedEventProcessed
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    name: EventReaderSubscriptionMessage.CommittedEventReceived
    nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(System.String,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
    name: InternalCommittedEventProcessed
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    name: EventReaderSubscriptionMessage.CommittedEventReceived
    nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  isExternal: true
  name: InternalPartitionDeletedProcessed(String, CheckpointTag, PartitionState)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(String, CheckpointTag, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.PartitionState)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
    name: InternalPartitionDeletedProcessed
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.PartitionState)
    name: InternalPartitionDeletedProcessed
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  isExternal: true
  name: BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action<EventStore.Projections.Core.Services.Processing.PartitionState>, System.Boolean)
  nameWithType.vb: EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(String, CheckpointTag, Action(Of PartitionState), Boolean)
  fullName.vb: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action(Of EventStore.Projections.Core.Services.Processing.PartitionState), System.Boolean)
  name.vb: BeginGetPartitionStateAt(String, CheckpointTag, Action(Of PartitionState), Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
    name: BeginGetPartitionStateAt
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
    name: BeginGetPartitionStateAt
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  isExternal: true
  name: FinalizeEventProcessing(EventProcessedResult, CheckpointTag, Single)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventProcessedResult, CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
    name: FinalizeEventProcessing
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    name: EventProcessedResult
    nameWithType: EventProcessedResult
    fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
    name: FinalizeEventProcessing
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    name: EventProcessedResult
    nameWithType: EventProcessedResult
    fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  isExternal: true
  name: EmitEofResult(String, String, CheckpointTag, Guid, String)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(String, String, CheckpointTag, Guid, String)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(System.String, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Guid, System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
    name: EmitEofResult
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
    name: EmitEofResult
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  isExternal: true
  name: RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
    name: RecordEventOrder
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
    name: RecordEventOrder
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Complete()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Complete()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
    name: Complete
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Complete
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
    name: Complete
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Complete
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Complete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
    name: SetCurrentCheckpointSuggestedWorkItem
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
    name: CheckpointSuggestedWorkItem
    nameWithType: CheckpointSuggestedWorkItem
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem)
    name: SetCurrentCheckpointSuggestedWorkItem
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
    name: CheckpointSuggestedWorkItem
    nameWithType: CheckpointSuggestedWorkItem
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: GetStatistics(ProjectionStatistics)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
    name: GetStatistics
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetStatistics
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.ProjectionStatistics
    name: ProjectionStatistics
    nameWithType: ProjectionStatistics
    fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
    name: GetStatistics
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.GetStatistics
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.ProjectionStatistics
    name: ProjectionStatistics
    nameWithType: ProjectionStatistics
    fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: MakeZeroCheckpointTag()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
    name: MakeZeroCheckpointTag
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
    name: MakeZeroCheckpointTag
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: EnsureUnsubscribed()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
    name: EnsureUnsubscribed
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
    name: EnsureUnsubscribed
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition
  commentId: F:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: _subscriptionStartedAtLastCommitPosition
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Handle(EventReaderSubscriptionMessage.ReaderAssignedReader)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.ReaderAssignedReader)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
    name: EventReaderSubscriptionMessage.ReaderAssignedReader
    nameWithType: EventReaderSubscriptionMessage.ReaderAssignedReader
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader)
    name: Handle
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
    name: EventReaderSubscriptionMessage.ReaderAssignedReader
    nameWithType: EventReaderSubscriptionMessage.ReaderAssignedReader
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: SetProjectionState(PhaseState)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(PhaseState)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
    name: SetProjectionState
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.PhaseState
    name: PhaseState
    nameWithType: PhaseState
    fullName: EventStore.Projections.Core.Services.Processing.PhaseState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
    name: SetProjectionState
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.PhaseState
    name: PhaseState
    nameWithType: PhaseState
    fullName: EventStore.Projections.Core.Services.Processing.PhaseState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.#ctor
  name: ParallelQueryMasterProjectionProcessingPhase
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.ParallelQueryMasterProjectionProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.ParallelQueryMasterProjectionProcessingPhase
- uid: EventStore.Projections.Core.Services.Processing.CoreProjection
  commentId: T:EventStore.Projections.Core.Services.Processing.CoreProjection
  parent: EventStore.Projections.Core.Services.Processing
  name: CoreProjection
  nameWithType: CoreProjection
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjection
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Projections.Core.Services.ProjectionConfig
  commentId: T:EventStore.Projections.Core.Services.ProjectionConfig
  parent: EventStore.Projections.Core.Services
  name: ProjectionConfig
  nameWithType: ProjectionConfig
  fullName: EventStore.Projections.Core.Services.ProjectionConfig
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler
  commentId: T:EventStore.Projections.Core.Services.IProjectionStateHandler
  parent: EventStore.Projections.Core.Services
  name: IProjectionStateHandler
  nameWithType: IProjectionStateHandler
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateCache
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionStateCache
  parent: EventStore.Projections.Core.Services.Processing
  name: PartitionStateCache
  nameWithType: PartitionStateCache
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateCache
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Common.Log.ILogger
  commentId: T:EventStore.Common.Log.ILogger
  parent: EventStore.Common.Log
  name: ILogger
  nameWithType: ILogger
  fullName: EventStore.Common.Log.ILogger
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  commentId: T:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  parent: EventStore.Projections.Core.Services.Processing
  name: ICoreProjectionCheckpointManager
  nameWithType: ICoreProjectionCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
- uid: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
  commentId: T:EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
  parent: EventStore.Projections.Core.Services
  name: ReaderSubscriptionDispatcher
  nameWithType: ReaderSubscriptionDispatcher
  fullName: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  commentId: T:EventStore.Projections.Core.Services.Processing.IReaderStrategy
  parent: EventStore.Projections.Core.Services.Processing
  name: IReaderStrategy
  nameWithType: IReaderStrategy
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy
- uid: EventStore.Projections.Core.Services.Processing.IResultWriter
  commentId: T:EventStore.Projections.Core.Services.Processing.IResultWriter
  parent: EventStore.Projections.Core.Services.Processing
  name: IResultWriter
  nameWithType: IResultWriter
  fullName: EventStore.Projections.Core.Services.Processing.IResultWriter
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
  commentId: T:EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
  parent: EventStore.Projections.Core.Services
  name: SpooledStreamReadingDispatcher
  nameWithType: SpooledStreamReadingDispatcher
  fullName: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
- uid: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
  commentId: T:EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing
  name: IEmittedStreamsTracker
  nameWithType: IEmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: NewCheckpointStarted(CheckpointTag)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: NewCheckpointStarted
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: NewCheckpointStarted
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.NewCheckpointStarted*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.NewCheckpointStarted
  name: NewCheckpointStarted
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.NewCheckpointStarted
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.NewCheckpointStarted
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: Dispose()
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Dispose()
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
    name: Dispose
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Dispose
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
    name: Dispose
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Dispose
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Dispose*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Dispose
  name: Dispose
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.Dispose
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Dispose
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  name: AssignSlaves(SlaveProjectionCommunicationChannels)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(SlaveProjectionCommunicationChannels)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
    name: AssignSlaves
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    name: SlaveProjectionCommunicationChannels
    nameWithType: SlaveProjectionCommunicationChannels
    fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
    name: AssignSlaves
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    name: SlaveProjectionCommunicationChannels
    nameWithType: SlaveProjectionCommunicationChannels
    fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.AssignSlaves*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.AssignSlaves
  name: AssignSlaves
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.AssignSlaves
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.AssignSlaves
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  commentId: T:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  parent: EventStore.Projections.Core.Messages
  name: SlaveProjectionCommunicationChannels
  nameWithType: SlaveProjectionCommunicationChannels
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase
  isExternal: true
  name: Subscribe(CheckpointTag, Boolean)
  nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Subscribe(CheckpointTag, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
    name: Subscribe
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Subscribe
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
    name: Subscribe
    nameWithType: EventSubscriptionBasedProjectionProcessingPhase.Subscribe
    fullName: EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Subscribe*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Subscribe
  name: Subscribe
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.Subscribe
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Subscribe
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Handle
  name: Handle
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.Handle
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived}.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(EventReaderSubscriptionMessage.CommittedEventReceived)
  nameWithType: IHandle<EventReaderSubscriptionMessage.CommittedEventReceived>.Handle(EventReaderSubscriptionMessage.CommittedEventReceived)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived>.Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  nameWithType.vb: IHandle(Of EventReaderSubscriptionMessage.CommittedEventReceived).Handle(EventReaderSubscriptionMessage.CommittedEventReceived)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived).Handle(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<EventReaderSubscriptionMessage.CommittedEventReceived>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    name: EventReaderSubscriptionMessage.CommittedEventReceived
    nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of EventReaderSubscriptionMessage.CommittedEventReceived).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    name: EventReaderSubscriptionMessage.CommittedEventReceived
    nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.CommittedEventReceived
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.TransformCatalogEvent*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.TransformCatalogEvent
  name: TransformCatalogEvent
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.TransformCatalogEvent
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.TransformCatalogEvent
- uid: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer
  name: TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  nameWithType: ISpoolStreamWorkItemContainer.TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  fullName: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
    name: TransformCatalogEvent
    nameWithType: ISpoolStreamWorkItemContainer.TransformCatalogEvent
    fullName: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.TransformCatalogEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
    name: TransformCatalogEvent
    nameWithType: ISpoolStreamWorkItemContainer.TransformCatalogEvent
    fullName: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.TransformCatalogEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
- uid: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.CompleteSpoolProcessingWorkItem*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.CompleteSpoolProcessingWorkItem
  name: CompleteSpoolProcessingWorkItem
  nameWithType: ParallelQueryMasterProjectionProcessingPhase.CompleteSpoolProcessingWorkItem
  fullName: EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.CompleteSpoolProcessingWorkItem
- uid: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem(Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem(Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer
  isExternal: true
  name: CompleteSpoolProcessingWorkItem(Guid, CheckpointTag)
  nameWithType: ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem(Guid, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem(Guid, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem(Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: CompleteSpoolProcessingWorkItem
    nameWithType: ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem
    fullName: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem(Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: CompleteSpoolProcessingWorkItem
    nameWithType: ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem
    fullName: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.CompleteSpoolProcessingWorkItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.PartitionState
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionState
  id: PartitionState
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.PartitionState.#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
  - EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged(EventStore.Projections.Core.Services.Processing.PartitionState)
  - EventStore.Projections.Core.Services.Processing.PartitionState.Result
  - EventStore.Projections.Core.Services.Processing.PartitionState.Serialize
  - EventStore.Projections.Core.Services.Processing.PartitionState.State
  langs:
  - csharp
  - vb
  name: PartitionState
  nameWithType: PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PartitionState
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class PartitionState : object'
    content.vb: >-
      Public Class PartitionState
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.PartitionState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.PartitionState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged(EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged(EventStore.Projections.Core.Services.Processing.PartitionState)
  id: IsChanged(EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: IsChanged(PartitionState)
  nameWithType: PartitionState.IsChanged(PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged(EventStore.Projections.Core.Services.Processing.PartitionState)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IsChanged
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool IsChanged(PartitionState newState)
    parameters:
    - id: newState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    return:
      type: System.Boolean
    content.vb: Public Function IsChanged(newState As PartitionState) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: Deserialize(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: Deserialize(String, CheckpointTag)
  nameWithType: PartitionState.Deserialize(String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Deserialize
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static PartitionState Deserialize(string serializedState, CheckpointTag causedBy)
    parameters:
    - id: serializedState
      type: System.String
    - id: causedBy
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    content.vb: Public Shared Function Deserialize(serializedState As String, causedBy As CheckpointTag) As PartitionState
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionState.#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: '#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)'
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: PartitionState(String, String, CheckpointTag)
  nameWithType: PartitionState.PartitionState(String, String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.PartitionState(System.String, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 46
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public PartitionState(string state, string result, CheckpointTag causedBy)
    parameters:
    - id: state
      type: System.String
    - id: result
      type: System.String
    - id: causedBy
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub New(state As String, result As String, causedBy As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.State
  commentId: P:EventStore.Projections.Core.Services.Processing.PartitionState.State
  id: State
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: State
  nameWithType: PartitionState.State
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.State
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: State
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 55
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string State { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property State As String
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
  commentId: P:EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
  id: CausedBy
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: CausedBy
  nameWithType: PartitionState.CausedBy
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CausedBy
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 59
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag CausedBy { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property CausedBy As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Result
  commentId: P:EventStore.Projections.Core.Services.Processing.PartitionState.Result
  id: Result
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: PartitionState.Result
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Result
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Result
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 63
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string Result { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Result As String
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.Result*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Serialize
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionState.Serialize
  id: Serialize
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: Serialize()
  nameWithType: PartitionState.Serialize()
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Serialize()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Serialize
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 67
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string Serialize()
    return:
      type: System.String
    content.vb: Public Function Serialize As String
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.Serialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PartitionState>()
  nameWithType: ProtobufExtensions.Serialize<PartitionState>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.PartitionState>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PartitionState)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.PartitionState)()
  name.vb: Serialize(Of PartitionState)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PartitionState>
    nameWithType: ProtobufExtensions.Serialize<PartitionState>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.PartitionState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PartitionState)
    nameWithType: ProtobufExtensions.Serialize(Of PartitionState)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.PartitionState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PartitionState>()
  nameWithType: ProtobufExtensions.SerializeToArray<PartitionState>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.PartitionState>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PartitionState)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.PartitionState)()
  name.vb: SerializeToArray(Of PartitionState)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PartitionState>
    nameWithType: ProtobufExtensions.SerializeToArray<PartitionState>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.PartitionState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PartitionState)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PartitionState)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.PartitionState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged
  name: IsChanged
  nameWithType: PartitionState.IsChanged
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged
- uid: EventStore.Projections.Core.Services.Processing.PartitionState
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionState
  parent: EventStore.Projections.Core.Services.Processing
  name: PartitionState
  nameWithType: PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize
  name: Deserialize
  nameWithType: PartitionState.Deserialize
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.#ctor
  name: PartitionState
  nameWithType: PartitionState.PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.PartitionState
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.State*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.State
  name: State
  nameWithType: PartitionState.State
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.State
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
  name: CausedBy
  nameWithType: PartitionState.CausedBy
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Result*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.Result
  name: Result
  nameWithType: PartitionState.Result
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Result
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Serialize*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.Serialize
  name: Serialize
  nameWithType: PartitionState.Serialize
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Serialize

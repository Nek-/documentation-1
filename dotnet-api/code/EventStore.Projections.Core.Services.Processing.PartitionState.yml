### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.PartitionState
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionState
  id: PartitionState
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.PartitionState.#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
  - EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged(EventStore.Projections.Core.Services.Processing.PartitionState)
  - EventStore.Projections.Core.Services.Processing.PartitionState.Result
  - EventStore.Projections.Core.Services.Processing.PartitionState.Serialize
  - EventStore.Projections.Core.Services.Processing.PartitionState.State
  langs:
  - csharp
  - vb
  name: PartitionState
  nameWithType: PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PartitionState
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class PartitionState : object'
    content.vb: >-
      Public Class PartitionState

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged(EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged(EventStore.Projections.Core.Services.Processing.PartitionState)
  id: IsChanged(EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: IsChanged(PartitionState)
  nameWithType: PartitionState.IsChanged(PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged(EventStore.Projections.Core.Services.Processing.PartitionState)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: IsChanged
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool IsChanged(PartitionState newState)
    parameters:
    - id: newState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    return:
      type: System.Boolean
    content.vb: Public Function IsChanged(newState As PartitionState) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: Deserialize(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: Deserialize(String, CheckpointTag)
  nameWithType: PartitionState.Deserialize(String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Deserialize
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 17
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static PartitionState Deserialize(string serializedState, CheckpointTag causedBy)
    parameters:
    - id: serializedState
      type: System.String
    - id: causedBy
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    content.vb: Public Shared Function Deserialize(serializedState As String, causedBy As CheckpointTag) As PartitionState
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionState.#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: '#ctor(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)'
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: PartitionState(String, String, CheckpointTag)
  nameWithType: PartitionState.PartitionState(String, String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.PartitionState(System.String, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 51
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public PartitionState(string state, string result, CheckpointTag causedBy)
    parameters:
    - id: state
      type: System.String
    - id: result
      type: System.String
    - id: causedBy
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub New(state As String, result As String, causedBy As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.State
  commentId: P:EventStore.Projections.Core.Services.Processing.PartitionState.State
  id: State
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: State
  nameWithType: PartitionState.State
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.State
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: State
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 60
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string State { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property State As String
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
  commentId: P:EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
  id: CausedBy
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: CausedBy
  nameWithType: PartitionState.CausedBy
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CausedBy
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 64
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag CausedBy { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property CausedBy As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Result
  commentId: P:EventStore.Projections.Core.Services.Processing.PartitionState.Result
  id: Result
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: PartitionState.Result
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Result
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Result
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 68
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string Result { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Result As String
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.Result*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Serialize
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionState.Serialize
  id: Serialize
  parent: EventStore.Projections.Core.Services.Processing.PartitionState
  langs:
  - csharp
  - vb
  name: Serialize()
  nameWithType: PartitionState.Serialize()
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Serialize()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Serialize
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionState.cs
    startLine: 72
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string Serialize()
    return:
      type: System.String
    content.vb: Public Function Serialize As String
  overload: EventStore.Projections.Core.Services.Processing.PartitionState.Serialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged
  name: IsChanged
  nameWithType: PartitionState.IsChanged
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.IsChanged
- uid: EventStore.Projections.Core.Services.Processing.PartitionState
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionState
  parent: EventStore.Projections.Core.Services.Processing
  name: PartitionState
  nameWithType: PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize
  name: Deserialize
  nameWithType: PartitionState.Deserialize
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Deserialize
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.#ctor
  name: PartitionState
  nameWithType: PartitionState.PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.PartitionState
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.State*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.State
  name: State
  nameWithType: PartitionState.State
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.State
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
  name: CausedBy
  nameWithType: PartitionState.CausedBy
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.CausedBy
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Result*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.Result
  name: Result
  nameWithType: PartitionState.Result
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Result
- uid: EventStore.Projections.Core.Services.Processing.PartitionState.Serialize*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionState.Serialize
  name: Serialize
  nameWithType: PartitionState.Serialize
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState.Serialize

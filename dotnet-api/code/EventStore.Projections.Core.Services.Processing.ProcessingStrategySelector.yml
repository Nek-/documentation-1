### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector
  commentId: T:EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector
  id: ProcessingStrategySelector
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.#ctor(EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher)
  - EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateProjectionProcessingStrategy(System.String,EventStore.Projections.Core.Services.Processing.ProjectionVersion,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Projections.Core.Services.ProjectionConfig,EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,System.String)
  - EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateSlaveProjectionProcessingStrategy(System.String,EventStore.Projections.Core.Services.Processing.ProjectionVersion,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Projections.Core.Services.ProjectionConfig,EventStore.Projections.Core.Services.IProjectionStateHandler,Guid,EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.Processing.ProjectionCoreService)
  langs:
  - csharp
  - vb
  name: ProcessingStrategySelector
  nameWithType: ProcessingStrategySelector
  fullName: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProcessingStrategySelector.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ProcessingStrategySelector
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProcessingStrategySelector.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class ProcessingStrategySelector : object'
    content.vb: >-
      Public Class ProcessingStrategySelector
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.#ctor(EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher)
  commentId: M:EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.#ctor(EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher)
  id: '#ctor(EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher)'
  parent: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector
  langs:
  - csharp
  - vb
  name: ProcessingStrategySelector(ReaderSubscriptionDispatcher, SpooledStreamReadingDispatcher)
  nameWithType: ProcessingStrategySelector.ProcessingStrategySelector(ReaderSubscriptionDispatcher, SpooledStreamReadingDispatcher)
  fullName: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.ProcessingStrategySelector(EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher, EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProcessingStrategySelector.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProcessingStrategySelector.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ProcessingStrategySelector(ReaderSubscriptionDispatcher subscriptionDispatcher, SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher)
    parameters:
    - id: subscriptionDispatcher
      type: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
    - id: spoolProcessingResponseDispatcher
      type: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
    content.vb: Public Sub New(subscriptionDispatcher As ReaderSubscriptionDispatcher, spoolProcessingResponseDispatcher As SpooledStreamReadingDispatcher)
  overload: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateProjectionProcessingStrategy(System.String,EventStore.Projections.Core.Services.Processing.ProjectionVersion,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Projections.Core.Services.ProjectionConfig,EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateProjectionProcessingStrategy(System.String,EventStore.Projections.Core.Services.Processing.ProjectionVersion,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Projections.Core.Services.ProjectionConfig,EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,System.String)
  id: CreateProjectionProcessingStrategy(System.String,EventStore.Projections.Core.Services.Processing.ProjectionVersion,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Projections.Core.Services.ProjectionConfig,EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,System.String)
  parent: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector
  langs:
  - csharp
  - vb
  name: CreateProjectionProcessingStrategy(String, ProjectionVersion, ProjectionNamesBuilder, IQuerySources, ProjectionConfig, IProjectionStateHandler, String, String)
  nameWithType: ProcessingStrategySelector.CreateProjectionProcessingStrategy(String, ProjectionVersion, ProjectionNamesBuilder, IQuerySources, ProjectionConfig, IProjectionStateHandler, String, String)
  fullName: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateProjectionProcessingStrategy(System.String, EventStore.Projections.Core.Services.Processing.ProjectionVersion, EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder, EventStore.Projections.Core.Messages.IQuerySources, EventStore.Projections.Core.Services.ProjectionConfig, EventStore.Projections.Core.Services.IProjectionStateHandler, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProcessingStrategySelector.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CreateProjectionProcessingStrategy
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProcessingStrategySelector.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ProjectionProcessingStrategy CreateProjectionProcessingStrategy(string name, ProjectionVersion projectionVersion, ProjectionNamesBuilder namesBuilder, IQuerySources sourceDefinition, ProjectionConfig projectionConfig, IProjectionStateHandler stateHandler, string handlerType, string query)
    parameters:
    - id: name
      type: System.String
    - id: projectionVersion
      type: EventStore.Projections.Core.Services.Processing.ProjectionVersion
    - id: namesBuilder
      type: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
    - id: sourceDefinition
      type: EventStore.Projections.Core.Messages.IQuerySources
    - id: projectionConfig
      type: EventStore.Projections.Core.Services.ProjectionConfig
    - id: stateHandler
      type: EventStore.Projections.Core.Services.IProjectionStateHandler
    - id: handlerType
      type: System.String
    - id: query
      type: System.String
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionProcessingStrategy
    content.vb: Public Function CreateProjectionProcessingStrategy(name As String, projectionVersion As ProjectionVersion, namesBuilder As ProjectionNamesBuilder, sourceDefinition As IQuerySources, projectionConfig As ProjectionConfig, stateHandler As IProjectionStateHandler, handlerType As String, query As String) As ProjectionProcessingStrategy
  overload: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateProjectionProcessingStrategy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateSlaveProjectionProcessingStrategy(System.String,EventStore.Projections.Core.Services.Processing.ProjectionVersion,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Projections.Core.Services.ProjectionConfig,EventStore.Projections.Core.Services.IProjectionStateHandler,Guid,EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.Processing.ProjectionCoreService)
  commentId: M:EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateSlaveProjectionProcessingStrategy(System.String,EventStore.Projections.Core.Services.Processing.ProjectionVersion,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Projections.Core.Services.ProjectionConfig,EventStore.Projections.Core.Services.IProjectionStateHandler,Guid,EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.Processing.ProjectionCoreService)
  id: CreateSlaveProjectionProcessingStrategy(System.String,EventStore.Projections.Core.Services.Processing.ProjectionVersion,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Projections.Core.Services.ProjectionConfig,EventStore.Projections.Core.Services.IProjectionStateHandler,Guid,EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.Processing.ProjectionCoreService)
  parent: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector
  langs:
  - csharp
  - vb
  name: CreateSlaveProjectionProcessingStrategy(String, ProjectionVersion, IQuerySources, ProjectionConfig, IProjectionStateHandler, Guid, IPublisher, Guid, ProjectionCoreService)
  nameWithType: ProcessingStrategySelector.CreateSlaveProjectionProcessingStrategy(String, ProjectionVersion, IQuerySources, ProjectionConfig, IProjectionStateHandler, Guid, IPublisher, Guid, ProjectionCoreService)
  fullName: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateSlaveProjectionProcessingStrategy(System.String, EventStore.Projections.Core.Services.Processing.ProjectionVersion, EventStore.Projections.Core.Messages.IQuerySources, EventStore.Projections.Core.Services.ProjectionConfig, EventStore.Projections.Core.Services.IProjectionStateHandler, Guid, EventStore.Core.Bus.IPublisher, Guid, EventStore.Projections.Core.Services.Processing.ProjectionCoreService)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProcessingStrategySelector.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CreateSlaveProjectionProcessingStrategy
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProcessingStrategySelector.cs
    startLine: 84
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ProjectionProcessingStrategy CreateSlaveProjectionProcessingStrategy(string name, ProjectionVersion projectionVersion, IQuerySources sourceDefinition, ProjectionConfig projectionConfig, IProjectionStateHandler stateHandler, Guid workerId, IPublisher publisher, Guid masterCoreProjectionId, ProjectionCoreService projectionCoreService)
    parameters:
    - id: name
      type: System.String
    - id: projectionVersion
      type: EventStore.Projections.Core.Services.Processing.ProjectionVersion
    - id: sourceDefinition
      type: EventStore.Projections.Core.Messages.IQuerySources
    - id: projectionConfig
      type: EventStore.Projections.Core.Services.ProjectionConfig
    - id: stateHandler
      type: EventStore.Projections.Core.Services.IProjectionStateHandler
    - id: workerId
      type: Guid
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: masterCoreProjectionId
      type: Guid
    - id: projectionCoreService
      type: EventStore.Projections.Core.Services.Processing.ProjectionCoreService
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionProcessingStrategy
    content.vb: Public Function CreateSlaveProjectionProcessingStrategy(name As String, projectionVersion As ProjectionVersion, sourceDefinition As IQuerySources, projectionConfig As ProjectionConfig, stateHandler As IProjectionStateHandler, workerId As Guid, publisher As IPublisher, masterCoreProjectionId As Guid, projectionCoreService As ProjectionCoreService) As ProjectionProcessingStrategy
  overload: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateSlaveProjectionProcessingStrategy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ProcessingStrategySelector>()
  nameWithType: ProtobufExtensions.Serialize<ProcessingStrategySelector>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ProcessingStrategySelector)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector)()
  name.vb: Serialize(Of ProcessingStrategySelector)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ProcessingStrategySelector>
    nameWithType: ProtobufExtensions.Serialize<ProcessingStrategySelector>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ProcessingStrategySelector)
    nameWithType: ProtobufExtensions.Serialize(Of ProcessingStrategySelector)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ProcessingStrategySelector>()
  nameWithType: ProtobufExtensions.SerializeToArray<ProcessingStrategySelector>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ProcessingStrategySelector)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector)()
  name.vb: SerializeToArray(Of ProcessingStrategySelector)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ProcessingStrategySelector>
    nameWithType: ProtobufExtensions.SerializeToArray<ProcessingStrategySelector>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ProcessingStrategySelector)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ProcessingStrategySelector)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.#ctor
  name: ProcessingStrategySelector
  nameWithType: ProcessingStrategySelector.ProcessingStrategySelector
  fullName: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.ProcessingStrategySelector
- uid: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
  commentId: T:EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
  parent: EventStore.Projections.Core.Services
  name: ReaderSubscriptionDispatcher
  nameWithType: ReaderSubscriptionDispatcher
  fullName: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
- uid: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
  commentId: T:EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
  parent: EventStore.Projections.Core.Services
  name: SpooledStreamReadingDispatcher
  nameWithType: SpooledStreamReadingDispatcher
  fullName: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateProjectionProcessingStrategy*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateProjectionProcessingStrategy
  name: CreateProjectionProcessingStrategy
  nameWithType: ProcessingStrategySelector.CreateProjectionProcessingStrategy
  fullName: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateProjectionProcessingStrategy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionVersion
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionVersion
  nameWithType: ProjectionVersion
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion
- uid: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionNamesBuilder
  nameWithType: ProjectionNamesBuilder
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
- uid: EventStore.Projections.Core.Messages.IQuerySources
  commentId: T:EventStore.Projections.Core.Messages.IQuerySources
  parent: EventStore.Projections.Core.Messages
  name: IQuerySources
  nameWithType: IQuerySources
  fullName: EventStore.Projections.Core.Messages.IQuerySources
- uid: EventStore.Projections.Core.Services.ProjectionConfig
  commentId: T:EventStore.Projections.Core.Services.ProjectionConfig
  parent: EventStore.Projections.Core.Services
  name: ProjectionConfig
  nameWithType: ProjectionConfig
  fullName: EventStore.Projections.Core.Services.ProjectionConfig
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler
  commentId: T:EventStore.Projections.Core.Services.IProjectionStateHandler
  parent: EventStore.Projections.Core.Services
  name: IProjectionStateHandler
  nameWithType: IProjectionStateHandler
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler
- uid: EventStore.Projections.Core.Services.Processing.ProjectionProcessingStrategy
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionProcessingStrategy
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionProcessingStrategy
  nameWithType: ProjectionProcessingStrategy
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionProcessingStrategy
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateSlaveProjectionProcessingStrategy*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateSlaveProjectionProcessingStrategy
  name: CreateSlaveProjectionProcessingStrategy
  nameWithType: ProcessingStrategySelector.CreateSlaveProjectionProcessingStrategy
  fullName: EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.CreateSlaveProjectionProcessingStrategy
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Projections.Core.Services.Processing.ProjectionCoreService
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionCoreService
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionCoreService
  nameWithType: ProjectionCoreService
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionCoreService
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus

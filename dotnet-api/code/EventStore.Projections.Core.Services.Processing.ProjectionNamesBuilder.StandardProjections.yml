### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections
  id: ProjectionNamesBuilder.StandardProjections
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByCategoryStandardProjection
  - EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByCorrIdStandardProjection
  - EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByTypeStandardProjection
  - EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.StreamByCategoryStandardProjection
  - EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.StreamsStandardProjection
  langs:
  - csharp
  - vb
  name: ProjectionNamesBuilder.StandardProjections
  nameWithType: ProjectionNamesBuilder.StandardProjections
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections
  type: Class
  source:
    id: StandardProjections
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionNamesBuilder.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static class StandardProjections
    content.vb: Public Module StandardProjections
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.StreamsStandardProjection
  commentId: F:EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.StreamsStandardProjection
  id: StreamsStandardProjection
  parent: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections
  langs:
  - csharp
  - vb
  name: StreamsStandardProjection
  nameWithType: ProjectionNamesBuilder.StandardProjections.StreamsStandardProjection
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.StreamsStandardProjection
  type: Field
  source:
    id: StreamsStandardProjection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionNamesBuilder.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public const string StreamsStandardProjection = "$streams"
    return:
      type: System.String
    content.vb: Public Const StreamsStandardProjection As String = "$streams"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.StreamByCategoryStandardProjection
  commentId: F:EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.StreamByCategoryStandardProjection
  id: StreamByCategoryStandardProjection
  parent: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections
  langs:
  - csharp
  - vb
  name: StreamByCategoryStandardProjection
  nameWithType: ProjectionNamesBuilder.StandardProjections.StreamByCategoryStandardProjection
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.StreamByCategoryStandardProjection
  type: Field
  source:
    id: StreamByCategoryStandardProjection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionNamesBuilder.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public const string StreamByCategoryStandardProjection = "$stream_by_category"
    return:
      type: System.String
    content.vb: Public Const StreamByCategoryStandardProjection As String = "$stream_by_category"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByCategoryStandardProjection
  commentId: F:EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByCategoryStandardProjection
  id: EventByCategoryStandardProjection
  parent: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections
  langs:
  - csharp
  - vb
  name: EventByCategoryStandardProjection
  nameWithType: ProjectionNamesBuilder.StandardProjections.EventByCategoryStandardProjection
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByCategoryStandardProjection
  type: Field
  source:
    id: EventByCategoryStandardProjection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionNamesBuilder.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public const string EventByCategoryStandardProjection = "$by_category"
    return:
      type: System.String
    content.vb: Public Const EventByCategoryStandardProjection As String = "$by_category"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByTypeStandardProjection
  commentId: F:EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByTypeStandardProjection
  id: EventByTypeStandardProjection
  parent: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections
  langs:
  - csharp
  - vb
  name: EventByTypeStandardProjection
  nameWithType: ProjectionNamesBuilder.StandardProjections.EventByTypeStandardProjection
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByTypeStandardProjection
  type: Field
  source:
    id: EventByTypeStandardProjection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionNamesBuilder.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public const string EventByTypeStandardProjection = "$by_event_type"
    return:
      type: System.String
    content.vb: Public Const EventByTypeStandardProjection As String = "$by_event_type"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByCorrIdStandardProjection
  commentId: F:EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByCorrIdStandardProjection
  id: EventByCorrIdStandardProjection
  parent: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections
  langs:
  - csharp
  - vb
  name: EventByCorrIdStandardProjection
  nameWithType: ProjectionNamesBuilder.StandardProjections.EventByCorrIdStandardProjection
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.EventByCorrIdStandardProjection
  type: Field
  source:
    id: EventByCorrIdStandardProjection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionNamesBuilder.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public const string EventByCorrIdStandardProjection = "$by_correlation_id"
    return:
      type: System.String
    content.vb: Public Const EventByCorrIdStandardProjection As String = "$by_correlation_id"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

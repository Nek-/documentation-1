### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionVersion
  id: ProjectionVersion
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.ProjectionVersion.#ctor(System.Int64,System.Int64,System.Int64)
  - EventStore.Projections.Core.Services.Processing.ProjectionVersion.Epoch
  - EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals(EventStore.Projections.Core.Services.Processing.ProjectionVersion)
  - EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals(System.Object)
  - EventStore.Projections.Core.Services.Processing.ProjectionVersion.GetHashCode
  - EventStore.Projections.Core.Services.Processing.ProjectionVersion.ProjectionId
  - EventStore.Projections.Core.Services.Processing.ProjectionVersion.Version
  langs:
  - csharp
  - vb
  name: ProjectionVersion
  nameWithType: ProjectionVersion
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  type: Struct
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ProjectionVersion
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
    startLine: 1
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public struct ProjectionVersion
    content.vb: Public Structure ProjectionVersion
  extensionMethods:
  - EventStore.Projections.Core.Services.Processing.ProjectionVersion.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.ProjectionId
  commentId: F:EventStore.Projections.Core.Services.Processing.ProjectionVersion.ProjectionId
  id: ProjectionId
  parent: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  langs:
  - csharp
  - vb
  name: ProjectionId
  nameWithType: ProjectionVersion.ProjectionId
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion.ProjectionId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ProjectionId
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
    startLine: 2
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly long ProjectionId
    return:
      type: System.Int64
    content.vb: Public ReadOnly ProjectionId As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Epoch
  commentId: F:EventStore.Projections.Core.Services.Processing.ProjectionVersion.Epoch
  id: Epoch
  parent: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  langs:
  - csharp
  - vb
  name: Epoch
  nameWithType: ProjectionVersion.Epoch
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Epoch
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Epoch
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly long Epoch
    return:
      type: System.Int64
    content.vb: Public ReadOnly Epoch As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Version
  commentId: F:EventStore.Projections.Core.Services.Processing.ProjectionVersion.Version
  id: Version
  parent: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ProjectionVersion.Version
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Version
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly long Version
    return:
      type: System.Int64
    content.vb: Public ReadOnly Version As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.#ctor(System.Int64,System.Int64,System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.ProjectionVersion.#ctor(System.Int64,System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64,System.Int64)'
  parent: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  langs:
  - csharp
  - vb
  name: ProjectionVersion(Int64, Int64, Int64)
  nameWithType: ProjectionVersion.ProjectionVersion(Int64, Int64, Int64)
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion.ProjectionVersion(System.Int64, System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ProjectionVersion(long projectionId, long epoch, long version)
    parameters:
    - id: projectionId
      type: System.Int64
    - id: epoch
      type: System.Int64
    - id: version
      type: System.Int64
    content.vb: Public Sub New(projectionId As Long, epoch As Long, version As Long)
  overload: EventStore.Projections.Core.Services.Processing.ProjectionVersion.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals(EventStore.Projections.Core.Services.Processing.ProjectionVersion)
  commentId: M:EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals(EventStore.Projections.Core.Services.Processing.ProjectionVersion)
  id: Equals(EventStore.Projections.Core.Services.Processing.ProjectionVersion)
  parent: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  langs:
  - csharp
  - vb
  name: Equals(ProjectionVersion)
  nameWithType: ProjectionVersion.Equals(ProjectionVersion)
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals(EventStore.Projections.Core.Services.Processing.ProjectionVersion)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Equals
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool Equals(ProjectionVersion other)
    parameters:
    - id: other
      type: EventStore.Projections.Core.Services.Processing.ProjectionVersion
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ProjectionVersion) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals(System.Object)
  commentId: M:EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals(System.Object)
  id: Equals(System.Object)
  parent: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ProjectionVersion.Equals(Object)
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Equals
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.GetHashCode
  commentId: M:EventStore.Projections.Core.Services.Processing.ProjectionVersion.GetHashCode
  id: GetHashCode
  parent: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ProjectionVersion.GetHashCode()
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion.GetHashCode()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: GetHashCode
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ProjectionVersion.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: EventStore.Projections.Core.Services.Processing.ProjectionVersion.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<ProjectionVersion>()
  nameWithType: EnumExtensions.EnumValueName<ProjectionVersion>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Projections.Core.Services.Processing.ProjectionVersion>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of ProjectionVersion)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Projections.Core.Services.Processing.ProjectionVersion)()
  name.vb: EnumValueName(Of ProjectionVersion)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<ProjectionVersion>
    nameWithType: EnumExtensions.EnumValueName<ProjectionVersion>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Projections.Core.Services.Processing.ProjectionVersion>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of ProjectionVersion)
    nameWithType: EnumExtensions.EnumValueName(Of ProjectionVersion)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Projections.Core.Services.Processing.ProjectionVersion)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ProjectionVersion.#ctor
  name: ProjectionVersion
  nameWithType: ProjectionVersion.ProjectionVersion
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion.ProjectionVersion
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals
  name: Equals
  nameWithType: ProjectionVersion.Equals
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion.Equals
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionVersion
  parent: EventStore.Projections.Core.Services.Processing
  name: ProjectionVersion
  nameWithType: ProjectionVersion
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion.GetHashCode*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ProjectionVersion.GetHashCode
  name: GetHashCode
  nameWithType: ProjectionVersion.GetHashCode
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion.GetHashCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32

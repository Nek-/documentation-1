### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy
  commentId: T:EventStore.Projections.Core.Services.Processing.ReaderStrategy
  id: ReaderStrategy
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.ReaderStrategy.Create(System.String,System.Int32,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Core.Services.TimerService.ITimeProvider,System.Boolean,IPrincipal)
  - EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateExternallyFedReaderStrategy(System.String,System.Int32,EventStore.Core.Services.TimerService.ITimeProvider,IPrincipal,System.Int64)
  - EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreatePausedEventReader(Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean,System.Nullable{System.Int32})
  - EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateReaderSubscription(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
  - EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventFilter
  - EventStore.Projections.Core.Services.Processing.ReaderStrategy.IsReadingOrderRepeatable
  - EventStore.Projections.Core.Services.Processing.ReaderStrategy.Phase
  - EventStore.Projections.Core.Services.Processing.ReaderStrategy.PositionTagger
  langs:
  - csharp
  - vb
  name: ReaderStrategy
  nameWithType: ReaderStrategy
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ReaderStrategy
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class ReaderStrategy : object, IReaderStrategy'
    content.vb: >-
      Public Class ReaderStrategy
          Inherits Object
          Implements IReaderStrategy
  inheritance:
  - System.Object
  implements:
  - EventStore.Projections.Core.Services.Processing.IReaderStrategy
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateExternallyFedReaderStrategy(System.String,System.Int32,EventStore.Core.Services.TimerService.ITimeProvider,IPrincipal,System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateExternallyFedReaderStrategy(System.String,System.Int32,EventStore.Core.Services.TimerService.ITimeProvider,IPrincipal,System.Int64)
  id: CreateExternallyFedReaderStrategy(System.String,System.Int32,EventStore.Core.Services.TimerService.ITimeProvider,IPrincipal,System.Int64)
  parent: EventStore.Projections.Core.Services.Processing.ReaderStrategy
  langs:
  - csharp
  - vb
  name: CreateExternallyFedReaderStrategy(String, Int32, ITimeProvider, IPrincipal, Int64)
  nameWithType: ReaderStrategy.CreateExternallyFedReaderStrategy(String, Int32, ITimeProvider, IPrincipal, Int64)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateExternallyFedReaderStrategy(System.String, System.Int32, EventStore.Core.Services.TimerService.ITimeProvider, IPrincipal, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CreateExternallyFedReaderStrategy
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
    startLine: 34
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static IReaderStrategy CreateExternallyFedReaderStrategy(string tag, int phase, ITimeProvider timeProvider, IPrincipal runAs, long limitingCommitPosition)
    parameters:
    - id: tag
      type: System.String
    - id: phase
      type: System.Int32
    - id: timeProvider
      type: EventStore.Core.Services.TimerService.ITimeProvider
    - id: runAs
      type: IPrincipal
    - id: limitingCommitPosition
      type: System.Int64
    return:
      type: EventStore.Projections.Core.Services.Processing.IReaderStrategy
    content.vb: Public Shared Function CreateExternallyFedReaderStrategy(tag As String, phase As Integer, timeProvider As ITimeProvider, runAs As IPrincipal, limitingCommitPosition As Long) As IReaderStrategy
  overload: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateExternallyFedReaderStrategy*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.Create(System.String,System.Int32,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Core.Services.TimerService.ITimeProvider,System.Boolean,IPrincipal)
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderStrategy.Create(System.String,System.Int32,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Core.Services.TimerService.ITimeProvider,System.Boolean,IPrincipal)
  id: Create(System.String,System.Int32,EventStore.Projections.Core.Messages.IQuerySources,EventStore.Core.Services.TimerService.ITimeProvider,System.Boolean,IPrincipal)
  parent: EventStore.Projections.Core.Services.Processing.ReaderStrategy
  langs:
  - csharp
  - vb
  name: Create(String, Int32, IQuerySources, ITimeProvider, Boolean, IPrincipal)
  nameWithType: ReaderStrategy.Create(String, Int32, IQuerySources, ITimeProvider, Boolean, IPrincipal)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.Create(System.String, System.Int32, EventStore.Projections.Core.Messages.IQuerySources, EventStore.Core.Services.TimerService.ITimeProvider, System.Boolean, IPrincipal)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Create
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
    startLine: 49
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static IReaderStrategy Create(string tag, int phase, IQuerySources sources, ITimeProvider timeProvider, bool stopOnEof, IPrincipal runAs)
    parameters:
    - id: tag
      type: System.String
    - id: phase
      type: System.Int32
    - id: sources
      type: EventStore.Projections.Core.Messages.IQuerySources
    - id: timeProvider
      type: EventStore.Core.Services.TimerService.ITimeProvider
    - id: stopOnEof
      type: System.Boolean
    - id: runAs
      type: IPrincipal
    return:
      type: EventStore.Projections.Core.Services.Processing.IReaderStrategy
    content.vb: Public Shared Function Create(tag As String, phase As Integer, sources As IQuerySources, timeProvider As ITimeProvider, stopOnEof As Boolean, runAs As IPrincipal) As IReaderStrategy
  overload: EventStore.Projections.Core.Services.Processing.ReaderStrategy.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.IsReadingOrderRepeatable
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderStrategy.IsReadingOrderRepeatable
  id: IsReadingOrderRepeatable
  parent: EventStore.Projections.Core.Services.Processing.ReaderStrategy
  langs:
  - csharp
  - vb
  name: IsReadingOrderRepeatable
  nameWithType: ReaderStrategy.IsReadingOrderRepeatable
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.IsReadingOrderRepeatable
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IsReadingOrderRepeatable
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
    startLine: 155
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool IsReadingOrderRepeatable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadingOrderRepeatable As Boolean
  overload: EventStore.Projections.Core.Services.Processing.ReaderStrategy.IsReadingOrderRepeatable*
  implements:
  - EventStore.Projections.Core.Services.Processing.IReaderStrategy.IsReadingOrderRepeatable
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventFilter
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventFilter
  id: EventFilter
  parent: EventStore.Projections.Core.Services.Processing.ReaderStrategy
  langs:
  - csharp
  - vb
  name: EventFilter
  nameWithType: ReaderStrategy.EventFilter
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventFilter
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EventFilter
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
    startLine: 162
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public EventFilter EventFilter { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.EventFilter
    content.vb: Public ReadOnly Property EventFilter As EventFilter
  overload: EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventFilter*
  implements:
  - EventStore.Projections.Core.Services.Processing.IReaderStrategy.EventFilter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.PositionTagger
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderStrategy.PositionTagger
  id: PositionTagger
  parent: EventStore.Projections.Core.Services.Processing.ReaderStrategy
  langs:
  - csharp
  - vb
  name: PositionTagger
  nameWithType: ReaderStrategy.PositionTagger
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.PositionTagger
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: PositionTagger
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
    startLine: 167
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public PositionTagger PositionTagger { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.PositionTagger
    content.vb: Public ReadOnly Property PositionTagger As PositionTagger
  overload: EventStore.Projections.Core.Services.Processing.ReaderStrategy.PositionTagger*
  implements:
  - EventStore.Projections.Core.Services.Processing.IReaderStrategy.PositionTagger
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.Phase
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderStrategy.Phase
  id: Phase
  parent: EventStore.Projections.Core.Services.Processing.ReaderStrategy
  langs:
  - csharp
  - vb
  name: Phase
  nameWithType: ReaderStrategy.Phase
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.Phase
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Phase
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
    startLine: 172
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public int Phase { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Phase As Integer
  overload: EventStore.Projections.Core.Services.Processing.ReaderStrategy.Phase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateReaderSubscription(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateReaderSubscription(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
  id: CreateReaderSubscription(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
  parent: EventStore.Projections.Core.Services.Processing.ReaderStrategy
  langs:
  - csharp
  - vb
  name: CreateReaderSubscription(IPublisher, CheckpointTag, Guid, ReaderSubscriptionOptions)
  nameWithType: ReaderStrategy.CreateReaderSubscription(IPublisher, CheckpointTag, Guid, ReaderSubscriptionOptions)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateReaderSubscription(EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Services.Processing.CheckpointTag, Guid, EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CreateReaderSubscription
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
    startLine: 177
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public IReaderSubscription CreateReaderSubscription(IPublisher publisher, CheckpointTag fromCheckpointTag, Guid subscriptionId, ReaderSubscriptionOptions readerSubscriptionOptions)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: fromCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: subscriptionId
      type: Guid
    - id: readerSubscriptionOptions
      type: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
    return:
      type: EventStore.Projections.Core.Services.Processing.IReaderSubscription
    content.vb: Public Function CreateReaderSubscription(publisher As IPublisher, fromCheckpointTag As CheckpointTag, subscriptionId As Guid, readerSubscriptionOptions As ReaderSubscriptionOptions) As IReaderSubscription
  overload: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateReaderSubscription*
  implements:
  - EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreateReaderSubscription(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreatePausedEventReader(Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean,System.Nullable{System.Int32})
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreatePausedEventReader(Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean,System.Nullable{System.Int32})
  id: CreatePausedEventReader(Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean,System.Nullable{System.Int32})
  parent: EventStore.Projections.Core.Services.Processing.ReaderStrategy
  langs:
  - csharp
  - vb
  name: CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable<Int32>)
  nameWithType: ReaderStrategy.CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable<Int32>)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreatePausedEventReader(Guid, EventStore.Core.Bus.IPublisher, EventStore.Core.Helpers.IODispatcher, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CreatePausedEventReader
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderStrategy.cs
    startLine: 209
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public IEventReader CreatePausedEventReader(Guid eventReaderId, IPublisher publisher, IODispatcher ioDispatcher, CheckpointTag checkpointTag, bool stopOnEof, int? stopAfterNEvents)
    parameters:
    - id: eventReaderId
      type: Guid
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: ioDispatcher
      type: EventStore.Core.Helpers.IODispatcher
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: stopOnEof
      type: System.Boolean
    - id: stopAfterNEvents
      type: System.Nullable{System.Int32}
    return:
      type: EventStore.Projections.Core.Services.Processing.IEventReader
    content.vb: Public Function CreatePausedEventReader(eventReaderId As Guid, publisher As IPublisher, ioDispatcher As IODispatcher, checkpointTag As CheckpointTag, stopOnEof As Boolean, stopAfterNEvents As Integer?) As IEventReader
  overload: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreatePausedEventReader*
  implements:
  - EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreatePausedEventReader(Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean,System.Nullable{System.Int32})
  nameWithType.vb: ReaderStrategy.CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreatePausedEventReader(Guid, EventStore.Core.Bus.IPublisher, EventStore.Core.Helpers.IODispatcher, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean, System.Nullable(Of System.Int32))
  name.vb: CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable(Of Int32))
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  commentId: T:EventStore.Projections.Core.Services.Processing.IReaderStrategy
  parent: EventStore.Projections.Core.Services.Processing
  name: IReaderStrategy
  nameWithType: IReaderStrategy
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReaderStrategy>()
  nameWithType: ProtobufExtensions.Serialize<ReaderStrategy>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.ReaderStrategy>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReaderStrategy)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.ReaderStrategy)()
  name.vb: Serialize(Of ReaderStrategy)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReaderStrategy>
    nameWithType: ProtobufExtensions.Serialize<ReaderStrategy>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.ReaderStrategy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReaderStrategy)
    nameWithType: ProtobufExtensions.Serialize(Of ReaderStrategy)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.ReaderStrategy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReaderStrategy>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReaderStrategy>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.ReaderStrategy>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReaderStrategy)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.ReaderStrategy)()
  name.vb: SerializeToArray(Of ReaderStrategy)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReaderStrategy>
    nameWithType: ProtobufExtensions.SerializeToArray<ReaderStrategy>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.ReaderStrategy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReaderStrategy)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReaderStrategy)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.ReaderStrategy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateExternallyFedReaderStrategy*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateExternallyFedReaderStrategy
  name: CreateExternallyFedReaderStrategy
  nameWithType: ReaderStrategy.CreateExternallyFedReaderStrategy
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateExternallyFedReaderStrategy
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.TimerService.ITimeProvider
  commentId: T:EventStore.Core.Services.TimerService.ITimeProvider
  parent: EventStore.Core.Services.TimerService
  name: ITimeProvider
  nameWithType: ITimeProvider
  fullName: EventStore.Core.Services.TimerService.ITimeProvider
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.TimerService
  commentId: N:EventStore.Core.Services.TimerService
  name: EventStore.Core.Services.TimerService
  nameWithType: EventStore.Core.Services.TimerService
  fullName: EventStore.Core.Services.TimerService
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.Create*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderStrategy.Create
  name: Create
  nameWithType: ReaderStrategy.Create
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.Create
- uid: EventStore.Projections.Core.Messages.IQuerySources
  commentId: T:EventStore.Projections.Core.Messages.IQuerySources
  parent: EventStore.Projections.Core.Messages
  name: IQuerySources
  nameWithType: IQuerySources
  fullName: EventStore.Projections.Core.Messages.IQuerySources
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.IsReadingOrderRepeatable*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderStrategy.IsReadingOrderRepeatable
  name: IsReadingOrderRepeatable
  nameWithType: ReaderStrategy.IsReadingOrderRepeatable
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.IsReadingOrderRepeatable
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy.IsReadingOrderRepeatable
  commentId: P:EventStore.Projections.Core.Services.Processing.IReaderStrategy.IsReadingOrderRepeatable
  parent: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  name: IsReadingOrderRepeatable
  nameWithType: IReaderStrategy.IsReadingOrderRepeatable
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy.IsReadingOrderRepeatable
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventFilter*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventFilter
  name: EventFilter
  nameWithType: ReaderStrategy.EventFilter
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.EventFilter
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy.EventFilter
  commentId: P:EventStore.Projections.Core.Services.Processing.IReaderStrategy.EventFilter
  parent: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  name: EventFilter
  nameWithType: IReaderStrategy.EventFilter
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy.EventFilter
- uid: EventStore.Projections.Core.Services.Processing.EventFilter
  commentId: T:EventStore.Projections.Core.Services.Processing.EventFilter
  parent: EventStore.Projections.Core.Services.Processing
  name: EventFilter
  nameWithType: EventFilter
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.PositionTagger*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderStrategy.PositionTagger
  name: PositionTagger
  nameWithType: ReaderStrategy.PositionTagger
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.PositionTagger
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy.PositionTagger
  commentId: P:EventStore.Projections.Core.Services.Processing.IReaderStrategy.PositionTagger
  parent: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  name: PositionTagger
  nameWithType: IReaderStrategy.PositionTagger
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy.PositionTagger
- uid: EventStore.Projections.Core.Services.Processing.PositionTagger
  commentId: T:EventStore.Projections.Core.Services.Processing.PositionTagger
  parent: EventStore.Projections.Core.Services.Processing
  name: PositionTagger
  nameWithType: PositionTagger
  fullName: EventStore.Projections.Core.Services.Processing.PositionTagger
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.Phase*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderStrategy.Phase
  name: Phase
  nameWithType: ReaderStrategy.Phase
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.Phase
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateReaderSubscription*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateReaderSubscription
  name: CreateReaderSubscription
  nameWithType: ReaderStrategy.CreateReaderSubscription
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreateReaderSubscription
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreateReaderSubscription(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
  commentId: M:EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreateReaderSubscription(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
  parent: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  isExternal: true
  name: CreateReaderSubscription(IPublisher, CheckpointTag, Guid, ReaderSubscriptionOptions)
  nameWithType: IReaderStrategy.CreateReaderSubscription(IPublisher, CheckpointTag, Guid, ReaderSubscriptionOptions)
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreateReaderSubscription(EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Services.Processing.CheckpointTag, Guid, EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreateReaderSubscription(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
    name: CreateReaderSubscription
    nameWithType: IReaderStrategy.CreateReaderSubscription
    fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreateReaderSubscription
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
    name: ReaderSubscriptionOptions
    nameWithType: ReaderSubscriptionOptions
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreateReaderSubscription(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions)
    name: CreateReaderSubscription
    nameWithType: IReaderStrategy.CreateReaderSubscription
    fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreateReaderSubscription
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
    name: ReaderSubscriptionOptions
    nameWithType: ReaderSubscriptionOptions
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  commentId: T:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  parent: EventStore.Projections.Core.Services.Processing
  name: ReaderSubscriptionOptions
  nameWithType: ReaderSubscriptionOptions
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
- uid: EventStore.Projections.Core.Services.Processing.IReaderSubscription
  commentId: T:EventStore.Projections.Core.Services.Processing.IReaderSubscription
  parent: EventStore.Projections.Core.Services.Processing
  name: IReaderSubscription
  nameWithType: IReaderSubscription
  fullName: EventStore.Projections.Core.Services.Processing.IReaderSubscription
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreatePausedEventReader*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreatePausedEventReader
  name: CreatePausedEventReader
  nameWithType: ReaderStrategy.CreatePausedEventReader
  fullName: EventStore.Projections.Core.Services.Processing.ReaderStrategy.CreatePausedEventReader
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreatePausedEventReader(Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean,System.Nullable{System.Int32})
  commentId: M:EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreatePausedEventReader(Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean,System.Nullable{System.Int32})
  parent: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  isExternal: true
  name: CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable<Int32>)
  nameWithType: IReaderStrategy.CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable<Int32>)
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreatePausedEventReader(Guid, EventStore.Core.Bus.IPublisher, EventStore.Core.Helpers.IODispatcher, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean, System.Nullable<System.Int32>)
  nameWithType.vb: IReaderStrategy.CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable(Of Int32))
  fullName.vb: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreatePausedEventReader(Guid, EventStore.Core.Bus.IPublisher, EventStore.Core.Helpers.IODispatcher, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean, System.Nullable(Of System.Int32))
  name.vb: CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable(Of Int32))
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreatePausedEventReader(Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean,System.Nullable{System.Int32})
    name: CreatePausedEventReader
    nameWithType: IReaderStrategy.CreatePausedEventReader
    fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreatePausedEventReader
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Helpers.IODispatcher
    name: IODispatcher
    nameWithType: IODispatcher
    fullName: EventStore.Core.Helpers.IODispatcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreatePausedEventReader(Guid,EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean,System.Nullable{System.Int32})
    name: CreatePausedEventReader
    nameWithType: IReaderStrategy.CreatePausedEventReader
    fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy.CreatePausedEventReader
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Helpers.IODispatcher
    name: IODispatcher
    nameWithType: IODispatcher
    fullName: EventStore.Core.Helpers.IODispatcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Helpers.IODispatcher
  commentId: T:EventStore.Core.Helpers.IODispatcher
  parent: EventStore.Core.Helpers
  name: IODispatcher
  nameWithType: IODispatcher
  fullName: EventStore.Core.Helpers.IODispatcher
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IEventReader
  commentId: T:EventStore.Projections.Core.Services.Processing.IEventReader
  parent: EventStore.Projections.Core.Services.Processing
  name: IEventReader
  nameWithType: IEventReader
  fullName: EventStore.Projections.Core.Services.Processing.IEventReader
- uid: EventStore.Core.Helpers
  commentId: N:EventStore.Core.Helpers
  name: EventStore.Core.Helpers
  nameWithType: EventStore.Core.Helpers
  fullName: EventStore.Core.Helpers
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

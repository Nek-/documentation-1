### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  commentId: T:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  id: ReaderSubscriptionOptions
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.#ctor(System.Int64,System.Nullable{System.Int32},System.Int32,System.Boolean,System.Nullable{System.Int32})
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointAfterMs
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointProcessedEventsThreshold
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointUnhandledBytesThreshold
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopAfterNEvents
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopOnEof
  langs:
  - csharp
  - vb
  name: ReaderSubscriptionOptions
  nameWithType: ReaderSubscriptionOptions
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  type: Class
  source:
    id: ReaderSubscriptionOptions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderSubscriptionOptions.cs
    startLine: 1
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class ReaderSubscriptionOptions : object'
    content.vb: >-
      Public Class ReaderSubscriptionOptions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.#ctor(System.Int64,System.Nullable{System.Int32},System.Int32,System.Boolean,System.Nullable{System.Int32})
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.#ctor(System.Int64,System.Nullable{System.Int32},System.Int32,System.Boolean,System.Nullable{System.Int32})
  id: '#ctor(System.Int64,System.Nullable{System.Int32},System.Int32,System.Boolean,System.Nullable{System.Int32})'
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  langs:
  - csharp
  - vb
  name: ReaderSubscriptionOptions(Int64, Nullable<Int32>, Int32, Boolean, Nullable<Int32>)
  nameWithType: ReaderSubscriptionOptions.ReaderSubscriptionOptions(Int64, Nullable<Int32>, Int32, Boolean, Nullable<Int32>)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.ReaderSubscriptionOptions(System.Int64, System.Nullable<System.Int32>, System.Int32, System.Boolean, System.Nullable<System.Int32>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderSubscriptionOptions.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ReaderSubscriptionOptions(long checkpointUnhandledBytesThreshold, int? checkpointProcessedEventsThreshold, int checkpointAfterMs, bool stopOnEof, int? stopAfterNEvents)
    parameters:
    - id: checkpointUnhandledBytesThreshold
      type: System.Int64
    - id: checkpointProcessedEventsThreshold
      type: System.Nullable{System.Int32}
    - id: checkpointAfterMs
      type: System.Int32
    - id: stopOnEof
      type: System.Boolean
    - id: stopAfterNEvents
      type: System.Nullable{System.Int32}
    content.vb: Public Sub New(checkpointUnhandledBytesThreshold As Long, checkpointProcessedEventsThreshold As Integer?, checkpointAfterMs As Integer, stopOnEof As Boolean, stopAfterNEvents As Integer?)
  overload: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.#ctor*
  nameWithType.vb: ReaderSubscriptionOptions.ReaderSubscriptionOptions(Int64, Nullable(Of Int32), Int32, Boolean, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.ReaderSubscriptionOptions(System.Int64, System.Nullable(Of System.Int32), System.Int32, System.Boolean, System.Nullable(Of System.Int32))
  name.vb: ReaderSubscriptionOptions(Int64, Nullable(Of Int32), Int32, Boolean, Nullable(Of Int32))
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointUnhandledBytesThreshold
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointUnhandledBytesThreshold
  id: CheckpointUnhandledBytesThreshold
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  langs:
  - csharp
  - vb
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ReaderSubscriptionOptions.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointUnhandledBytesThreshold
  type: Property
  source:
    id: CheckpointUnhandledBytesThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderSubscriptionOptions.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public long CheckpointUnhandledBytesThreshold { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property CheckpointUnhandledBytesThreshold As Long
  overload: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointUnhandledBytesThreshold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointProcessedEventsThreshold
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointProcessedEventsThreshold
  id: CheckpointProcessedEventsThreshold
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  langs:
  - csharp
  - vb
  name: CheckpointProcessedEventsThreshold
  nameWithType: ReaderSubscriptionOptions.CheckpointProcessedEventsThreshold
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointProcessedEventsThreshold
  type: Property
  source:
    id: CheckpointProcessedEventsThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderSubscriptionOptions.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public int? CheckpointProcessedEventsThreshold { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property CheckpointProcessedEventsThreshold As Integer?
  overload: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointProcessedEventsThreshold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointAfterMs
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointAfterMs
  id: CheckpointAfterMs
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  langs:
  - csharp
  - vb
  name: CheckpointAfterMs
  nameWithType: ReaderSubscriptionOptions.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointAfterMs
  type: Property
  source:
    id: CheckpointAfterMs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderSubscriptionOptions.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public int CheckpointAfterMs { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CheckpointAfterMs As Integer
  overload: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointAfterMs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopOnEof
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopOnEof
  id: StopOnEof
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  langs:
  - csharp
  - vb
  name: StopOnEof
  nameWithType: ReaderSubscriptionOptions.StopOnEof
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopOnEof
  type: Property
  source:
    id: StopOnEof
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderSubscriptionOptions.cs
    startLine: 30
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool StopOnEof { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property StopOnEof As Boolean
  overload: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopOnEof*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopAfterNEvents
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopAfterNEvents
  id: StopAfterNEvents
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions
  langs:
  - csharp
  - vb
  name: StopAfterNEvents
  nameWithType: ReaderSubscriptionOptions.StopAfterNEvents
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopAfterNEvents
  type: Property
  source:
    id: StopAfterNEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/ReaderSubscriptionOptions.cs
    startLine: 34
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public int? StopAfterNEvents { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property StopAfterNEvents As Integer?
  overload: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopAfterNEvents*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.#ctor
  name: ReaderSubscriptionOptions
  nameWithType: ReaderSubscriptionOptions.ReaderSubscriptionOptions
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.ReaderSubscriptionOptions
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointUnhandledBytesThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointUnhandledBytesThreshold
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ReaderSubscriptionOptions.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointUnhandledBytesThreshold
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointProcessedEventsThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointProcessedEventsThreshold
  name: CheckpointProcessedEventsThreshold
  nameWithType: ReaderSubscriptionOptions.CheckpointProcessedEventsThreshold
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointProcessedEventsThreshold
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointAfterMs*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointAfterMs
  name: CheckpointAfterMs
  nameWithType: ReaderSubscriptionOptions.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.CheckpointAfterMs
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopOnEof*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopOnEof
  name: StopOnEof
  nameWithType: ReaderSubscriptionOptions.StopOnEof
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopOnEof
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopAfterNEvents*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopAfterNEvents
  name: StopAfterNEvents
  nameWithType: ReaderSubscriptionOptions.StopAfterNEvents
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.StopAfterNEvents

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  id: ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor(EventStore.Core.Data.ResolvedEvent,System.Byte[])
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor(System.String,System.Int64,System.String,System.Int64,System.Boolean,EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos,Guid,System.String,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],DateTime)
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor(System.String,System.Int64,System.String,System.Int64,System.Boolean,EventStore.Core.Data.TFPos,Guid,System.String,System.Boolean,System.String,System.String,System.String,System.String)
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.Data
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventId
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventOrLinkTargetPosition
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventSequenceNumber
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventStreamId
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventType
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsJson
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsLinkToDeletedStream
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsLinkToDeletedStreamTombstone
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsStreamDeletedEvent
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.LinkOrEventPosition
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.Metadata
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.Position
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionMetadata
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionSequenceNumber
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionStreamId
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedLinkTo
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.StreamMetadata
  - EventStore.Projections.Core.Services.Processing.ResolvedEvent.Timestamp
  langs:
  - csharp
  - vb
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ResolvedEvent
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class ResolvedEvent : object'
    content.vb: >-
      Public Class ResolvedEvent

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventId
  commentId: F:EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventId
  id: EventId
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: ResolvedEvent.EventId
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventId
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly Guid EventId
    return:
      type: Guid
    content.vb: Public ReadOnly EventId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventType
  commentId: F:EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventType
  id: EventType
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: ResolvedEvent.EventType
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventType
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventType
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 23
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly string EventType
    return:
      type: System.String
    content.vb: Public ReadOnly EventType As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsJson
  commentId: F:EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsJson
  id: IsJson
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: IsJson
  nameWithType: ResolvedEvent.IsJson
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsJson
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: IsJson
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 24
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly bool IsJson
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsJson As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Timestamp
  commentId: F:EventStore.Projections.Core.Services.Processing.ResolvedEvent.Timestamp
  id: Timestamp
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: ResolvedEvent.Timestamp
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Timestamp
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Timestamp
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 25
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly DateTime Timestamp
    return:
      type: DateTime
    content.vb: Public ReadOnly Timestamp As DateTime
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Data
  commentId: F:EventStore.Projections.Core.Services.Processing.ResolvedEvent.Data
  id: Data
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ResolvedEvent.Data
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Data
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Data
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 27
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly string Data
    return:
      type: System.String
    content.vb: Public ReadOnly Data As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Metadata
  commentId: F:EventStore.Projections.Core.Services.Processing.ResolvedEvent.Metadata
  id: Metadata
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ResolvedEvent.Metadata
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Metadata
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Metadata
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 28
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly string Metadata
    return:
      type: System.String
    content.vb: Public ReadOnly Metadata As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionMetadata
  commentId: F:EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionMetadata
  id: PositionMetadata
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: PositionMetadata
  nameWithType: ResolvedEvent.PositionMetadata
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionMetadata
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PositionMetadata
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly string PositionMetadata
    return:
      type: System.String
    content.vb: Public ReadOnly PositionMetadata As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.StreamMetadata
  commentId: F:EventStore.Projections.Core.Services.Processing.ResolvedEvent.StreamMetadata
  id: StreamMetadata
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: StreamMetadata
  nameWithType: ResolvedEvent.StreamMetadata
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.StreamMetadata
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StreamMetadata
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 30
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly string StreamMetadata
    return:
      type: System.String
    content.vb: Public ReadOnly StreamMetadata As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsLinkToDeletedStream
  commentId: F:EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsLinkToDeletedStream
  id: IsLinkToDeletedStream
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: IsLinkToDeletedStream
  nameWithType: ResolvedEvent.IsLinkToDeletedStream
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsLinkToDeletedStream
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: IsLinkToDeletedStream
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 31
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly bool IsLinkToDeletedStream
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsLinkToDeletedStream As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsLinkToDeletedStreamTombstone
  commentId: F:EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsLinkToDeletedStreamTombstone
  id: IsLinkToDeletedStreamTombstone
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: IsLinkToDeletedStreamTombstone
  nameWithType: ResolvedEvent.IsLinkToDeletedStreamTombstone
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsLinkToDeletedStreamTombstone
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: IsLinkToDeletedStreamTombstone
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 32
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly bool IsLinkToDeletedStreamTombstone
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsLinkToDeletedStreamTombstone As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor(EventStore.Core.Data.ResolvedEvent,System.Byte[])
  commentId: M:EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor(EventStore.Core.Data.ResolvedEvent,System.Byte[])
  id: '#ctor(EventStore.Core.Data.ResolvedEvent,System.Byte[])'
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: ResolvedEvent(ResolvedEvent, Byte[])
  nameWithType: ResolvedEvent.ResolvedEvent(ResolvedEvent, Byte[])
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedEvent(EventStore.Core.Data.ResolvedEvent, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 34
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ResolvedEvent(ResolvedEvent resolvedEvent, byte[] streamMetadata)
    parameters:
    - id: resolvedEvent
      type: EventStore.Core.Data.ResolvedEvent
    - id: streamMetadata
      type: System.Byte[]
    content.vb: Public Sub New(resolvedEvent As ResolvedEvent, streamMetadata As Byte())
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor*
  nameWithType.vb: ResolvedEvent.ResolvedEvent(ResolvedEvent, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedEvent(EventStore.Core.Data.ResolvedEvent, System.Byte())
  name.vb: ResolvedEvent(ResolvedEvent, Byte())
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor(System.String,System.Int64,System.String,System.Int64,System.Boolean,EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos,Guid,System.String,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],DateTime)
  commentId: M:EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor(System.String,System.Int64,System.String,System.Int64,System.Boolean,EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos,Guid,System.String,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],DateTime)
  id: '#ctor(System.String,System.Int64,System.String,System.Int64,System.Boolean,EventStore.Core.Data.TFPos,EventStore.Core.Data.TFPos,Guid,System.String,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],DateTime)'
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: ResolvedEvent(String, Int64, String, Int64, Boolean, TFPos, TFPos, Guid, String, Boolean, Byte[], Byte[], Byte[], Byte[], DateTime)
  nameWithType: ResolvedEvent.ResolvedEvent(String, Int64, String, Int64, Boolean, TFPos, TFPos, Guid, String, Boolean, Byte[], Byte[], Byte[], Byte[], DateTime)
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedEvent(System.String, System.Int64, System.String, System.Int64, System.Boolean, EventStore.Core.Data.TFPos, EventStore.Core.Data.TFPos, Guid, System.String, System.Boolean, System.Byte[], System.Byte[], System.Byte[], System.Byte[], DateTime)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 114
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ResolvedEvent(string positionStreamId, long positionSequenceNumber, string eventStreamId, long eventSequenceNumber, bool resolvedLinkTo, TFPos position, TFPos eventOrLinkTargetPosition, Guid eventId, string eventType, bool isJson, byte[] data, byte[] metadata, byte[] positionMetadata, byte[] streamMetadata, DateTime timestamp)
    parameters:
    - id: positionStreamId
      type: System.String
    - id: positionSequenceNumber
      type: System.Int64
    - id: eventStreamId
      type: System.String
    - id: eventSequenceNumber
      type: System.Int64
    - id: resolvedLinkTo
      type: System.Boolean
    - id: position
      type: EventStore.Core.Data.TFPos
    - id: eventOrLinkTargetPosition
      type: EventStore.Core.Data.TFPos
    - id: eventId
      type: Guid
    - id: eventType
      type: System.String
    - id: isJson
      type: System.Boolean
    - id: data
      type: System.Byte[]
    - id: metadata
      type: System.Byte[]
    - id: positionMetadata
      type: System.Byte[]
    - id: streamMetadata
      type: System.Byte[]
    - id: timestamp
      type: DateTime
    content.vb: Public Sub New(positionStreamId As String, positionSequenceNumber As Long, eventStreamId As String, eventSequenceNumber As Long, resolvedLinkTo As Boolean, position As TFPos, eventOrLinkTargetPosition As TFPos, eventId As Guid, eventType As String, isJson As Boolean, data As Byte(), metadata As Byte(), positionMetadata As Byte(), streamMetadata As Byte(), timestamp As DateTime)
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor*
  nameWithType.vb: ResolvedEvent.ResolvedEvent(String, Int64, String, Int64, Boolean, TFPos, TFPos, Guid, String, Boolean, Byte(), Byte(), Byte(), Byte(), DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedEvent(System.String, System.Int64, System.String, System.Int64, System.Boolean, EventStore.Core.Data.TFPos, EventStore.Core.Data.TFPos, Guid, System.String, System.Boolean, System.Byte(), System.Byte(), System.Byte(), System.Byte(), DateTime)
  name.vb: ResolvedEvent(String, Int64, String, Int64, Boolean, TFPos, TFPos, Guid, String, Boolean, Byte(), Byte(), Byte(), Byte(), DateTime)
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor(System.String,System.Int64,System.String,System.Int64,System.Boolean,EventStore.Core.Data.TFPos,Guid,System.String,System.Boolean,System.String,System.String,System.String,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor(System.String,System.Int64,System.String,System.Int64,System.Boolean,EventStore.Core.Data.TFPos,Guid,System.String,System.Boolean,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.Int64,System.String,System.Int64,System.Boolean,EventStore.Core.Data.TFPos,Guid,System.String,System.Boolean,System.String,System.String,System.String,System.String)'
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: ResolvedEvent(String, Int64, String, Int64, Boolean, TFPos, Guid, String, Boolean, String, String, String, String)
  nameWithType: ResolvedEvent.ResolvedEvent(String, Int64, String, Int64, Boolean, TFPos, Guid, String, Boolean, String, String, String, String)
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedEvent(System.String, System.Int64, System.String, System.Int64, System.Boolean, EventStore.Core.Data.TFPos, Guid, System.String, System.Boolean, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 139
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ResolvedEvent(string positionStreamId, long positionSequenceNumber, string eventStreamId, long eventSequenceNumber, bool resolvedLinkTo, TFPos position, Guid eventId, string eventType, bool isJson, string data, string metadata, string positionMetadata = null, string streamMetadata = null)
    parameters:
    - id: positionStreamId
      type: System.String
    - id: positionSequenceNumber
      type: System.Int64
    - id: eventStreamId
      type: System.String
    - id: eventSequenceNumber
      type: System.Int64
    - id: resolvedLinkTo
      type: System.Boolean
    - id: position
      type: EventStore.Core.Data.TFPos
    - id: eventId
      type: Guid
    - id: eventType
      type: System.String
    - id: isJson
      type: System.Boolean
    - id: data
      type: System.String
    - id: metadata
      type: System.String
    - id: positionMetadata
      type: System.String
    - id: streamMetadata
      type: System.String
    content.vb: Public Sub New(positionStreamId As String, positionSequenceNumber As Long, eventStreamId As String, eventSequenceNumber As Long, resolvedLinkTo As Boolean, position As TFPos, eventId As Guid, eventType As String, isJson As Boolean, data As String, metadata As String, positionMetadata As String = Nothing, streamMetadata As String = Nothing)
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventStreamId
  commentId: P:EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventStreamId
  id: EventStreamId
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: ResolvedEvent.EventStreamId
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventStreamId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventStreamId
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 166
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string EventStreamId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EventStreamId As String
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventStreamId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventSequenceNumber
  commentId: P:EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventSequenceNumber
  id: EventSequenceNumber
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: EventSequenceNumber
  nameWithType: ResolvedEvent.EventSequenceNumber
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventSequenceNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventSequenceNumber
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 170
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public long EventSequenceNumber { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property EventSequenceNumber As Long
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedLinkTo
  commentId: P:EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedLinkTo
  id: ResolvedLinkTo
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: ResolvedLinkTo
  nameWithType: ResolvedEvent.ResolvedLinkTo
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedLinkTo
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ResolvedLinkTo
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 174
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool ResolvedLinkTo { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ResolvedLinkTo As Boolean
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedLinkTo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionStreamId
  commentId: P:EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionStreamId
  id: PositionStreamId
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: PositionStreamId
  nameWithType: ResolvedEvent.PositionStreamId
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionStreamId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PositionStreamId
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 178
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string PositionStreamId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PositionStreamId As String
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionStreamId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionSequenceNumber
  commentId: P:EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionSequenceNumber
  id: PositionSequenceNumber
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: PositionSequenceNumber
  nameWithType: ResolvedEvent.PositionSequenceNumber
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionSequenceNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PositionSequenceNumber
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 182
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public long PositionSequenceNumber { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property PositionSequenceNumber As Long
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Position
  commentId: P:EventStore.Projections.Core.Services.Processing.ResolvedEvent.Position
  id: Position
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ResolvedEvent.Position
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Position
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 186
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public TFPos Position { get; }
    parameters: []
    return:
      type: EventStore.Core.Data.TFPos
    content.vb: Public ReadOnly Property Position As TFPos
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventOrLinkTargetPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventOrLinkTargetPosition
  id: EventOrLinkTargetPosition
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: EventOrLinkTargetPosition
  nameWithType: ResolvedEvent.EventOrLinkTargetPosition
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventOrLinkTargetPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventOrLinkTargetPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 190
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public TFPos EventOrLinkTargetPosition { get; }
    parameters: []
    return:
      type: EventStore.Core.Data.TFPos
    content.vb: Public ReadOnly Property EventOrLinkTargetPosition As TFPos
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventOrLinkTargetPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.LinkOrEventPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.ResolvedEvent.LinkOrEventPosition
  id: LinkOrEventPosition
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: LinkOrEventPosition
  nameWithType: ResolvedEvent.LinkOrEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.LinkOrEventPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: LinkOrEventPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 194
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public TFPos LinkOrEventPosition { get; }
    parameters: []
    return:
      type: EventStore.Core.Data.TFPos
    content.vb: Public ReadOnly Property LinkOrEventPosition As TFPos
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.LinkOrEventPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsStreamDeletedEvent
  commentId: P:EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsStreamDeletedEvent
  id: IsStreamDeletedEvent
  parent: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  langs:
  - csharp
  - vb
  name: IsStreamDeletedEvent
  nameWithType: ResolvedEvent.IsStreamDeletedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsStreamDeletedEvent
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: IsStreamDeletedEvent
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResolvedEvent.cs
    startLine: 198
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool IsStreamDeletedEvent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsStreamDeletedEvent As Boolean
  overload: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsStreamDeletedEvent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResolvedEvent.#ctor
  name: ResolvedEvent
  nameWithType: ResolvedEvent.ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedEvent
- uid: EventStore.Core.Data.ResolvedEvent
  commentId: T:EventStore.Core.Data.ResolvedEvent
  parent: EventStore.Core.Data
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Core.Data.ResolvedEvent
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Data.TFPos
  commentId: T:EventStore.Core.Data.TFPos
  parent: EventStore.Core.Data
  name: TFPos
  nameWithType: TFPos
  fullName: EventStore.Core.Data.TFPos
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventStreamId*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventStreamId
  name: EventStreamId
  nameWithType: ResolvedEvent.EventStreamId
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventStreamId
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventSequenceNumber*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventSequenceNumber
  name: EventSequenceNumber
  nameWithType: ResolvedEvent.EventSequenceNumber
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventSequenceNumber
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedLinkTo*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedLinkTo
  name: ResolvedLinkTo
  nameWithType: ResolvedEvent.ResolvedLinkTo
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.ResolvedLinkTo
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionStreamId*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionStreamId
  name: PositionStreamId
  nameWithType: ResolvedEvent.PositionStreamId
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionStreamId
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionSequenceNumber*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionSequenceNumber
  name: PositionSequenceNumber
  nameWithType: ResolvedEvent.PositionSequenceNumber
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.PositionSequenceNumber
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Position*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResolvedEvent.Position
  name: Position
  nameWithType: ResolvedEvent.Position
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.Position
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventOrLinkTargetPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventOrLinkTargetPosition
  name: EventOrLinkTargetPosition
  nameWithType: ResolvedEvent.EventOrLinkTargetPosition
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.EventOrLinkTargetPosition
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.LinkOrEventPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResolvedEvent.LinkOrEventPosition
  name: LinkOrEventPosition
  nameWithType: ResolvedEvent.LinkOrEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.LinkOrEventPosition
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsStreamDeletedEvent*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsStreamDeletedEvent
  name: IsStreamDeletedEvent
  nameWithType: ResolvedEvent.IsStreamDeletedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent.IsStreamDeletedEvent

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter
  commentId: T:EventStore.Projections.Core.Services.Processing.ResultWriter
  id: ResultWriter
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.ResultWriter.#ctor(EventStore.Projections.Core.Services.Processing.IResultEventEmitter,EventStore.Projections.Core.Services.Processing.IEmittedEventWriter,System.Boolean,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String)
  - EventStore.Projections.Core.Services.Processing.ResultWriter.AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  - EventStore.Projections.Core.Services.Processing.ResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  - EventStore.Projections.Core.Services.Processing.ResultWriter.RegisterNewPartition(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.ResultWriter.WriteEofResult(Guid,System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  - EventStore.Projections.Core.Services.Processing.ResultWriter.WriteProgress(Guid,System.Single)
  - EventStore.Projections.Core.Services.Processing.ResultWriter.WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  langs:
  - csharp
  - vb
  name: ResultWriter
  nameWithType: ResultWriter
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ResultWriter
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class ResultWriter : object, IResultWriter'
    content.vb: >-
      Public Class ResultWriter

          Inherits Object

          Implements IResultWriter
  inheritance:
  - System.Object
  implements:
  - EventStore.Projections.Core.Services.Processing.IResultWriter
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.#ctor(EventStore.Projections.Core.Services.Processing.IResultEventEmitter,EventStore.Projections.Core.Services.Processing.IEmittedEventWriter,System.Boolean,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.ResultWriter.#ctor(EventStore.Projections.Core.Services.Processing.IResultEventEmitter,EventStore.Projections.Core.Services.Processing.IEmittedEventWriter,System.Boolean,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String)
  id: '#ctor(EventStore.Projections.Core.Services.Processing.IResultEventEmitter,EventStore.Projections.Core.Services.Processing.IEmittedEventWriter,System.Boolean,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String)'
  parent: EventStore.Projections.Core.Services.Processing.ResultWriter
  langs:
  - csharp
  - vb
  name: ResultWriter(IResultEventEmitter, IEmittedEventWriter, Boolean, CheckpointTag, String)
  nameWithType: ResultWriter.ResultWriter(IResultEventEmitter, IEmittedEventWriter, Boolean, CheckpointTag, String)
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.ResultWriter(EventStore.Projections.Core.Services.Processing.IResultEventEmitter, EventStore.Projections.Core.Services.Processing.IEmittedEventWriter, System.Boolean, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ResultWriter(IResultEventEmitter resultEventEmitter, IEmittedEventWriter coreProjectionCheckpointManager, bool producesRunningResults, CheckpointTag zeroCheckpointTag, string partitionCatalogStreamName)
    parameters:
    - id: resultEventEmitter
      type: EventStore.Projections.Core.Services.Processing.IResultEventEmitter
    - id: coreProjectionCheckpointManager
      type: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
    - id: producesRunningResults
      type: System.Boolean
    - id: zeroCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: partitionCatalogStreamName
      type: System.String
    content.vb: Public Sub New(resultEventEmitter As IResultEventEmitter, coreProjectionCheckpointManager As IEmittedEventWriter, producesRunningResults As Boolean, zeroCheckpointTag As CheckpointTag, partitionCatalogStreamName As String)
  overload: EventStore.Projections.Core.Services.Processing.ResultWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteEofResult(Guid,System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.ResultWriter.WriteEofResult(Guid,System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  id: WriteEofResult(Guid,System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  parent: EventStore.Projections.Core.Services.Processing.ResultWriter
  langs:
  - csharp
  - vb
  name: WriteEofResult(Guid, String, String, CheckpointTag, Guid, String)
  nameWithType: ResultWriter.WriteEofResult(Guid, String, String, CheckpointTag, Guid, String)
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteEofResult(Guid, System.String, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Guid, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WriteEofResult
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void WriteEofResult(Guid subscriptionId, string partition, string resultBody, CheckpointTag causedBy, Guid causedByGuid, string correlationId)
    parameters:
    - id: subscriptionId
      type: Guid
    - id: partition
      type: System.String
    - id: resultBody
      type: System.String
    - id: causedBy
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: causedByGuid
      type: Guid
    - id: correlationId
      type: System.String
    content.vb: Public Sub WriteEofResult(subscriptionId As Guid, partition As String, resultBody As String, causedBy As CheckpointTag, causedByGuid As Guid, correlationId As String)
  overload: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteEofResult*
  implements:
  - EventStore.Projections.Core.Services.Processing.IResultWriter.WriteEofResult(Guid,System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  commentId: M:EventStore.Projections.Core.Services.Processing.ResultWriter.WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  id: WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  parent: EventStore.Projections.Core.Services.Processing.ResultWriter
  langs:
  - csharp
  - vb
  name: WriteRunningResult(EventProcessedResult)
  nameWithType: ResultWriter.WriteRunningResult(EventProcessedResult)
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WriteRunningResult
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
    startLine: 34
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void WriteRunningResult(EventProcessedResult result)
    parameters:
    - id: result
      type: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    content.vb: Public Sub WriteRunningResult(result As EventProcessedResult)
  overload: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteRunningResult*
  implements:
  - EventStore.Projections.Core.Services.Processing.IResultWriter.WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.RegisterNewPartition(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.ResultWriter.RegisterNewPartition(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: RegisterNewPartition(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.ResultWriter
  langs:
  - csharp
  - vb
  name: RegisterNewPartition(String, CheckpointTag)
  nameWithType: ResultWriter.RegisterNewPartition(String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.RegisterNewPartition(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: RegisterNewPartition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
    startLine: 52
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected EmittedEventEnvelope[] RegisterNewPartition(string partition, CheckpointTag at)
    parameters:
    - id: partition
      type: System.String
    - id: at
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    content.vb: Protected Function RegisterNewPartition(partition As String, at As CheckpointTag) As EmittedEventEnvelope()
  overload: EventStore.Projections.Core.Services.Processing.ResultWriter.RegisterNewPartition*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  commentId: M:EventStore.Projections.Core.Services.Processing.ResultWriter.AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  id: AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  parent: EventStore.Projections.Core.Services.Processing.ResultWriter
  langs:
  - csharp
  - vb
  name: AccountPartition(EventProcessedResult)
  nameWithType: ResultWriter.AccountPartition(EventProcessedResult)
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: AccountPartition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
    startLine: 61
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void AccountPartition(EventProcessedResult result)
    parameters:
    - id: result
      type: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    content.vb: Public Sub AccountPartition(result As EventProcessedResult)
  overload: EventStore.Projections.Core.Services.Processing.ResultWriter.AccountPartition*
  implements:
  - EventStore.Projections.Core.Services.Processing.IResultWriter.AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.ResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  id: EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  parent: EventStore.Projections.Core.Services.Processing.ResultWriter
  langs:
  - csharp
  - vb
  name: EventsEmitted(EmittedEventEnvelope[], Guid, String)
  nameWithType: ResultWriter.EventsEmitted(EmittedEventEnvelope[], Guid, String)
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], Guid, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventsEmitted
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
    startLine: 71
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void EventsEmitted(EmittedEventEnvelope[] scheduledWrites, Guid causedBy, string correlationId)
    parameters:
    - id: scheduledWrites
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    - id: causedBy
      type: Guid
    - id: correlationId
      type: System.String
    content.vb: Public Sub EventsEmitted(scheduledWrites As EmittedEventEnvelope(), causedBy As Guid, correlationId As String)
  overload: EventStore.Projections.Core.Services.Processing.ResultWriter.EventsEmitted*
  implements:
  - EventStore.Projections.Core.Services.Processing.IResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  nameWithType.vb: ResultWriter.EventsEmitted(EmittedEventEnvelope(), Guid, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.ResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), Guid, System.String)
  name.vb: EventsEmitted(EmittedEventEnvelope(), Guid, String)
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteProgress(Guid,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.ResultWriter.WriteProgress(Guid,System.Single)
  id: WriteProgress(Guid,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.ResultWriter
  langs:
  - csharp
  - vb
  name: WriteProgress(Guid, Single)
  nameWithType: ResultWriter.WriteProgress(Guid, Single)
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteProgress(Guid, System.Single)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WriteProgress
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/ResultWriter.cs
    startLine: 77
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void WriteProgress(Guid subscriptionId, float progress)
    parameters:
    - id: subscriptionId
      type: Guid
    - id: progress
      type: System.Single
    content.vb: Public Sub WriteProgress(subscriptionId As Guid, progress As Single)
  overload: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteProgress*
  implements:
  - EventStore.Projections.Core.Services.Processing.IResultWriter.WriteProgress(Guid,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.IResultWriter
  commentId: T:EventStore.Projections.Core.Services.Processing.IResultWriter
  parent: EventStore.Projections.Core.Services.Processing
  name: IResultWriter
  nameWithType: IResultWriter
  fullName: EventStore.Projections.Core.Services.Processing.IResultWriter
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResultWriter.#ctor
  name: ResultWriter
  nameWithType: ResultWriter.ResultWriter
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.ResultWriter
- uid: EventStore.Projections.Core.Services.Processing.IResultEventEmitter
  commentId: T:EventStore.Projections.Core.Services.Processing.IResultEventEmitter
  parent: EventStore.Projections.Core.Services.Processing
  name: IResultEventEmitter
  nameWithType: IResultEventEmitter
  fullName: EventStore.Projections.Core.Services.Processing.IResultEventEmitter
- uid: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
  commentId: T:EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
  parent: EventStore.Projections.Core.Services.Processing
  name: IEmittedEventWriter
  nameWithType: IEmittedEventWriter
  fullName: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteEofResult*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResultWriter.WriteEofResult
  name: WriteEofResult
  nameWithType: ResultWriter.WriteEofResult
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteEofResult
- uid: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteEofResult(Guid,System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.IResultWriter.WriteEofResult(Guid,System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  parent: EventStore.Projections.Core.Services.Processing.IResultWriter
  isExternal: true
  name: WriteEofResult(Guid, String, String, CheckpointTag, Guid, String)
  nameWithType: IResultWriter.WriteEofResult(Guid, String, String, CheckpointTag, Guid, String)
  fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteEofResult(Guid, System.String, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Guid, System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteEofResult(Guid,System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
    name: WriteEofResult
    nameWithType: IResultWriter.WriteEofResult
    fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteEofResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteEofResult(Guid,System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
    name: WriteEofResult
    nameWithType: IResultWriter.WriteEofResult
    fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteEofResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteRunningResult*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResultWriter.WriteRunningResult
  name: WriteRunningResult
  nameWithType: ResultWriter.WriteRunningResult
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteRunningResult
- uid: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  commentId: M:EventStore.Projections.Core.Services.Processing.IResultWriter.WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  parent: EventStore.Projections.Core.Services.Processing.IResultWriter
  name: WriteRunningResult(EventProcessedResult)
  nameWithType: IResultWriter.WriteRunningResult(EventProcessedResult)
  fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
    name: WriteRunningResult
    nameWithType: IResultWriter.WriteRunningResult
    fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteRunningResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    name: EventProcessedResult
    nameWithType: EventProcessedResult
    fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteRunningResult(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
    name: WriteRunningResult
    nameWithType: IResultWriter.WriteRunningResult
    fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteRunningResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    name: EventProcessedResult
    nameWithType: EventProcessedResult
    fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  commentId: T:EventStore.Projections.Core.Services.Processing.EventProcessedResult
  parent: EventStore.Projections.Core.Services.Processing
  name: EventProcessedResult
  nameWithType: EventProcessedResult
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.RegisterNewPartition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResultWriter.RegisterNewPartition
  name: RegisterNewPartition
  nameWithType: ResultWriter.RegisterNewPartition
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.RegisterNewPartition
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  isExternal: true
  name: EmittedEventEnvelope[]
  nameWithType: EmittedEventEnvelope[]
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  nameWithType.vb: EmittedEventEnvelope()
  fullName.vb: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope()
  name.vb: EmittedEventEnvelope()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.AccountPartition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResultWriter.AccountPartition
  name: AccountPartition
  nameWithType: ResultWriter.AccountPartition
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.AccountPartition
- uid: EventStore.Projections.Core.Services.Processing.IResultWriter.AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  commentId: M:EventStore.Projections.Core.Services.Processing.IResultWriter.AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  parent: EventStore.Projections.Core.Services.Processing.IResultWriter
  name: AccountPartition(EventProcessedResult)
  nameWithType: IResultWriter.AccountPartition(EventProcessedResult)
  fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IResultWriter.AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
    name: AccountPartition
    nameWithType: IResultWriter.AccountPartition
    fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.AccountPartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    name: EventProcessedResult
    nameWithType: EventProcessedResult
    fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IResultWriter.AccountPartition(EventStore.Projections.Core.Services.Processing.EventProcessedResult)
    name: AccountPartition
    nameWithType: IResultWriter.AccountPartition
    fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.AccountPartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    name: EventProcessedResult
    nameWithType: EventProcessedResult
    fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.EventsEmitted*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResultWriter.EventsEmitted
  name: EventsEmitted
  nameWithType: ResultWriter.EventsEmitted
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.EventsEmitted
- uid: EventStore.Projections.Core.Services.Processing.IResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.IResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
  parent: EventStore.Projections.Core.Services.Processing.IResultWriter
  isExternal: true
  name: EventsEmitted(EmittedEventEnvelope[], Guid, String)
  nameWithType: IResultWriter.EventsEmitted(EmittedEventEnvelope[], Guid, String)
  fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], Guid, System.String)
  nameWithType.vb: IResultWriter.EventsEmitted(EmittedEventEnvelope(), Guid, String)
  fullName.vb: EventStore.Projections.Core.Services.Processing.IResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), Guid, System.String)
  name.vb: EventsEmitted(EmittedEventEnvelope(), Guid, String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
    name: EventsEmitted
    nameWithType: IResultWriter.EventsEmitted
    fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.EventsEmitted
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IResultWriter.EventsEmitted(EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[],Guid,System.String)
    name: EventsEmitted
    nameWithType: IResultWriter.EventsEmitted
    fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.EventsEmitted
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteProgress*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.ResultWriter.WriteProgress
  name: WriteProgress
  nameWithType: ResultWriter.WriteProgress
  fullName: EventStore.Projections.Core.Services.Processing.ResultWriter.WriteProgress
- uid: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteProgress(Guid,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.IResultWriter.WriteProgress(Guid,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.IResultWriter
  isExternal: true
  name: WriteProgress(Guid, Single)
  nameWithType: IResultWriter.WriteProgress(Guid, Single)
  fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteProgress(Guid, System.Single)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteProgress(Guid,System.Single)
    name: WriteProgress
    nameWithType: IResultWriter.WriteProgress
    fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteProgress
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteProgress(Guid,System.Single)
    name: WriteProgress
    nameWithType: IResultWriter.WriteProgress
    fullName: EventStore.Projections.Core.Services.Processing.IResultWriter.WriteProgress
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single

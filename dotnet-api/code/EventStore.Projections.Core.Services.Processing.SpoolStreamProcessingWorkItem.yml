### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem
  commentId: T:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem
  id: SpoolStreamProcessingWorkItem
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.#ctor(EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.IResultWriter,EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher,System.Int64,Guid,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  - EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  - EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  - EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.ProcessEvent
  - EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.WriteOutput
  langs:
  - csharp
  - vb
  name: SpoolStreamProcessingWorkItem
  nameWithType: SpoolStreamProcessingWorkItem
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem
  type: Class
  source:
    id: SpoolStreamProcessingWorkItem
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/SpoolStreamProcessingWorkItem.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class SpoolStreamProcessingWorkItem : WorkItem, IHandle<PartitionProcessingResult>, IHandle<PartitionMeasured>, IHandle<PartitionProcessingProgress>'
    content.vb: >-
      Public Class SpoolStreamProcessingWorkItem

          Inherits WorkItem

          Implements IHandle(Of PartitionProcessingResult), IHandle(Of PartitionMeasured), IHandle(Of PartitionProcessingProgress)
  inheritance:
  - System.Object
  - EventStore.Projections.Core.Services.Processing.StagedTask
  - EventStore.Projections.Core.Services.Processing.WorkItem
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress}
  inheritedMembers:
  - EventStore.Projections.Core.Services.Processing.WorkItem._requiresRunning
  - EventStore.Projections.Core.Services.Processing.WorkItem.Queue
  - EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32,Action{System.Int32,System.Object})
  - EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
  - EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
  - EventStore.Projections.Core.Services.Processing.WorkItem.Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
  - EventStore.Projections.Core.Services.Processing.WorkItem.NextStage(System.Object)
  - EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
  - EventStore.Projections.Core.Services.Processing.StagedTask.InitialCorrelationId
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.#ctor(EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.IResultWriter,EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher,System.Int64,Guid,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.#ctor(EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.IResultWriter,EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher,System.Int64,Guid,System.Boolean)
  id: '#ctor(EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer,EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Services.Processing.IResultWriter,EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels,EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher,System.Int64,Guid,System.Boolean)'
  parent: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem
  langs:
  - csharp
  - vb
  name: SpoolStreamProcessingWorkItem(ISpoolStreamWorkItemContainer, IPublisher, IResultWriter, ParallelProcessingLoadBalancer, EventReaderSubscriptionMessage.CommittedEventReceived, SlaveProjectionCommunicationChannels, SpooledStreamReadingDispatcher, Int64, Guid, Boolean)
  nameWithType: SpoolStreamProcessingWorkItem.SpoolStreamProcessingWorkItem(ISpoolStreamWorkItemContainer, IPublisher, IResultWriter, ParallelProcessingLoadBalancer, EventReaderSubscriptionMessage.CommittedEventReceived, SlaveProjectionCommunicationChannels, SpooledStreamReadingDispatcher, Int64, Guid, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.SpoolStreamProcessingWorkItem(EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer, EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Services.Processing.IResultWriter, EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived, EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels, EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher, System.Int64, Guid, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/SpoolStreamProcessingWorkItem.cs
    startLine: 27
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public SpoolStreamProcessingWorkItem(ISpoolStreamWorkItemContainer container, IPublisher publisher, IResultWriter resultWriter, ParallelProcessingLoadBalancer loadBalancer, EventReaderSubscriptionMessage.CommittedEventReceived message, SlaveProjectionCommunicationChannels slaves, SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher, long limitingCommitPosition, Guid subscriptionId, bool definesCatalogTransform)
    parameters:
    - id: container
      type: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: resultWriter
      type: EventStore.Projections.Core.Services.Processing.IResultWriter
    - id: loadBalancer
      type: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    - id: slaves
      type: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    - id: spoolProcessingResponseDispatcher
      type: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
    - id: limitingCommitPosition
      type: System.Int64
    - id: subscriptionId
      type: Guid
    - id: definesCatalogTransform
      type: System.Boolean
    content.vb: Public Sub New(container As ISpoolStreamWorkItemContainer, publisher As IPublisher, resultWriter As IResultWriter, loadBalancer As ParallelProcessingLoadBalancer, message As EventReaderSubscriptionMessage.CommittedEventReceived, slaves As SlaveProjectionCommunicationChannels, spoolProcessingResponseDispatcher As SpooledStreamReadingDispatcher, limitingCommitPosition As Long, subscriptionId As Guid, definesCatalogTransform As Boolean)
  overload: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.ProcessEvent
  commentId: M:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.ProcessEvent
  id: ProcessEvent
  parent: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem
  langs:
  - csharp
  - vb
  name: ProcessEvent()
  nameWithType: SpoolStreamProcessingWorkItem.ProcessEvent()
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.ProcessEvent()
  type: Method
  source:
    id: ProcessEvent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/SpoolStreamProcessingWorkItem.cs
    startLine: 56
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected override void ProcessEvent()
    content.vb: Protected Overrides Sub ProcessEvent
  overridden: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
  overload: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.ProcessEvent*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.WriteOutput
  commentId: M:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.WriteOutput
  id: WriteOutput
  parent: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem
  langs:
  - csharp
  - vb
  name: WriteOutput()
  nameWithType: SpoolStreamProcessingWorkItem.WriteOutput()
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.WriteOutput()
  type: Method
  source:
    id: WriteOutput
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/SpoolStreamProcessingWorkItem.cs
    startLine: 92
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected override void WriteOutput()
    content.vb: Protected Overrides Sub WriteOutput
  overridden: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
  overload: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.WriteOutput*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  commentId: M:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  id: Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  parent: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem
  langs:
  - csharp
  - vb
  name: Handle(PartitionProcessingResult)
  nameWithType: SpoolStreamProcessingWorkItem.Handle(PartitionProcessingResult)
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/SpoolStreamProcessingWorkItem.cs
    startLine: 103
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(PartitionProcessingResult message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
    content.vb: Public Sub Handle(message As PartitionProcessingResult)
  overload: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult}.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  commentId: M:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  id: Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  parent: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem
  langs:
  - csharp
  - vb
  name: Handle(PartitionMeasured)
  nameWithType: SpoolStreamProcessingWorkItem.Handle(PartitionMeasured)
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/SpoolStreamProcessingWorkItem.cs
    startLine: 110
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(PartitionMeasured message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
    content.vb: Public Sub Handle(message As PartitionMeasured)
  overload: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured}.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  commentId: M:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  id: Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  parent: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem
  langs:
  - csharp
  - vb
  name: Handle(PartitionProcessingProgress)
  nameWithType: SpoolStreamProcessingWorkItem.Handle(PartitionProcessingProgress)
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/SpoolStreamProcessingWorkItem.cs
    startLine: 114
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(PartitionProcessingProgress message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
    content.vb: Public Sub Handle(message As PartitionProcessingProgress)
  overload: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress}.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.StagedTask
  commentId: T:EventStore.Projections.Core.Services.Processing.StagedTask
  parent: EventStore.Projections.Core.Services.Processing
  name: StagedTask
  nameWithType: StagedTask
  fullName: EventStore.Projections.Core.Services.Processing.StagedTask
- uid: EventStore.Projections.Core.Services.Processing.WorkItem
  commentId: T:EventStore.Projections.Core.Services.Processing.WorkItem
  parent: EventStore.Projections.Core.Services.Processing
  name: WorkItem
  nameWithType: WorkItem
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<PartitionProcessingResult>
  nameWithType: IHandle<PartitionProcessingResult>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult>
  nameWithType.vb: IHandle(Of PartitionProcessingResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  name.vb: IHandle(Of PartitionProcessingResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
    name: PartitionProcessingResult
    nameWithType: PartitionProcessingResult
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
    name: PartitionProcessingResult
    nameWithType: PartitionProcessingResult
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<PartitionMeasured>
  nameWithType: IHandle<PartitionMeasured>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured>
  nameWithType.vb: IHandle(Of PartitionMeasured)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  name.vb: IHandle(Of PartitionMeasured)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
    name: PartitionMeasured
    nameWithType: PartitionMeasured
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
    name: PartitionMeasured
    nameWithType: PartitionMeasured
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<PartitionProcessingProgress>
  nameWithType: IHandle<PartitionProcessingProgress>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress>
  nameWithType.vb: IHandle(Of PartitionProcessingProgress)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  name.vb: IHandle(Of PartitionProcessingProgress)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
    name: PartitionProcessingProgress
    nameWithType: PartitionProcessingProgress
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
    name: PartitionProcessingProgress
    nameWithType: PartitionProcessingProgress
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WorkItem._requiresRunning
  commentId: F:EventStore.Projections.Core.Services.Processing.WorkItem._requiresRunning
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  name: _requiresRunning
  nameWithType: WorkItem._requiresRunning
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem._requiresRunning
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.Queue
  commentId: P:EventStore.Projections.Core.Services.Processing.WorkItem.Queue
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  name: Queue
  nameWithType: WorkItem.Queue
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Queue
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32,Action{System.Int32,System.Object})
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32,Action{System.Int32,System.Object})
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  isExternal: true
  name: Process(Int32, Action<Int32, Object>)
  nameWithType: WorkItem.Process(Int32, Action<Int32, Object>)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32, Action<System.Int32, System.Object>)
  nameWithType.vb: WorkItem.Process(Int32, Action(Of Int32, Object))
  fullName.vb: EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32, Action(Of System.Int32, System.Object))
  name.vb: Process(Int32, Action(Of Int32, Object))
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32,Action{System.Int32,System.Object})
    name: Process
    nameWithType: WorkItem.Process
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32,Action{System.Int32,System.Object})
    name: Process
    nameWithType: WorkItem.Process
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  name: RecordEventOrder()
  nameWithType: WorkItem.RecordEventOrder()
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
    name: RecordEventOrder
    nameWithType: WorkItem.RecordEventOrder
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
    name: RecordEventOrder
    nameWithType: WorkItem.RecordEventOrder
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  name: GetStatePartition()
  nameWithType: WorkItem.GetStatePartition()
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
    name: GetStatePartition
    nameWithType: WorkItem.GetStatePartition
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
    name: GetStatePartition
    nameWithType: WorkItem.GetStatePartition
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  name: Load(CheckpointTag)
  nameWithType: WorkItem.Load(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: Load
    nameWithType: WorkItem.Load
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: Load
    nameWithType: WorkItem.Load
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  name: CompleteItem()
  nameWithType: WorkItem.CompleteItem()
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
    name: CompleteItem
    nameWithType: WorkItem.CompleteItem
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
    name: CompleteItem
    nameWithType: WorkItem.CompleteItem
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage(System.Object)
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.NextStage(System.Object)
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  isExternal: true
  name: NextStage(Object)
  nameWithType: WorkItem.NextStage(Object)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage(System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage(System.Object)
    name: NextStage
    nameWithType: WorkItem.NextStage
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage(System.Object)
    name: NextStage
    nameWithType: WorkItem.NextStage
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  name: SetCheckpointTag(CheckpointTag)
  nameWithType: WorkItem.SetCheckpointTag(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: SetCheckpointTag
    nameWithType: WorkItem.SetCheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: SetCheckpointTag
    nameWithType: WorkItem.SetCheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  name: SetProjectionQueue(CoreProjectionQueue)
  nameWithType: WorkItem.SetProjectionQueue(CoreProjectionQueue)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
    name: SetProjectionQueue
    nameWithType: WorkItem.SetProjectionQueue
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
    name: CoreProjectionQueue
    nameWithType: CoreProjectionQueue
    fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
    name: SetProjectionQueue
    nameWithType: WorkItem.SetProjectionQueue
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
    name: CoreProjectionQueue
    nameWithType: CoreProjectionQueue
    fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.StagedTask.InitialCorrelationId
  commentId: F:EventStore.Projections.Core.Services.Processing.StagedTask.InitialCorrelationId
  parent: EventStore.Projections.Core.Services.Processing.StagedTask
  name: InitialCorrelationId
  nameWithType: StagedTask.InitialCorrelationId
  fullName: EventStore.Projections.Core.Services.Processing.StagedTask.InitialCorrelationId
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.#ctor
  name: SpoolStreamProcessingWorkItem
  nameWithType: SpoolStreamProcessingWorkItem.SpoolStreamProcessingWorkItem
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.SpoolStreamProcessingWorkItem
- uid: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer
  commentId: T:EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer
  parent: EventStore.Projections.Core.Services.Processing
  name: ISpoolStreamWorkItemContainer
  nameWithType: ISpoolStreamWorkItemContainer
  fullName: EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Projections.Core.Services.Processing.IResultWriter
  commentId: T:EventStore.Projections.Core.Services.Processing.IResultWriter
  parent: EventStore.Projections.Core.Services.Processing
  name: IResultWriter
  nameWithType: IResultWriter
  fullName: EventStore.Projections.Core.Services.Processing.IResultWriter
- uid: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer
  commentId: T:EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer
  parent: EventStore.Projections.Core.Services.Processing
  name: ParallelProcessingLoadBalancer
  nameWithType: ParallelProcessingLoadBalancer
  fullName: EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.CommittedEventReceived
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  commentId: T:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  parent: EventStore.Projections.Core.Messages
  name: SlaveProjectionCommunicationChannels
  nameWithType: SlaveProjectionCommunicationChannels
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
- uid: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
  commentId: T:EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
  parent: EventStore.Projections.Core.Services
  name: SpooledStreamReadingDispatcher
  nameWithType: SpooledStreamReadingDispatcher
  fullName: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  name: ProcessEvent()
  nameWithType: WorkItem.ProcessEvent()
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
    name: ProcessEvent
    nameWithType: WorkItem.ProcessEvent
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
    name: ProcessEvent
    nameWithType: WorkItem.ProcessEvent
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.ProcessEvent*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.ProcessEvent
  name: ProcessEvent
  nameWithType: SpoolStreamProcessingWorkItem.ProcessEvent
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.ProcessEvent
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  name: WriteOutput()
  nameWithType: WorkItem.WriteOutput()
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
    name: WriteOutput
    nameWithType: WorkItem.WriteOutput
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
    name: WriteOutput
    nameWithType: WorkItem.WriteOutput
    fullName: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.WriteOutput*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.WriteOutput
  name: WriteOutput
  nameWithType: SpoolStreamProcessingWorkItem.WriteOutput
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.WriteOutput
- uid: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle
  name: Handle
  nameWithType: SpoolStreamProcessingWorkItem.Handle
  fullName: EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult}.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult}.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(PartitionProcessingResult)
  nameWithType: IHandle<PartitionProcessingResult>.Handle(PartitionProcessingResult)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult>.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  nameWithType.vb: IHandle(Of PartitionProcessingResult).Handle(PartitionProcessingResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult).Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<PartitionProcessingResult>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
    name: PartitionProcessingResult
    nameWithType: PartitionProcessingResult
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of PartitionProcessingResult).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
    name: PartitionProcessingResult
    nameWithType: PartitionProcessingResult
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
  commentId: T:EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
  parent: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages
  name: PartitionProcessingResult
  nameWithType: PartitionProcessingResult
  fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages
  commentId: N:EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages
  name: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages
  nameWithType: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages
  fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured}.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured}.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(PartitionMeasured)
  nameWithType: IHandle<PartitionMeasured>.Handle(PartitionMeasured)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured>.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  nameWithType.vb: IHandle(Of PartitionMeasured).Handle(PartitionMeasured)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured).Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<PartitionMeasured>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
    name: PartitionMeasured
    nameWithType: PartitionMeasured
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of PartitionMeasured).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
    name: PartitionMeasured
    nameWithType: PartitionMeasured
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
  commentId: T:EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
  parent: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages
  name: PartitionMeasured
  nameWithType: PartitionMeasured
  fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress}.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress}.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(PartitionProcessingProgress)
  nameWithType: IHandle<PartitionProcessingProgress>.Handle(PartitionProcessingProgress)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress>.Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  nameWithType.vb: IHandle(Of PartitionProcessingProgress).Handle(PartitionProcessingProgress)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress).Handle(EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<PartitionProcessingProgress>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
    name: PartitionProcessingProgress
    nameWithType: PartitionProcessingProgress
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of PartitionProcessingProgress).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
    name: PartitionProcessingProgress
    nameWithType: PartitionProcessingProgress
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
  commentId: T:EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress
  parent: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages
  name: PartitionProcessingProgress
  nameWithType: PartitionProcessingProgress
  fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress

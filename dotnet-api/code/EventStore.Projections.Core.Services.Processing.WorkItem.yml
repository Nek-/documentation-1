### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.WorkItem
  commentId: T:EventStore.Projections.Core.Services.Processing.WorkItem
  id: WorkItem
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.WorkItem.#ctor(System.Object)
  - EventStore.Projections.Core.Services.Processing.WorkItem._requiresRunning
  - EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
  - EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
  - EventStore.Projections.Core.Services.Processing.WorkItem.Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.WorkItem.NextStage(System.Object)
  - EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32,Action{System.Int32,System.Object})
  - EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
  - EventStore.Projections.Core.Services.Processing.WorkItem.Queue
  - EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
  - EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
  - EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
  langs:
  - csharp
  - vb
  name: WorkItem
  nameWithType: WorkItem
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem
  type: Class
  source:
    id: WorkItem
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public abstract class WorkItem : StagedTask'
    content.vb: >-
      Public MustInherit Class WorkItem
          Inherits StagedTask
  inheritance:
  - System.Object
  - EventStore.Projections.Core.Services.Processing.StagedTask
  derivedClasses:
  - EventStore.Projections.Core.Services.Processing.CheckpointWorkItemBase
  - EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem
  inheritedMembers:
  - EventStore.Projections.Core.Services.Processing.StagedTask.InitialCorrelationId
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Services.Processing.WorkItem._requiresRunning
  commentId: F:EventStore.Projections.Core.Services.Processing.WorkItem._requiresRunning
  id: _requiresRunning
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: _requiresRunning
  nameWithType: WorkItem._requiresRunning
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem._requiresRunning
  type: Field
  source:
    id: _requiresRunning
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected bool _requiresRunning
    return:
      type: System.Boolean
    content.vb: Protected _requiresRunning As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.#ctor(System.Object)
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: WorkItem(Object)
  nameWithType: WorkItem.WorkItem(Object)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.WorkItem(System.Object)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected WorkItem(object initialCorrelationId)
    parameters:
    - id: initialCorrelationId
      type: System.Object
    content.vb: Protected Sub New(initialCorrelationId As Object)
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.Queue
  commentId: P:EventStore.Projections.Core.Services.Processing.WorkItem.Queue
  id: Queue
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: Queue
  nameWithType: WorkItem.Queue
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Queue
  type: Property
  source:
    id: Queue
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 17
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected CoreProjectionQueue Queue { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
    content.vb: Protected ReadOnly Property Queue As CoreProjectionQueue
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.Queue*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32,Action{System.Int32,System.Object})
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32,Action{System.Int32,System.Object})
  id: Process(System.Int32,Action{System.Int32,System.Object})
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: Process(Int32, Action<Int32, Object>)
  nameWithType: WorkItem.Process(Int32, Action<Int32, Object>)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32, Action<System.Int32, System.Object>)
  type: Method
  source:
    id: Process
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override void Process(int onStage, Action<int, object> readyForStage)
    parameters:
    - id: onStage
      type: System.Int32
    - id: readyForStage
      type: Action{System.Int32,System.Object}
    content.vb: Public Overrides Sub Process(onStage As Integer, readyForStage As Action(Of Integer, Object))
  overridden: EventStore.Projections.Core.Services.Processing.StagedTask.Process(System.Int32,Action{System.Int32,System.Object})
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.Process*
  nameWithType.vb: WorkItem.Process(Int32, Action(Of Int32, Object))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: EventStore.Projections.Core.Services.Processing.WorkItem.Process(System.Int32, Action(Of System.Int32, System.Object))
  name.vb: Process(Int32, Action(Of Int32, Object))
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
  id: RecordEventOrder
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: RecordEventOrder()
  nameWithType: WorkItem.RecordEventOrder()
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder()
  type: Method
  source:
    id: RecordEventOrder
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 55
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected virtual void RecordEventOrder()
    content.vb: Protected Overridable Sub RecordEventOrder
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
  id: GetStatePartition
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: GetStatePartition()
  nameWithType: WorkItem.GetStatePartition()
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition()
  type: Method
  source:
    id: GetStatePartition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 59
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected virtual void GetStatePartition()
    content.vb: Protected Overridable Sub GetStatePartition
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: Load(CheckpointTag)
  nameWithType: WorkItem.Load(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Load(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: Load
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 63
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected virtual void Load(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Protected Overridable Sub Load(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.Load*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
  id: ProcessEvent
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: ProcessEvent()
  nameWithType: WorkItem.ProcessEvent()
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent()
  type: Method
  source:
    id: ProcessEvent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 67
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected virtual void ProcessEvent()
    content.vb: Protected Overridable Sub ProcessEvent
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
  id: WriteOutput
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: WriteOutput()
  nameWithType: WorkItem.WriteOutput()
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput()
  type: Method
  source:
    id: WriteOutput
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 71
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected virtual void WriteOutput()
    content.vb: Protected Overridable Sub WriteOutput
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
  id: CompleteItem
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: CompleteItem()
  nameWithType: WorkItem.CompleteItem()
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem()
  type: Method
  source:
    id: CompleteItem
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 76
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected virtual void CompleteItem()
    content.vb: Protected Overridable Sub CompleteItem
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage(System.Object)
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.NextStage(System.Object)
  id: NextStage(System.Object)
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: NextStage(Object)
  nameWithType: WorkItem.NextStage(Object)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage(System.Object)
  type: Method
  source:
    id: NextStage
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 80
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void NextStage(object newCorrelationId = null)
    parameters:
    - id: newCorrelationId
      type: System.Object
    content.vb: Protected Sub NextStage(newCorrelationId As Object = Nothing)
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: SetCheckpointTag(CheckpointTag)
  nameWithType: WorkItem.SetCheckpointTag(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    id: SetCheckpointTag
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 85
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void SetCheckpointTag(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub SetCheckpointTag(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
  commentId: M:EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
  id: SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
  parent: EventStore.Projections.Core.Services.Processing.WorkItem
  langs:
  - csharp
  - vb
  name: SetProjectionQueue(CoreProjectionQueue)
  nameWithType: WorkItem.SetProjectionQueue(CoreProjectionQueue)
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue(EventStore.Projections.Core.Services.Processing.CoreProjectionQueue)
  type: Method
  source:
    id: SetProjectionQueue
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/Processing/WorkItem.cs
    startLine: 89
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void SetProjectionQueue(CoreProjectionQueue coreProjectionQueue)
    parameters:
    - id: coreProjectionQueue
      type: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
    content.vb: Public Sub SetProjectionQueue(coreProjectionQueue As CoreProjectionQueue)
  overload: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.StagedTask
  commentId: T:EventStore.Projections.Core.Services.Processing.StagedTask
  parent: EventStore.Projections.Core.Services.Processing
  name: StagedTask
  nameWithType: StagedTask
  fullName: EventStore.Projections.Core.Services.Processing.StagedTask
- uid: EventStore.Projections.Core.Services.Processing.StagedTask.InitialCorrelationId
  commentId: F:EventStore.Projections.Core.Services.Processing.StagedTask.InitialCorrelationId
  parent: EventStore.Projections.Core.Services.Processing.StagedTask
  name: InitialCorrelationId
  nameWithType: StagedTask.InitialCorrelationId
  fullName: EventStore.Projections.Core.Services.Processing.StagedTask.InitialCorrelationId
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.#ctor
  name: WorkItem
  nameWithType: WorkItem.WorkItem
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.WorkItem
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.Queue*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.Queue
  name: Queue
  nameWithType: WorkItem.Queue
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Queue
- uid: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
  commentId: T:EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
  parent: EventStore.Projections.Core.Services.Processing
  name: CoreProjectionQueue
  nameWithType: CoreProjectionQueue
  fullName: EventStore.Projections.Core.Services.Processing.CoreProjectionQueue
- uid: EventStore.Projections.Core.Services.Processing.StagedTask.Process(System.Int32,Action{System.Int32,System.Object})
  commentId: M:EventStore.Projections.Core.Services.Processing.StagedTask.Process(System.Int32,Action{System.Int32,System.Object})
  parent: EventStore.Projections.Core.Services.Processing.StagedTask
  isExternal: true
  name: Process(Int32, Action<Int32, Object>)
  nameWithType: StagedTask.Process(Int32, Action<Int32, Object>)
  fullName: EventStore.Projections.Core.Services.Processing.StagedTask.Process(System.Int32, Action<System.Int32, System.Object>)
  nameWithType.vb: StagedTask.Process(Int32, Action(Of Int32, Object))
  fullName.vb: EventStore.Projections.Core.Services.Processing.StagedTask.Process(System.Int32, Action(Of System.Int32, System.Object))
  name.vb: Process(Int32, Action(Of Int32, Object))
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.StagedTask.Process(System.Int32,Action{System.Int32,System.Object})
    name: Process
    nameWithType: StagedTask.Process
    fullName: EventStore.Projections.Core.Services.Processing.StagedTask.Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.StagedTask.Process(System.Int32,Action{System.Int32,System.Object})
    name: Process
    nameWithType: StagedTask.Process
    fullName: EventStore.Projections.Core.Services.Processing.StagedTask.Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.Process*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.Process
  name: Process
  nameWithType: WorkItem.Process
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Process
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Action{System.Int32,System.Object}
  commentId: '!:Action{System.Int32,System.Object}'
  definition: Action`2
  name: Action<Int32, Object>
  nameWithType: Action<Int32, Object>
  fullName: Action<System.Int32, System.Object>
  nameWithType.vb: Action(Of Int32, Object)
  fullName.vb: Action(Of System.Int32, System.Object)
  name.vb: Action(Of Int32, Object)
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
  name: RecordEventOrder
  nameWithType: WorkItem.RecordEventOrder
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.RecordEventOrder
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
  name: GetStatePartition
  nameWithType: WorkItem.GetStatePartition
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.GetStatePartition
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.Load*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.Load
  name: Load
  nameWithType: WorkItem.Load
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.Load
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
  name: ProcessEvent
  nameWithType: WorkItem.ProcessEvent
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.ProcessEvent
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
  name: WriteOutput
  nameWithType: WorkItem.WriteOutput
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.WriteOutput
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
  name: CompleteItem
  nameWithType: WorkItem.CompleteItem
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.CompleteItem
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.NextStage
  name: NextStage
  nameWithType: WorkItem.NextStage
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.NextStage
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag
  name: SetCheckpointTag
  nameWithType: WorkItem.SetCheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.SetCheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue
  name: SetProjectionQueue
  nameWithType: WorkItem.SetProjectionQueue
  fullName: EventStore.Projections.Core.Services.Processing.WorkItem.SetProjectionQueue

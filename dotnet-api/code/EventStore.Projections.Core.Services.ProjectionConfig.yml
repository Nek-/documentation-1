### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.ProjectionConfig
  commentId: T:EventStore.Projections.Core.Services.ProjectionConfig
  id: ProjectionConfig
  parent: EventStore.Projections.Core.Services
  children:
  - EventStore.Projections.Core.Services.ProjectionConfig.#ctor(System.Security.Principal.IPrincipal,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  - EventStore.Projections.Core.Services.ProjectionConfig.CheckpointAfterMs
  - EventStore.Projections.Core.Services.ProjectionConfig.CheckpointHandledThreshold
  - EventStore.Projections.Core.Services.ProjectionConfig.CheckpointsEnabled
  - EventStore.Projections.Core.Services.ProjectionConfig.CheckpointUnhandledBytesThreshold
  - EventStore.Projections.Core.Services.ProjectionConfig.CreateTempStreams
  - EventStore.Projections.Core.Services.ProjectionConfig.EmitEventEnabled
  - EventStore.Projections.Core.Services.ProjectionConfig.GetTest
  - EventStore.Projections.Core.Services.ProjectionConfig.IsSlaveProjection
  - EventStore.Projections.Core.Services.ProjectionConfig.MaximumAllowedWritesInFlight
  - EventStore.Projections.Core.Services.ProjectionConfig.MaxWriteBatchLength
  - EventStore.Projections.Core.Services.ProjectionConfig.PendingEventsThreshold
  - EventStore.Projections.Core.Services.ProjectionConfig.RunAs
  - EventStore.Projections.Core.Services.ProjectionConfig.SetIsSlave
  - EventStore.Projections.Core.Services.ProjectionConfig.StopOnEof
  - EventStore.Projections.Core.Services.ProjectionConfig.TrackEmittedStreams
  langs:
  - csharp
  - vb
  name: ProjectionConfig
  nameWithType: ProjectionConfig
  fullName: EventStore.Projections.Core.Services.ProjectionConfig
  type: Class
  source:
    id: ProjectionConfig
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public class ProjectionConfig
    content.vb: Public Class ProjectionConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.ProjectionConfig.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.ProjectionConfig.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.ProjectionConfig.#ctor(System.Security.Principal.IPrincipal,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  commentId: M:EventStore.Projections.Core.Services.ProjectionConfig.#ctor(System.Security.Principal.IPrincipal,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: '#ctor(System.Security.Principal.IPrincipal,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)'
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: ProjectionConfig(IPrincipal, Int32, Int32, Int32, Int32, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Int32, Int32)
  nameWithType: ProjectionConfig.ProjectionConfig(IPrincipal, Int32, Int32, Int32, Int32, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Int32, Int32)
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.ProjectionConfig(System.Security.Principal.IPrincipal, System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public ProjectionConfig(IPrincipal runAs, int checkpointHandledThreshold, int checkpointUnhandledBytesThreshold, int pendingEventsThreshold, int maxWriteBatchLength, bool emitEventEnabled, bool checkpointsEnabled, bool createTempStreams, bool stopOnEof, bool isSlaveProjection, bool trackEmittedStreams, int checkpointAfterMs, int maximumAllowedWritesInFlight)
    parameters:
    - id: runAs
      type: System.Security.Principal.IPrincipal
    - id: checkpointHandledThreshold
      type: System.Int32
    - id: checkpointUnhandledBytesThreshold
      type: System.Int32
    - id: pendingEventsThreshold
      type: System.Int32
    - id: maxWriteBatchLength
      type: System.Int32
    - id: emitEventEnabled
      type: System.Boolean
    - id: checkpointsEnabled
      type: System.Boolean
    - id: createTempStreams
      type: System.Boolean
    - id: stopOnEof
      type: System.Boolean
    - id: isSlaveProjection
      type: System.Boolean
    - id: trackEmittedStreams
      type: System.Boolean
    - id: checkpointAfterMs
      type: System.Int32
    - id: maximumAllowedWritesInFlight
      type: System.Int32
    content.vb: Public Sub New(runAs As IPrincipal, checkpointHandledThreshold As Integer, checkpointUnhandledBytesThreshold As Integer, pendingEventsThreshold As Integer, maxWriteBatchLength As Integer, emitEventEnabled As Boolean, checkpointsEnabled As Boolean, createTempStreams As Boolean, stopOnEof As Boolean, isSlaveProjection As Boolean, trackEmittedStreams As Boolean, checkpointAfterMs As Integer, maximumAllowedWritesInFlight As Integer)
  overload: EventStore.Projections.Core.Services.ProjectionConfig.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointHandledThreshold
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.CheckpointHandledThreshold
  id: CheckpointHandledThreshold
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: CheckpointHandledThreshold
  nameWithType: ProjectionConfig.CheckpointHandledThreshold
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointHandledThreshold
  type: Property
  source:
    id: CheckpointHandledThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 57
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int CheckpointHandledThreshold { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CheckpointHandledThreshold As Integer
  overload: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointHandledThreshold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointUnhandledBytesThreshold
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.CheckpointUnhandledBytesThreshold
  id: CheckpointUnhandledBytesThreshold
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ProjectionConfig.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointUnhandledBytesThreshold
  type: Property
  source:
    id: CheckpointUnhandledBytesThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 61
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int CheckpointUnhandledBytesThreshold { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CheckpointUnhandledBytesThreshold As Integer
  overload: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointUnhandledBytesThreshold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.MaxWriteBatchLength
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.MaxWriteBatchLength
  id: MaxWriteBatchLength
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: MaxWriteBatchLength
  nameWithType: ProjectionConfig.MaxWriteBatchLength
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.MaxWriteBatchLength
  type: Property
  source:
    id: MaxWriteBatchLength
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 65
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int MaxWriteBatchLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxWriteBatchLength As Integer
  overload: EventStore.Projections.Core.Services.ProjectionConfig.MaxWriteBatchLength*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.EmitEventEnabled
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.EmitEventEnabled
  id: EmitEventEnabled
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: EmitEventEnabled
  nameWithType: ProjectionConfig.EmitEventEnabled
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.EmitEventEnabled
  type: Property
  source:
    id: EmitEventEnabled
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 69
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public bool EmitEventEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EmitEventEnabled As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionConfig.EmitEventEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointsEnabled
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.CheckpointsEnabled
  id: CheckpointsEnabled
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: CheckpointsEnabled
  nameWithType: ProjectionConfig.CheckpointsEnabled
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointsEnabled
  type: Property
  source:
    id: CheckpointsEnabled
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 73
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public bool CheckpointsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CheckpointsEnabled As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.PendingEventsThreshold
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.PendingEventsThreshold
  id: PendingEventsThreshold
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: PendingEventsThreshold
  nameWithType: ProjectionConfig.PendingEventsThreshold
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.PendingEventsThreshold
  type: Property
  source:
    id: PendingEventsThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 77
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int PendingEventsThreshold { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PendingEventsThreshold As Integer
  overload: EventStore.Projections.Core.Services.ProjectionConfig.PendingEventsThreshold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.CreateTempStreams
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.CreateTempStreams
  id: CreateTempStreams
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: CreateTempStreams
  nameWithType: ProjectionConfig.CreateTempStreams
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.CreateTempStreams
  type: Property
  source:
    id: CreateTempStreams
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 81
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public bool CreateTempStreams { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CreateTempStreams As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionConfig.CreateTempStreams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.StopOnEof
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.StopOnEof
  id: StopOnEof
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: StopOnEof
  nameWithType: ProjectionConfig.StopOnEof
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.StopOnEof
  type: Property
  source:
    id: StopOnEof
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 85
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public bool StopOnEof { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property StopOnEof As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionConfig.StopOnEof*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.RunAs
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.RunAs
  id: RunAs
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: RunAs
  nameWithType: ProjectionConfig.RunAs
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.RunAs
  type: Property
  source:
    id: RunAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 89
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public IPrincipal RunAs { get; }
    parameters: []
    return:
      type: System.Security.Principal.IPrincipal
    content.vb: Public ReadOnly Property RunAs As IPrincipal
  overload: EventStore.Projections.Core.Services.ProjectionConfig.RunAs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.IsSlaveProjection
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.IsSlaveProjection
  id: IsSlaveProjection
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: IsSlaveProjection
  nameWithType: ProjectionConfig.IsSlaveProjection
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.IsSlaveProjection
  type: Property
  source:
    id: IsSlaveProjection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 93
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public bool IsSlaveProjection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSlaveProjection As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionConfig.IsSlaveProjection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.TrackEmittedStreams
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.TrackEmittedStreams
  id: TrackEmittedStreams
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: TrackEmittedStreams
  nameWithType: ProjectionConfig.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.TrackEmittedStreams
  type: Property
  source:
    id: TrackEmittedStreams
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 97
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public bool TrackEmittedStreams { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property TrackEmittedStreams As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionConfig.TrackEmittedStreams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointAfterMs
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.CheckpointAfterMs
  id: CheckpointAfterMs
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: CheckpointAfterMs
  nameWithType: ProjectionConfig.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointAfterMs
  type: Property
  source:
    id: CheckpointAfterMs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 101
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int CheckpointAfterMs { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CheckpointAfterMs As Integer
  overload: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointAfterMs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.MaximumAllowedWritesInFlight
  commentId: P:EventStore.Projections.Core.Services.ProjectionConfig.MaximumAllowedWritesInFlight
  id: MaximumAllowedWritesInFlight
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: MaximumAllowedWritesInFlight
  nameWithType: ProjectionConfig.MaximumAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.MaximumAllowedWritesInFlight
  type: Property
  source:
    id: MaximumAllowedWritesInFlight
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 105
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int MaximumAllowedWritesInFlight { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaximumAllowedWritesInFlight As Integer
  overload: EventStore.Projections.Core.Services.ProjectionConfig.MaximumAllowedWritesInFlight*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.ProjectionConfig.GetTest
  commentId: M:EventStore.Projections.Core.Services.ProjectionConfig.GetTest
  id: GetTest
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: GetTest()
  nameWithType: ProjectionConfig.GetTest()
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.GetTest()
  type: Method
  source:
    id: GetTest
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 109
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public static ProjectionConfig GetTest()
    return:
      type: EventStore.Projections.Core.Services.ProjectionConfig
    content.vb: Public Shared Function GetTest As ProjectionConfig
  overload: EventStore.Projections.Core.Services.ProjectionConfig.GetTest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.ProjectionConfig.SetIsSlave
  commentId: M:EventStore.Projections.Core.Services.ProjectionConfig.SetIsSlave
  id: SetIsSlave
  parent: EventStore.Projections.Core.Services.ProjectionConfig
  langs:
  - csharp
  - vb
  name: SetIsSlave()
  nameWithType: ProjectionConfig.SetIsSlave()
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.SetIsSlave()
  type: Method
  source:
    id: SetIsSlave
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ProjectionConfig.cs
    startLine: 114
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public ProjectionConfig SetIsSlave()
    return:
      type: EventStore.Projections.Core.Services.ProjectionConfig
    content.vb: Public Function SetIsSlave As ProjectionConfig
  overload: EventStore.Projections.Core.Services.ProjectionConfig.SetIsSlave*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.ProjectionConfig.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ProjectionConfig>()
  nameWithType: ProtobufExtensions.Serialize<ProjectionConfig>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.ProjectionConfig>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ProjectionConfig)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.ProjectionConfig)()
  name.vb: Serialize(Of ProjectionConfig)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ProjectionConfig>
    nameWithType: ProtobufExtensions.Serialize<ProjectionConfig>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.ProjectionConfig>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ProjectionConfig)
    nameWithType: ProtobufExtensions.Serialize(Of ProjectionConfig)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.ProjectionConfig)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.ProjectionConfig.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ProjectionConfig>()
  nameWithType: ProtobufExtensions.SerializeToArray<ProjectionConfig>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.ProjectionConfig>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ProjectionConfig)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.ProjectionConfig)()
  name.vb: SerializeToArray(Of ProjectionConfig)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ProjectionConfig>
    nameWithType: ProtobufExtensions.SerializeToArray<ProjectionConfig>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.ProjectionConfig>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ProjectionConfig)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ProjectionConfig)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.ProjectionConfig)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.ProjectionConfig.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.#ctor
  name: ProjectionConfig
  nameWithType: ProjectionConfig.ProjectionConfig
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.ProjectionConfig
- uid: System.Security.Principal.IPrincipal
  commentId: T:System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: true
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
- uid: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointHandledThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.CheckpointHandledThreshold
  name: CheckpointHandledThreshold
  nameWithType: ProjectionConfig.CheckpointHandledThreshold
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointHandledThreshold
- uid: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointUnhandledBytesThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.CheckpointUnhandledBytesThreshold
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ProjectionConfig.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointUnhandledBytesThreshold
- uid: EventStore.Projections.Core.Services.ProjectionConfig.MaxWriteBatchLength*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.MaxWriteBatchLength
  name: MaxWriteBatchLength
  nameWithType: ProjectionConfig.MaxWriteBatchLength
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.MaxWriteBatchLength
- uid: EventStore.Projections.Core.Services.ProjectionConfig.EmitEventEnabled*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.EmitEventEnabled
  name: EmitEventEnabled
  nameWithType: ProjectionConfig.EmitEventEnabled
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.EmitEventEnabled
- uid: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointsEnabled*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.CheckpointsEnabled
  name: CheckpointsEnabled
  nameWithType: ProjectionConfig.CheckpointsEnabled
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointsEnabled
- uid: EventStore.Projections.Core.Services.ProjectionConfig.PendingEventsThreshold*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.PendingEventsThreshold
  name: PendingEventsThreshold
  nameWithType: ProjectionConfig.PendingEventsThreshold
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.PendingEventsThreshold
- uid: EventStore.Projections.Core.Services.ProjectionConfig.CreateTempStreams*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.CreateTempStreams
  name: CreateTempStreams
  nameWithType: ProjectionConfig.CreateTempStreams
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.CreateTempStreams
- uid: EventStore.Projections.Core.Services.ProjectionConfig.StopOnEof*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.StopOnEof
  name: StopOnEof
  nameWithType: ProjectionConfig.StopOnEof
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.StopOnEof
- uid: EventStore.Projections.Core.Services.ProjectionConfig.RunAs*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.RunAs
  name: RunAs
  nameWithType: ProjectionConfig.RunAs
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.RunAs
- uid: EventStore.Projections.Core.Services.ProjectionConfig.IsSlaveProjection*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.IsSlaveProjection
  name: IsSlaveProjection
  nameWithType: ProjectionConfig.IsSlaveProjection
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.IsSlaveProjection
- uid: EventStore.Projections.Core.Services.ProjectionConfig.TrackEmittedStreams*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.TrackEmittedStreams
  name: TrackEmittedStreams
  nameWithType: ProjectionConfig.TrackEmittedStreams
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.TrackEmittedStreams
- uid: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointAfterMs*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.CheckpointAfterMs
  name: CheckpointAfterMs
  nameWithType: ProjectionConfig.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.CheckpointAfterMs
- uid: EventStore.Projections.Core.Services.ProjectionConfig.MaximumAllowedWritesInFlight*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.MaximumAllowedWritesInFlight
  name: MaximumAllowedWritesInFlight
  nameWithType: ProjectionConfig.MaximumAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.MaximumAllowedWritesInFlight
- uid: EventStore.Projections.Core.Services.ProjectionConfig.GetTest*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.GetTest
  name: GetTest
  nameWithType: ProjectionConfig.GetTest
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.GetTest
- uid: EventStore.Projections.Core.Services.ProjectionConfig
  commentId: T:EventStore.Projections.Core.Services.ProjectionConfig
  parent: EventStore.Projections.Core.Services
  name: ProjectionConfig
  nameWithType: ProjectionConfig
  fullName: EventStore.Projections.Core.Services.ProjectionConfig
- uid: EventStore.Projections.Core.Services.ProjectionConfig.SetIsSlave*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionConfig.SetIsSlave
  name: SetIsSlave
  nameWithType: ProjectionConfig.SetIsSlave
  fullName: EventStore.Projections.Core.Services.ProjectionConfig.SetIsSlave

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.ProjectionMode
  commentId: T:EventStore.Projections.Core.Services.ProjectionMode
  id: ProjectionMode
  parent: EventStore.Projections.Core.Services
  children:
  - EventStore.Projections.Core.Services.ProjectionMode.AllNonTransient
  - EventStore.Projections.Core.Services.ProjectionMode.Continuous
  - EventStore.Projections.Core.Services.ProjectionMode.OneTime
  - EventStore.Projections.Core.Services.ProjectionMode.Transient
  langs:
  - csharp
  - vb
  name: ProjectionMode
  nameWithType: ProjectionMode
  fullName: EventStore.Projections.Core.Services.ProjectionMode
  type: Enum
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionMode.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: ProjectionMode
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionMode.cs
    startLine: 1
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: 'public enum ProjectionMode : int'
    content.vb: Public Enum ProjectionMode As Integer
  extensionMethods:
  - EventStore.Projections.Core.Services.ProjectionMode.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Projections.Core.Services.ProjectionMode.Transient
  commentId: F:EventStore.Projections.Core.Services.ProjectionMode.Transient
  id: Transient
  parent: EventStore.Projections.Core.Services.ProjectionMode
  langs:
  - csharp
  - vb
  name: Transient
  nameWithType: ProjectionMode.Transient
  fullName: EventStore.Projections.Core.Services.ProjectionMode.Transient
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionMode.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Transient
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionMode.cs
    startLine: 2
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: Transient = null
    return:
      type: EventStore.Projections.Core.Services.ProjectionMode
    content.vb: Transient = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.ProjectionMode.OneTime
  commentId: F:EventStore.Projections.Core.Services.ProjectionMode.OneTime
  id: OneTime
  parent: EventStore.Projections.Core.Services.ProjectionMode
  langs:
  - csharp
  - vb
  name: OneTime
  nameWithType: ProjectionMode.OneTime
  fullName: EventStore.Projections.Core.Services.ProjectionMode.OneTime
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionMode.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: OneTime
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionMode.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: OneTime = null
    return:
      type: EventStore.Projections.Core.Services.ProjectionMode
    content.vb: OneTime = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.ProjectionMode.Continuous
  commentId: F:EventStore.Projections.Core.Services.ProjectionMode.Continuous
  id: Continuous
  parent: EventStore.Projections.Core.Services.ProjectionMode
  langs:
  - csharp
  - vb
  name: Continuous
  nameWithType: ProjectionMode.Continuous
  fullName: EventStore.Projections.Core.Services.ProjectionMode.Continuous
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionMode.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: Continuous
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionMode.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: Continuous = null
    return:
      type: EventStore.Projections.Core.Services.ProjectionMode
    content.vb: Continuous = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.ProjectionMode.AllNonTransient
  commentId: F:EventStore.Projections.Core.Services.ProjectionMode.AllNonTransient
  id: AllNonTransient
  parent: EventStore.Projections.Core.Services.ProjectionMode
  langs:
  - csharp
  - vb
  name: AllNonTransient
  nameWithType: ProjectionMode.AllNonTransient
  fullName: EventStore.Projections.Core.Services.ProjectionMode.AllNonTransient
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionMode.cs
      branch: feature/docs-connection-code
      repo: git@github.com:EventStore/EventStore.git
    id: AllNonTransient
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionMode.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: AllNonTransient = null
    return:
      type: EventStore.Projections.Core.Services.ProjectionMode
    content.vb: AllNonTransient = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Services.ProjectionMode.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<ProjectionMode>()
  nameWithType: EnumExtensions.EnumValueName<ProjectionMode>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Projections.Core.Services.ProjectionMode>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of ProjectionMode)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Projections.Core.Services.ProjectionMode)()
  name.vb: EnumValueName(Of ProjectionMode)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<ProjectionMode>
    nameWithType: EnumExtensions.EnumValueName<ProjectionMode>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Projections.Core.Services.ProjectionMode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of ProjectionMode)
    nameWithType: EnumExtensions.EnumValueName(Of ProjectionMode)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Projections.Core.Services.ProjectionMode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Projections.Core.Services.ProjectionMode
  commentId: T:EventStore.Projections.Core.Services.ProjectionMode
  parent: EventStore.Projections.Core.Services
  name: ProjectionMode
  nameWithType: ProjectionMode
  fullName: EventStore.Projections.Core.Services.ProjectionMode

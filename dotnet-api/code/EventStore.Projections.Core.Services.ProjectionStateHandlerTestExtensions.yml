### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
  commentId: T:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
  id: ProjectionStateHandlerTestExtensions
  parent: EventStore.Projections.Core.Services
  children:
  - EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.GetNativeHandlerName(System.Type)
  - EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,System.Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  - EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,System.Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  langs:
  - csharp
  - vb
  name: ProjectionStateHandlerTestExtensions
  nameWithType: ProjectionStateHandlerTestExtensions
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
  type: Class
  source:
    id: ProjectionStateHandlerTestExtensions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 69
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public static class ProjectionStateHandlerTestExtensions
    content.vb: Public Module ProjectionStateHandlerTestExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,System.Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,System.Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  id: ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,System.Guid,System.Int64,System.String,System.String,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  isExtensionMethod: true
  parent: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
  langs:
  - csharp
  - vb
  name: ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean)
  nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean)
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, System.Guid, System.Int64, System.String, System.String, out System.String, out EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], System.Boolean)
  type: Method
  source:
    id: ProcessEvent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 70
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public static bool ProcessEvent(this IProjectionStateHandler self, string partition, CheckpointTag eventPosition, string streamId, string eventType, string category, Guid eventId, long eventSequenceNumber, string metadata, string data, out string state, out EmittedEventEnvelope[] emittedEvents, bool isJson = true)
    parameters:
    - id: self
      type: EventStore.Projections.Core.Services.IProjectionStateHandler
    - id: partition
      type: System.String
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: streamId
      type: System.String
    - id: eventType
      type: System.String
    - id: category
      type: System.String
    - id: eventId
      type: System.Guid
    - id: eventSequenceNumber
      type: System.Int64
    - id: metadata
      type: System.String
    - id: data
      type: System.String
    - id: state
      type: System.String
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    - id: isJson
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ProcessEvent(self As IProjectionStateHandler, partition As String, eventPosition As CheckpointTag, streamId As String, eventType As String, category As String, eventId As Guid, eventSequenceNumber As Long, metadata As String, data As String, ByRef state As String, ByRef emittedEvents As EmittedEventEnvelope(), isJson As Boolean = True) As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent*
  nameWithType.vb: ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, ByRef String, ByRef EmittedEventEnvelope(), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, System.Guid, System.Int64, System.String, System.String, ByRef System.String, ByRef EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), System.Boolean)
  name.vb: ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, ByRef String, ByRef EmittedEventEnvelope(), Boolean)
- uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,System.Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,System.Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  id: ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,System.String,System.String,System.Guid,System.Int64,System.String,System.String,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@,System.Boolean)
  isExtensionMethod: true
  parent: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
  langs:
  - csharp
  - vb
  name: ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean)
  nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean)
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, System.Guid, System.Int64, System.String, System.String, out System.String, out System.String, out EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[], System.Boolean)
  type: Method
  source:
    id: ProcessEvent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 82
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public static bool ProcessEvent(this IProjectionStateHandler self, string partition, CheckpointTag eventPosition, string streamId, string eventType, string category, Guid eventId, long eventSequenceNumber, string metadata, string data, out string state, out string sharedState, out EmittedEventEnvelope[] emittedEvents, bool isJson = true)
    parameters:
    - id: self
      type: EventStore.Projections.Core.Services.IProjectionStateHandler
    - id: partition
      type: System.String
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: streamId
      type: System.String
    - id: eventType
      type: System.String
    - id: category
      type: System.String
    - id: eventId
      type: System.Guid
    - id: eventSequenceNumber
      type: System.Int64
    - id: metadata
      type: System.String
    - id: data
      type: System.String
    - id: state
      type: System.String
    - id: sharedState
      type: System.String
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    - id: isJson
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ProcessEvent(self As IProjectionStateHandler, partition As String, eventPosition As CheckpointTag, streamId As String, eventType As String, category As String, eventId As Guid, eventSequenceNumber As Long, metadata As String, data As String, ByRef state As String, ByRef sharedState As String, ByRef emittedEvents As EmittedEventEnvelope(), isJson As Boolean = True) As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent*
  nameWithType.vb: ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, ByRef String, ByRef String, ByRef EmittedEventEnvelope(), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent(EventStore.Projections.Core.Services.IProjectionStateHandler, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, System.String, System.String, System.Guid, System.Int64, System.String, System.String, ByRef System.String, ByRef System.String, ByRef EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope(), System.Boolean)
  name.vb: ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, ByRef String, ByRef String, ByRef EmittedEventEnvelope(), Boolean)
- uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.GetNativeHandlerName(System.Type)
  commentId: M:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.GetNativeHandlerName(System.Type)
  id: GetNativeHandlerName(System.Type)
  isExtensionMethod: true
  parent: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions
  langs:
  - csharp
  - vb
  name: GetNativeHandlerName(Type)
  nameWithType: ProjectionStateHandlerTestExtensions.GetNativeHandlerName(Type)
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.GetNativeHandlerName(System.Type)
  type: Method
  source:
    id: GetNativeHandlerName
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/IProjectionStateHandler.cs
    startLine: 93
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public static string GetNativeHandlerName(this Type handlerType)
    parameters:
    - id: handlerType
      type: System.Type
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetNativeHandlerName(handlerType As Type) As String
  overload: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.GetNativeHandlerName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent
  name: ProcessEvent
  nameWithType: ProjectionStateHandlerTestExtensions.ProcessEvent
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.ProcessEvent
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler
  commentId: T:EventStore.Projections.Core.Services.IProjectionStateHandler
  parent: EventStore.Projections.Core.Services
  name: IProjectionStateHandler
  nameWithType: IProjectionStateHandler
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  isExternal: true
  name: EmittedEventEnvelope[]
  nameWithType: EmittedEventEnvelope[]
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  nameWithType.vb: EmittedEventEnvelope()
  fullName.vb: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope()
  name.vb: EmittedEventEnvelope()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.GetNativeHandlerName*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.GetNativeHandlerName
  name: GetNativeHandlerName
  nameWithType: ProjectionStateHandlerTestExtensions.GetNativeHandlerName
  fullName: EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.GetNativeHandlerName
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type

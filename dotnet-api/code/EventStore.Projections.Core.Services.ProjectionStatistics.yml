### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.ProjectionStatistics
  commentId: T:EventStore.Projections.Core.Services.ProjectionStatistics
  id: ProjectionStatistics
  parent: EventStore.Projections.Core.Services
  children:
  - EventStore.Projections.Core.Services.ProjectionStatistics.BufferedEvents
  - EventStore.Projections.Core.Services.ProjectionStatistics.CheckpointStatus
  - EventStore.Projections.Core.Services.ProjectionStatistics.Clone
  - EventStore.Projections.Core.Services.ProjectionStatistics.CoreProcessingTime
  - EventStore.Projections.Core.Services.ProjectionStatistics.EffectiveName
  - EventStore.Projections.Core.Services.ProjectionStatistics.Enabled
  - EventStore.Projections.Core.Services.ProjectionStatistics.Epoch
  - EventStore.Projections.Core.Services.ProjectionStatistics.Equals(EventStore.Projections.Core.Services.ProjectionStatistics)
  - EventStore.Projections.Core.Services.ProjectionStatistics.Equals(System.Object)
  - EventStore.Projections.Core.Services.ProjectionStatistics.EventsProcessedAfterRestart
  - EventStore.Projections.Core.Services.ProjectionStatistics.GetHashCode
  - EventStore.Projections.Core.Services.ProjectionStatistics.LastCheckpoint
  - EventStore.Projections.Core.Services.ProjectionStatistics.LeaderStatus
  - EventStore.Projections.Core.Services.ProjectionStatistics.Mode
  - EventStore.Projections.Core.Services.ProjectionStatistics.Name
  - EventStore.Projections.Core.Services.ProjectionStatistics.PartitionsCached
  - EventStore.Projections.Core.Services.ProjectionStatistics.Position
  - EventStore.Projections.Core.Services.ProjectionStatistics.Progress
  - EventStore.Projections.Core.Services.ProjectionStatistics.ProjectionId
  - EventStore.Projections.Core.Services.ProjectionStatistics.ReadsInProgress
  - EventStore.Projections.Core.Services.ProjectionStatistics.ResultStreamName
  - EventStore.Projections.Core.Services.ProjectionStatistics.StateReason
  - EventStore.Projections.Core.Services.ProjectionStatistics.Status
  - EventStore.Projections.Core.Services.ProjectionStatistics.Version
  - EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsAfterCheckpoint
  - EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsBeforeCheckpoint
  - EventStore.Projections.Core.Services.ProjectionStatistics.WritesInProgress
  langs:
  - csharp
  - vb
  name: ProjectionStatistics
  nameWithType: ProjectionStatistics
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ProjectionStatistics
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: 'public class ProjectionStatistics : object'
    content.vb: >-
      Public Class ProjectionStatistics

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Status
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.Status
  id: Status
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ProjectionStatistics.Status
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Status
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Status
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Status As String
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Enabled
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.Enabled
  id: Enabled
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: ProjectionStatistics.Enabled
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Enabled
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Enabled
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.LeaderStatus
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.LeaderStatus
  id: LeaderStatus
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: LeaderStatus
  nameWithType: ProjectionStatistics.LeaderStatus
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.LeaderStatus
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: LeaderStatus
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public ManagedProjectionState LeaderStatus { get; set; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Management.ManagedProjectionState
    content.vb: Public Property LeaderStatus As ManagedProjectionState
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.LeaderStatus*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.StateReason
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.StateReason
  id: StateReason
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: StateReason
  nameWithType: ProjectionStatistics.StateReason
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.StateReason
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StateReason
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public string StateReason { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StateReason As String
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.StateReason*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Name
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.Name
  id: Name
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectionStatistics.Name
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.ProjectionId
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.ProjectionId
  id: ProjectionId
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: ProjectionId
  nameWithType: ProjectionStatistics.ProjectionId
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.ProjectionId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ProjectionId
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public long ProjectionId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ProjectionId As Long
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.ProjectionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Epoch
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.Epoch
  id: Epoch
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Epoch
  nameWithType: ProjectionStatistics.Epoch
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Epoch
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Epoch
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public long Epoch { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Epoch As Long
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Epoch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Version
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.Version
  id: Version
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ProjectionStatistics.Version
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Version
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public long Version { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Version As Long
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Mode
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.Mode
  id: Mode
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: ProjectionStatistics.Mode
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Mode
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Mode
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public ProjectionMode Mode { get; set; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.ProjectionMode
    content.vb: Public Property Mode As ProjectionMode
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Mode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Position
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.Position
  id: Position
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ProjectionStatistics.Position
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Position
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 24
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public string Position { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Position As String
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Progress
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.Progress
  id: Progress
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ProjectionStatistics.Progress
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Progress
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Progress
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Progress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.LastCheckpoint
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.LastCheckpoint
  id: LastCheckpoint
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: LastCheckpoint
  nameWithType: ProjectionStatistics.LastCheckpoint
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.LastCheckpoint
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: LastCheckpoint
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 28
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public string LastCheckpoint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LastCheckpoint As String
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.LastCheckpoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.EventsProcessedAfterRestart
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.EventsProcessedAfterRestart
  id: EventsProcessedAfterRestart
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: EventsProcessedAfterRestart
  nameWithType: ProjectionStatistics.EventsProcessedAfterRestart
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.EventsProcessedAfterRestart
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventsProcessedAfterRestart
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 30
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int EventsProcessedAfterRestart { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EventsProcessedAfterRestart As Integer
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.EventsProcessedAfterRestart*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.BufferedEvents
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.BufferedEvents
  id: BufferedEvents
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: BufferedEvents
  nameWithType: ProjectionStatistics.BufferedEvents
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.BufferedEvents
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: BufferedEvents
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 32
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int BufferedEvents { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BufferedEvents As Integer
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.BufferedEvents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.CheckpointStatus
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.CheckpointStatus
  id: CheckpointStatus
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: CheckpointStatus
  nameWithType: ProjectionStatistics.CheckpointStatus
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.CheckpointStatus
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CheckpointStatus
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 34
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public string CheckpointStatus { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CheckpointStatus As String
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.CheckpointStatus*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsBeforeCheckpoint
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsBeforeCheckpoint
  id: WritePendingEventsBeforeCheckpoint
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: WritePendingEventsBeforeCheckpoint
  nameWithType: ProjectionStatistics.WritePendingEventsBeforeCheckpoint
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsBeforeCheckpoint
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WritePendingEventsBeforeCheckpoint
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 36
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int WritePendingEventsBeforeCheckpoint { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property WritePendingEventsBeforeCheckpoint As Integer
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsBeforeCheckpoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsAfterCheckpoint
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsAfterCheckpoint
  id: WritePendingEventsAfterCheckpoint
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: WritePendingEventsAfterCheckpoint
  nameWithType: ProjectionStatistics.WritePendingEventsAfterCheckpoint
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsAfterCheckpoint
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WritePendingEventsAfterCheckpoint
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 38
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int WritePendingEventsAfterCheckpoint { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property WritePendingEventsAfterCheckpoint As Integer
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsAfterCheckpoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.PartitionsCached
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.PartitionsCached
  id: PartitionsCached
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: PartitionsCached
  nameWithType: ProjectionStatistics.PartitionsCached
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.PartitionsCached
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PartitionsCached
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 40
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int PartitionsCached { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PartitionsCached As Integer
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.PartitionsCached*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.ReadsInProgress
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.ReadsInProgress
  id: ReadsInProgress
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: ReadsInProgress
  nameWithType: ProjectionStatistics.ReadsInProgress
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.ReadsInProgress
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ReadsInProgress
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 42
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int ReadsInProgress { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReadsInProgress As Integer
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.ReadsInProgress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.WritesInProgress
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.WritesInProgress
  id: WritesInProgress
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: WritesInProgress
  nameWithType: ProjectionStatistics.WritesInProgress
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.WritesInProgress
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WritesInProgress
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 44
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public int WritesInProgress { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property WritesInProgress As Integer
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.WritesInProgress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.EffectiveName
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.EffectiveName
  id: EffectiveName
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: EffectiveName
  nameWithType: ProjectionStatistics.EffectiveName
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.EffectiveName
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EffectiveName
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 46
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public string EffectiveName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EffectiveName As String
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.EffectiveName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.ResultStreamName
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.ResultStreamName
  id: ResultStreamName
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: ResultStreamName
  nameWithType: ProjectionStatistics.ResultStreamName
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.ResultStreamName
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ResultStreamName
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 48
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public string ResultStreamName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ResultStreamName As String
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.ResultStreamName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.CoreProcessingTime
  commentId: P:EventStore.Projections.Core.Services.ProjectionStatistics.CoreProcessingTime
  id: CoreProcessingTime
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: CoreProcessingTime
  nameWithType: ProjectionStatistics.CoreProcessingTime
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.CoreProcessingTime
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CoreProcessingTime
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 50
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public long CoreProcessingTime { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property CoreProcessingTime As Long
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.CoreProcessingTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Clone
  commentId: M:EventStore.Projections.Core.Services.ProjectionStatistics.Clone
  id: Clone
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ProjectionStatistics.Clone()
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Clone()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Clone
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 52
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public ProjectionStatistics Clone()
    return:
      type: EventStore.Projections.Core.Services.ProjectionStatistics
    content.vb: Public Function Clone As ProjectionStatistics
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Equals(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.ProjectionStatistics.Equals(EventStore.Projections.Core.Services.ProjectionStatistics)
  id: Equals(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Equals(ProjectionStatistics)
  nameWithType: ProjectionStatistics.Equals(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Equals(EventStore.Projections.Core.Services.ProjectionStatistics)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Equals
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 56
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: protected bool Equals(ProjectionStatistics other)
    parameters:
    - id: other
      type: EventStore.Projections.Core.Services.ProjectionStatistics
    return:
      type: System.Boolean
    content.vb: Protected Function Equals(other As ProjectionStatistics) As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Equals*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Equals(System.Object)
  commentId: M:EventStore.Projections.Core.Services.ProjectionStatistics.Equals(System.Object)
  id: Equals(System.Object)
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ProjectionStatistics.Equals(Object)
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Equals
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 82
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.GetHashCode
  commentId: M:EventStore.Projections.Core.Services.ProjectionStatistics.GetHashCode
  id: GetHashCode
  parent: EventStore.Projections.Core.Services.ProjectionStatistics
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ProjectionStatistics.GetHashCode()
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.GetHashCode()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: GetHashCode
    path: ../EventStore/src/EventStore.Projections.Core/Services/ProjectionStatistics.cs
    startLine: 89
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: EventStore.Projections.Core.Services.ProjectionStatistics.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Status*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.Status
  name: Status
  nameWithType: ProjectionStatistics.Status
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Status
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Enabled*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.Enabled
  name: Enabled
  nameWithType: ProjectionStatistics.Enabled
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Enabled
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.LeaderStatus*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.LeaderStatus
  name: LeaderStatus
  nameWithType: ProjectionStatistics.LeaderStatus
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.LeaderStatus
- uid: EventStore.Projections.Core.Services.Management.ManagedProjectionState
  commentId: T:EventStore.Projections.Core.Services.Management.ManagedProjectionState
  parent: EventStore.Projections.Core.Services.Management
  name: ManagedProjectionState
  nameWithType: ManagedProjectionState
  fullName: EventStore.Projections.Core.Services.Management.ManagedProjectionState
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.StateReason*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.StateReason
  name: StateReason
  nameWithType: ProjectionStatistics.StateReason
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.StateReason
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Name*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.Name
  name: Name
  nameWithType: ProjectionStatistics.Name
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Name
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.ProjectionId*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.ProjectionId
  name: ProjectionId
  nameWithType: ProjectionStatistics.ProjectionId
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.ProjectionId
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Epoch*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.Epoch
  name: Epoch
  nameWithType: ProjectionStatistics.Epoch
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Epoch
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Version*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.Version
  name: Version
  nameWithType: ProjectionStatistics.Version
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Version
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Mode*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.Mode
  name: Mode
  nameWithType: ProjectionStatistics.Mode
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Mode
- uid: EventStore.Projections.Core.Services.ProjectionMode
  commentId: T:EventStore.Projections.Core.Services.ProjectionMode
  parent: EventStore.Projections.Core.Services
  name: ProjectionMode
  nameWithType: ProjectionMode
  fullName: EventStore.Projections.Core.Services.ProjectionMode
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Position*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.Position
  name: Position
  nameWithType: ProjectionStatistics.Position
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Position
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Progress*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.Progress
  name: Progress
  nameWithType: ProjectionStatistics.Progress
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Progress
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.LastCheckpoint*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.LastCheckpoint
  name: LastCheckpoint
  nameWithType: ProjectionStatistics.LastCheckpoint
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.LastCheckpoint
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.EventsProcessedAfterRestart*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.EventsProcessedAfterRestart
  name: EventsProcessedAfterRestart
  nameWithType: ProjectionStatistics.EventsProcessedAfterRestart
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.EventsProcessedAfterRestart
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.BufferedEvents*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.BufferedEvents
  name: BufferedEvents
  nameWithType: ProjectionStatistics.BufferedEvents
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.BufferedEvents
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.CheckpointStatus*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.CheckpointStatus
  name: CheckpointStatus
  nameWithType: ProjectionStatistics.CheckpointStatus
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.CheckpointStatus
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsBeforeCheckpoint*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsBeforeCheckpoint
  name: WritePendingEventsBeforeCheckpoint
  nameWithType: ProjectionStatistics.WritePendingEventsBeforeCheckpoint
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsBeforeCheckpoint
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsAfterCheckpoint*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsAfterCheckpoint
  name: WritePendingEventsAfterCheckpoint
  nameWithType: ProjectionStatistics.WritePendingEventsAfterCheckpoint
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.WritePendingEventsAfterCheckpoint
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.PartitionsCached*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.PartitionsCached
  name: PartitionsCached
  nameWithType: ProjectionStatistics.PartitionsCached
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.PartitionsCached
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.ReadsInProgress*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.ReadsInProgress
  name: ReadsInProgress
  nameWithType: ProjectionStatistics.ReadsInProgress
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.ReadsInProgress
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.WritesInProgress*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.WritesInProgress
  name: WritesInProgress
  nameWithType: ProjectionStatistics.WritesInProgress
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.WritesInProgress
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.EffectiveName*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.EffectiveName
  name: EffectiveName
  nameWithType: ProjectionStatistics.EffectiveName
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.EffectiveName
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.ResultStreamName*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.ResultStreamName
  name: ResultStreamName
  nameWithType: ProjectionStatistics.ResultStreamName
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.ResultStreamName
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.CoreProcessingTime*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.CoreProcessingTime
  name: CoreProcessingTime
  nameWithType: ProjectionStatistics.CoreProcessingTime
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.CoreProcessingTime
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Clone*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.Clone
  name: Clone
  nameWithType: ProjectionStatistics.Clone
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Clone
- uid: EventStore.Projections.Core.Services.ProjectionStatistics
  commentId: T:EventStore.Projections.Core.Services.ProjectionStatistics
  parent: EventStore.Projections.Core.Services
  name: ProjectionStatistics
  nameWithType: ProjectionStatistics
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.Equals*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.Equals
  name: Equals
  nameWithType: ProjectionStatistics.Equals
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.Equals
- uid: EventStore.Projections.Core.Services.ProjectionStatistics.GetHashCode*
  commentId: Overload:EventStore.Projections.Core.Services.ProjectionStatistics.GetHashCode
  name: GetHashCode
  nameWithType: ProjectionStatistics.GetHashCode
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics.GetHashCode

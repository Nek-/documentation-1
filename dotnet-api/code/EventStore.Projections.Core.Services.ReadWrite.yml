### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.ReadWrite
  commentId: T:EventStore.Projections.Core.Services.ReadWrite
  id: ReadWrite
  parent: EventStore.Projections.Core.Services
  children:
  - EventStore.Projections.Core.Services.ReadWrite.Read
  - EventStore.Projections.Core.Services.ReadWrite.Write
  langs:
  - csharp
  - vb
  name: ReadWrite
  nameWithType: ReadWrite
  fullName: EventStore.Projections.Core.Services.ReadWrite
  type: Enum
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ReadWrite.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ReadWrite
    path: ../EventStore/src/EventStore.Projections.Core/Services/ReadWrite.cs
    startLine: 1
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: 'public enum ReadWrite : int'
    content.vb: Public Enum ReadWrite As Integer
  extensionMethods:
  - EventStore.Projections.Core.Services.ReadWrite.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Projections.Core.Services.ReadWrite.Read
  commentId: F:EventStore.Projections.Core.Services.ReadWrite.Read
  id: Read
  parent: EventStore.Projections.Core.Services.ReadWrite
  langs:
  - csharp
  - vb
  name: Read
  nameWithType: ReadWrite.Read
  fullName: EventStore.Projections.Core.Services.ReadWrite.Read
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ReadWrite.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Read
    path: ../EventStore/src/EventStore.Projections.Core/Services/ReadWrite.cs
    startLine: 2
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: Read = 0
    return:
      type: EventStore.Projections.Core.Services.ReadWrite
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Services.ReadWrite.Write
  commentId: F:EventStore.Projections.Core.Services.ReadWrite.Write
  id: Write
  parent: EventStore.Projections.Core.Services.ReadWrite
  langs:
  - csharp
  - vb
  name: Write
  nameWithType: ReadWrite.Write
  fullName: EventStore.Projections.Core.Services.ReadWrite.Write
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ReadWrite.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Write
    path: ../EventStore/src/EventStore.Projections.Core/Services/ReadWrite.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: Write = 1
    return:
      type: EventStore.Projections.Core.Services.ReadWrite
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Services.ReadWrite.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<ReadWrite>()
  nameWithType: EnumExtensions.EnumValueName<ReadWrite>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Projections.Core.Services.ReadWrite>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of ReadWrite)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Projections.Core.Services.ReadWrite)()
  name.vb: EnumValueName(Of ReadWrite)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<ReadWrite>
    nameWithType: EnumExtensions.EnumValueName<ReadWrite>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Projections.Core.Services.ReadWrite>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of ReadWrite)
    nameWithType: EnumExtensions.EnumValueName(Of ReadWrite)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Projections.Core.Services.ReadWrite)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Projections.Core.Services.ReadWrite
  commentId: T:EventStore.Projections.Core.Services.ReadWrite
  parent: EventStore.Projections.Core.Services
  name: ReadWrite
  nameWithType: ReadWrite
  fullName: EventStore.Projections.Core.Services.ReadWrite

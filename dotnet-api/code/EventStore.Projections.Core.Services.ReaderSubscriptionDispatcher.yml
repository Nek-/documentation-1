### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
  commentId: T:EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
  id: ReaderSubscriptionDispatcher
  parent: EventStore.Projections.Core.Services
  children:
  - EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher.#ctor(EventStore.Core.Bus.IPublisher)
  langs:
  - csharp
  - vb
  name: ReaderSubscriptionDispatcher
  nameWithType: ReaderSubscriptionDispatcher
  fullName: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
  type: Class
  source:
    id: ReaderSubscriptionDispatcher
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ReaderSubscriptionDispatcher.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: 'public sealed class ReaderSubscriptionDispatcher : PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>'
    content.vb: >-
      Public NotInheritable Class ReaderSubscriptionDispatcher
          Inherits PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase)
  inheritance:
  - System.Object
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  inheritedMembers:
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.PublishSubscribe(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,System.Object)
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.PublishSubscribe(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,System.Object)
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Publish(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Publish(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Cancel(Guid)
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.CancelAll
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.CreateSubscriber``1
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Handle``1({T})
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Subscribed(Guid,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher.#ctor(EventStore.Core.Bus.IPublisher)
  commentId: M:EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher.#ctor(EventStore.Core.Bus.IPublisher)
  id: '#ctor(EventStore.Core.Bus.IPublisher)'
  parent: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher
  langs:
  - csharp
  - vb
  name: ReaderSubscriptionDispatcher(IPublisher)
  nameWithType: ReaderSubscriptionDispatcher.ReaderSubscriptionDispatcher(IPublisher)
  fullName: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher.ReaderSubscriptionDispatcher(EventStore.Core.Bus.IPublisher)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Services/ReaderSubscriptionDispatcher.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public ReaderSubscriptionDispatcher(IPublisher publisher)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    content.vb: Public Sub New(publisher As IPublisher)
  overload: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  commentId: T:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  parent: EventStore.Projections.Core.Services
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
  name: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase)
  name.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
    name: ReaderSubscriptionManagement.Subscribe
    nameWithType: ReaderSubscriptionManagement.Subscribe
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    name: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    nameWithType: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
    name: EventReaderSubscriptionMessageBase
    nameWithType: EventReaderSubscriptionMessageBase
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
    name: ReaderSubscriptionManagement.Subscribe
    nameWithType: ReaderSubscriptionManagement.Subscribe
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    name: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    nameWithType: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
    name: EventReaderSubscriptionMessageBase
    nameWithType: EventReaderSubscriptionMessageBase
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.PublishSubscribe(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.PublishSubscribe(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,System.Object)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
  name: PublishSubscribe(ReaderSubscriptionManagement.Subscribe, Object)
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.PublishSubscribe(ReaderSubscriptionManagement.Subscribe, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.PublishSubscribe(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).PublishSubscribe(ReaderSubscriptionManagement.Subscribe, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).PublishSubscribe(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
    name: ReaderSubscriptionManagement.Subscribe
    nameWithType: ReaderSubscriptionManagement.Subscribe
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
    name: ReaderSubscriptionManagement.Subscribe
    nameWithType: ReaderSubscriptionManagement.Subscribe
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.PublishSubscribe(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.PublishSubscribe(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,System.Object)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
  name: PublishSubscribe(IPublisher, ReaderSubscriptionManagement.Subscribe, Object)
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.PublishSubscribe(IPublisher, ReaderSubscriptionManagement.Subscribe, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.PublishSubscribe(EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).PublishSubscribe(IPublisher, ReaderSubscriptionManagement.Subscribe, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).PublishSubscribe(EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
    name: ReaderSubscriptionManagement.Subscribe
    nameWithType: ReaderSubscriptionManagement.Subscribe
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
    name: ReaderSubscriptionManagement.Subscribe
    nameWithType: ReaderSubscriptionManagement.Subscribe
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Publish(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Publish(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
  name: Publish(ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Publish(ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.Publish(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).Publish(ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).Publish(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    name: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    nameWithType: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    name: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    nameWithType: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Publish(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Publish(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
  name: Publish(IPublisher, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Publish(IPublisher, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.Publish(EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).Publish(IPublisher, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).Publish(EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    name: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    nameWithType: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    name: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    nameWithType: ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Cancel(Guid)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Cancel(Guid)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
  name: Cancel(Guid)
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Cancel(Guid)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.Cancel(Guid)
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).Cancel(Guid)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).Cancel(Guid)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
    name: Cancel
    nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Cancel
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.Cancel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
    name: Cancel
    nameWithType: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).Cancel
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).Cancel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.CancelAll
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.CancelAll
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
  name: CancelAll()
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.CancelAll()
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.CancelAll()
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).CancelAll()
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).CancelAll()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
    name: CancelAll
    nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.CancelAll
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.CancelAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
    name: CancelAll
    nameWithType: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).CancelAll
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).CancelAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.CreateSubscriber``1
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.CreateSubscriber``1
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
  name: CreateSubscriber<T>()
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.CreateSubscriber<T>()
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.CreateSubscriber<T>()
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).CreateSubscriber(Of T)()
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).CreateSubscriber(Of T)()
  name.vb: CreateSubscriber(Of T)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
    name: CreateSubscriber<T>
    nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.CreateSubscriber<T>
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.CreateSubscriber<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
    name: CreateSubscriber(Of T)
    nameWithType: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).CreateSubscriber(Of T)
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).CreateSubscriber(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Handle``1({T})
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Handle``1(``0)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
  name: Handle<T>(T)
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Handle<T>(T)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.Handle<T>(T)
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).Handle(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).Handle(Of T)(T)
  name.vb: Handle(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
    name: Handle<T>
    nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Handle<T>
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.Handle<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
    name: Handle(Of T)
    nameWithType: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).Handle(Of T)
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).Handle(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Subscribed(Guid,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}.Subscribed(Guid,System.Object)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Guid,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage,EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
  name: Subscribed(Guid, Object)
  nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Subscribed(Guid, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.Subscribed(Guid, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).Subscribed(Guid, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).Subscribed(Guid, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
    name: Subscribed
    nameWithType: PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Subscribed
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase>.Subscribed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
    name: Subscribed
    nameWithType: PublishSubscribeDispatcher(Of Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase).Subscribed
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Guid, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase).Subscribed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
  commentId: T:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
  name: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase)
  name.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: <
    nameWithType: <
    fullName: <
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponseBase
    nameWithType: TResponseBase
    fullName: TResponseBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponseBase
    nameWithType: TResponseBase
    fullName: TResponseBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
  isExternal: true
  name: PublishSubscribe(TSubscribeRequest, Object)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe(TSubscribeRequest, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe(TSubscribeRequest, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe(TSubscribeRequest, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe(TSubscribeRequest, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
  isExternal: true
  name: PublishSubscribe(IPublisher, TSubscribeRequest, Object)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe(IPublisher, TSubscribeRequest, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe(EventStore.Core.Bus.IPublisher, TSubscribeRequest, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe(IPublisher, TSubscribeRequest, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe(EventStore.Core.Bus.IPublisher, TSubscribeRequest, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
  name: Publish(TControlMessageBase)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish(TControlMessageBase)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish(TControlMessageBase)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish(TControlMessageBase)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish(TControlMessageBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish
  - name: (
    nameWithType: (
    fullName: (
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish
  - name: (
    nameWithType: (
    fullName: (
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
  name: Publish(IPublisher, TControlMessageBase)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish(IPublisher, TControlMessageBase)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish(EventStore.Core.Bus.IPublisher, TControlMessageBase)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish(IPublisher, TControlMessageBase)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish(EventStore.Core.Bus.IPublisher, TControlMessageBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
  name: Cancel(TGuid)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Cancel(TGuid)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Cancel(TGuid)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Cancel(TGuid)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Cancel(TGuid)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
    name: Cancel
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Cancel
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Cancel
  - name: (
    nameWithType: (
    fullName: (
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
    name: Cancel
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Cancel
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Cancel
  - name: (
    nameWithType: (
    fullName: (
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
  name: CancelAll()
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CancelAll()
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CancelAll()
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CancelAll()
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CancelAll()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
    name: CancelAll
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CancelAll
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CancelAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
    name: CancelAll
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CancelAll
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CancelAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
  name: CreateSubscriber<T>()
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CreateSubscriber<T>()
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CreateSubscriber<T>()
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CreateSubscriber(Of T)()
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CreateSubscriber(Of T)()
  name.vb: CreateSubscriber(Of T)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
    name: CreateSubscriber<T>
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CreateSubscriber<T>
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CreateSubscriber<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
    name: CreateSubscriber(Of T)
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CreateSubscriber(Of T)
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CreateSubscriber(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
  name: Handle<T>(T)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Handle<T>(T)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Handle<T>(T)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Handle(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Handle(Of T)(T)
  name.vb: Handle(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
    name: Handle<T>
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Handle<T>
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Handle<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
    name: Handle(Of T)
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Handle(Of T)
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Handle(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
  isExternal: true
  name: Subscribed(TGuid, Object)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Subscribed(TGuid, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Subscribed(TGuid, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Subscribed(TGuid, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Subscribed(TGuid, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
    name: Subscribed
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Subscribed
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Subscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
    name: Subscribed
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Subscribed
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Subscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher.#ctor
  name: ReaderSubscriptionDispatcher
  nameWithType: ReaderSubscriptionDispatcher.ReaderSubscriptionDispatcher
  fullName: EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher.ReaderSubscriptionDispatcher
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus

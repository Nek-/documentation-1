### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
  commentId: T:EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
  id: SpooledStreamReadingDispatcher
  parent: EventStore.Projections.Core.Services
  children:
  - EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.#ctor(EventStore.Core.Bus.IPublisher)
  langs:
  - csharp
  - vb
  name: SpooledStreamReadingDispatcher
  nameWithType: SpooledStreamReadingDispatcher
  fullName: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ReaderSubscriptionDispatcher.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SpooledStreamReadingDispatcher
    path: ../EventStore/src/EventStore.Projections.Core/Services/ReaderSubscriptionDispatcher.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: 'public sealed class SpooledStreamReadingDispatcher : PublishSubscribeDispatcher<Tuple<Guid, string>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>'
    content.vb: >-
      Public NotInheritable Class SpooledStreamReadingDispatcher
          Inherits PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase)
  inheritance:
  - System.Object
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  inheritedMembers:
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.PublishSubscribe(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,System.Object)
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.PublishSubscribe(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,System.Object)
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Publish(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Publish(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Cancel(Tuple{Guid,System.String})
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.CancelAll
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.CreateSubscriber``1
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Handle``1({T})
  - EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Subscribed(Tuple{Guid,System.String},System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.#ctor(EventStore.Core.Bus.IPublisher)
  commentId: M:EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.#ctor(EventStore.Core.Bus.IPublisher)
  id: '#ctor(EventStore.Core.Bus.IPublisher)'
  parent: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher
  langs:
  - csharp
  - vb
  name: SpooledStreamReadingDispatcher(IPublisher)
  nameWithType: SpooledStreamReadingDispatcher.SpooledStreamReadingDispatcher(IPublisher)
  fullName: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.SpooledStreamReadingDispatcher(EventStore.Core.Bus.IPublisher)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/ReaderSubscriptionDispatcher.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/ReaderSubscriptionDispatcher.cs
    startLine: 23
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services
  syntax:
    content: public SpooledStreamReadingDispatcher(IPublisher publisher)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    content.vb: Public Sub New(publisher As IPublisher)
  overload: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  commentId: T:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  parent: EventStore.Projections.Core.Services
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
  name: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>
  nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>
  nameWithType.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase)
  name.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase
    name: PartitionProcessingResultBase
    nameWithType: PartitionProcessingResultBase
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase
    name: PartitionProcessingResultBase
    nameWithType: PartitionProcessingResultBase
    fullName: EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.PublishSubscribe(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.PublishSubscribe(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,System.Object)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
  name: PublishSubscribe(ReaderSubscriptionManagement.SpoolStreamReading, Object)
  nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.PublishSubscribe(ReaderSubscriptionManagement.SpoolStreamReading, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.PublishSubscribe(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).PublishSubscribe(ReaderSubscriptionManagement.SpoolStreamReading, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).PublishSubscribe(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.PublishSubscribe(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.PublishSubscribe(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,System.Object)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
  name: PublishSubscribe(IPublisher, ReaderSubscriptionManagement.SpoolStreamReading, Object)
  nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.PublishSubscribe(IPublisher, ReaderSubscriptionManagement.SpoolStreamReading, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.PublishSubscribe(EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).PublishSubscribe(IPublisher, ReaderSubscriptionManagement.SpoolStreamReading, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).PublishSubscribe(EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Publish(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Publish(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
  name: Publish(ReaderSubscriptionManagement.SpoolStreamReading)
  nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Publish(ReaderSubscriptionManagement.SpoolStreamReading)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.Publish(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  nameWithType.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).Publish(ReaderSubscriptionManagement.SpoolStreamReading)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).Publish(EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Publish(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Publish(EventStore.Core.Bus.IPublisher,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
  name: Publish(IPublisher, ReaderSubscriptionManagement.SpoolStreamReading)
  nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Publish(IPublisher, ReaderSubscriptionManagement.SpoolStreamReading)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.Publish(EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  nameWithType.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).Publish(IPublisher, ReaderSubscriptionManagement.SpoolStreamReading)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).Publish(EventStore.Core.Bus.IPublisher, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
    name: ReaderSubscriptionManagement.SpoolStreamReading
    nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Cancel(Tuple{Guid,System.String})
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Cancel(Tuple{Guid,System.String})
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
  name: Cancel(Tuple<Guid, String>)
  nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Cancel(Tuple<Guid, String>)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.Cancel(Tuple<Guid, System.String>)
  nameWithType.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).Cancel(Tuple(Of Guid, String))
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).Cancel(Tuple(Of Guid, System.String))
  name.vb: Cancel(Tuple(Of Guid, String))
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
    name: Cancel
    nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Cancel
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.Cancel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
    name: Cancel
    nameWithType: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).Cancel
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).Cancel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.CancelAll
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.CancelAll
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
  name: CancelAll()
  nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.CancelAll()
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.CancelAll()
  nameWithType.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).CancelAll()
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).CancelAll()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
    name: CancelAll
    nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.CancelAll
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.CancelAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
    name: CancelAll
    nameWithType: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).CancelAll
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).CancelAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.CreateSubscriber``1
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.CreateSubscriber``1
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
  name: CreateSubscriber<T>()
  nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.CreateSubscriber<T>()
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.CreateSubscriber<T>()
  nameWithType.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).CreateSubscriber(Of T)()
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).CreateSubscriber(Of T)()
  name.vb: CreateSubscriber(Of T)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
    name: CreateSubscriber<T>
    nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.CreateSubscriber<T>
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.CreateSubscriber<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
    name: CreateSubscriber(Of T)
    nameWithType: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).CreateSubscriber(Of T)
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).CreateSubscriber(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Handle``1({T})
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Handle``1(``0)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
  name: Handle<T>(T)
  nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Handle<T>(T)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.Handle<T>(T)
  nameWithType.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).Handle(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).Handle(Of T)(T)
  name.vb: Handle(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
    name: Handle<T>
    nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Handle<T>
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.Handle<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
    name: Handle(Of T)
    nameWithType: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).Handle(Of T)
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).Handle(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Subscribed(Tuple{Guid,System.String},System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}.Subscribed(Tuple{Guid,System.String},System.Object)
  parent: EventStore.Projections.Core.Services.PublishSubscribeDispatcher{Tuple{Guid,System.String},EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading,EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase}
  definition: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
  name: Subscribed(Tuple<Guid, String>, Object)
  nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Subscribed(Tuple<Guid, String>, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.Subscribed(Tuple<Guid, System.String>, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).Subscribed(Tuple(Of Guid, String), Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).Subscribed(Tuple(Of Guid, System.String), System.Object)
  name.vb: Subscribed(Tuple(Of Guid, String), Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
    name: Subscribed
    nameWithType: PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Subscribed
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<Tuple<Guid, System.String>, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase>.Subscribed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
    name: Subscribed
    nameWithType: PublishSubscribeDispatcher(Of Tuple(Of Guid, String), ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase).Subscribed
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of Tuple(Of Guid, System.String), EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading, EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase).Subscribed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SpooledStreamReadingDispatcher>()
  nameWithType: ProtobufExtensions.Serialize<SpooledStreamReadingDispatcher>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SpooledStreamReadingDispatcher)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher)()
  name.vb: Serialize(Of SpooledStreamReadingDispatcher)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SpooledStreamReadingDispatcher>
    nameWithType: ProtobufExtensions.Serialize<SpooledStreamReadingDispatcher>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SpooledStreamReadingDispatcher)
    nameWithType: ProtobufExtensions.Serialize(Of SpooledStreamReadingDispatcher)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SpooledStreamReadingDispatcher>()
  nameWithType: ProtobufExtensions.SerializeToArray<SpooledStreamReadingDispatcher>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SpooledStreamReadingDispatcher)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher)()
  name.vb: SerializeToArray(Of SpooledStreamReadingDispatcher)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SpooledStreamReadingDispatcher>
    nameWithType: ProtobufExtensions.SerializeToArray<SpooledStreamReadingDispatcher>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SpooledStreamReadingDispatcher)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SpooledStreamReadingDispatcher)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
  commentId: T:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
  name: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase)
  name.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: <
    nameWithType: <
    fullName: <
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponseBase
    nameWithType: TResponseBase
    fullName: TResponseBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4
    name: PublishSubscribeDispatcher
    nameWithType: PublishSubscribeDispatcher
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponseBase
    nameWithType: TResponseBase
    fullName: TResponseBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
  isExternal: true
  name: PublishSubscribe(TSubscribeRequest, Object)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe(TSubscribeRequest, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe(TSubscribeRequest, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe(TSubscribeRequest, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe(TSubscribeRequest, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
  isExternal: true
  name: PublishSubscribe(IPublisher, TSubscribeRequest, Object)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe(IPublisher, TSubscribeRequest, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe(EventStore.Core.Bus.IPublisher, TSubscribeRequest, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe(IPublisher, TSubscribeRequest, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe(EventStore.Core.Bus.IPublisher, TSubscribeRequest, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.PublishSubscribe(EventStore.Core.Bus.IPublisher,`1,System.Object)
    name: PublishSubscribe
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).PublishSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSubscribeRequest
    nameWithType: TSubscribeRequest
    fullName: TSubscribeRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
  name: Publish(TControlMessageBase)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish(TControlMessageBase)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish(TControlMessageBase)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish(TControlMessageBase)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish(TControlMessageBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish
  - name: (
    nameWithType: (
    fullName: (
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish
  - name: (
    nameWithType: (
    fullName: (
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
  name: Publish(IPublisher, TControlMessageBase)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish(IPublisher, TControlMessageBase)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish(EventStore.Core.Bus.IPublisher, TControlMessageBase)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish(IPublisher, TControlMessageBase)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish(EventStore.Core.Bus.IPublisher, TControlMessageBase)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Publish(EventStore.Core.Bus.IPublisher,`2)
    name: Publish
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TControlMessageBase
    nameWithType: TControlMessageBase
    fullName: TControlMessageBase
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
  name: Cancel(TGuid)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Cancel(TGuid)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Cancel(TGuid)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Cancel(TGuid)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Cancel(TGuid)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
    name: Cancel
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Cancel
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Cancel
  - name: (
    nameWithType: (
    fullName: (
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Cancel(`0)
    name: Cancel
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Cancel
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Cancel
  - name: (
    nameWithType: (
    fullName: (
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
  name: CancelAll()
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CancelAll()
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CancelAll()
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CancelAll()
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CancelAll()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
    name: CancelAll
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CancelAll
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CancelAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CancelAll
    name: CancelAll
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CancelAll
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CancelAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
  name: CreateSubscriber<T>()
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CreateSubscriber<T>()
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CreateSubscriber<T>()
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CreateSubscriber(Of T)()
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CreateSubscriber(Of T)()
  name.vb: CreateSubscriber(Of T)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
    name: CreateSubscriber<T>
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CreateSubscriber<T>
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.CreateSubscriber<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.CreateSubscriber``1
    name: CreateSubscriber(Of T)
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CreateSubscriber(Of T)
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).CreateSubscriber(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
  name: Handle<T>(T)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Handle<T>(T)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Handle<T>(T)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Handle(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Handle(Of T)(T)
  name.vb: Handle(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
    name: Handle<T>
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Handle<T>
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Handle<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Handle``1(``0)
    name: Handle(Of T)
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Handle(Of T)
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Handle(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
  commentId: M:EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
  isExternal: true
  name: Subscribed(TGuid, Object)
  nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Subscribed(TGuid, Object)
  fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Subscribed(TGuid, System.Object)
  nameWithType.vb: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Subscribed(TGuid, Object)
  fullName.vb: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Subscribed(TGuid, System.Object)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
    name: Subscribed
    nameWithType: PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Subscribed
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase>.Subscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.PublishSubscribeDispatcher`4.Subscribed(`0,System.Object)
    name: Subscribed
    nameWithType: PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Subscribed
    fullName: EventStore.Projections.Core.Services.PublishSubscribeDispatcher(Of TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase).Subscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: TGuid
    nameWithType: TGuid
    fullName: TGuid
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.#ctor
  name: SpooledStreamReadingDispatcher
  nameWithType: SpooledStreamReadingDispatcher.SpooledStreamReadingDispatcher
  fullName: EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.SpooledStreamReadingDispatcher
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus

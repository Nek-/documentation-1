### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract
  commentId: T:EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract
  id: V8ProjectionStateHandler.EmittedEventJsonContract
  parent: EventStore.Projections.Core.Services.v8
  children:
  - EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.body
  - EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.eventName
  - EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.GetExtraMetadata
  - EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.isJson
  - EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.metadata
  - EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.streamId
  langs:
  - csharp
  - vb
  name: V8ProjectionStateHandler.EmittedEventJsonContract
  nameWithType: V8ProjectionStateHandler.EmittedEventJsonContract
  fullName: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EmittedEventJsonContract
    path: ../EventStore/src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
    startLine: 45
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.v8
  syntax:
    content: 'public class EmittedEventJsonContract : object'
    content.vb: >-
      Public Class EmittedEventJsonContract
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.streamId
  commentId: F:EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.streamId
  id: streamId
  parent: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract
  langs:
  - csharp
  - vb
  name: streamId
  nameWithType: V8ProjectionStateHandler.EmittedEventJsonContract.streamId
  fullName: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.streamId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: streamId
    path: ../EventStore/src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
    startLine: 49
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.v8
  syntax:
    content: public string streamId
    return:
      type: System.String
    content.vb: Public streamId As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.eventName
  commentId: F:EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.eventName
  id: eventName
  parent: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract
  langs:
  - csharp
  - vb
  name: eventName
  nameWithType: V8ProjectionStateHandler.EmittedEventJsonContract.eventName
  fullName: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.eventName
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: eventName
    path: ../EventStore/src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
    startLine: 51
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.v8
  syntax:
    content: public string eventName
    return:
      type: System.String
    content.vb: Public eventName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.isJson
  commentId: F:EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.isJson
  id: isJson
  parent: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract
  langs:
  - csharp
  - vb
  name: isJson
  nameWithType: V8ProjectionStateHandler.EmittedEventJsonContract.isJson
  fullName: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.isJson
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: isJson
    path: ../EventStore/src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
    startLine: 53
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.v8
  syntax:
    content: public bool isJson
    return:
      type: System.Boolean
    content.vb: Public isJson As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.body
  commentId: F:EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.body
  id: body
  parent: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract
  langs:
  - csharp
  - vb
  name: body
  nameWithType: V8ProjectionStateHandler.EmittedEventJsonContract.body
  fullName: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.body
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: body
    path: ../EventStore/src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
    startLine: 55
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.v8
  syntax:
    content: public string body
    return:
      type: System.String
    content.vb: Public body As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.metadata
  commentId: F:EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.metadata
  id: metadata
  parent: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract
  langs:
  - csharp
  - vb
  name: metadata
  nameWithType: V8ProjectionStateHandler.EmittedEventJsonContract.metadata
  fullName: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.metadata
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: metadata
    path: ../EventStore/src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
    startLine: 57
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.v8
  syntax:
    content: public Dictionary<string, JRaw> metadata
    return:
      type: Dictionary{System.String,JRaw}
    content.vb: Public metadata As Dictionary(Of String, JRaw)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.GetExtraMetadata
  commentId: M:EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.GetExtraMetadata
  id: GetExtraMetadata
  parent: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract
  langs:
  - csharp
  - vb
  name: GetExtraMetadata()
  nameWithType: V8ProjectionStateHandler.EmittedEventJsonContract.GetExtraMetadata()
  fullName: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.GetExtraMetadata()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetExtraMetadata
    path: ../EventStore/src/EventStore.Projections.Core/Services/v8/V8ProjectionStateHandler.cs
    startLine: 59
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.v8
  syntax:
    content: public ExtraMetaData GetExtraMetadata()
    return:
      type: EventStore.Projections.Core.Services.Processing.ExtraMetaData
    content.vb: Public Function GetExtraMetadata As ExtraMetaData
  overload: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.GetExtraMetadata*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.v8
  commentId: N:EventStore.Projections.Core.Services.v8
  name: EventStore.Projections.Core.Services.v8
  nameWithType: EventStore.Projections.Core.Services.v8
  fullName: EventStore.Projections.Core.Services.v8
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<V8ProjectionStateHandler.EmittedEventJsonContract>()
  nameWithType: ProtobufExtensions.Serialize<V8ProjectionStateHandler.EmittedEventJsonContract>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of V8ProjectionStateHandler.EmittedEventJsonContract)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract)()
  name.vb: Serialize(Of V8ProjectionStateHandler.EmittedEventJsonContract)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<V8ProjectionStateHandler.EmittedEventJsonContract>
    nameWithType: ProtobufExtensions.Serialize<V8ProjectionStateHandler.EmittedEventJsonContract>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of V8ProjectionStateHandler.EmittedEventJsonContract)
    nameWithType: ProtobufExtensions.Serialize(Of V8ProjectionStateHandler.EmittedEventJsonContract)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<V8ProjectionStateHandler.EmittedEventJsonContract>()
  nameWithType: ProtobufExtensions.SerializeToArray<V8ProjectionStateHandler.EmittedEventJsonContract>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of V8ProjectionStateHandler.EmittedEventJsonContract)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract)()
  name.vb: SerializeToArray(Of V8ProjectionStateHandler.EmittedEventJsonContract)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<V8ProjectionStateHandler.EmittedEventJsonContract>
    nameWithType: ProtobufExtensions.SerializeToArray<V8ProjectionStateHandler.EmittedEventJsonContract>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of V8ProjectionStateHandler.EmittedEventJsonContract)
    nameWithType: ProtobufExtensions.SerializeToArray(Of V8ProjectionStateHandler.EmittedEventJsonContract)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dictionary{System.String,JRaw}
  commentId: '!:Dictionary{System.String,JRaw}'
  definition: Dictionary`2
  name: Dictionary<String, JRaw>
  nameWithType: Dictionary<String, JRaw>
  fullName: Dictionary<System.String, JRaw>
  nameWithType.vb: Dictionary(Of String, JRaw)
  fullName.vb: Dictionary(Of System.String, JRaw)
  name.vb: Dictionary(Of String, JRaw)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: JRaw
    name: JRaw
    nameWithType: JRaw
    fullName: JRaw
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: JRaw
    name: JRaw
    nameWithType: JRaw
    fullName: JRaw
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.GetExtraMetadata*
  commentId: Overload:EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.GetExtraMetadata
  name: GetExtraMetadata
  nameWithType: V8ProjectionStateHandler.EmittedEventJsonContract.GetExtraMetadata
  fullName: EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.GetExtraMetadata
- uid: EventStore.Projections.Core.Services.Processing.ExtraMetaData
  commentId: T:EventStore.Projections.Core.Services.Processing.ExtraMetaData
  parent: EventStore.Projections.Core.Services.Processing
  name: ExtraMetaData
  nameWithType: ExtraMetaData
  fullName: EventStore.Projections.Core.Services.Processing.ExtraMetaData
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing

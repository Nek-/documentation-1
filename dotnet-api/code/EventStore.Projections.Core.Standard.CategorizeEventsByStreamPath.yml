### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  commentId: T:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  id: CategorizeEventsByStreamPath
  parent: EventStore.Projections.Core.Standard
  children:
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.#ctor(System.String,Action{System.String,System.Object[]})
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ConfigureSourceProcessingStrategy(EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Dispose
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetSourceDefinition
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Initialize
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.InitializeShared
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Load(System.String)
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.LoadShared(System.String)
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  - EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformStateToResult
  langs:
  - csharp
  - vb
  name: CategorizeEventsByStreamPath
  nameWithType: CategorizeEventsByStreamPath
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  type: Class
  source:
    id: CategorizeEventsByStreamPath
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: 'public class CategorizeEventsByStreamPath : object, IProjectionStateHandler, IDisposable, ISourceDefinitionSource'
    content.vb: >-
      Public Class CategorizeEventsByStreamPath
          Inherits Object
          Implements IProjectionStateHandler, IDisposable, ISourceDefinitionSource
  inheritance:
  - System.Object
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler
  - IDisposable
  - EventStore.Projections.Core.Services.ISourceDefinitionSource
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.#ctor(System.String,Action{System.String,System.Object[]})
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.#ctor(System.String,Action{System.String,System.Object[]})
  id: '#ctor(System.String,Action{System.String,System.Object[]})'
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: CategorizeEventsByStreamPath(String, Action<String, Object[]>)
  nameWithType: CategorizeEventsByStreamPath.CategorizeEventsByStreamPath(String, Action<String, Object[]>)
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.CategorizeEventsByStreamPath(System.String, Action<System.String, System.Object[]>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public CategorizeEventsByStreamPath(string source, Action<string, object[]> logger)
    parameters:
    - id: source
      type: System.String
    - id: logger
      type: Action{System.String,System.Object[]}
    content.vb: Public Sub New(source As String, logger As Action(Of String, Object()))
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.#ctor*
  nameWithType.vb: CategorizeEventsByStreamPath.CategorizeEventsByStreamPath(String, Action(Of String, Object()))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.CategorizeEventsByStreamPath(System.String, Action(Of System.String, System.Object()))
  name.vb: CategorizeEventsByStreamPath(String, Action(Of String, Object()))
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ConfigureSourceProcessingStrategy(EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ConfigureSourceProcessingStrategy(EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  id: ConfigureSourceProcessingStrategy(EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: ConfigureSourceProcessingStrategy(SourceDefinitionBuilder)
  nameWithType: CategorizeEventsByStreamPath.ConfigureSourceProcessingStrategy(SourceDefinitionBuilder)
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ConfigureSourceProcessingStrategy(EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  type: Method
  source:
    id: ConfigureSourceProcessingStrategy
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public void ConfigureSourceProcessingStrategy(SourceDefinitionBuilder builder)
    parameters:
    - id: builder
      type: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
    content.vb: Public Sub ConfigureSourceProcessingStrategy(builder As SourceDefinitionBuilder)
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ConfigureSourceProcessingStrategy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Load(System.String)
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Load(System.String)
  id: Load(System.String)
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: Load(String)
  nameWithType: CategorizeEventsByStreamPath.Load(String)
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Load(System.String)
  type: Method
  source:
    id: Load
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public void Load(string state)
    parameters:
    - id: state
      type: System.String
    content.vb: Public Sub Load(state As String)
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Load*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.LoadShared(System.String)
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.LoadShared(System.String)
  id: LoadShared(System.String)
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: LoadShared(String)
  nameWithType: CategorizeEventsByStreamPath.LoadShared(String)
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.LoadShared(System.String)
  type: Method
  source:
    id: LoadShared
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public void LoadShared(string state)
    parameters:
    - id: state
      type: System.String
    content.vb: Public Sub LoadShared(state As String)
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.LoadShared*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Initialize
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Initialize
  id: Initialize
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: CategorizeEventsByStreamPath.Initialize()
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Initialize()
  type: Method
  source:
    id: Initialize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public void Initialize()
    content.vb: Public Sub Initialize
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Initialize*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.InitializeShared
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.InitializeShared
  id: InitializeShared
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: InitializeShared()
  nameWithType: CategorizeEventsByStreamPath.InitializeShared()
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.InitializeShared()
  type: Method
  source:
    id: InitializeShared
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 36
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public void InitializeShared()
    content.vb: Public Sub InitializeShared
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.InitializeShared*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  id: GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: GetStatePartition(CheckpointTag, String, ResolvedEvent)
  nameWithType: CategorizeEventsByStreamPath.GetStatePartition(CheckpointTag, String, ResolvedEvent)
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  type: Method
  source:
    id: GetStatePartition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 39
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent data)
    parameters:
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: category
      type: System.String
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    return:
      type: System.String
    content.vb: Public Function GetStatePartition(eventPosition As CheckpointTag, category As String, data As ResolvedEvent) As String
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetStatePartition*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  id: TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  nameWithType: CategorizeEventsByStreamPath.TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  type: Method
  source:
    id: TransformCatalogEvent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 43
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data)
    parameters:
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    return:
      type: System.String
    content.vb: Public Function TransformCatalogEvent(eventPosition As CheckpointTag, data As ResolvedEvent) As String
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformCatalogEvent*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  id: ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[])
  nameWithType: CategorizeEventsByStreamPath.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent, out System.String, out System.String, out EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  type: Method
  source:
    id: ProcessEvent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 47
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public bool ProcessEvent(string partition, CheckpointTag eventPosition, string category1, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents)
    parameters:
    - id: partition
      type: System.String
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: category1
      type: System.String
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: newState
      type: System.String
    - id: newSharedState
      type: System.String
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    return:
      type: System.Boolean
    content.vb: Public Function ProcessEvent(partition As String, eventPosition As CheckpointTag, category1 As String, data As ResolvedEvent, ByRef newState As String, ByRef newSharedState As String, ByRef emittedEvents As EmittedEventEnvelope()) As Boolean
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessEvent*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  nameWithType.vb: CategorizeEventsByStreamPath.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, ByRef String, ByRef String, ByRef EmittedEventEnvelope())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent, ByRef System.String, ByRef System.String, ByRef EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ProcessEvent(String, CheckpointTag, String, ResolvedEvent, ByRef String, ByRef String, ByRef EmittedEventEnvelope())
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  id: ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[])
  nameWithType: CategorizeEventsByStreamPath.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionCreated(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent, out EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  type: Method
  source:
    id: ProcessPartitionCreated
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 78
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents)
    parameters:
    - id: partition
      type: System.String
    - id: createPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    return:
      type: System.Boolean
    content.vb: Public Function ProcessPartitionCreated(partition As String, createPosition As CheckpointTag, data As ResolvedEvent, ByRef emittedEvents As EmittedEventEnvelope()) As Boolean
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionCreated*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  nameWithType.vb: CategorizeEventsByStreamPath.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, ByRef EmittedEventEnvelope())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionCreated(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent, ByRef EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, ByRef EmittedEventEnvelope())
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  id: ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: ProcessPartitionDeleted(String, CheckpointTag, out String)
  nameWithType: CategorizeEventsByStreamPath.ProcessPartitionDeleted(String, CheckpointTag, out String)
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionDeleted(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, out System.String)
  type: Method
  source:
    id: ProcessPartitionDeleted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 84
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState)
    parameters:
    - id: partition
      type: System.String
    - id: deletePosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: newState
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ProcessPartitionDeleted(partition As String, deletePosition As CheckpointTag, ByRef newState As String) As Boolean
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionDeleted*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  nameWithType.vb: CategorizeEventsByStreamPath.ProcessPartitionDeleted(String, CheckpointTag, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionDeleted(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, ByRef System.String)
  name.vb: ProcessPartitionDeleted(String, CheckpointTag, ByRef String)
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformStateToResult
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformStateToResult
  id: TransformStateToResult
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: TransformStateToResult()
  nameWithType: CategorizeEventsByStreamPath.TransformStateToResult()
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformStateToResult()
  type: Method
  source:
    id: TransformStateToResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 88
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public string TransformStateToResult()
    return:
      type: System.String
    content.vb: Public Function TransformStateToResult As String
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformStateToResult*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Dispose
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Dispose
  id: Dispose
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: CategorizeEventsByStreamPath.Dispose()
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Dispose()
  type: Method
  source:
    id: Dispose
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 92
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetSourceDefinition
  commentId: M:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetSourceDefinition
  id: GetSourceDefinition
  parent: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath
  langs:
  - csharp
  - vb
  name: GetSourceDefinition()
  nameWithType: CategorizeEventsByStreamPath.GetSourceDefinition()
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetSourceDefinition()
  type: Method
  source:
    id: GetSourceDefinition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Standard/CategorizeEventsByStreamPath.cs
    startLine: 95
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Standard
  syntax:
    content: public IQuerySources GetSourceDefinition()
    return:
      type: EventStore.Projections.Core.Messages.IQuerySources
    content.vb: Public Function GetSourceDefinition As IQuerySources
  overload: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetSourceDefinition*
  implements:
  - EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Standard
  commentId: N:EventStore.Projections.Core.Standard
  name: EventStore.Projections.Core.Standard
  nameWithType: EventStore.Projections.Core.Standard
  fullName: EventStore.Projections.Core.Standard
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler
  commentId: T:EventStore.Projections.Core.Services.IProjectionStateHandler
  parent: EventStore.Projections.Core.Services
  name: IProjectionStateHandler
  nameWithType: IProjectionStateHandler
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: EventStore.Projections.Core.Services.ISourceDefinitionSource
  commentId: T:EventStore.Projections.Core.Services.ISourceDefinitionSource
  parent: EventStore.Projections.Core.Services
  name: ISourceDefinitionSource
  nameWithType: ISourceDefinitionSource
  fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.#ctor*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.#ctor
  name: CategorizeEventsByStreamPath
  nameWithType: CategorizeEventsByStreamPath.CategorizeEventsByStreamPath
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.CategorizeEventsByStreamPath
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Action{System.String,System.Object[]}
  commentId: '!:Action{System.String,System.Object[]}'
  definition: Action`2
  name: Action<String, Object[]>
  nameWithType: Action<String, Object[]>
  fullName: Action<System.String, System.Object[]>
  nameWithType.vb: Action(Of String, Object())
  fullName.vb: Action(Of System.String, System.Object())
  name.vb: Action(Of String, Object())
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ConfigureSourceProcessingStrategy*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ConfigureSourceProcessingStrategy
  name: ConfigureSourceProcessingStrategy
  nameWithType: CategorizeEventsByStreamPath.ConfigureSourceProcessingStrategy
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ConfigureSourceProcessingStrategy
- uid: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
  commentId: T:EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
  parent: EventStore.Projections.Core.Services.Processing
  name: SourceDefinitionBuilder
  nameWithType: SourceDefinitionBuilder
  fullName: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Load*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Load
  name: Load
  nameWithType: CategorizeEventsByStreamPath.Load
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Load
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: Load(String)
  nameWithType: IProjectionStateHandler.Load(String)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
    name: Load
    nameWithType: IProjectionStateHandler.Load
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
    name: Load
    nameWithType: IProjectionStateHandler.Load
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.LoadShared*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.LoadShared
  name: LoadShared
  nameWithType: CategorizeEventsByStreamPath.LoadShared
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.LoadShared
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: LoadShared(String)
  nameWithType: IProjectionStateHandler.LoadShared(String)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
    name: LoadShared
    nameWithType: IProjectionStateHandler.LoadShared
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
    name: LoadShared
    nameWithType: IProjectionStateHandler.LoadShared
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Initialize*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Initialize
  name: Initialize
  nameWithType: CategorizeEventsByStreamPath.Initialize
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Initialize
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  name: Initialize()
  nameWithType: IProjectionStateHandler.Initialize()
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
    name: Initialize
    nameWithType: IProjectionStateHandler.Initialize
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
    name: Initialize
    nameWithType: IProjectionStateHandler.Initialize
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.InitializeShared*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.InitializeShared
  name: InitializeShared
  nameWithType: CategorizeEventsByStreamPath.InitializeShared
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.InitializeShared
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  name: InitializeShared()
  nameWithType: IProjectionStateHandler.InitializeShared()
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
    name: InitializeShared
    nameWithType: IProjectionStateHandler.InitializeShared
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
    name: InitializeShared
    nameWithType: IProjectionStateHandler.InitializeShared
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetStatePartition*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetStatePartition
  name: GetStatePartition
  nameWithType: CategorizeEventsByStreamPath.GetStatePartition
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetStatePartition
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: GetStatePartition(CheckpointTag, String, ResolvedEvent)
  nameWithType: IProjectionStateHandler.GetStatePartition(CheckpointTag, String, ResolvedEvent)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
    name: GetStatePartition
    nameWithType: IProjectionStateHandler.GetStatePartition
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
    name: GetStatePartition
    nameWithType: IProjectionStateHandler.GetStatePartition
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformCatalogEvent*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformCatalogEvent
  name: TransformCatalogEvent
  nameWithType: CategorizeEventsByStreamPath.TransformCatalogEvent
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformCatalogEvent
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  name: TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  nameWithType: IProjectionStateHandler.TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
    name: TransformCatalogEvent
    nameWithType: IProjectionStateHandler.TransformCatalogEvent
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
    name: TransformCatalogEvent
    nameWithType: IProjectionStateHandler.TransformCatalogEvent
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessEvent*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessEvent
  name: ProcessEvent
  nameWithType: CategorizeEventsByStreamPath.ProcessEvent
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessEvent
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: ProcessEvent(String, CheckpointTag, String, ResolvedEvent, String, String, EmittedEventEnvelope[])
  nameWithType: IProjectionStateHandler.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, String, String, EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  nameWithType.vb: IProjectionStateHandler.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, String, String, EmittedEventEnvelope())
  fullName.vb: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ProcessEvent(String, CheckpointTag, String, ResolvedEvent, String, String, EmittedEventEnvelope())
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
    name: ProcessEvent
    nameWithType: IProjectionStateHandler.ProcessEvent
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
    name: ProcessEvent
    nameWithType: IProjectionStateHandler.ProcessEvent
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  isExternal: true
  name: EmittedEventEnvelope[]
  nameWithType: EmittedEventEnvelope[]
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  nameWithType.vb: EmittedEventEnvelope()
  fullName.vb: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope()
  name.vb: EmittedEventEnvelope()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionCreated*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionCreated
  name: ProcessPartitionCreated
  nameWithType: CategorizeEventsByStreamPath.ProcessPartitionCreated
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionCreated
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, EmittedEventEnvelope[])
  nameWithType: IProjectionStateHandler.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  nameWithType.vb: IProjectionStateHandler.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, EmittedEventEnvelope())
  fullName.vb: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, EmittedEventEnvelope())
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
    name: ProcessPartitionCreated
    nameWithType: IProjectionStateHandler.ProcessPartitionCreated
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
    name: ProcessPartitionCreated
    nameWithType: IProjectionStateHandler.ProcessPartitionCreated
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionDeleted*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionDeleted
  name: ProcessPartitionDeleted
  nameWithType: CategorizeEventsByStreamPath.ProcessPartitionDeleted
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.ProcessPartitionDeleted
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: ProcessPartitionDeleted(String, CheckpointTag, String)
  nameWithType: IProjectionStateHandler.ProcessPartitionDeleted(String, CheckpointTag, String)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
    name: ProcessPartitionDeleted
    nameWithType: IProjectionStateHandler.ProcessPartitionDeleted
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
    name: ProcessPartitionDeleted
    nameWithType: IProjectionStateHandler.ProcessPartitionDeleted
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformStateToResult*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformStateToResult
  name: TransformStateToResult
  nameWithType: CategorizeEventsByStreamPath.TransformStateToResult
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.TransformStateToResult
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  name: TransformStateToResult()
  nameWithType: IProjectionStateHandler.TransformStateToResult()
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
    name: TransformStateToResult
    nameWithType: IProjectionStateHandler.TransformStateToResult
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
    name: TransformStateToResult
    nameWithType: IProjectionStateHandler.TransformStateToResult
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Dispose*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Dispose
  name: Dispose
  nameWithType: CategorizeEventsByStreamPath.Dispose
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.Dispose
- uid: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetSourceDefinition*
  commentId: Overload:EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetSourceDefinition
  name: GetSourceDefinition
  nameWithType: CategorizeEventsByStreamPath.GetSourceDefinition
  fullName: EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.GetSourceDefinition
- uid: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  commentId: M:EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  parent: EventStore.Projections.Core.Services.ISourceDefinitionSource
  name: GetSourceDefinition()
  nameWithType: ISourceDefinitionSource.GetSourceDefinition()
  fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
    name: GetSourceDefinition
    nameWithType: ISourceDefinitionSource.GetSourceDefinition
    fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
    name: GetSourceDefinition
    nameWithType: ISourceDefinitionSource.GetSourceDefinition
    fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.IQuerySources
  commentId: T:EventStore.Projections.Core.Messages.IQuerySources
  parent: EventStore.Projections.Core.Messages
  name: IQuerySources
  nameWithType: IQuerySources
  fullName: EventStore.Projections.Core.Messages.IQuerySources
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages

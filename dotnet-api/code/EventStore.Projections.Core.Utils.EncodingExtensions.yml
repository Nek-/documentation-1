### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Utils.EncodingExtensions
  commentId: T:EventStore.Projections.Core.Utils.EncodingExtensions
  id: EncodingExtensions
  parent: EventStore.Projections.Core.Utils
  children:
  - EventStore.Projections.Core.Utils.EncodingExtensions.Apply(System.String,System.Object[])
  - EventStore.Projections.Core.Utils.EncodingExtensions.FromUtf8(System.Byte[])
  - EventStore.Projections.Core.Utils.EncodingExtensions.ToUtf8(System.String)
  langs:
  - csharp
  - vb
  name: EncodingExtensions
  nameWithType: EncodingExtensions
  fullName: EventStore.Projections.Core.Utils.EncodingExtensions
  type: Class
  source:
    id: EncodingExtensions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Utils/EncodingExtensions.cs
    startLine: 3
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Utils
  syntax:
    content: 'public static class EncodingExtensions : object'
    content.vb: >-
      Public Module EncodingExtensions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Projections.Core.Utils.EncodingExtensions.FromUtf8(System.Byte[])
  commentId: M:EventStore.Projections.Core.Utils.EncodingExtensions.FromUtf8(System.Byte[])
  id: FromUtf8(System.Byte[])
  isExtensionMethod: true
  parent: EventStore.Projections.Core.Utils.EncodingExtensions
  langs:
  - csharp
  - vb
  name: FromUtf8(Byte[])
  nameWithType: EncodingExtensions.FromUtf8(Byte[])
  fullName: EventStore.Projections.Core.Utils.EncodingExtensions.FromUtf8(System.Byte[])
  type: Method
  source:
    id: FromUtf8
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Utils/EncodingExtensions.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Utils
  syntax:
    content: public static string FromUtf8(this byte[] self)
    parameters:
    - id: self
      type: System.Byte[]
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromUtf8(self As Byte()) As String
  overload: EventStore.Projections.Core.Utils.EncodingExtensions.FromUtf8*
  nameWithType.vb: EncodingExtensions.FromUtf8(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Projections.Core.Utils.EncodingExtensions.FromUtf8(System.Byte())
  name.vb: FromUtf8(Byte())
- uid: EventStore.Projections.Core.Utils.EncodingExtensions.ToUtf8(System.String)
  commentId: M:EventStore.Projections.Core.Utils.EncodingExtensions.ToUtf8(System.String)
  id: ToUtf8(System.String)
  isExtensionMethod: true
  parent: EventStore.Projections.Core.Utils.EncodingExtensions
  langs:
  - csharp
  - vb
  name: ToUtf8(String)
  nameWithType: EncodingExtensions.ToUtf8(String)
  fullName: EventStore.Projections.Core.Utils.EncodingExtensions.ToUtf8(System.String)
  type: Method
  source:
    id: ToUtf8
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Utils/EncodingExtensions.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Utils
  syntax:
    content: public static byte[] ToUtf8(this string self)
    parameters:
    - id: self
      type: System.String
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToUtf8(self As String) As Byte()
  overload: EventStore.Projections.Core.Utils.EncodingExtensions.ToUtf8*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Utils.EncodingExtensions.Apply(System.String,System.Object[])
  commentId: M:EventStore.Projections.Core.Utils.EncodingExtensions.Apply(System.String,System.Object[])
  id: Apply(System.String,System.Object[])
  isExtensionMethod: true
  parent: EventStore.Projections.Core.Utils.EncodingExtensions
  langs:
  - csharp
  - vb
  name: Apply(String, Object[])
  nameWithType: EncodingExtensions.Apply(String, Object[])
  fullName: EventStore.Projections.Core.Utils.EncodingExtensions.Apply(System.String, System.Object[])
  type: Method
  source:
    id: Apply
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/Utils/EncodingExtensions.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Utils
  syntax:
    content: public static string Apply(this string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Apply(format As String, ParamArray args As Object()) As String
  overload: EventStore.Projections.Core.Utils.EncodingExtensions.Apply*
  nameWithType.vb: EncodingExtensions.Apply(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Projections.Core.Utils.EncodingExtensions.Apply(System.String, System.Object())
  name.vb: Apply(String, Object())
references:
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Utils.EncodingExtensions.FromUtf8*
  commentId: Overload:EventStore.Projections.Core.Utils.EncodingExtensions.FromUtf8
  name: FromUtf8
  nameWithType: EncodingExtensions.FromUtf8
  fullName: EventStore.Projections.Core.Utils.EncodingExtensions.FromUtf8
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Utils.EncodingExtensions.ToUtf8*
  commentId: Overload:EventStore.Projections.Core.Utils.EncodingExtensions.ToUtf8
  name: ToUtf8
  nameWithType: EncodingExtensions.ToUtf8
  fullName: EventStore.Projections.Core.Utils.EncodingExtensions.ToUtf8
- uid: EventStore.Projections.Core.Utils.EncodingExtensions.Apply*
  commentId: Overload:EventStore.Projections.Core.Utils.EncodingExtensions.Apply
  name: Apply
  nameWithType: EncodingExtensions.Apply
  fullName: EventStore.Projections.Core.Utils.EncodingExtensions.Apply
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.v8.Js1
  commentId: T:EventStore.Projections.Core.v8.Js1
  id: Js1
  parent: EventStore.Projections.Core.v8
  children:
  - EventStore.Projections.Core.v8.Js1.ApiVersion
  - EventStore.Projections.Core.v8.Js1.CompileModule(System.IntPtr,System.String,System.String)
  - EventStore.Projections.Core.v8.Js1.CompilePrelude(System.String,System.String,EventStore.Projections.Core.v8.Js1.LoadModuleDelegate,EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate,EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate,EventStore.Projections.Core.v8.Js1.LogDelegate)
  - EventStore.Projections.Core.v8.Js1.CompileQuery(System.IntPtr,System.String,System.String,EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate,EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate)
  - EventStore.Projections.Core.v8.Js1.DisposeScript(System.IntPtr)
  - EventStore.Projections.Core.v8.Js1.ExecuteCommandHandler(System.IntPtr,System.IntPtr,System.String,System.String[],System.Int32,System.IntPtr@,System.IntPtr@,System.IntPtr@)
  - EventStore.Projections.Core.v8.Js1.FreeResult(System.IntPtr)
  - EventStore.Projections.Core.v8.Js1.ReportErrors(System.IntPtr,EventStore.Projections.Core.v8.Js1.ReportErrorDelegate)
  - EventStore.Projections.Core.v8.Js1.TerminateExecution(System.IntPtr)
  langs:
  - csharp
  - vb
  name: Js1
  nameWithType: Js1
  fullName: EventStore.Projections.Core.v8.Js1
  type: Class
  source:
    id: Js1
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Projections.Core/v8/js1.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.v8
  syntax:
    content: public static class Js1
    content.vb: Public Module Js1
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Projections.Core.v8.Js1.ApiVersion
  commentId: M:EventStore.Projections.Core.v8.Js1.ApiVersion
  id: ApiVersion
  parent: EventStore.Projections.Core.v8.Js1
  langs:
  - csharp
  - vb
  name: ApiVersion()
  nameWithType: Js1.ApiVersion()
  fullName: EventStore.Projections.Core.v8.Js1.ApiVersion()
  type: Method
  source:
    path: EventStore.Projections.Core
    isExternal: true
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.v8
  syntax:
    content: public static IntPtr ApiVersion()
    return:
      type: System.IntPtr
    content.vb: Public Shared Function ApiVersion As IntPtr
  overload: EventStore.Projections.Core.v8.Js1.ApiVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.v8.Js1.CompileModule(System.IntPtr,System.String,System.String)
  commentId: M:EventStore.Projections.Core.v8.Js1.CompileModule(System.IntPtr,System.String,System.String)
  id: CompileModule(System.IntPtr,System.String,System.String)
  parent: EventStore.Projections.Core.v8.Js1
  langs:
  - csharp
  - vb
  name: CompileModule(IntPtr, String, String)
  nameWithType: Js1.CompileModule(IntPtr, String, String)
  fullName: EventStore.Projections.Core.v8.Js1.CompileModule(System.IntPtr, System.String, System.String)
  type: Method
  source:
    path: EventStore.Projections.Core
    isExternal: true
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.v8
  syntax:
    content: public static IntPtr CompileModule(IntPtr prelude, string script, string fileName)
    parameters:
    - id: prelude
      type: System.IntPtr
    - id: script
      type: System.String
    - id: fileName
      type: System.String
    return:
      type: System.IntPtr
    content.vb: Public Shared Function CompileModule(prelude As IntPtr, script As String, fileName As String) As IntPtr
  overload: EventStore.Projections.Core.v8.Js1.CompileModule*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.v8.Js1.CompilePrelude(System.String,System.String,EventStore.Projections.Core.v8.Js1.LoadModuleDelegate,EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate,EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate,EventStore.Projections.Core.v8.Js1.LogDelegate)
  commentId: M:EventStore.Projections.Core.v8.Js1.CompilePrelude(System.String,System.String,EventStore.Projections.Core.v8.Js1.LoadModuleDelegate,EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate,EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate,EventStore.Projections.Core.v8.Js1.LogDelegate)
  id: CompilePrelude(System.String,System.String,EventStore.Projections.Core.v8.Js1.LoadModuleDelegate,EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate,EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate,EventStore.Projections.Core.v8.Js1.LogDelegate)
  parent: EventStore.Projections.Core.v8.Js1
  langs:
  - csharp
  - vb
  name: CompilePrelude(String, String, Js1.LoadModuleDelegate, Js1.EnterCancellableRegionDelegate, Js1.ExitCancellableRegionDelegate, Js1.LogDelegate)
  nameWithType: Js1.CompilePrelude(String, String, Js1.LoadModuleDelegate, Js1.EnterCancellableRegionDelegate, Js1.ExitCancellableRegionDelegate, Js1.LogDelegate)
  fullName: EventStore.Projections.Core.v8.Js1.CompilePrelude(System.String, System.String, EventStore.Projections.Core.v8.Js1.LoadModuleDelegate, EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate, EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate, EventStore.Projections.Core.v8.Js1.LogDelegate)
  type: Method
  source:
    path: EventStore.Projections.Core
    isExternal: true
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.v8
  syntax:
    content: public static IntPtr CompilePrelude(string prelude, string fileName, Js1.LoadModuleDelegate loadModuleHandler, Js1.EnterCancellableRegionDelegate enterCancellableRegionHandler, Js1.ExitCancellableRegionDelegate exitCancellableRegionHandler, Js1.LogDelegate logHandler)
    parameters:
    - id: prelude
      type: System.String
    - id: fileName
      type: System.String
    - id: loadModuleHandler
      type: EventStore.Projections.Core.v8.Js1.LoadModuleDelegate
    - id: enterCancellableRegionHandler
      type: EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate
    - id: exitCancellableRegionHandler
      type: EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate
    - id: logHandler
      type: EventStore.Projections.Core.v8.Js1.LogDelegate
    return:
      type: System.IntPtr
    content.vb: Public Shared Function CompilePrelude(prelude As String, fileName As String, loadModuleHandler As Js1.LoadModuleDelegate, enterCancellableRegionHandler As Js1.EnterCancellableRegionDelegate, exitCancellableRegionHandler As Js1.ExitCancellableRegionDelegate, logHandler As Js1.LogDelegate) As IntPtr
  overload: EventStore.Projections.Core.v8.Js1.CompilePrelude*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.v8.Js1.CompileQuery(System.IntPtr,System.String,System.String,EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate,EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate)
  commentId: M:EventStore.Projections.Core.v8.Js1.CompileQuery(System.IntPtr,System.String,System.String,EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate,EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate)
  id: CompileQuery(System.IntPtr,System.String,System.String,EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate,EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate)
  parent: EventStore.Projections.Core.v8.Js1
  langs:
  - csharp
  - vb
  name: CompileQuery(IntPtr, String, String, Js1.CommandHandlerRegisteredDelegate, Js1.ReverseCommandHandlerDelegate)
  nameWithType: Js1.CompileQuery(IntPtr, String, String, Js1.CommandHandlerRegisteredDelegate, Js1.ReverseCommandHandlerDelegate)
  fullName: EventStore.Projections.Core.v8.Js1.CompileQuery(System.IntPtr, System.String, System.String, EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate, EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate)
  type: Method
  source:
    path: EventStore.Projections.Core
    isExternal: true
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.v8
  syntax:
    content: public static IntPtr CompileQuery(IntPtr prelude, string script, string fileName, Js1.CommandHandlerRegisteredDelegate commandHandlerRegisteredCallback, Js1.ReverseCommandHandlerDelegate reverseCommandHandler)
    parameters:
    - id: prelude
      type: System.IntPtr
    - id: script
      type: System.String
    - id: fileName
      type: System.String
    - id: commandHandlerRegisteredCallback
      type: EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate
    - id: reverseCommandHandler
      type: EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate
    return:
      type: System.IntPtr
    content.vb: Public Shared Function CompileQuery(prelude As IntPtr, script As String, fileName As String, commandHandlerRegisteredCallback As Js1.CommandHandlerRegisteredDelegate, reverseCommandHandler As Js1.ReverseCommandHandlerDelegate) As IntPtr
  overload: EventStore.Projections.Core.v8.Js1.CompileQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.v8.Js1.DisposeScript(System.IntPtr)
  commentId: M:EventStore.Projections.Core.v8.Js1.DisposeScript(System.IntPtr)
  id: DisposeScript(System.IntPtr)
  parent: EventStore.Projections.Core.v8.Js1
  langs:
  - csharp
  - vb
  name: DisposeScript(IntPtr)
  nameWithType: Js1.DisposeScript(IntPtr)
  fullName: EventStore.Projections.Core.v8.Js1.DisposeScript(System.IntPtr)
  type: Method
  source:
    path: EventStore.Projections.Core
    isExternal: true
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.v8
  syntax:
    content: public static void DisposeScript(IntPtr scriptHandle)
    parameters:
    - id: scriptHandle
      type: System.IntPtr
    content.vb: Public Shared Sub DisposeScript(scriptHandle As IntPtr)
  overload: EventStore.Projections.Core.v8.Js1.DisposeScript*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.v8.Js1.ExecuteCommandHandler(System.IntPtr,System.IntPtr,System.String,System.String[],System.Int32,System.IntPtr@,System.IntPtr@,System.IntPtr@)
  commentId: M:EventStore.Projections.Core.v8.Js1.ExecuteCommandHandler(System.IntPtr,System.IntPtr,System.String,System.String[],System.Int32,System.IntPtr@,System.IntPtr@,System.IntPtr@)
  id: ExecuteCommandHandler(System.IntPtr,System.IntPtr,System.String,System.String[],System.Int32,System.IntPtr@,System.IntPtr@,System.IntPtr@)
  parent: EventStore.Projections.Core.v8.Js1
  langs:
  - csharp
  - vb
  name: ExecuteCommandHandler(IntPtr, IntPtr, String, String[], Int32, out IntPtr, out IntPtr, out IntPtr)
  nameWithType: Js1.ExecuteCommandHandler(IntPtr, IntPtr, String, String[], Int32, out IntPtr, out IntPtr, out IntPtr)
  fullName: EventStore.Projections.Core.v8.Js1.ExecuteCommandHandler(System.IntPtr, System.IntPtr, System.String, System.String[], System.Int32, out System.IntPtr, out System.IntPtr, out System.IntPtr)
  type: Method
  source:
    path: EventStore.Projections.Core
    isExternal: true
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.v8
  syntax:
    content: public static bool ExecuteCommandHandler(IntPtr scriptHandle, IntPtr eventHandlerHandle, string dataJson, string[] dataOther, int otherLength, out IntPtr resultJson, out IntPtr result2Json, out IntPtr memoryHandle)
    parameters:
    - id: scriptHandle
      type: System.IntPtr
    - id: eventHandlerHandle
      type: System.IntPtr
    - id: dataJson
      type: System.String
    - id: dataOther
      type: System.String[]
    - id: otherLength
      type: System.Int32
    - id: resultJson
      type: System.IntPtr
    - id: result2Json
      type: System.IntPtr
    - id: memoryHandle
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function ExecuteCommandHandler(scriptHandle As IntPtr, eventHandlerHandle As IntPtr, dataJson As String, dataOther As String(), otherLength As Integer, ByRef resultJson As IntPtr, ByRef result2Json As IntPtr, ByRef memoryHandle As IntPtr) As Boolean
  overload: EventStore.Projections.Core.v8.Js1.ExecuteCommandHandler*
  nameWithType.vb: Js1.ExecuteCommandHandler(IntPtr, IntPtr, String, String(), Int32, ByRef IntPtr, ByRef IntPtr, ByRef IntPtr)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Projections.Core.v8.Js1.ExecuteCommandHandler(System.IntPtr, System.IntPtr, System.String, System.String(), System.Int32, ByRef System.IntPtr, ByRef System.IntPtr, ByRef System.IntPtr)
  name.vb: ExecuteCommandHandler(IntPtr, IntPtr, String, String(), Int32, ByRef IntPtr, ByRef IntPtr, ByRef IntPtr)
- uid: EventStore.Projections.Core.v8.Js1.FreeResult(System.IntPtr)
  commentId: M:EventStore.Projections.Core.v8.Js1.FreeResult(System.IntPtr)
  id: FreeResult(System.IntPtr)
  parent: EventStore.Projections.Core.v8.Js1
  langs:
  - csharp
  - vb
  name: FreeResult(IntPtr)
  nameWithType: Js1.FreeResult(IntPtr)
  fullName: EventStore.Projections.Core.v8.Js1.FreeResult(System.IntPtr)
  type: Method
  source:
    path: EventStore.Projections.Core
    isExternal: true
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.v8
  syntax:
    content: public static void FreeResult(IntPtr resultHandle)
    parameters:
    - id: resultHandle
      type: System.IntPtr
    content.vb: Public Shared Sub FreeResult(resultHandle As IntPtr)
  overload: EventStore.Projections.Core.v8.Js1.FreeResult*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.v8.Js1.TerminateExecution(System.IntPtr)
  commentId: M:EventStore.Projections.Core.v8.Js1.TerminateExecution(System.IntPtr)
  id: TerminateExecution(System.IntPtr)
  parent: EventStore.Projections.Core.v8.Js1
  langs:
  - csharp
  - vb
  name: TerminateExecution(IntPtr)
  nameWithType: Js1.TerminateExecution(IntPtr)
  fullName: EventStore.Projections.Core.v8.Js1.TerminateExecution(System.IntPtr)
  type: Method
  source:
    path: EventStore.Projections.Core
    isExternal: true
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.v8
  syntax:
    content: public static void TerminateExecution(IntPtr scriptHandle)
    parameters:
    - id: scriptHandle
      type: System.IntPtr
    content.vb: Public Shared Sub TerminateExecution(scriptHandle As IntPtr)
  overload: EventStore.Projections.Core.v8.Js1.TerminateExecution*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.v8.Js1.ReportErrors(System.IntPtr,EventStore.Projections.Core.v8.Js1.ReportErrorDelegate)
  commentId: M:EventStore.Projections.Core.v8.Js1.ReportErrors(System.IntPtr,EventStore.Projections.Core.v8.Js1.ReportErrorDelegate)
  id: ReportErrors(System.IntPtr,EventStore.Projections.Core.v8.Js1.ReportErrorDelegate)
  parent: EventStore.Projections.Core.v8.Js1
  langs:
  - csharp
  - vb
  name: ReportErrors(IntPtr, Js1.ReportErrorDelegate)
  nameWithType: Js1.ReportErrors(IntPtr, Js1.ReportErrorDelegate)
  fullName: EventStore.Projections.Core.v8.Js1.ReportErrors(System.IntPtr, EventStore.Projections.Core.v8.Js1.ReportErrorDelegate)
  type: Method
  source:
    path: EventStore.Projections.Core
    isExternal: true
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.v8
  syntax:
    content: public static void ReportErrors(IntPtr scriptHandle, Js1.ReportErrorDelegate reportErrorCallback)
    parameters:
    - id: scriptHandle
      type: System.IntPtr
    - id: reportErrorCallback
      type: EventStore.Projections.Core.v8.Js1.ReportErrorDelegate
    content.vb: Public Shared Sub ReportErrors(scriptHandle As IntPtr, reportErrorCallback As Js1.ReportErrorDelegate)
  overload: EventStore.Projections.Core.v8.Js1.ReportErrors*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Projections.Core.v8
  commentId: N:EventStore.Projections.Core.v8
  name: EventStore.Projections.Core.v8
  nameWithType: EventStore.Projections.Core.v8
  fullName: EventStore.Projections.Core.v8
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Projections.Core.v8.Js1.ApiVersion*
  commentId: Overload:EventStore.Projections.Core.v8.Js1.ApiVersion
  isExternal: true
  name: ApiVersion
  nameWithType: Js1.ApiVersion
  fullName: EventStore.Projections.Core.v8.Js1.ApiVersion
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: EventStore.Projections.Core.v8.Js1.CompileModule*
  commentId: Overload:EventStore.Projections.Core.v8.Js1.CompileModule
  isExternal: true
  name: CompileModule
  nameWithType: Js1.CompileModule
  fullName: EventStore.Projections.Core.v8.Js1.CompileModule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.v8.Js1.CompilePrelude*
  commentId: Overload:EventStore.Projections.Core.v8.Js1.CompilePrelude
  isExternal: true
  name: CompilePrelude
  nameWithType: Js1.CompilePrelude
  fullName: EventStore.Projections.Core.v8.Js1.CompilePrelude
- uid: EventStore.Projections.Core.v8.Js1.LoadModuleDelegate
  commentId: T:EventStore.Projections.Core.v8.Js1.LoadModuleDelegate
  parent: EventStore.Projections.Core.v8
  name: Js1.LoadModuleDelegate
  nameWithType: Js1.LoadModuleDelegate
  fullName: EventStore.Projections.Core.v8.Js1.LoadModuleDelegate
- uid: EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate
  commentId: T:EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate
  parent: EventStore.Projections.Core.v8
  name: Js1.EnterCancellableRegionDelegate
  nameWithType: Js1.EnterCancellableRegionDelegate
  fullName: EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate
- uid: EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate
  commentId: T:EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate
  parent: EventStore.Projections.Core.v8
  name: Js1.ExitCancellableRegionDelegate
  nameWithType: Js1.ExitCancellableRegionDelegate
  fullName: EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate
- uid: EventStore.Projections.Core.v8.Js1.LogDelegate
  commentId: T:EventStore.Projections.Core.v8.Js1.LogDelegate
  parent: EventStore.Projections.Core.v8
  name: Js1.LogDelegate
  nameWithType: Js1.LogDelegate
  fullName: EventStore.Projections.Core.v8.Js1.LogDelegate
- uid: EventStore.Projections.Core.v8.Js1.CompileQuery*
  commentId: Overload:EventStore.Projections.Core.v8.Js1.CompileQuery
  isExternal: true
  name: CompileQuery
  nameWithType: Js1.CompileQuery
  fullName: EventStore.Projections.Core.v8.Js1.CompileQuery
- uid: EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate
  commentId: T:EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate
  parent: EventStore.Projections.Core.v8
  name: Js1.CommandHandlerRegisteredDelegate
  nameWithType: Js1.CommandHandlerRegisteredDelegate
  fullName: EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate
- uid: EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate
  commentId: T:EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate
  parent: EventStore.Projections.Core.v8
  name: Js1.ReverseCommandHandlerDelegate
  nameWithType: Js1.ReverseCommandHandlerDelegate
  fullName: EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate
- uid: EventStore.Projections.Core.v8.Js1.DisposeScript*
  commentId: Overload:EventStore.Projections.Core.v8.Js1.DisposeScript
  isExternal: true
  name: DisposeScript
  nameWithType: Js1.DisposeScript
  fullName: EventStore.Projections.Core.v8.Js1.DisposeScript
- uid: EventStore.Projections.Core.v8.Js1.ExecuteCommandHandler*
  commentId: Overload:EventStore.Projections.Core.v8.Js1.ExecuteCommandHandler
  isExternal: true
  name: ExecuteCommandHandler
  nameWithType: Js1.ExecuteCommandHandler
  fullName: EventStore.Projections.Core.v8.Js1.ExecuteCommandHandler
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.v8.Js1.FreeResult*
  commentId: Overload:EventStore.Projections.Core.v8.Js1.FreeResult
  isExternal: true
  name: FreeResult
  nameWithType: Js1.FreeResult
  fullName: EventStore.Projections.Core.v8.Js1.FreeResult
- uid: EventStore.Projections.Core.v8.Js1.TerminateExecution*
  commentId: Overload:EventStore.Projections.Core.v8.Js1.TerminateExecution
  isExternal: true
  name: TerminateExecution
  nameWithType: Js1.TerminateExecution
  fullName: EventStore.Projections.Core.v8.Js1.TerminateExecution
- uid: EventStore.Projections.Core.v8.Js1.ReportErrors*
  commentId: Overload:EventStore.Projections.Core.v8.Js1.ReportErrors
  isExternal: true
  name: ReportErrors
  nameWithType: Js1.ReportErrors
  fullName: EventStore.Projections.Core.v8.Js1.ReportErrors
- uid: EventStore.Projections.Core.v8.Js1.ReportErrorDelegate
  commentId: T:EventStore.Projections.Core.v8.Js1.ReportErrorDelegate
  parent: EventStore.Projections.Core.v8
  name: Js1.ReportErrorDelegate
  nameWithType: Js1.ReportErrorDelegate
  fullName: EventStore.Projections.Core.v8.Js1.ReportErrorDelegate

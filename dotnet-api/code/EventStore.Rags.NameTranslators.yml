### YamlMime:ManagedReference
items:
- uid: EventStore.Rags.NameTranslators
  commentId: T:EventStore.Rags.NameTranslators
  id: NameTranslators
  parent: EventStore.Rags
  children:
  - EventStore.Rags.NameTranslators.CombineByPascalCase(System.String,System.String)
  - EventStore.Rags.NameTranslators.None(System.String)
  - EventStore.Rags.NameTranslators.PrefixEnvironmentVariable(System.String,System.String)
  langs:
  - csharp
  - vb
  name: NameTranslators
  nameWithType: NameTranslators
  fullName: EventStore.Rags.NameTranslators
  type: Class
  source:
    remote:
      path: src/EventStore.Rags/NameTranslators.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NameTranslators
    path: ../EventStore/src/EventStore.Rags/NameTranslators.cs
    startLine: 2
  assemblies:
  - EventStore.Rags
  namespace: EventStore.Rags
  syntax:
    content: public static class NameTranslators
    content.vb: Public Module NameTranslators
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Rags.NameTranslators.PrefixEnvironmentVariable(System.String,System.String)
  commentId: M:EventStore.Rags.NameTranslators.PrefixEnvironmentVariable(System.String,System.String)
  id: PrefixEnvironmentVariable(System.String,System.String)
  parent: EventStore.Rags.NameTranslators
  langs:
  - csharp
  - vb
  name: PrefixEnvironmentVariable(String, String)
  nameWithType: NameTranslators.PrefixEnvironmentVariable(String, String)
  fullName: EventStore.Rags.NameTranslators.PrefixEnvironmentVariable(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Rags/NameTranslators.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PrefixEnvironmentVariable
    path: ../EventStore/src/EventStore.Rags/NameTranslators.cs
    startLine: 4
  assemblies:
  - EventStore.Rags
  namespace: EventStore.Rags
  syntax:
    content: public static string PrefixEnvironmentVariable(string name, string prefix)
    parameters:
    - id: name
      type: System.String
    - id: prefix
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function PrefixEnvironmentVariable(name As String, prefix As String) As String
  overload: EventStore.Rags.NameTranslators.PrefixEnvironmentVariable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Rags.NameTranslators.CombineByPascalCase(System.String,System.String)
  commentId: M:EventStore.Rags.NameTranslators.CombineByPascalCase(System.String,System.String)
  id: CombineByPascalCase(System.String,System.String)
  parent: EventStore.Rags.NameTranslators
  langs:
  - csharp
  - vb
  name: CombineByPascalCase(String, String)
  nameWithType: NameTranslators.CombineByPascalCase(String, String)
  fullName: EventStore.Rags.NameTranslators.CombineByPascalCase(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Rags/NameTranslators.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CombineByPascalCase
    path: ../EventStore/src/EventStore.Rags/NameTranslators.cs
    startLine: 9
  assemblies:
  - EventStore.Rags
  namespace: EventStore.Rags
  syntax:
    content: public static string CombineByPascalCase(string name, string token)
    parameters:
    - id: name
      type: System.String
    - id: token
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function CombineByPascalCase(name As String, token As String) As String
  overload: EventStore.Rags.NameTranslators.CombineByPascalCase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Rags.NameTranslators.None(System.String)
  commentId: M:EventStore.Rags.NameTranslators.None(System.String)
  id: None(System.String)
  parent: EventStore.Rags.NameTranslators
  langs:
  - csharp
  - vb
  name: None(String)
  nameWithType: NameTranslators.None(String)
  fullName: EventStore.Rags.NameTranslators.None(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Rags/NameTranslators.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: None
    path: ../EventStore/src/EventStore.Rags/NameTranslators.cs
    startLine: 15
  assemblies:
  - EventStore.Rags
  namespace: EventStore.Rags
  syntax:
    content: public static string None(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function None(name As String) As String
  overload: EventStore.Rags.NameTranslators.None*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Rags
  commentId: N:EventStore.Rags
  name: EventStore.Rags
  nameWithType: EventStore.Rags
  fullName: EventStore.Rags
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Rags.NameTranslators.PrefixEnvironmentVariable*
  commentId: Overload:EventStore.Rags.NameTranslators.PrefixEnvironmentVariable
  name: PrefixEnvironmentVariable
  nameWithType: NameTranslators.PrefixEnvironmentVariable
  fullName: EventStore.Rags.NameTranslators.PrefixEnvironmentVariable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Rags.NameTranslators.CombineByPascalCase*
  commentId: Overload:EventStore.Rags.NameTranslators.CombineByPascalCase
  name: CombineByPascalCase
  nameWithType: NameTranslators.CombineByPascalCase
  fullName: EventStore.Rags.NameTranslators.CombineByPascalCase
- uid: EventStore.Rags.NameTranslators.None*
  commentId: Overload:EventStore.Rags.NameTranslators.None
  name: None
  nameWithType: NameTranslators.None
  fullName: EventStore.Rags.NameTranslators.None

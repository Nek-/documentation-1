### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.Atom.EntryElement
  commentId: T:EventStore.Transport.Http.Atom.EntryElement
  id: EntryElement
  parent: EventStore.Transport.Http.Atom
  children:
  - EventStore.Transport.Http.Atom.EntryElement.#ctor
  - EventStore.Transport.Http.Atom.EntryElement.AddLink(System.String,System.String,System.String)
  - EventStore.Transport.Http.Atom.EntryElement.Author
  - EventStore.Transport.Http.Atom.EntryElement.Content
  - EventStore.Transport.Http.Atom.EntryElement.GetSchema
  - EventStore.Transport.Http.Atom.EntryElement.Id
  - EventStore.Transport.Http.Atom.EntryElement.Links
  - EventStore.Transport.Http.Atom.EntryElement.ReadXml(XmlReader)
  - EventStore.Transport.Http.Atom.EntryElement.SetAuthor(System.String)
  - EventStore.Transport.Http.Atom.EntryElement.SetContent(System.Object)
  - EventStore.Transport.Http.Atom.EntryElement.SetId(System.String)
  - EventStore.Transport.Http.Atom.EntryElement.SetSummary(System.String)
  - EventStore.Transport.Http.Atom.EntryElement.SetTitle(System.String)
  - EventStore.Transport.Http.Atom.EntryElement.SetUpdated(DateTime)
  - EventStore.Transport.Http.Atom.EntryElement.Summary
  - EventStore.Transport.Http.Atom.EntryElement.Title
  - EventStore.Transport.Http.Atom.EntryElement.Updated
  - EventStore.Transport.Http.Atom.EntryElement.WriteXml(XmlWriter)
  - EventStore.Transport.Http.Atom.EntryElement.WriteXml(XmlWriter,System.Boolean)
  langs:
  - csharp
  - vb
  name: EntryElement
  nameWithType: EntryElement
  fullName: EventStore.Transport.Http.Atom.EntryElement
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EntryElement
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 118
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: 'public class EntryElement : IXmlSerializable'
    content.vb: >-
      Public Class EntryElement
          Inherits IXmlSerializable
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Transport.Http.Atom.RichEntryElement
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.Atom.EntryElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.Atom.EntryElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Transport.Http.Atom.EntryElement.Title
  commentId: P:EventStore.Transport.Http.Atom.EntryElement.Title
  id: Title
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: EntryElement.Title
  fullName: EventStore.Transport.Http.Atom.EntryElement.Title
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Title
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 121
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: EventStore.Transport.Http.Atom.EntryElement.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.Id
  commentId: P:EventStore.Transport.Http.Atom.EntryElement.Id
  id: Id
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: EntryElement.Id
  fullName: EventStore.Transport.Http.Atom.EntryElement.Id
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Id
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 122
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: EventStore.Transport.Http.Atom.EntryElement.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.Updated
  commentId: P:EventStore.Transport.Http.Atom.EntryElement.Updated
  id: Updated
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: EntryElement.Updated
  fullName: EventStore.Transport.Http.Atom.EntryElement.Updated
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Updated
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 123
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Updated { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Updated As String
  overload: EventStore.Transport.Http.Atom.EntryElement.Updated*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.Author
  commentId: P:EventStore.Transport.Http.Atom.EntryElement.Author
  id: Author
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: EntryElement.Author
  fullName: EventStore.Transport.Http.Atom.EntryElement.Author
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Author
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 124
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public PersonElement Author { get; set; }
    parameters: []
    return:
      type: EventStore.Transport.Http.Atom.PersonElement
    content.vb: Public Property Author As PersonElement
  overload: EventStore.Transport.Http.Atom.EntryElement.Author*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.Summary
  commentId: P:EventStore.Transport.Http.Atom.EntryElement.Summary
  id: Summary
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: EntryElement.Summary
  fullName: EventStore.Transport.Http.Atom.EntryElement.Summary
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Summary
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 125
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Summary { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Summary As String
  overload: EventStore.Transport.Http.Atom.EntryElement.Summary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.Content
  commentId: P:EventStore.Transport.Http.Atom.EntryElement.Content
  id: Content
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: EntryElement.Content
  fullName: EventStore.Transport.Http.Atom.EntryElement.Content
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Content
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 127
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public object Content { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Content As Object
  overload: EventStore.Transport.Http.Atom.EntryElement.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.Links
  commentId: P:EventStore.Transport.Http.Atom.EntryElement.Links
  id: Links
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: Links
  nameWithType: EntryElement.Links
  fullName: EventStore.Transport.Http.Atom.EntryElement.Links
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Links
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 132
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public List<LinkElement> Links { get; set; }
    parameters: []
    return:
      type: List{EventStore.Transport.Http.Atom.LinkElement}
    content.vb: Public Property Links As List(Of LinkElement)
  overload: EventStore.Transport.Http.Atom.EntryElement.Links*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.#ctor
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.#ctor
  id: '#ctor'
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: EntryElement()
  nameWithType: EntryElement.EntryElement()
  fullName: EventStore.Transport.Http.Atom.EntryElement.EntryElement()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 134
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public EntryElement()
    content.vb: Public Sub New
  overload: EventStore.Transport.Http.Atom.EntryElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.SetTitle(System.String)
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.SetTitle(System.String)
  id: SetTitle(System.String)
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: SetTitle(String)
  nameWithType: EntryElement.SetTitle(String)
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetTitle(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetTitle
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 139
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetTitle(string title)
    parameters:
    - id: title
      type: System.String
    content.vb: Public Sub SetTitle(title As String)
  overload: EventStore.Transport.Http.Atom.EntryElement.SetTitle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.SetId(System.String)
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.SetId(System.String)
  id: SetId(System.String)
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: SetId(String)
  nameWithType: EntryElement.SetId(String)
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetId(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetId
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 145
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetId(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Public Sub SetId(id As String)
  overload: EventStore.Transport.Http.Atom.EntryElement.SetId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.SetUpdated(DateTime)
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.SetUpdated(DateTime)
  id: SetUpdated(DateTime)
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: SetUpdated(DateTime)
  nameWithType: EntryElement.SetUpdated(DateTime)
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetUpdated(DateTime)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetUpdated
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 151
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetUpdated(DateTime dateTime)
    parameters:
    - id: dateTime
      type: DateTime
    content.vb: Public Sub SetUpdated(dateTime As DateTime)
  overload: EventStore.Transport.Http.Atom.EntryElement.SetUpdated*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.SetAuthor(System.String)
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.SetAuthor(System.String)
  id: SetAuthor(System.String)
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: SetAuthor(String)
  nameWithType: EntryElement.SetAuthor(String)
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetAuthor(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetAuthor
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 156
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetAuthor(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub SetAuthor(name As String)
  overload: EventStore.Transport.Http.Atom.EntryElement.SetAuthor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.SetSummary(System.String)
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.SetSummary(System.String)
  id: SetSummary(System.String)
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: SetSummary(String)
  nameWithType: EntryElement.SetSummary(String)
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetSummary(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetSummary
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 162
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetSummary(string summary)
    parameters:
    - id: summary
      type: System.String
    content.vb: Public Sub SetSummary(summary As String)
  overload: EventStore.Transport.Http.Atom.EntryElement.SetSummary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.AddLink(System.String,System.String,System.String)
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.AddLink(System.String,System.String,System.String)
  id: AddLink(System.String,System.String,System.String)
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: AddLink(String, String, String)
  nameWithType: EntryElement.AddLink(String, String, String)
  fullName: EventStore.Transport.Http.Atom.EntryElement.AddLink(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: AddLink
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 168
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void AddLink(string relation, string uri, string type = null)
    parameters:
    - id: relation
      type: System.String
    - id: uri
      type: System.String
    - id: type
      type: System.String
    content.vb: Public Sub AddLink(relation As String, uri As String, type As String = Nothing)
  overload: EventStore.Transport.Http.Atom.EntryElement.AddLink*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.GetSchema
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.GetSchema
  id: GetSchema
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: EntryElement.GetSchema()
  fullName: EventStore.Transport.Http.Atom.EntryElement.GetSchema()
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetSchema
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 174
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: XmlSchema
    content.vb: Public Function GetSchema As XmlSchema
  overload: EventStore.Transport.Http.Atom.EntryElement.GetSchema*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.ReadXml(XmlReader)
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.ReadXml(XmlReader)
  id: ReadXml(XmlReader)
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: EntryElement.ReadXml(XmlReader)
  fullName: EventStore.Transport.Http.Atom.EntryElement.ReadXml(XmlReader)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadXml
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 179
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: XmlReader
    content.vb: Public Sub ReadXml(reader As XmlReader)
  overload: EventStore.Transport.Http.Atom.EntryElement.ReadXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.WriteXml(XmlWriter)
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.WriteXml(XmlWriter)
  id: WriteXml(XmlWriter)
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: EntryElement.WriteXml(XmlWriter)
  fullName: EventStore.Transport.Http.Atom.EntryElement.WriteXml(XmlWriter)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WriteXml
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 193
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: XmlWriter
    content.vb: Public Sub WriteXml(writer As XmlWriter)
  overload: EventStore.Transport.Http.Atom.EntryElement.WriteXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.WriteXml(XmlWriter,System.Boolean)
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.WriteXml(XmlWriter,System.Boolean)
  id: WriteXml(XmlWriter,System.Boolean)
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter, Boolean)
  nameWithType: EntryElement.WriteXml(XmlWriter, Boolean)
  fullName: EventStore.Transport.Http.Atom.EntryElement.WriteXml(XmlWriter, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WriteXml
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 198
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void WriteXml(XmlWriter writer, bool usePrefix)
    parameters:
    - id: writer
      type: XmlWriter
    - id: usePrefix
      type: System.Boolean
    content.vb: Public Sub WriteXml(writer As XmlWriter, usePrefix As Boolean)
  overload: EventStore.Transport.Http.Atom.EntryElement.WriteXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.EntryElement.SetContent(System.Object)
  commentId: M:EventStore.Transport.Http.Atom.EntryElement.SetContent(System.Object)
  id: SetContent(System.Object)
  parent: EventStore.Transport.Http.Atom.EntryElement
  langs:
  - csharp
  - vb
  name: SetContent(Object)
  nameWithType: EntryElement.SetContent(Object)
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetContent(System.Object)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetContent
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 234
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetContent(object content)
    parameters:
    - id: content
      type: System.Object
    content.vb: Public Sub SetContent(content As Object)
  overload: EventStore.Transport.Http.Atom.EntryElement.SetContent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Transport.Http.Atom
  commentId: N:EventStore.Transport.Http.Atom
  name: EventStore.Transport.Http.Atom
  nameWithType: EventStore.Transport.Http.Atom
  fullName: EventStore.Transport.Http.Atom
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.EntryElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<EntryElement>()
  nameWithType: ProtobufExtensions.Serialize<EntryElement>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Atom.EntryElement>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of EntryElement)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Atom.EntryElement)()
  name.vb: Serialize(Of EntryElement)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<EntryElement>
    nameWithType: ProtobufExtensions.Serialize<EntryElement>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Atom.EntryElement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of EntryElement)
    nameWithType: ProtobufExtensions.Serialize(Of EntryElement)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Atom.EntryElement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.EntryElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<EntryElement>()
  nameWithType: ProtobufExtensions.SerializeToArray<EntryElement>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Atom.EntryElement>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of EntryElement)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Atom.EntryElement)()
  name.vb: SerializeToArray(Of EntryElement)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<EntryElement>
    nameWithType: ProtobufExtensions.SerializeToArray<EntryElement>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Atom.EntryElement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of EntryElement)
    nameWithType: ProtobufExtensions.SerializeToArray(Of EntryElement)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Atom.EntryElement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Transport.Http.Atom.EntryElement.Title*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.Title
  name: Title
  nameWithType: EntryElement.Title
  fullName: EventStore.Transport.Http.Atom.EntryElement.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Transport.Http.Atom.EntryElement.Id*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.Id
  name: Id
  nameWithType: EntryElement.Id
  fullName: EventStore.Transport.Http.Atom.EntryElement.Id
- uid: EventStore.Transport.Http.Atom.EntryElement.Updated*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.Updated
  name: Updated
  nameWithType: EntryElement.Updated
  fullName: EventStore.Transport.Http.Atom.EntryElement.Updated
- uid: EventStore.Transport.Http.Atom.EntryElement.Author*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.Author
  name: Author
  nameWithType: EntryElement.Author
  fullName: EventStore.Transport.Http.Atom.EntryElement.Author
- uid: EventStore.Transport.Http.Atom.PersonElement
  commentId: T:EventStore.Transport.Http.Atom.PersonElement
  parent: EventStore.Transport.Http.Atom
  name: PersonElement
  nameWithType: PersonElement
  fullName: EventStore.Transport.Http.Atom.PersonElement
- uid: EventStore.Transport.Http.Atom.EntryElement.Summary*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.Summary
  name: Summary
  nameWithType: EntryElement.Summary
  fullName: EventStore.Transport.Http.Atom.EntryElement.Summary
- uid: EventStore.Transport.Http.Atom.EntryElement.Content*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.Content
  name: Content
  nameWithType: EntryElement.Content
  fullName: EventStore.Transport.Http.Atom.EntryElement.Content
- uid: EventStore.Transport.Http.Atom.EntryElement.Links*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.Links
  name: Links
  nameWithType: EntryElement.Links
  fullName: EventStore.Transport.Http.Atom.EntryElement.Links
- uid: List{EventStore.Transport.Http.Atom.LinkElement}
  commentId: '!:List{EventStore.Transport.Http.Atom.LinkElement}'
  definition: List`1
  name: List<LinkElement>
  nameWithType: List<LinkElement>
  fullName: List<EventStore.Transport.Http.Atom.LinkElement>
  nameWithType.vb: List(Of LinkElement)
  fullName.vb: List(Of EventStore.Transport.Http.Atom.LinkElement)
  name.vb: List(Of LinkElement)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.Atom.LinkElement
    name: LinkElement
    nameWithType: LinkElement
    fullName: EventStore.Transport.Http.Atom.LinkElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.Atom.LinkElement
    name: LinkElement
    nameWithType: LinkElement
    fullName: EventStore.Transport.Http.Atom.LinkElement
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.EntryElement.#ctor*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.#ctor
  name: EntryElement
  nameWithType: EntryElement.EntryElement
  fullName: EventStore.Transport.Http.Atom.EntryElement.EntryElement
- uid: EventStore.Transport.Http.Atom.EntryElement.SetTitle*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.SetTitle
  name: SetTitle
  nameWithType: EntryElement.SetTitle
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetTitle
- uid: EventStore.Transport.Http.Atom.EntryElement.SetId*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.SetId
  name: SetId
  nameWithType: EntryElement.SetId
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetId
- uid: EventStore.Transport.Http.Atom.EntryElement.SetUpdated*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.SetUpdated
  name: SetUpdated
  nameWithType: EntryElement.SetUpdated
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetUpdated
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: EventStore.Transport.Http.Atom.EntryElement.SetAuthor*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.SetAuthor
  name: SetAuthor
  nameWithType: EntryElement.SetAuthor
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetAuthor
- uid: EventStore.Transport.Http.Atom.EntryElement.SetSummary*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.SetSummary
  name: SetSummary
  nameWithType: EntryElement.SetSummary
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetSummary
- uid: EventStore.Transport.Http.Atom.EntryElement.AddLink*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.AddLink
  name: AddLink
  nameWithType: EntryElement.AddLink
  fullName: EventStore.Transport.Http.Atom.EntryElement.AddLink
- uid: EventStore.Transport.Http.Atom.EntryElement.GetSchema*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.GetSchema
  name: GetSchema
  nameWithType: EntryElement.GetSchema
  fullName: EventStore.Transport.Http.Atom.EntryElement.GetSchema
- uid: XmlSchema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: XmlSchema
- uid: EventStore.Transport.Http.Atom.EntryElement.ReadXml*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.ReadXml
  name: ReadXml
  nameWithType: EntryElement.ReadXml
  fullName: EventStore.Transport.Http.Atom.EntryElement.ReadXml
- uid: XmlReader
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: XmlReader
- uid: EventStore.Transport.Http.Atom.EntryElement.WriteXml*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.WriteXml
  name: WriteXml
  nameWithType: EntryElement.WriteXml
  fullName: EventStore.Transport.Http.Atom.EntryElement.WriteXml
- uid: XmlWriter
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: XmlWriter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Transport.Http.Atom.EntryElement.SetContent*
  commentId: Overload:EventStore.Transport.Http.Atom.EntryElement.SetContent
  name: SetContent
  nameWithType: EntryElement.SetContent
  fullName: EventStore.Transport.Http.Atom.EntryElement.SetContent

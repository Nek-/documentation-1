### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.Atom.FeedElement
  commentId: T:EventStore.Transport.Http.Atom.FeedElement
  id: FeedElement
  parent: EventStore.Transport.Http.Atom
  children:
  - EventStore.Transport.Http.Atom.FeedElement.#ctor
  - EventStore.Transport.Http.Atom.FeedElement.AddEntry(EventStore.Transport.Http.Atom.EntryElement)
  - EventStore.Transport.Http.Atom.FeedElement.AddLink(System.String,System.String,System.String)
  - EventStore.Transport.Http.Atom.FeedElement.Author
  - EventStore.Transport.Http.Atom.FeedElement.Entries
  - EventStore.Transport.Http.Atom.FeedElement.ETag
  - EventStore.Transport.Http.Atom.FeedElement.GetSchema
  - EventStore.Transport.Http.Atom.FeedElement.HeadOfStream
  - EventStore.Transport.Http.Atom.FeedElement.Id
  - EventStore.Transport.Http.Atom.FeedElement.Links
  - EventStore.Transport.Http.Atom.FeedElement.ReadXml(XmlReader)
  - EventStore.Transport.Http.Atom.FeedElement.SelfUrl
  - EventStore.Transport.Http.Atom.FeedElement.SetAuthor(System.String)
  - EventStore.Transport.Http.Atom.FeedElement.SetETag(System.String)
  - EventStore.Transport.Http.Atom.FeedElement.SetHeadOfStream(System.Boolean)
  - EventStore.Transport.Http.Atom.FeedElement.SetId(System.String)
  - EventStore.Transport.Http.Atom.FeedElement.SetSelfUrl(System.String)
  - EventStore.Transport.Http.Atom.FeedElement.SetTitle(System.String)
  - EventStore.Transport.Http.Atom.FeedElement.SetUpdated(DateTime)
  - EventStore.Transport.Http.Atom.FeedElement.StreamId
  - EventStore.Transport.Http.Atom.FeedElement.Title
  - EventStore.Transport.Http.Atom.FeedElement.Updated
  - EventStore.Transport.Http.Atom.FeedElement.WriteXml(XmlWriter)
  langs:
  - csharp
  - vb
  name: FeedElement
  nameWithType: FeedElement
  fullName: EventStore.Transport.Http.Atom.FeedElement
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: FeedElement
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 10
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: 'public class FeedElement : IXmlSerializable'
    content.vb: >-
      Public Class FeedElement
          Inherits IXmlSerializable
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.Atom.FeedElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.Atom.FeedElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Transport.Http.Atom.FeedElement.Title
  commentId: P:EventStore.Transport.Http.Atom.FeedElement.Title
  id: Title
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: FeedElement.Title
  fullName: EventStore.Transport.Http.Atom.FeedElement.Title
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Title
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 12
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: EventStore.Transport.Http.Atom.FeedElement.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.Id
  commentId: P:EventStore.Transport.Http.Atom.FeedElement.Id
  id: Id
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: FeedElement.Id
  fullName: EventStore.Transport.Http.Atom.FeedElement.Id
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Id
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 13
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: EventStore.Transport.Http.Atom.FeedElement.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.Updated
  commentId: P:EventStore.Transport.Http.Atom.FeedElement.Updated
  id: Updated
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: FeedElement.Updated
  fullName: EventStore.Transport.Http.Atom.FeedElement.Updated
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Updated
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 14
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Updated { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Updated As String
  overload: EventStore.Transport.Http.Atom.FeedElement.Updated*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.StreamId
  commentId: P:EventStore.Transport.Http.Atom.FeedElement.StreamId
  id: StreamId
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: StreamId
  nameWithType: FeedElement.StreamId
  fullName: EventStore.Transport.Http.Atom.FeedElement.StreamId
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: StreamId
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 15
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string StreamId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StreamId As String
  overload: EventStore.Transport.Http.Atom.FeedElement.StreamId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.Author
  commentId: P:EventStore.Transport.Http.Atom.FeedElement.Author
  id: Author
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: FeedElement.Author
  fullName: EventStore.Transport.Http.Atom.FeedElement.Author
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Author
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 16
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public PersonElement Author { get; set; }
    parameters: []
    return:
      type: EventStore.Transport.Http.Atom.PersonElement
    content.vb: Public Property Author As PersonElement
  overload: EventStore.Transport.Http.Atom.FeedElement.Author*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.HeadOfStream
  commentId: P:EventStore.Transport.Http.Atom.FeedElement.HeadOfStream
  id: HeadOfStream
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: HeadOfStream
  nameWithType: FeedElement.HeadOfStream
  fullName: EventStore.Transport.Http.Atom.FeedElement.HeadOfStream
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: HeadOfStream
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 17
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public bool HeadOfStream { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HeadOfStream As Boolean
  overload: EventStore.Transport.Http.Atom.FeedElement.HeadOfStream*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.SelfUrl
  commentId: P:EventStore.Transport.Http.Atom.FeedElement.SelfUrl
  id: SelfUrl
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: SelfUrl
  nameWithType: FeedElement.SelfUrl
  fullName: EventStore.Transport.Http.Atom.FeedElement.SelfUrl
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SelfUrl
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 18
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string SelfUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SelfUrl As String
  overload: EventStore.Transport.Http.Atom.FeedElement.SelfUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.ETag
  commentId: P:EventStore.Transport.Http.Atom.FeedElement.ETag
  id: ETag
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: FeedElement.ETag
  fullName: EventStore.Transport.Http.Atom.FeedElement.ETag
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ETag
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 19
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ETag As String
  overload: EventStore.Transport.Http.Atom.FeedElement.ETag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.Links
  commentId: P:EventStore.Transport.Http.Atom.FeedElement.Links
  id: Links
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: Links
  nameWithType: FeedElement.Links
  fullName: EventStore.Transport.Http.Atom.FeedElement.Links
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Links
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 21
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public List<LinkElement> Links { get; set; }
    parameters: []
    return:
      type: List{EventStore.Transport.Http.Atom.LinkElement}
    content.vb: Public Property Links As List(Of LinkElement)
  overload: EventStore.Transport.Http.Atom.FeedElement.Links*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.Entries
  commentId: P:EventStore.Transport.Http.Atom.FeedElement.Entries
  id: Entries
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: Entries
  nameWithType: FeedElement.Entries
  fullName: EventStore.Transport.Http.Atom.FeedElement.Entries
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Entries
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 22
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public List<EntryElement> Entries { get; set; }
    parameters: []
    return:
      type: List{EventStore.Transport.Http.Atom.EntryElement}
    content.vb: Public Property Entries As List(Of EntryElement)
  overload: EventStore.Transport.Http.Atom.FeedElement.Entries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.#ctor
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.#ctor
  id: '#ctor'
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: FeedElement()
  nameWithType: FeedElement.FeedElement()
  fullName: EventStore.Transport.Http.Atom.FeedElement.FeedElement()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 24
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public FeedElement()
    content.vb: Public Sub New
  overload: EventStore.Transport.Http.Atom.FeedElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.SetTitle(System.String)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.SetTitle(System.String)
  id: SetTitle(System.String)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: SetTitle(String)
  nameWithType: FeedElement.SetTitle(String)
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetTitle(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetTitle
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 30
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetTitle(string title)
    parameters:
    - id: title
      type: System.String
    content.vb: Public Sub SetTitle(title As String)
  overload: EventStore.Transport.Http.Atom.FeedElement.SetTitle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.SetId(System.String)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.SetId(System.String)
  id: SetId(System.String)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: SetId(String)
  nameWithType: FeedElement.SetId(String)
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetId(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetId
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 36
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetId(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Public Sub SetId(id As String)
  overload: EventStore.Transport.Http.Atom.FeedElement.SetId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.SetUpdated(DateTime)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.SetUpdated(DateTime)
  id: SetUpdated(DateTime)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: SetUpdated(DateTime)
  nameWithType: FeedElement.SetUpdated(DateTime)
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetUpdated(DateTime)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetUpdated
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 42
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetUpdated(DateTime dateTime)
    parameters:
    - id: dateTime
      type: DateTime
    content.vb: Public Sub SetUpdated(dateTime As DateTime)
  overload: EventStore.Transport.Http.Atom.FeedElement.SetUpdated*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.SetAuthor(System.String)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.SetAuthor(System.String)
  id: SetAuthor(System.String)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: SetAuthor(String)
  nameWithType: FeedElement.SetAuthor(String)
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetAuthor(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetAuthor
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 47
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetAuthor(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub SetAuthor(name As String)
  overload: EventStore.Transport.Http.Atom.FeedElement.SetAuthor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.SetHeadOfStream(System.Boolean)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.SetHeadOfStream(System.Boolean)
  id: SetHeadOfStream(System.Boolean)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: SetHeadOfStream(Boolean)
  nameWithType: FeedElement.SetHeadOfStream(Boolean)
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetHeadOfStream(System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetHeadOfStream
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 53
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetHeadOfStream(bool headOfStream)
    parameters:
    - id: headOfStream
      type: System.Boolean
    content.vb: Public Sub SetHeadOfStream(headOfStream As Boolean)
  overload: EventStore.Transport.Http.Atom.FeedElement.SetHeadOfStream*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.SetSelfUrl(System.String)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.SetSelfUrl(System.String)
  id: SetSelfUrl(System.String)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: SetSelfUrl(String)
  nameWithType: FeedElement.SetSelfUrl(String)
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetSelfUrl(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetSelfUrl
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 58
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetSelfUrl(string self)
    parameters:
    - id: self
      type: System.String
    content.vb: Public Sub SetSelfUrl(self As String)
  overload: EventStore.Transport.Http.Atom.FeedElement.SetSelfUrl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.SetETag(System.String)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.SetETag(System.String)
  id: SetETag(System.String)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: SetETag(String)
  nameWithType: FeedElement.SetETag(String)
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetETag(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SetETag
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 63
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void SetETag(string etag)
    parameters:
    - id: etag
      type: System.String
    content.vb: Public Sub SetETag(etag As String)
  overload: EventStore.Transport.Http.Atom.FeedElement.SetETag*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.AddLink(System.String,System.String,System.String)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.AddLink(System.String,System.String,System.String)
  id: AddLink(System.String,System.String,System.String)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: AddLink(String, String, String)
  nameWithType: FeedElement.AddLink(String, String, String)
  fullName: EventStore.Transport.Http.Atom.FeedElement.AddLink(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: AddLink
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 68
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void AddLink(string relation, string uri, string contentType = null)
    parameters:
    - id: relation
      type: System.String
    - id: uri
      type: System.String
    - id: contentType
      type: System.String
    content.vb: Public Sub AddLink(relation As String, uri As String, contentType As String = Nothing)
  overload: EventStore.Transport.Http.Atom.FeedElement.AddLink*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.AddEntry(EventStore.Transport.Http.Atom.EntryElement)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.AddEntry(EventStore.Transport.Http.Atom.EntryElement)
  id: AddEntry(EventStore.Transport.Http.Atom.EntryElement)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: AddEntry(EntryElement)
  nameWithType: FeedElement.AddEntry(EntryElement)
  fullName: EventStore.Transport.Http.Atom.FeedElement.AddEntry(EventStore.Transport.Http.Atom.EntryElement)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: AddEntry
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 74
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void AddEntry(EntryElement entry)
    parameters:
    - id: entry
      type: EventStore.Transport.Http.Atom.EntryElement
    content.vb: Public Sub AddEntry(entry As EntryElement)
  overload: EventStore.Transport.Http.Atom.FeedElement.AddEntry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.GetSchema
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.GetSchema
  id: GetSchema
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: FeedElement.GetSchema()
  fullName: EventStore.Transport.Http.Atom.FeedElement.GetSchema()
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetSchema
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 80
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: XmlSchema
    content.vb: Public Function GetSchema As XmlSchema
  overload: EventStore.Transport.Http.Atom.FeedElement.GetSchema*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.ReadXml(XmlReader)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.ReadXml(XmlReader)
  id: ReadXml(XmlReader)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: FeedElement.ReadXml(XmlReader)
  fullName: EventStore.Transport.Http.Atom.FeedElement.ReadXml(XmlReader)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadXml
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 85
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: XmlReader
    content.vb: Public Sub ReadXml(reader As XmlReader)
  overload: EventStore.Transport.Http.Atom.FeedElement.ReadXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.FeedElement.WriteXml(XmlWriter)
  commentId: M:EventStore.Transport.Http.Atom.FeedElement.WriteXml(XmlWriter)
  id: WriteXml(XmlWriter)
  parent: EventStore.Transport.Http.Atom.FeedElement
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: FeedElement.WriteXml(XmlWriter)
  fullName: EventStore.Transport.Http.Atom.FeedElement.WriteXml(XmlWriter)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WriteXml
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 90
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: XmlWriter
    content.vb: Public Sub WriteXml(writer As XmlWriter)
  overload: EventStore.Transport.Http.Atom.FeedElement.WriteXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Transport.Http.Atom
  commentId: N:EventStore.Transport.Http.Atom
  name: EventStore.Transport.Http.Atom
  nameWithType: EventStore.Transport.Http.Atom
  fullName: EventStore.Transport.Http.Atom
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.FeedElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<FeedElement>()
  nameWithType: ProtobufExtensions.Serialize<FeedElement>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Atom.FeedElement>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of FeedElement)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Atom.FeedElement)()
  name.vb: Serialize(Of FeedElement)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<FeedElement>
    nameWithType: ProtobufExtensions.Serialize<FeedElement>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Atom.FeedElement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of FeedElement)
    nameWithType: ProtobufExtensions.Serialize(Of FeedElement)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Atom.FeedElement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.FeedElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<FeedElement>()
  nameWithType: ProtobufExtensions.SerializeToArray<FeedElement>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Atom.FeedElement>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of FeedElement)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Atom.FeedElement)()
  name.vb: SerializeToArray(Of FeedElement)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<FeedElement>
    nameWithType: ProtobufExtensions.SerializeToArray<FeedElement>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Atom.FeedElement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of FeedElement)
    nameWithType: ProtobufExtensions.SerializeToArray(Of FeedElement)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Atom.FeedElement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Transport.Http.Atom.FeedElement.Title*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.Title
  name: Title
  nameWithType: FeedElement.Title
  fullName: EventStore.Transport.Http.Atom.FeedElement.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Transport.Http.Atom.FeedElement.Id*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.Id
  name: Id
  nameWithType: FeedElement.Id
  fullName: EventStore.Transport.Http.Atom.FeedElement.Id
- uid: EventStore.Transport.Http.Atom.FeedElement.Updated*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.Updated
  name: Updated
  nameWithType: FeedElement.Updated
  fullName: EventStore.Transport.Http.Atom.FeedElement.Updated
- uid: EventStore.Transport.Http.Atom.FeedElement.StreamId*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.StreamId
  name: StreamId
  nameWithType: FeedElement.StreamId
  fullName: EventStore.Transport.Http.Atom.FeedElement.StreamId
- uid: EventStore.Transport.Http.Atom.FeedElement.Author*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.Author
  name: Author
  nameWithType: FeedElement.Author
  fullName: EventStore.Transport.Http.Atom.FeedElement.Author
- uid: EventStore.Transport.Http.Atom.PersonElement
  commentId: T:EventStore.Transport.Http.Atom.PersonElement
  parent: EventStore.Transport.Http.Atom
  name: PersonElement
  nameWithType: PersonElement
  fullName: EventStore.Transport.Http.Atom.PersonElement
- uid: EventStore.Transport.Http.Atom.FeedElement.HeadOfStream*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.HeadOfStream
  name: HeadOfStream
  nameWithType: FeedElement.HeadOfStream
  fullName: EventStore.Transport.Http.Atom.FeedElement.HeadOfStream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Transport.Http.Atom.FeedElement.SelfUrl*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.SelfUrl
  name: SelfUrl
  nameWithType: FeedElement.SelfUrl
  fullName: EventStore.Transport.Http.Atom.FeedElement.SelfUrl
- uid: EventStore.Transport.Http.Atom.FeedElement.ETag*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.ETag
  name: ETag
  nameWithType: FeedElement.ETag
  fullName: EventStore.Transport.Http.Atom.FeedElement.ETag
- uid: EventStore.Transport.Http.Atom.FeedElement.Links*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.Links
  name: Links
  nameWithType: FeedElement.Links
  fullName: EventStore.Transport.Http.Atom.FeedElement.Links
- uid: List{EventStore.Transport.Http.Atom.LinkElement}
  commentId: '!:List{EventStore.Transport.Http.Atom.LinkElement}'
  definition: List`1
  name: List<LinkElement>
  nameWithType: List<LinkElement>
  fullName: List<EventStore.Transport.Http.Atom.LinkElement>
  nameWithType.vb: List(Of LinkElement)
  fullName.vb: List(Of EventStore.Transport.Http.Atom.LinkElement)
  name.vb: List(Of LinkElement)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.Atom.LinkElement
    name: LinkElement
    nameWithType: LinkElement
    fullName: EventStore.Transport.Http.Atom.LinkElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.Atom.LinkElement
    name: LinkElement
    nameWithType: LinkElement
    fullName: EventStore.Transport.Http.Atom.LinkElement
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.FeedElement.Entries*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.Entries
  name: Entries
  nameWithType: FeedElement.Entries
  fullName: EventStore.Transport.Http.Atom.FeedElement.Entries
- uid: List{EventStore.Transport.Http.Atom.EntryElement}
  commentId: '!:List{EventStore.Transport.Http.Atom.EntryElement}'
  definition: List`1
  name: List<EntryElement>
  nameWithType: List<EntryElement>
  fullName: List<EventStore.Transport.Http.Atom.EntryElement>
  nameWithType.vb: List(Of EntryElement)
  fullName.vb: List(Of EventStore.Transport.Http.Atom.EntryElement)
  name.vb: List(Of EntryElement)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.Atom.EntryElement
    name: EntryElement
    nameWithType: EntryElement
    fullName: EventStore.Transport.Http.Atom.EntryElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.Atom.EntryElement
    name: EntryElement
    nameWithType: EntryElement
    fullName: EventStore.Transport.Http.Atom.EntryElement
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.FeedElement.#ctor*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.#ctor
  name: FeedElement
  nameWithType: FeedElement.FeedElement
  fullName: EventStore.Transport.Http.Atom.FeedElement.FeedElement
- uid: EventStore.Transport.Http.Atom.FeedElement.SetTitle*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.SetTitle
  name: SetTitle
  nameWithType: FeedElement.SetTitle
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetTitle
- uid: EventStore.Transport.Http.Atom.FeedElement.SetId*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.SetId
  name: SetId
  nameWithType: FeedElement.SetId
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetId
- uid: EventStore.Transport.Http.Atom.FeedElement.SetUpdated*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.SetUpdated
  name: SetUpdated
  nameWithType: FeedElement.SetUpdated
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetUpdated
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: EventStore.Transport.Http.Atom.FeedElement.SetAuthor*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.SetAuthor
  name: SetAuthor
  nameWithType: FeedElement.SetAuthor
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetAuthor
- uid: EventStore.Transport.Http.Atom.FeedElement.SetHeadOfStream*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.SetHeadOfStream
  name: SetHeadOfStream
  nameWithType: FeedElement.SetHeadOfStream
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetHeadOfStream
- uid: EventStore.Transport.Http.Atom.FeedElement.SetSelfUrl*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.SetSelfUrl
  name: SetSelfUrl
  nameWithType: FeedElement.SetSelfUrl
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetSelfUrl
- uid: EventStore.Transport.Http.Atom.FeedElement.SetETag*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.SetETag
  name: SetETag
  nameWithType: FeedElement.SetETag
  fullName: EventStore.Transport.Http.Atom.FeedElement.SetETag
- uid: EventStore.Transport.Http.Atom.FeedElement.AddLink*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.AddLink
  name: AddLink
  nameWithType: FeedElement.AddLink
  fullName: EventStore.Transport.Http.Atom.FeedElement.AddLink
- uid: EventStore.Transport.Http.Atom.FeedElement.AddEntry*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.AddEntry
  name: AddEntry
  nameWithType: FeedElement.AddEntry
  fullName: EventStore.Transport.Http.Atom.FeedElement.AddEntry
- uid: EventStore.Transport.Http.Atom.EntryElement
  commentId: T:EventStore.Transport.Http.Atom.EntryElement
  parent: EventStore.Transport.Http.Atom
  name: EntryElement
  nameWithType: EntryElement
  fullName: EventStore.Transport.Http.Atom.EntryElement
- uid: EventStore.Transport.Http.Atom.FeedElement.GetSchema*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.GetSchema
  name: GetSchema
  nameWithType: FeedElement.GetSchema
  fullName: EventStore.Transport.Http.Atom.FeedElement.GetSchema
- uid: XmlSchema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: XmlSchema
- uid: EventStore.Transport.Http.Atom.FeedElement.ReadXml*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.ReadXml
  name: ReadXml
  nameWithType: FeedElement.ReadXml
  fullName: EventStore.Transport.Http.Atom.FeedElement.ReadXml
- uid: XmlReader
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: XmlReader
- uid: EventStore.Transport.Http.Atom.FeedElement.WriteXml*
  commentId: Overload:EventStore.Transport.Http.Atom.FeedElement.WriteXml
  name: WriteXml
  nameWithType: FeedElement.WriteXml
  fullName: EventStore.Transport.Http.Atom.FeedElement.WriteXml
- uid: XmlWriter
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: XmlWriter

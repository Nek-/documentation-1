### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.Atom.LinkElement
  commentId: T:EventStore.Transport.Http.Atom.LinkElement
  id: LinkElement
  parent: EventStore.Transport.Http.Atom
  children:
  - EventStore.Transport.Http.Atom.LinkElement.#ctor(System.String)
  - EventStore.Transport.Http.Atom.LinkElement.#ctor(System.String,System.String)
  - EventStore.Transport.Http.Atom.LinkElement.#ctor(System.String,System.String,System.String)
  - EventStore.Transport.Http.Atom.LinkElement.GetSchema
  - EventStore.Transport.Http.Atom.LinkElement.ReadXml(XmlReader)
  - EventStore.Transport.Http.Atom.LinkElement.Relation
  - EventStore.Transport.Http.Atom.LinkElement.Type
  - EventStore.Transport.Http.Atom.LinkElement.Uri
  - EventStore.Transport.Http.Atom.LinkElement.WriteXml(XmlWriter)
  langs:
  - csharp
  - vb
  name: LinkElement
  nameWithType: LinkElement
  fullName: EventStore.Transport.Http.Atom.LinkElement
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LinkElement
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 261
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: 'public class LinkElement : IXmlSerializable'
    content.vb: >-
      Public Class LinkElement
          Inherits IXmlSerializable
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.Atom.LinkElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.Atom.LinkElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Transport.Http.Atom.LinkElement.Uri
  commentId: P:EventStore.Transport.Http.Atom.LinkElement.Uri
  id: Uri
  parent: EventStore.Transport.Http.Atom.LinkElement
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: LinkElement.Uri
  fullName: EventStore.Transport.Http.Atom.LinkElement.Uri
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Uri
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 263
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Uri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Uri As String
  overload: EventStore.Transport.Http.Atom.LinkElement.Uri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.LinkElement.Relation
  commentId: P:EventStore.Transport.Http.Atom.LinkElement.Relation
  id: Relation
  parent: EventStore.Transport.Http.Atom.LinkElement
  langs:
  - csharp
  - vb
  name: Relation
  nameWithType: LinkElement.Relation
  fullName: EventStore.Transport.Http.Atom.LinkElement.Relation
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Relation
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 264
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Relation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Relation As String
  overload: EventStore.Transport.Http.Atom.LinkElement.Relation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.LinkElement.Type
  commentId: P:EventStore.Transport.Http.Atom.LinkElement.Type
  id: Type
  parent: EventStore.Transport.Http.Atom.LinkElement
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: LinkElement.Type
  fullName: EventStore.Transport.Http.Atom.LinkElement.Type
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Type
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 265
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Type As String
  overload: EventStore.Transport.Http.Atom.LinkElement.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.LinkElement.#ctor(System.String)
  commentId: M:EventStore.Transport.Http.Atom.LinkElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: EventStore.Transport.Http.Atom.LinkElement
  langs:
  - csharp
  - vb
  name: LinkElement(String)
  nameWithType: LinkElement.LinkElement(String)
  fullName: EventStore.Transport.Http.Atom.LinkElement.LinkElement(System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 267
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public LinkElement(string uri)
    parameters:
    - id: uri
      type: System.String
    content.vb: Public Sub New(uri As String)
  overload: EventStore.Transport.Http.Atom.LinkElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.LinkElement.#ctor(System.String,System.String)
  commentId: M:EventStore.Transport.Http.Atom.LinkElement.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: EventStore.Transport.Http.Atom.LinkElement
  langs:
  - csharp
  - vb
  name: LinkElement(String, String)
  nameWithType: LinkElement.LinkElement(String, String)
  fullName: EventStore.Transport.Http.Atom.LinkElement.LinkElement(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 271
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public LinkElement(string uri, string relation)
    parameters:
    - id: uri
      type: System.String
    - id: relation
      type: System.String
    content.vb: Public Sub New(uri As String, relation As String)
  overload: EventStore.Transport.Http.Atom.LinkElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.LinkElement.#ctor(System.String,System.String,System.String)
  commentId: M:EventStore.Transport.Http.Atom.LinkElement.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: EventStore.Transport.Http.Atom.LinkElement
  langs:
  - csharp
  - vb
  name: LinkElement(String, String, String)
  nameWithType: LinkElement.LinkElement(String, String, String)
  fullName: EventStore.Transport.Http.Atom.LinkElement.LinkElement(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 275
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public LinkElement(string uri, string relation, string type)
    parameters:
    - id: uri
      type: System.String
    - id: relation
      type: System.String
    - id: type
      type: System.String
    content.vb: Public Sub New(uri As String, relation As String, type As String)
  overload: EventStore.Transport.Http.Atom.LinkElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.LinkElement.GetSchema
  commentId: M:EventStore.Transport.Http.Atom.LinkElement.GetSchema
  id: GetSchema
  parent: EventStore.Transport.Http.Atom.LinkElement
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: LinkElement.GetSchema()
  fullName: EventStore.Transport.Http.Atom.LinkElement.GetSchema()
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetSchema
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 282
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: XmlSchema
    content.vb: Public Function GetSchema As XmlSchema
  overload: EventStore.Transport.Http.Atom.LinkElement.GetSchema*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.LinkElement.ReadXml(XmlReader)
  commentId: M:EventStore.Transport.Http.Atom.LinkElement.ReadXml(XmlReader)
  id: ReadXml(XmlReader)
  parent: EventStore.Transport.Http.Atom.LinkElement
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: LinkElement.ReadXml(XmlReader)
  fullName: EventStore.Transport.Http.Atom.LinkElement.ReadXml(XmlReader)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadXml
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 287
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: XmlReader
    content.vb: Public Sub ReadXml(reader As XmlReader)
  overload: EventStore.Transport.Http.Atom.LinkElement.ReadXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.LinkElement.WriteXml(XmlWriter)
  commentId: M:EventStore.Transport.Http.Atom.LinkElement.WriteXml(XmlWriter)
  id: WriteXml(XmlWriter)
  parent: EventStore.Transport.Http.Atom.LinkElement
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: LinkElement.WriteXml(XmlWriter)
  fullName: EventStore.Transport.Http.Atom.LinkElement.WriteXml(XmlWriter)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WriteXml
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 298
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: XmlWriter
    content.vb: Public Sub WriteXml(writer As XmlWriter)
  overload: EventStore.Transport.Http.Atom.LinkElement.WriteXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Transport.Http.Atom
  commentId: N:EventStore.Transport.Http.Atom
  name: EventStore.Transport.Http.Atom
  nameWithType: EventStore.Transport.Http.Atom
  fullName: EventStore.Transport.Http.Atom
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.LinkElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<LinkElement>()
  nameWithType: ProtobufExtensions.Serialize<LinkElement>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Atom.LinkElement>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of LinkElement)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Atom.LinkElement)()
  name.vb: Serialize(Of LinkElement)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<LinkElement>
    nameWithType: ProtobufExtensions.Serialize<LinkElement>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Atom.LinkElement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of LinkElement)
    nameWithType: ProtobufExtensions.Serialize(Of LinkElement)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Atom.LinkElement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.LinkElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<LinkElement>()
  nameWithType: ProtobufExtensions.SerializeToArray<LinkElement>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Atom.LinkElement>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of LinkElement)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Atom.LinkElement)()
  name.vb: SerializeToArray(Of LinkElement)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<LinkElement>
    nameWithType: ProtobufExtensions.SerializeToArray<LinkElement>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Atom.LinkElement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of LinkElement)
    nameWithType: ProtobufExtensions.SerializeToArray(Of LinkElement)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Atom.LinkElement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Transport.Http.Atom.LinkElement.Uri*
  commentId: Overload:EventStore.Transport.Http.Atom.LinkElement.Uri
  name: Uri
  nameWithType: LinkElement.Uri
  fullName: EventStore.Transport.Http.Atom.LinkElement.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Transport.Http.Atom.LinkElement.Relation*
  commentId: Overload:EventStore.Transport.Http.Atom.LinkElement.Relation
  name: Relation
  nameWithType: LinkElement.Relation
  fullName: EventStore.Transport.Http.Atom.LinkElement.Relation
- uid: EventStore.Transport.Http.Atom.LinkElement.Type*
  commentId: Overload:EventStore.Transport.Http.Atom.LinkElement.Type
  name: Type
  nameWithType: LinkElement.Type
  fullName: EventStore.Transport.Http.Atom.LinkElement.Type
- uid: EventStore.Transport.Http.Atom.LinkElement.#ctor*
  commentId: Overload:EventStore.Transport.Http.Atom.LinkElement.#ctor
  name: LinkElement
  nameWithType: LinkElement.LinkElement
  fullName: EventStore.Transport.Http.Atom.LinkElement.LinkElement
- uid: EventStore.Transport.Http.Atom.LinkElement.GetSchema*
  commentId: Overload:EventStore.Transport.Http.Atom.LinkElement.GetSchema
  name: GetSchema
  nameWithType: LinkElement.GetSchema
  fullName: EventStore.Transport.Http.Atom.LinkElement.GetSchema
- uid: XmlSchema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: XmlSchema
- uid: EventStore.Transport.Http.Atom.LinkElement.ReadXml*
  commentId: Overload:EventStore.Transport.Http.Atom.LinkElement.ReadXml
  name: ReadXml
  nameWithType: LinkElement.ReadXml
  fullName: EventStore.Transport.Http.Atom.LinkElement.ReadXml
- uid: XmlReader
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: XmlReader
- uid: EventStore.Transport.Http.Atom.LinkElement.WriteXml*
  commentId: Overload:EventStore.Transport.Http.Atom.LinkElement.WriteXml
  name: WriteXml
  nameWithType: LinkElement.WriteXml
  fullName: EventStore.Transport.Http.Atom.LinkElement.WriteXml
- uid: XmlWriter
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: XmlWriter

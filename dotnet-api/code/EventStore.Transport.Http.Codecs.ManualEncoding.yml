### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.Codecs.ManualEncoding
  commentId: T:EventStore.Transport.Http.Codecs.ManualEncoding
  id: ManualEncoding
  parent: EventStore.Transport.Http.Codecs
  children:
  - EventStore.Transport.Http.Codecs.ManualEncoding.CanParse(EventStore.Transport.Http.MediaType)
  - EventStore.Transport.Http.Codecs.ManualEncoding.ContentType
  - EventStore.Transport.Http.Codecs.ManualEncoding.Encoding
  - EventStore.Transport.Http.Codecs.ManualEncoding.From``1(System.String)
  - EventStore.Transport.Http.Codecs.ManualEncoding.HasEventIds
  - EventStore.Transport.Http.Codecs.ManualEncoding.HasEventTypes
  - EventStore.Transport.Http.Codecs.ManualEncoding.SuitableForResponse(EventStore.Transport.Http.MediaType)
  - EventStore.Transport.Http.Codecs.ManualEncoding.To``1(``0)
  langs:
  - csharp
  - vb
  name: ManualEncoding
  nameWithType: ManualEncoding
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ManualEncoding
    path: ../EventStore/src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
    startLine: 4
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Codecs
  syntax:
    content: 'public class ManualEncoding : object, ICodec'
    content.vb: >-
      Public Class ManualEncoding
          Inherits Object
          Implements ICodec
  inheritance:
  - System.Object
  implements:
  - EventStore.Transport.Http.ICodec
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.Codecs.ManualEncoding.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.Codecs.ManualEncoding.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.ContentType
  commentId: P:EventStore.Transport.Http.Codecs.ManualEncoding.ContentType
  id: ContentType
  parent: EventStore.Transport.Http.Codecs.ManualEncoding
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: ManualEncoding.ContentType
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.ContentType
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ContentType
    path: ../EventStore/src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
    startLine: 5
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Codecs
  syntax:
    content: public string ContentType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ContentType As String
  overload: EventStore.Transport.Http.Codecs.ManualEncoding.ContentType*
  implements:
  - EventStore.Transport.Http.ICodec.ContentType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.Encoding
  commentId: P:EventStore.Transport.Http.Codecs.ManualEncoding.Encoding
  id: Encoding
  parent: EventStore.Transport.Http.Codecs.ManualEncoding
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: ManualEncoding.Encoding
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.Encoding
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Encoding
    path: ../EventStore/src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
    startLine: 9
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Codecs
  syntax:
    content: public Encoding Encoding { get; }
    parameters: []
    return:
      type: Encoding
    content.vb: Public ReadOnly Property Encoding As Encoding
  overload: EventStore.Transport.Http.Codecs.ManualEncoding.Encoding*
  implements:
  - EventStore.Transport.Http.ICodec.Encoding
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.HasEventIds
  commentId: P:EventStore.Transport.Http.Codecs.ManualEncoding.HasEventIds
  id: HasEventIds
  parent: EventStore.Transport.Http.Codecs.ManualEncoding
  langs:
  - csharp
  - vb
  name: HasEventIds
  nameWithType: ManualEncoding.HasEventIds
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.HasEventIds
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: HasEventIds
    path: ../EventStore/src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
    startLine: 13
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Codecs
  syntax:
    content: public bool HasEventIds { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasEventIds As Boolean
  overload: EventStore.Transport.Http.Codecs.ManualEncoding.HasEventIds*
  implements:
  - EventStore.Transport.Http.ICodec.HasEventIds
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.HasEventTypes
  commentId: P:EventStore.Transport.Http.Codecs.ManualEncoding.HasEventTypes
  id: HasEventTypes
  parent: EventStore.Transport.Http.Codecs.ManualEncoding
  langs:
  - csharp
  - vb
  name: HasEventTypes
  nameWithType: ManualEncoding.HasEventTypes
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.HasEventTypes
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: HasEventTypes
    path: ../EventStore/src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
    startLine: 17
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Codecs
  syntax:
    content: public bool HasEventTypes { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasEventTypes As Boolean
  overload: EventStore.Transport.Http.Codecs.ManualEncoding.HasEventTypes*
  implements:
  - EventStore.Transport.Http.ICodec.HasEventTypes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.CanParse(EventStore.Transport.Http.MediaType)
  commentId: M:EventStore.Transport.Http.Codecs.ManualEncoding.CanParse(EventStore.Transport.Http.MediaType)
  id: CanParse(EventStore.Transport.Http.MediaType)
  parent: EventStore.Transport.Http.Codecs.ManualEncoding
  langs:
  - csharp
  - vb
  name: CanParse(MediaType)
  nameWithType: ManualEncoding.CanParse(MediaType)
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.CanParse(EventStore.Transport.Http.MediaType)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CanParse
    path: ../EventStore/src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
    startLine: 21
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Codecs
  syntax:
    content: public bool CanParse(MediaType format)
    parameters:
    - id: format
      type: EventStore.Transport.Http.MediaType
    return:
      type: System.Boolean
    content.vb: Public Function CanParse(format As MediaType) As Boolean
  overload: EventStore.Transport.Http.Codecs.ManualEncoding.CanParse*
  implements:
  - EventStore.Transport.Http.ICodec.CanParse(EventStore.Transport.Http.MediaType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.SuitableForResponse(EventStore.Transport.Http.MediaType)
  commentId: M:EventStore.Transport.Http.Codecs.ManualEncoding.SuitableForResponse(EventStore.Transport.Http.MediaType)
  id: SuitableForResponse(EventStore.Transport.Http.MediaType)
  parent: EventStore.Transport.Http.Codecs.ManualEncoding
  langs:
  - csharp
  - vb
  name: SuitableForResponse(MediaType)
  nameWithType: ManualEncoding.SuitableForResponse(MediaType)
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.SuitableForResponse(EventStore.Transport.Http.MediaType)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SuitableForResponse
    path: ../EventStore/src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
    startLine: 25
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Codecs
  syntax:
    content: public bool SuitableForResponse(MediaType component)
    parameters:
    - id: component
      type: EventStore.Transport.Http.MediaType
    return:
      type: System.Boolean
    content.vb: Public Function SuitableForResponse(component As MediaType) As Boolean
  overload: EventStore.Transport.Http.Codecs.ManualEncoding.SuitableForResponse*
  implements:
  - EventStore.Transport.Http.ICodec.SuitableForResponse(EventStore.Transport.Http.MediaType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.From``1(System.String)
  commentId: M:EventStore.Transport.Http.Codecs.ManualEncoding.From``1(System.String)
  id: From``1(System.String)
  parent: EventStore.Transport.Http.Codecs.ManualEncoding
  langs:
  - csharp
  - vb
  name: From<T>(String)
  nameWithType: ManualEncoding.From<T>(String)
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.From<T>(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: From
    path: ../EventStore/src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
    startLine: 29
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Codecs
  syntax:
    content: public T From<T>(string text)
    parameters:
    - id: text
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function From(Of T)(text As String) As T
  overload: EventStore.Transport.Http.Codecs.ManualEncoding.From*
  implements:
  - EventStore.Transport.Http.ICodec.From``1(System.String)
  nameWithType.vb: ManualEncoding.From(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.Codecs.ManualEncoding.From(Of T)(System.String)
  name.vb: From(Of T)(String)
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.To``1(``0)
  commentId: M:EventStore.Transport.Http.Codecs.ManualEncoding.To``1(``0)
  id: To``1(``0)
  parent: EventStore.Transport.Http.Codecs.ManualEncoding
  langs:
  - csharp
  - vb
  name: To<T>(T)
  nameWithType: ManualEncoding.To<T>(T)
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.To<T>(T)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: To
    path: ../EventStore/src/EventStore.Transport.Http/Codecs/ManualEncoding.cs
    startLine: 33
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Codecs
  syntax:
    content: public string To<T>(T value)
    parameters:
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.String
    content.vb: Public Function To(Of T)(value As T) As String
  overload: EventStore.Transport.Http.Codecs.ManualEncoding.To*
  implements:
  - EventStore.Transport.Http.ICodec.To``1({T})
  nameWithType.vb: ManualEncoding.To(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.Codecs.ManualEncoding.To(Of T)(T)
  name.vb: To(Of T)(T)
references:
- uid: EventStore.Transport.Http.Codecs
  commentId: N:EventStore.Transport.Http.Codecs
  name: EventStore.Transport.Http.Codecs
  nameWithType: EventStore.Transport.Http.Codecs
  fullName: EventStore.Transport.Http.Codecs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Transport.Http.ICodec
  commentId: T:EventStore.Transport.Http.ICodec
  parent: EventStore.Transport.Http
  name: ICodec
  nameWithType: ICodec
  fullName: EventStore.Transport.Http.ICodec
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ManualEncoding>()
  nameWithType: ProtobufExtensions.Serialize<ManualEncoding>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Codecs.ManualEncoding>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ManualEncoding)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Codecs.ManualEncoding)()
  name.vb: Serialize(Of ManualEncoding)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ManualEncoding>
    nameWithType: ProtobufExtensions.Serialize<ManualEncoding>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Codecs.ManualEncoding>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ManualEncoding)
    nameWithType: ProtobufExtensions.Serialize(Of ManualEncoding)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Codecs.ManualEncoding)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ManualEncoding>()
  nameWithType: ProtobufExtensions.SerializeToArray<ManualEncoding>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Codecs.ManualEncoding>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ManualEncoding)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Codecs.ManualEncoding)()
  name.vb: SerializeToArray(Of ManualEncoding)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ManualEncoding>
    nameWithType: ProtobufExtensions.SerializeToArray<ManualEncoding>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Codecs.ManualEncoding>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ManualEncoding)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ManualEncoding)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Codecs.ManualEncoding)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Transport.Http
  commentId: N:EventStore.Transport.Http
  name: EventStore.Transport.Http
  nameWithType: EventStore.Transport.Http
  fullName: EventStore.Transport.Http
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.ContentType*
  commentId: Overload:EventStore.Transport.Http.Codecs.ManualEncoding.ContentType
  name: ContentType
  nameWithType: ManualEncoding.ContentType
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.ContentType
- uid: EventStore.Transport.Http.ICodec.ContentType
  commentId: P:EventStore.Transport.Http.ICodec.ContentType
  parent: EventStore.Transport.Http.ICodec
  name: ContentType
  nameWithType: ICodec.ContentType
  fullName: EventStore.Transport.Http.ICodec.ContentType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.Encoding*
  commentId: Overload:EventStore.Transport.Http.Codecs.ManualEncoding.Encoding
  name: Encoding
  nameWithType: ManualEncoding.Encoding
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.Encoding
- uid: EventStore.Transport.Http.ICodec.Encoding
  commentId: P:EventStore.Transport.Http.ICodec.Encoding
  parent: EventStore.Transport.Http.ICodec
  name: Encoding
  nameWithType: ICodec.Encoding
  fullName: EventStore.Transport.Http.ICodec.Encoding
- uid: Encoding
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: Encoding
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.HasEventIds*
  commentId: Overload:EventStore.Transport.Http.Codecs.ManualEncoding.HasEventIds
  name: HasEventIds
  nameWithType: ManualEncoding.HasEventIds
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.HasEventIds
- uid: EventStore.Transport.Http.ICodec.HasEventIds
  commentId: P:EventStore.Transport.Http.ICodec.HasEventIds
  parent: EventStore.Transport.Http.ICodec
  name: HasEventIds
  nameWithType: ICodec.HasEventIds
  fullName: EventStore.Transport.Http.ICodec.HasEventIds
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.HasEventTypes*
  commentId: Overload:EventStore.Transport.Http.Codecs.ManualEncoding.HasEventTypes
  name: HasEventTypes
  nameWithType: ManualEncoding.HasEventTypes
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.HasEventTypes
- uid: EventStore.Transport.Http.ICodec.HasEventTypes
  commentId: P:EventStore.Transport.Http.ICodec.HasEventTypes
  parent: EventStore.Transport.Http.ICodec
  name: HasEventTypes
  nameWithType: ICodec.HasEventTypes
  fullName: EventStore.Transport.Http.ICodec.HasEventTypes
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.CanParse*
  commentId: Overload:EventStore.Transport.Http.Codecs.ManualEncoding.CanParse
  name: CanParse
  nameWithType: ManualEncoding.CanParse
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.CanParse
- uid: EventStore.Transport.Http.ICodec.CanParse(EventStore.Transport.Http.MediaType)
  commentId: M:EventStore.Transport.Http.ICodec.CanParse(EventStore.Transport.Http.MediaType)
  parent: EventStore.Transport.Http.ICodec
  name: CanParse(MediaType)
  nameWithType: ICodec.CanParse(MediaType)
  fullName: EventStore.Transport.Http.ICodec.CanParse(EventStore.Transport.Http.MediaType)
  spec.csharp:
  - uid: EventStore.Transport.Http.ICodec.CanParse(EventStore.Transport.Http.MediaType)
    name: CanParse
    nameWithType: ICodec.CanParse
    fullName: EventStore.Transport.Http.ICodec.CanParse
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.MediaType
    name: MediaType
    nameWithType: MediaType
    fullName: EventStore.Transport.Http.MediaType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.ICodec.CanParse(EventStore.Transport.Http.MediaType)
    name: CanParse
    nameWithType: ICodec.CanParse
    fullName: EventStore.Transport.Http.ICodec.CanParse
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.MediaType
    name: MediaType
    nameWithType: MediaType
    fullName: EventStore.Transport.Http.MediaType
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.MediaType
  commentId: T:EventStore.Transport.Http.MediaType
  parent: EventStore.Transport.Http
  name: MediaType
  nameWithType: MediaType
  fullName: EventStore.Transport.Http.MediaType
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.SuitableForResponse*
  commentId: Overload:EventStore.Transport.Http.Codecs.ManualEncoding.SuitableForResponse
  name: SuitableForResponse
  nameWithType: ManualEncoding.SuitableForResponse
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.SuitableForResponse
- uid: EventStore.Transport.Http.ICodec.SuitableForResponse(EventStore.Transport.Http.MediaType)
  commentId: M:EventStore.Transport.Http.ICodec.SuitableForResponse(EventStore.Transport.Http.MediaType)
  parent: EventStore.Transport.Http.ICodec
  name: SuitableForResponse(MediaType)
  nameWithType: ICodec.SuitableForResponse(MediaType)
  fullName: EventStore.Transport.Http.ICodec.SuitableForResponse(EventStore.Transport.Http.MediaType)
  spec.csharp:
  - uid: EventStore.Transport.Http.ICodec.SuitableForResponse(EventStore.Transport.Http.MediaType)
    name: SuitableForResponse
    nameWithType: ICodec.SuitableForResponse
    fullName: EventStore.Transport.Http.ICodec.SuitableForResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.MediaType
    name: MediaType
    nameWithType: MediaType
    fullName: EventStore.Transport.Http.MediaType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.ICodec.SuitableForResponse(EventStore.Transport.Http.MediaType)
    name: SuitableForResponse
    nameWithType: ICodec.SuitableForResponse
    fullName: EventStore.Transport.Http.ICodec.SuitableForResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.MediaType
    name: MediaType
    nameWithType: MediaType
    fullName: EventStore.Transport.Http.MediaType
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.From*
  commentId: Overload:EventStore.Transport.Http.Codecs.ManualEncoding.From
  name: From
  nameWithType: ManualEncoding.From
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.From
- uid: EventStore.Transport.Http.ICodec.From``1(System.String)
  commentId: M:EventStore.Transport.Http.ICodec.From``1(System.String)
  parent: EventStore.Transport.Http.ICodec
  isExternal: true
  name: From<T>(String)
  nameWithType: ICodec.From<T>(String)
  fullName: EventStore.Transport.Http.ICodec.From<T>(System.String)
  nameWithType.vb: ICodec.From(Of T)(String)
  fullName.vb: EventStore.Transport.Http.ICodec.From(Of T)(System.String)
  name.vb: From(Of T)(String)
  spec.csharp:
  - uid: EventStore.Transport.Http.ICodec.From``1(System.String)
    name: From<T>
    nameWithType: ICodec.From<T>
    fullName: EventStore.Transport.Http.ICodec.From<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.ICodec.From``1(System.String)
    name: From(Of T)
    nameWithType: ICodec.From(Of T)
    fullName: EventStore.Transport.Http.ICodec.From(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: EventStore.Transport.Http.Codecs.ManualEncoding.To*
  commentId: Overload:EventStore.Transport.Http.Codecs.ManualEncoding.To
  name: To
  nameWithType: ManualEncoding.To
  fullName: EventStore.Transport.Http.Codecs.ManualEncoding.To
- uid: EventStore.Transport.Http.ICodec.To``1({T})
  commentId: M:EventStore.Transport.Http.ICodec.To``1(``0)
  parent: EventStore.Transport.Http.ICodec
  definition: EventStore.Transport.Http.ICodec.To``1(``0)
  name: To<T>(T)
  nameWithType: ICodec.To<T>(T)
  fullName: EventStore.Transport.Http.ICodec.To<T>(T)
  nameWithType.vb: ICodec.To(Of T)(T)
  fullName.vb: EventStore.Transport.Http.ICodec.To(Of T)(T)
  name.vb: To(Of T)(T)
  spec.csharp:
  - uid: EventStore.Transport.Http.ICodec.To``1(``0)
    name: To<T>
    nameWithType: ICodec.To<T>
    fullName: EventStore.Transport.Http.ICodec.To<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.ICodec.To``1(``0)
    name: To(Of T)
    nameWithType: ICodec.To(Of T)
    fullName: EventStore.Transport.Http.ICodec.To(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.ICodec.To``1(``0)
  commentId: M:EventStore.Transport.Http.ICodec.To``1(``0)
  name: To<T>(T)
  nameWithType: ICodec.To<T>(T)
  fullName: EventStore.Transport.Http.ICodec.To<T>(T)
  nameWithType.vb: ICodec.To(Of T)(T)
  fullName.vb: EventStore.Transport.Http.ICodec.To(Of T)(T)
  name.vb: To(Of T)(T)
  spec.csharp:
  - uid: EventStore.Transport.Http.ICodec.To``1(``0)
    name: To<T>
    nameWithType: ICodec.To<T>
    fullName: EventStore.Transport.Http.ICodec.To<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.ICodec.To``1(``0)
    name: To(Of T)
    nameWithType: ICodec.To(Of T)
    fullName: EventStore.Transport.Http.ICodec.To(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

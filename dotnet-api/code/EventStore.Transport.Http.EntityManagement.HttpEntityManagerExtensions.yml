### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  id: HttpEntityManagerExtensions
  parent: EventStore.Transport.Http.EntityManagement
  children:
  - EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Action{System.Exception},System.Action)
  - EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},System.Action{System.Exception})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Action{System.Exception})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,System.Action{System.Exception},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Action{System.Exception})
  langs:
  - csharp
  - vb
  name: HttpEntityManagerExtensions
  nameWithType: HttpEntityManagerExtensions
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  type: Class
  source:
    id: HttpEntityManagerExtensions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 5
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static class HttpEntityManagerExtensions
    content.vb: Public Module HttpEntityManagerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,System.Action{System.Exception},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,System.Action{System.Exception},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,System.Action{System.Exception},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  isExtensionMethod: true
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  langs:
  - csharp
  - vb
  name: ReplyStatus(HttpEntityManager, Int32, String, Action<Exception>, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: HttpEntityManagerExtensions.ReplyStatus(HttpEntityManager, Int32, String, Action<Exception>, IEnumerable<KeyValuePair<String, String>>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Int32, System.String, System.Action<System.Exception>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  type: Method
  source:
    id: ReplyStatus
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 6
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static void ReplyStatus(this HttpEntityManager self, int code, string description, Action<Exception> onError, IEnumerable<KeyValuePair<string, string>> headers = null)
    parameters:
    - id: self
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: code
      type: System.Int32
    - id: description
      type: System.String
    - id: onError
      type: System.Action{System.Exception}
    - id: headers
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ReplyStatus(self As HttpEntityManager, code As Integer, description As String, onError As Action(Of Exception), headers As IEnumerable(Of KeyValuePair(Of String, String)) = Nothing)
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus*
  nameWithType.vb: HttpEntityManagerExtensions.ReplyStatus(HttpEntityManager, Int32, String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of String, String)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Int32, System.String, System.Action(Of System.Exception), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  name.vb: ReplyStatus(HttpEntityManager, Int32, String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of String, String)))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Action{System.Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Action{System.Exception})
  id: ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Action{System.Exception})
  isExtensionMethod: true
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  langs:
  - csharp
  - vb
  name: ReplyContent(HttpEntityManager, Byte[], Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReplyContent(HttpEntityManager, Byte[], Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Byte[], System.Int32, System.String, System.String, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Action<System.Exception>)
  type: Method
  source:
    id: ReplyContent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 11
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static void ReplyContent(this HttpEntityManager self, byte[] response, int code, string description, string type, IEnumerable<KeyValuePair<string, string>> headers, Action<Exception> onError)
    parameters:
    - id: self
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: response
      type: System.Byte[]
    - id: code
      type: System.Int32
    - id: description
      type: System.String
    - id: type
      type: System.String
    - id: headers
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    - id: onError
      type: System.Action{System.Exception}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ReplyContent(self As HttpEntityManager, response As Byte(), code As Integer, description As String, type As String, headers As IEnumerable(Of KeyValuePair(Of String, String)), onError As Action(Of Exception))
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent*
  nameWithType.vb: HttpEntityManagerExtensions.ReplyContent(HttpEntityManager, Byte(), Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Byte(), System.Int32, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Action(Of System.Exception))
  name.vb: ReplyContent(HttpEntityManager, Byte(), Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Action{System.Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Action{System.Exception})
  id: ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Action{System.Exception})
  isExtensionMethod: true
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  langs:
  - csharp
  - vb
  name: ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, System.Int32, System.String, System.String, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Action<System.Exception>)
  type: Method
  source:
    id: ReplyTextContent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 21
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static void ReplyTextContent(this HttpEntityManager self, string response, int code, string description, string type, IEnumerable<KeyValuePair<string, string>> headers, Action<Exception> onError)
    parameters:
    - id: self
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: response
      type: System.String
    - id: code
      type: System.Int32
    - id: description
      type: System.String
    - id: type
      type: System.String
    - id: headers
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    - id: onError
      type: System.Action{System.Exception}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ReplyTextContent(self As HttpEntityManager, response As String, code As Integer, description As String, type As String, headers As IEnumerable(Of KeyValuePair(Of String, String)), onError As Action(Of Exception))
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent*
  nameWithType.vb: HttpEntityManagerExtensions.ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, System.Int32, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Action(Of System.Exception))
  name.vb: ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Action{System.Exception},System.Action)
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Action{System.Exception},System.Action)
  id: ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Action{System.Exception},System.Action)
  isExtensionMethod: true
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  langs:
  - csharp
  - vb
  name: ContinueReplyTextContent(HttpEntityManager, String, Action<Exception>, Action)
  nameWithType: HttpEntityManagerExtensions.ContinueReplyTextContent(HttpEntityManager, String, Action<Exception>, Action)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, System.Action<System.Exception>, System.Action)
  type: Method
  source:
    id: ContinueReplyTextContent
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 33
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static void ContinueReplyTextContent(this HttpEntityManager self, string response, Action<Exception> onError, Action completed)
    parameters:
    - id: self
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: response
      type: System.String
    - id: onError
      type: System.Action{System.Exception}
    - id: completed
      type: System.Action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ContinueReplyTextContent(self As HttpEntityManager, response As String, onError As Action(Of Exception), completed As Action)
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent*
  nameWithType.vb: HttpEntityManagerExtensions.ContinueReplyTextContent(HttpEntityManager, String, Action(Of Exception), Action)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, System.Action(Of System.Exception), System.Action)
  name.vb: ContinueReplyTextContent(HttpEntityManager, String, Action(Of Exception), Action)
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},System.Action{System.Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},System.Action{System.Exception})
  id: ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},System.Action{System.Exception})
  isExtensionMethod: true
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  langs:
  - csharp
  - vb
  name: ReadTextRequestAsync(HttpEntityManager, Action<HttpEntityManager, String>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReadTextRequestAsync(HttpEntityManager, Action<HttpEntityManager, String>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String>, System.Action<System.Exception>)
  type: Method
  source:
    id: ReadTextRequestAsync
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 40
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static void ReadTextRequestAsync(this HttpEntityManager self, Action<HttpEntityManager, string> onSuccess, Action<Exception> onError)
    parameters:
    - id: self
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: onSuccess
      type: System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String}
    - id: onError
      type: System.Action{System.Exception}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ReadTextRequestAsync(self As HttpEntityManager, onSuccess As Action(Of HttpEntityManager, String), onError As Action(Of Exception))
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync*
  nameWithType.vb: HttpEntityManagerExtensions.ReadTextRequestAsync(HttpEntityManager, Action(Of HttpEntityManager, String), Action(Of Exception))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String), System.Action(Of System.Exception))
  name.vb: ReadTextRequestAsync(HttpEntityManager, Action(Of HttpEntityManager, String), Action(Of Exception))
references:
- uid: EventStore.Transport.Http.EntityManagement
  commentId: N:EventStore.Transport.Http.EntityManagement
  name: EventStore.Transport.Http.EntityManagement
  nameWithType: EventStore.Transport.Http.EntityManagement
  fullName: EventStore.Transport.Http.EntityManagement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus
  name: ReplyStatus
  nameWithType: HttpEntityManagerExtensions.ReplyStatus
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManager
  parent: EventStore.Transport.Http.EntityManagement
  name: HttpEntityManager
  nameWithType: HttpEntityManager
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{System.Exception}
  commentId: T:System.Action{System.Exception}
  parent: System
  definition: System.Action`1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: System.Action<System.Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: System.Action(Of System.Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent
  name: ReplyContent
  nameWithType: HttpEntityManagerExtensions.ReplyContent
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent
  name: ReplyTextContent
  nameWithType: HttpEntityManagerExtensions.ReplyTextContent
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent
  name: ContinueReplyTextContent
  nameWithType: HttpEntityManagerExtensions.ContinueReplyTextContent
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync
  name: ReadTextRequestAsync
  nameWithType: HttpEntityManagerExtensions.ReadTextRequestAsync
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync
- uid: System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String}
  commentId: T:System.Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String}
  parent: System
  definition: System.Action`2
  name: Action<HttpEntityManager, String>
  nameWithType: Action<HttpEntityManager, String>
  fullName: System.Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String>
  nameWithType.vb: Action(Of HttpEntityManager, String)
  fullName.vb: System.Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String)
  name.vb: Action(Of HttpEntityManager, String)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )

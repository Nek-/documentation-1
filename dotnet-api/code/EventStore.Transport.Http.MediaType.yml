### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.MediaType
  commentId: T:EventStore.Transport.Http.MediaType
  id: MediaType
  parent: EventStore.Transport.Http
  children:
  - EventStore.Transport.Http.MediaType.#ctor(System.String,System.String,System.String,System.Single)
  - EventStore.Transport.Http.MediaType.#ctor(System.String,System.String,System.String,System.Single,System.Boolean,Encoding)
  - EventStore.Transport.Http.MediaType.Encoding
  - EventStore.Transport.Http.MediaType.EncodingSpecified
  - EventStore.Transport.Http.MediaType.Matches(System.String,Encoding)
  - EventStore.Transport.Http.MediaType.Parse(System.String)
  - EventStore.Transport.Http.MediaType.Priority
  - EventStore.Transport.Http.MediaType.Range
  - EventStore.Transport.Http.MediaType.Subtype
  - EventStore.Transport.Http.MediaType.TryParse(System.String)
  - EventStore.Transport.Http.MediaType.TryParse(System.String,EventStore.Transport.Http.MediaType@)
  - EventStore.Transport.Http.MediaType.Type
  langs:
  - csharp
  - vb
  name: MediaType
  nameWithType: MediaType
  fullName: EventStore.Transport.Http.MediaType
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MediaType
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 6
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: 'public class MediaType : object'
    content.vb: >-
      Public Class MediaType
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.MediaType.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.MediaType.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Transport.Http.MediaType.Range
  commentId: F:EventStore.Transport.Http.MediaType.Range
  id: Range
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: Range
  nameWithType: MediaType.Range
  fullName: EventStore.Transport.Http.MediaType.Range
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Range
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 7
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public readonly string Range
    return:
      type: System.String
    content.vb: Public ReadOnly Range As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.MediaType.Type
  commentId: F:EventStore.Transport.Http.MediaType.Type
  id: Type
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MediaType.Type
  fullName: EventStore.Transport.Http.MediaType.Type
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Type
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 8
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public readonly string Type
    return:
      type: System.String
    content.vb: Public ReadOnly Type As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.MediaType.Subtype
  commentId: F:EventStore.Transport.Http.MediaType.Subtype
  id: Subtype
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: Subtype
  nameWithType: MediaType.Subtype
  fullName: EventStore.Transport.Http.MediaType.Subtype
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Subtype
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 9
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public readonly string Subtype
    return:
      type: System.String
    content.vb: Public ReadOnly Subtype As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.MediaType.Priority
  commentId: F:EventStore.Transport.Http.MediaType.Priority
  id: Priority
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: MediaType.Priority
  fullName: EventStore.Transport.Http.MediaType.Priority
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Priority
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 10
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public readonly float Priority
    return:
      type: System.Single
    content.vb: Public ReadOnly Priority As Single
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.MediaType.EncodingSpecified
  commentId: F:EventStore.Transport.Http.MediaType.EncodingSpecified
  id: EncodingSpecified
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: EncodingSpecified
  nameWithType: MediaType.EncodingSpecified
  fullName: EventStore.Transport.Http.MediaType.EncodingSpecified
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EncodingSpecified
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 11
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public readonly bool EncodingSpecified
    return:
      type: System.Boolean
    content.vb: Public ReadOnly EncodingSpecified As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.MediaType.Encoding
  commentId: F:EventStore.Transport.Http.MediaType.Encoding
  id: Encoding
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: MediaType.Encoding
  fullName: EventStore.Transport.Http.MediaType.Encoding
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Encoding
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 12
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public readonly Encoding Encoding
    return:
      type: Encoding
    content.vb: Public ReadOnly Encoding As Encoding
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.MediaType.#ctor(System.String,System.String,System.String,System.Single,System.Boolean,Encoding)
  commentId: M:EventStore.Transport.Http.MediaType.#ctor(System.String,System.String,System.String,System.Single,System.Boolean,Encoding)
  id: '#ctor(System.String,System.String,System.String,System.Single,System.Boolean,Encoding)'
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: MediaType(String, String, String, Single, Boolean, Encoding)
  nameWithType: MediaType.MediaType(String, String, String, Single, Boolean, Encoding)
  fullName: EventStore.Transport.Http.MediaType.MediaType(System.String, System.String, System.String, System.Single, System.Boolean, Encoding)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 14
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public MediaType(string range, string type, string subtype, float priority, bool encodingSpecified, Encoding encoding)
    parameters:
    - id: range
      type: System.String
    - id: type
      type: System.String
    - id: subtype
      type: System.String
    - id: priority
      type: System.Single
    - id: encodingSpecified
      type: System.Boolean
    - id: encoding
      type: Encoding
    content.vb: Public Sub New(range As String, type As String, subtype As String, priority As Single, encodingSpecified As Boolean, encoding As Encoding)
  overload: EventStore.Transport.Http.MediaType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.MediaType.#ctor(System.String,System.String,System.String,System.Single)
  commentId: M:EventStore.Transport.Http.MediaType.#ctor(System.String,System.String,System.String,System.Single)
  id: '#ctor(System.String,System.String,System.String,System.Single)'
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: MediaType(String, String, String, Single)
  nameWithType: MediaType.MediaType(String, String, String, Single)
  fullName: EventStore.Transport.Http.MediaType.MediaType(System.String, System.String, System.String, System.Single)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 24
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public MediaType(string range, string type, string subtype, float priority)
    parameters:
    - id: range
      type: System.String
    - id: type
      type: System.String
    - id: subtype
      type: System.String
    - id: priority
      type: System.Single
    content.vb: Public Sub New(range As String, type As String, subtype As String, priority As Single)
  overload: EventStore.Transport.Http.MediaType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.MediaType.Matches(System.String,Encoding)
  commentId: M:EventStore.Transport.Http.MediaType.Matches(System.String,Encoding)
  id: Matches(System.String,Encoding)
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: Matches(String, Encoding)
  nameWithType: MediaType.Matches(String, Encoding)
  fullName: EventStore.Transport.Http.MediaType.Matches(System.String, Encoding)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Matches
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 28
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public bool Matches(string mediaRange, Encoding encoding)
    parameters:
    - id: mediaRange
      type: System.String
    - id: encoding
      type: Encoding
    return:
      type: System.Boolean
    content.vb: Public Function Matches(mediaRange As String, encoding As Encoding) As Boolean
  overload: EventStore.Transport.Http.MediaType.Matches*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.MediaType.TryParse(System.String,EventStore.Transport.Http.MediaType@)
  commentId: M:EventStore.Transport.Http.MediaType.TryParse(System.String,EventStore.Transport.Http.MediaType@)
  id: TryParse(System.String,EventStore.Transport.Http.MediaType@)
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: TryParse(String, out MediaType)
  nameWithType: MediaType.TryParse(String, out MediaType)
  fullName: EventStore.Transport.Http.MediaType.TryParse(System.String, out EventStore.Transport.Http.MediaType)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TryParse
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 35
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public static bool TryParse(string componentText, out MediaType result)
    parameters:
    - id: componentText
      type: System.String
    - id: result
      type: EventStore.Transport.Http.MediaType
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParse(componentText As String, ByRef result As MediaType) As Boolean
  overload: EventStore.Transport.Http.MediaType.TryParse*
  nameWithType.vb: MediaType.TryParse(String, ByRef MediaType)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.MediaType.TryParse(System.String, ByRef EventStore.Transport.Http.MediaType)
  name.vb: TryParse(String, ByRef MediaType)
- uid: EventStore.Transport.Http.MediaType.TryParse(System.String)
  commentId: M:EventStore.Transport.Http.MediaType.TryParse(System.String)
  id: TryParse(System.String)
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: TryParse(String)
  nameWithType: MediaType.TryParse(String)
  fullName: EventStore.Transport.Http.MediaType.TryParse(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TryParse
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 39
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public static MediaType TryParse(string componentText)
    parameters:
    - id: componentText
      type: System.String
    return:
      type: EventStore.Transport.Http.MediaType
    content.vb: Public Shared Function TryParse(componentText As String) As MediaType
  overload: EventStore.Transport.Http.MediaType.TryParse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Transport.Http.MediaType.Parse(System.String)
  commentId: M:EventStore.Transport.Http.MediaType.Parse(System.String)
  id: Parse(System.String)
  parent: EventStore.Transport.Http.MediaType
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: MediaType.Parse(String)
  fullName: EventStore.Transport.Http.MediaType.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/MediaType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Parse
    path: ../EventStore/src/EventStore.Transport.Http/MediaType.cs
    startLine: 44
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public static MediaType Parse(string componentText)
    parameters:
    - id: componentText
      type: System.String
    return:
      type: EventStore.Transport.Http.MediaType
    content.vb: Public Shared Function Parse(componentText As String) As MediaType
  overload: EventStore.Transport.Http.MediaType.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Transport.Http
  commentId: N:EventStore.Transport.Http
  name: EventStore.Transport.Http
  nameWithType: EventStore.Transport.Http
  fullName: EventStore.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.MediaType.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MediaType>()
  nameWithType: ProtobufExtensions.Serialize<MediaType>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.MediaType>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MediaType)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.MediaType)()
  name.vb: Serialize(Of MediaType)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MediaType>
    nameWithType: ProtobufExtensions.Serialize<MediaType>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.MediaType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MediaType)
    nameWithType: ProtobufExtensions.Serialize(Of MediaType)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.MediaType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.MediaType.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MediaType>()
  nameWithType: ProtobufExtensions.SerializeToArray<MediaType>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.MediaType>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MediaType)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.MediaType)()
  name.vb: SerializeToArray(Of MediaType)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MediaType>
    nameWithType: ProtobufExtensions.SerializeToArray<MediaType>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.MediaType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MediaType)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MediaType)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.MediaType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Encoding
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: Encoding
- uid: EventStore.Transport.Http.MediaType.#ctor*
  commentId: Overload:EventStore.Transport.Http.MediaType.#ctor
  name: MediaType
  nameWithType: MediaType.MediaType
  fullName: EventStore.Transport.Http.MediaType.MediaType
- uid: EventStore.Transport.Http.MediaType.Matches*
  commentId: Overload:EventStore.Transport.Http.MediaType.Matches
  name: Matches
  nameWithType: MediaType.Matches
  fullName: EventStore.Transport.Http.MediaType.Matches
- uid: EventStore.Transport.Http.MediaType.TryParse*
  commentId: Overload:EventStore.Transport.Http.MediaType.TryParse
  name: TryParse
  nameWithType: MediaType.TryParse
  fullName: EventStore.Transport.Http.MediaType.TryParse
- uid: EventStore.Transport.Http.MediaType
  commentId: T:EventStore.Transport.Http.MediaType
  parent: EventStore.Transport.Http
  name: MediaType
  nameWithType: MediaType
  fullName: EventStore.Transport.Http.MediaType
- uid: EventStore.Transport.Http.MediaType.Parse*
  commentId: Overload:EventStore.Transport.Http.MediaType.Parse
  name: Parse
  nameWithType: MediaType.Parse
  fullName: EventStore.Transport.Http.MediaType.Parse

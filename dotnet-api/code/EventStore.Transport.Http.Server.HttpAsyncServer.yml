### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.Server.HttpAsyncServer
  commentId: T:EventStore.Transport.Http.Server.HttpAsyncServer
  id: HttpAsyncServer
  parent: EventStore.Transport.Http.Server
  children:
  - EventStore.Transport.Http.Server.HttpAsyncServer.#ctor(System.String[])
  - EventStore.Transport.Http.Server.HttpAsyncServer._listenPrefixes
  - EventStore.Transport.Http.Server.HttpAsyncServer.IsListening
  - EventStore.Transport.Http.Server.HttpAsyncServer.RequestReceived
  - EventStore.Transport.Http.Server.HttpAsyncServer.Shutdown
  - EventStore.Transport.Http.Server.HttpAsyncServer.TryStart
  langs:
  - csharp
  - vb
  name: HttpAsyncServer
  nameWithType: HttpAsyncServer
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: HttpAsyncServer
    path: ../EventStore/src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
    startLine: 8
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Server
  syntax:
    content: 'public sealed class HttpAsyncServer : object'
    content.vb: >-
      Public NotInheritable Class HttpAsyncServer
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.Server.HttpAsyncServer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.Server.HttpAsyncServer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.RequestReceived
  commentId: E:EventStore.Transport.Http.Server.HttpAsyncServer.RequestReceived
  id: RequestReceived
  parent: EventStore.Transport.Http.Server.HttpAsyncServer
  langs:
  - csharp
  - vb
  name: RequestReceived
  nameWithType: HttpAsyncServer.RequestReceived
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer.RequestReceived
  type: Event
  source:
    remote:
      path: src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: RequestReceived
    path: ../EventStore/src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
    startLine: 11
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Server
  syntax:
    content: public event Action<HttpAsyncServer, HttpListenerContext> RequestReceived
    return:
      type: Action{EventStore.Transport.Http.Server.HttpAsyncServer,HttpListenerContext}
    content.vb: Public Event RequestReceived As Action(Of HttpAsyncServer, HttpListenerContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.IsListening
  commentId: P:EventStore.Transport.Http.Server.HttpAsyncServer.IsListening
  id: IsListening
  parent: EventStore.Transport.Http.Server.HttpAsyncServer
  langs:
  - csharp
  - vb
  name: IsListening
  nameWithType: HttpAsyncServer.IsListening
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer.IsListening
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IsListening
    path: ../EventStore/src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
    startLine: 13
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Server
  syntax:
    content: public bool IsListening { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsListening As Boolean
  overload: EventStore.Transport.Http.Server.HttpAsyncServer.IsListening*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.Server.HttpAsyncServer._listenPrefixes
  commentId: F:EventStore.Transport.Http.Server.HttpAsyncServer._listenPrefixes
  id: _listenPrefixes
  parent: EventStore.Transport.Http.Server.HttpAsyncServer
  langs:
  - csharp
  - vb
  name: _listenPrefixes
  nameWithType: HttpAsyncServer._listenPrefixes
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer._listenPrefixes
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: _listenPrefixes
    path: ../EventStore/src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
    startLine: 17
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Server
  syntax:
    content: public readonly string[] _listenPrefixes
    return:
      type: System.String[]
    content.vb: Public ReadOnly _listenPrefixes As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.#ctor(System.String[])
  commentId: M:EventStore.Transport.Http.Server.HttpAsyncServer.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: EventStore.Transport.Http.Server.HttpAsyncServer
  langs:
  - csharp
  - vb
  name: HttpAsyncServer(String[])
  nameWithType: HttpAsyncServer.HttpAsyncServer(String[])
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer.HttpAsyncServer(System.String[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
    startLine: 22
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Server
  syntax:
    content: public HttpAsyncServer(string[] prefixes)
    parameters:
    - id: prefixes
      type: System.String[]
    content.vb: Public Sub New(prefixes As String())
  overload: EventStore.Transport.Http.Server.HttpAsyncServer.#ctor*
  nameWithType.vb: HttpAsyncServer.HttpAsyncServer(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.Server.HttpAsyncServer.HttpAsyncServer(System.String())
  name.vb: HttpAsyncServer(String())
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.TryStart
  commentId: M:EventStore.Transport.Http.Server.HttpAsyncServer.TryStart
  id: TryStart
  parent: EventStore.Transport.Http.Server.HttpAsyncServer
  langs:
  - csharp
  - vb
  name: TryStart()
  nameWithType: HttpAsyncServer.TryStart()
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer.TryStart()
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TryStart
    path: ../EventStore/src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
    startLine: 40
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Server
  syntax:
    content: public bool TryStart()
    return:
      type: System.Boolean
    content.vb: Public Function TryStart As Boolean
  overload: EventStore.Transport.Http.Server.HttpAsyncServer.TryStart*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.Shutdown
  commentId: M:EventStore.Transport.Http.Server.HttpAsyncServer.Shutdown
  id: Shutdown
  parent: EventStore.Transport.Http.Server.HttpAsyncServer
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: HttpAsyncServer.Shutdown()
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer.Shutdown()
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Shutdown
    path: ../EventStore/src/EventStore.Transport.Http/Server/HttpAsyncServer.cs
    startLine: 91
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Server
  syntax:
    content: public void Shutdown()
    content.vb: Public Sub Shutdown
  overload: EventStore.Transport.Http.Server.HttpAsyncServer.Shutdown*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Transport.Http.Server
  commentId: N:EventStore.Transport.Http.Server
  name: EventStore.Transport.Http.Server
  nameWithType: EventStore.Transport.Http.Server
  fullName: EventStore.Transport.Http.Server
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HttpAsyncServer>()
  nameWithType: ProtobufExtensions.Serialize<HttpAsyncServer>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Server.HttpAsyncServer>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HttpAsyncServer)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Server.HttpAsyncServer)()
  name.vb: Serialize(Of HttpAsyncServer)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HttpAsyncServer>
    nameWithType: ProtobufExtensions.Serialize<HttpAsyncServer>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Server.HttpAsyncServer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HttpAsyncServer)
    nameWithType: ProtobufExtensions.Serialize(Of HttpAsyncServer)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Server.HttpAsyncServer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HttpAsyncServer>()
  nameWithType: ProtobufExtensions.SerializeToArray<HttpAsyncServer>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Server.HttpAsyncServer>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HttpAsyncServer)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Server.HttpAsyncServer)()
  name.vb: SerializeToArray(Of HttpAsyncServer)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HttpAsyncServer>
    nameWithType: ProtobufExtensions.SerializeToArray<HttpAsyncServer>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Server.HttpAsyncServer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HttpAsyncServer)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HttpAsyncServer)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Server.HttpAsyncServer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: Action{EventStore.Transport.Http.Server.HttpAsyncServer,HttpListenerContext}
  commentId: '!:Action{EventStore.Transport.Http.Server.HttpAsyncServer,HttpListenerContext}'
  definition: Action`2
  name: Action<HttpAsyncServer, HttpListenerContext>
  nameWithType: Action<HttpAsyncServer, HttpListenerContext>
  fullName: Action<EventStore.Transport.Http.Server.HttpAsyncServer, HttpListenerContext>
  nameWithType.vb: Action(Of HttpAsyncServer, HttpListenerContext)
  fullName.vb: Action(Of EventStore.Transport.Http.Server.HttpAsyncServer, HttpListenerContext)
  name.vb: Action(Of HttpAsyncServer, HttpListenerContext)
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.Server.HttpAsyncServer
    name: HttpAsyncServer
    nameWithType: HttpAsyncServer
    fullName: EventStore.Transport.Http.Server.HttpAsyncServer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HttpListenerContext
    name: HttpListenerContext
    nameWithType: HttpListenerContext
    fullName: HttpListenerContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.Server.HttpAsyncServer
    name: HttpAsyncServer
    nameWithType: HttpAsyncServer
    fullName: EventStore.Transport.Http.Server.HttpAsyncServer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HttpListenerContext
    name: HttpListenerContext
    nameWithType: HttpListenerContext
    fullName: HttpListenerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.IsListening*
  commentId: Overload:EventStore.Transport.Http.Server.HttpAsyncServer.IsListening
  name: IsListening
  nameWithType: HttpAsyncServer.IsListening
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer.IsListening
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.#ctor*
  commentId: Overload:EventStore.Transport.Http.Server.HttpAsyncServer.#ctor
  name: HttpAsyncServer
  nameWithType: HttpAsyncServer.HttpAsyncServer
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer.HttpAsyncServer
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.TryStart*
  commentId: Overload:EventStore.Transport.Http.Server.HttpAsyncServer.TryStart
  name: TryStart
  nameWithType: HttpAsyncServer.TryStart
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer.TryStart
- uid: EventStore.Transport.Http.Server.HttpAsyncServer.Shutdown*
  commentId: Overload:EventStore.Transport.Http.Server.HttpAsyncServer.Shutdown
  name: Shutdown
  nameWithType: HttpAsyncServer.Shutdown
  fullName: EventStore.Transport.Http.Server.HttpAsyncServer.Shutdown

### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  commentId: T:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  id: LengthPrefixMessageFramer
  parent: EventStore.Transport.Tcp.Framing
  children:
  - EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.#ctor(System.Int32)
  - EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.FrameData(ArraySegment{System.Byte})
  - EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.HeaderLength
  - EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.RegisterMessageArrivedCallback(Action{ArraySegment{System.Byte}})
  - EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.Reset
  - EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData(ArraySegment{System.Byte})
  - EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData(IEnumerable{ArraySegment{System.Byte}})
  langs:
  - csharp
  - vb
  name: LengthPrefixMessageFramer
  nameWithType: LengthPrefixMessageFramer
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LengthPrefixMessageFramer
    path: ../EventStore/src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
    startLine: 11
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp.Framing
  summary: "\nUses length-prefixed framing to encode outgoing messages and decode\nincoming messages, using internal state and raising a callback once \nfull message arrives.\n"
  example: []
  syntax:
    content: 'public class LengthPrefixMessageFramer : object, IMessageFramer'
    content.vb: >-
      Public Class LengthPrefixMessageFramer
          Inherits Object
          Implements IMessageFramer
  inheritance:
  - System.Object
  implements:
  - EventStore.Transport.Tcp.Framing.IMessageFramer
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.HeaderLength
  commentId: F:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.HeaderLength
  id: HeaderLength
  parent: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  langs:
  - csharp
  - vb
  name: HeaderLength
  nameWithType: LengthPrefixMessageFramer.HeaderLength
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.HeaderLength
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: HeaderLength
    path: ../EventStore/src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
    startLine: 14
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp.Framing
  syntax:
    content: public const int HeaderLength = null
    return:
      type: System.Int32
    content.vb: Public Const HeaderLength As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.#ctor(System.Int32)
  commentId: M:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  langs:
  - csharp
  - vb
  name: LengthPrefixMessageFramer(Int32)
  nameWithType: LengthPrefixMessageFramer.LengthPrefixMessageFramer(Int32)
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.LengthPrefixMessageFramer(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
    startLine: 27
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp.Framing
  summary: "\nInitializes a new instance of the <xref href=\"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public LengthPrefixMessageFramer(int maxPackageSize = null)
    parameters:
    - id: maxPackageSize
      type: System.Int32
    content.vb: Public Sub New(maxPackageSize As Integer = Nothing)
  overload: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.Reset
  commentId: M:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.Reset
  id: Reset
  parent: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: LengthPrefixMessageFramer.Reset()
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.Reset()
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Reset
    path: ../EventStore/src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
    startLine: 32
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp.Framing
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData(IEnumerable{ArraySegment{System.Byte}})
  commentId: M:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData(IEnumerable{ArraySegment{System.Byte}})
  id: UnFrameData(IEnumerable{ArraySegment{System.Byte}})
  parent: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  langs:
  - csharp
  - vb
  name: UnFrameData(IEnumerable<ArraySegment<Byte>>)
  nameWithType: LengthPrefixMessageFramer.UnFrameData(IEnumerable<ArraySegment<Byte>>)
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData(IEnumerable<ArraySegment<System.Byte>>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: UnFrameData
    path: ../EventStore/src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
    startLine: 39
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp.Framing
  syntax:
    content: public void UnFrameData(IEnumerable<ArraySegment<byte>> data)
    parameters:
    - id: data
      type: IEnumerable{ArraySegment{System.Byte}}
    content.vb: Public Sub UnFrameData(data As IEnumerable(Of ArraySegment(Of Byte)))
  overload: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData*
  implements:
  - EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(IEnumerable{ArraySegment{System.Byte}})
  nameWithType.vb: LengthPrefixMessageFramer.UnFrameData(IEnumerable(Of ArraySegment(Of Byte)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData(IEnumerable(Of ArraySegment(Of System.Byte)))
  name.vb: UnFrameData(IEnumerable(Of ArraySegment(Of Byte)))
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData(ArraySegment{System.Byte})
  commentId: M:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData(ArraySegment{System.Byte})
  id: UnFrameData(ArraySegment{System.Byte})
  parent: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  langs:
  - csharp
  - vb
  name: UnFrameData(ArraySegment<Byte>)
  nameWithType: LengthPrefixMessageFramer.UnFrameData(ArraySegment<Byte>)
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData(ArraySegment<System.Byte>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: UnFrameData
    path: ../EventStore/src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
    startLine: 48
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp.Framing
  syntax:
    content: public void UnFrameData(ArraySegment<byte> data)
    parameters:
    - id: data
      type: ArraySegment{System.Byte}
    content.vb: Public Sub UnFrameData(data As ArraySegment(Of Byte))
  overload: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData*
  implements:
  - EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(ArraySegment{System.Byte})
  nameWithType.vb: LengthPrefixMessageFramer.UnFrameData(ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData(ArraySegment(Of System.Byte))
  name.vb: UnFrameData(ArraySegment(Of Byte))
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.FrameData(ArraySegment{System.Byte})
  commentId: M:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.FrameData(ArraySegment{System.Byte})
  id: FrameData(ArraySegment{System.Byte})
  parent: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  langs:
  - csharp
  - vb
  name: FrameData(ArraySegment<Byte>)
  nameWithType: LengthPrefixMessageFramer.FrameData(ArraySegment<Byte>)
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.FrameData(ArraySegment<System.Byte>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: FrameData
    path: ../EventStore/src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
    startLine: 92
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp.Framing
  syntax:
    content: public IEnumerable<ArraySegment<byte>> FrameData(ArraySegment<byte> data)
    parameters:
    - id: data
      type: ArraySegment{System.Byte}
    return:
      type: IEnumerable{ArraySegment{System.Byte}}
    content.vb: Public Function FrameData(data As ArraySegment(Of Byte)) As IEnumerable(Of ArraySegment(Of Byte))
  overload: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.FrameData*
  implements:
  - EventStore.Transport.Tcp.Framing.IMessageFramer.FrameData(ArraySegment{System.Byte})
  nameWithType.vb: LengthPrefixMessageFramer.FrameData(ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.FrameData(ArraySegment(Of System.Byte))
  name.vb: FrameData(ArraySegment(Of Byte))
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.RegisterMessageArrivedCallback(Action{ArraySegment{System.Byte}})
  commentId: M:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.RegisterMessageArrivedCallback(Action{ArraySegment{System.Byte}})
  id: RegisterMessageArrivedCallback(Action{ArraySegment{System.Byte}})
  parent: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  langs:
  - csharp
  - vb
  name: RegisterMessageArrivedCallback(Action<ArraySegment<Byte>>)
  nameWithType: LengthPrefixMessageFramer.RegisterMessageArrivedCallback(Action<ArraySegment<Byte>>)
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.RegisterMessageArrivedCallback(Action<ArraySegment<System.Byte>>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: RegisterMessageArrivedCallback
    path: ../EventStore/src/EventStore.Transport.Tcp/Framing/LengthPrefixMessageFramer.cs
    startLine: 100
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp.Framing
  syntax:
    content: public void RegisterMessageArrivedCallback(Action<ArraySegment<byte>> handler)
    parameters:
    - id: handler
      type: Action{ArraySegment{System.Byte}}
    content.vb: Public Sub RegisterMessageArrivedCallback(handler As Action(Of ArraySegment(Of Byte)))
  overload: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.RegisterMessageArrivedCallback*
  implements:
  - EventStore.Transport.Tcp.Framing.IMessageFramer.RegisterMessageArrivedCallback(Action{ArraySegment{System.Byte}})
  nameWithType.vb: LengthPrefixMessageFramer.RegisterMessageArrivedCallback(Action(Of ArraySegment(Of Byte)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.RegisterMessageArrivedCallback(Action(Of ArraySegment(Of System.Byte)))
  name.vb: RegisterMessageArrivedCallback(Action(Of ArraySegment(Of Byte)))
references:
- uid: EventStore.Transport.Tcp.Framing
  commentId: N:EventStore.Transport.Tcp.Framing
  name: EventStore.Transport.Tcp.Framing
  nameWithType: EventStore.Transport.Tcp.Framing
  fullName: EventStore.Transport.Tcp.Framing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Transport.Tcp.Framing.IMessageFramer
  commentId: T:EventStore.Transport.Tcp.Framing.IMessageFramer
  parent: EventStore.Transport.Tcp.Framing
  name: IMessageFramer
  nameWithType: IMessageFramer
  fullName: EventStore.Transport.Tcp.Framing.IMessageFramer
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<LengthPrefixMessageFramer>()
  nameWithType: ProtobufExtensions.Serialize<LengthPrefixMessageFramer>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of LengthPrefixMessageFramer)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer)()
  name.vb: Serialize(Of LengthPrefixMessageFramer)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<LengthPrefixMessageFramer>
    nameWithType: ProtobufExtensions.Serialize<LengthPrefixMessageFramer>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of LengthPrefixMessageFramer)
    nameWithType: ProtobufExtensions.Serialize(Of LengthPrefixMessageFramer)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<LengthPrefixMessageFramer>()
  nameWithType: ProtobufExtensions.SerializeToArray<LengthPrefixMessageFramer>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of LengthPrefixMessageFramer)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer)()
  name.vb: SerializeToArray(Of LengthPrefixMessageFramer)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<LengthPrefixMessageFramer>
    nameWithType: ProtobufExtensions.SerializeToArray<LengthPrefixMessageFramer>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of LengthPrefixMessageFramer)
    nameWithType: ProtobufExtensions.SerializeToArray(Of LengthPrefixMessageFramer)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  commentId: T:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
  name: LengthPrefixMessageFramer
  nameWithType: LengthPrefixMessageFramer
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.#ctor*
  commentId: Overload:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.#ctor
  name: LengthPrefixMessageFramer
  nameWithType: LengthPrefixMessageFramer.LengthPrefixMessageFramer
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.LengthPrefixMessageFramer
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.Reset*
  commentId: Overload:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.Reset
  name: Reset
  nameWithType: LengthPrefixMessageFramer.Reset
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.Reset
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData*
  commentId: Overload:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData
  name: UnFrameData
  nameWithType: LengthPrefixMessageFramer.UnFrameData
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.UnFrameData
- uid: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(IEnumerable{ArraySegment{System.Byte}})
  commentId: M:EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(IEnumerable{ArraySegment{System.Byte}})
  parent: EventStore.Transport.Tcp.Framing.IMessageFramer
  isExternal: true
  name: UnFrameData(IEnumerable<ArraySegment<Byte>>)
  nameWithType: IMessageFramer.UnFrameData(IEnumerable<ArraySegment<Byte>>)
  fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(IEnumerable<ArraySegment<System.Byte>>)
  nameWithType.vb: IMessageFramer.UnFrameData(IEnumerable(Of ArraySegment(Of Byte)))
  fullName.vb: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(IEnumerable(Of ArraySegment(Of System.Byte)))
  name.vb: UnFrameData(IEnumerable(Of ArraySegment(Of Byte)))
  spec.csharp:
  - uid: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(IEnumerable{ArraySegment{System.Byte}})
    name: UnFrameData
    nameWithType: IMessageFramer.UnFrameData
    fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(IEnumerable{ArraySegment{System.Byte}})
    name: UnFrameData
    nameWithType: IMessageFramer.UnFrameData
    fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{ArraySegment{System.Byte}}
  commentId: '!:IEnumerable{ArraySegment{System.Byte}}'
  definition: IEnumerable`1
  name: IEnumerable<ArraySegment<Byte>>
  nameWithType: IEnumerable<ArraySegment<Byte>>
  fullName: IEnumerable<ArraySegment<System.Byte>>
  nameWithType.vb: IEnumerable(Of ArraySegment(Of Byte))
  fullName.vb: IEnumerable(Of ArraySegment(Of System.Byte))
  name.vb: IEnumerable(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(ArraySegment{System.Byte})
  commentId: M:EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(ArraySegment{System.Byte})
  parent: EventStore.Transport.Tcp.Framing.IMessageFramer
  isExternal: true
  name: UnFrameData(ArraySegment<Byte>)
  nameWithType: IMessageFramer.UnFrameData(ArraySegment<Byte>)
  fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(ArraySegment<System.Byte>)
  nameWithType.vb: IMessageFramer.UnFrameData(ArraySegment(Of Byte))
  fullName.vb: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(ArraySegment(Of System.Byte))
  name.vb: UnFrameData(ArraySegment(Of Byte))
  spec.csharp:
  - uid: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(ArraySegment{System.Byte})
    name: UnFrameData
    nameWithType: IMessageFramer.UnFrameData
    fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData
  - name: (
    nameWithType: (
    fullName: (
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData(ArraySegment{System.Byte})
    name: UnFrameData
    nameWithType: IMessageFramer.UnFrameData
    fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.UnFrameData
  - name: (
    nameWithType: (
    fullName: (
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ArraySegment{System.Byte}
  commentId: '!:ArraySegment{System.Byte}'
  definition: ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ArraySegment`1
  isExternal: true
  name: ArraySegment<>
  nameWithType: ArraySegment<>
  fullName: ArraySegment<>
  nameWithType.vb: ArraySegment(Of )
  fullName.vb: ArraySegment(Of )
  name.vb: ArraySegment(Of )
  spec.csharp:
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.FrameData*
  commentId: Overload:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.FrameData
  name: FrameData
  nameWithType: LengthPrefixMessageFramer.FrameData
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.FrameData
- uid: EventStore.Transport.Tcp.Framing.IMessageFramer.FrameData(ArraySegment{System.Byte})
  commentId: M:EventStore.Transport.Tcp.Framing.IMessageFramer.FrameData(ArraySegment{System.Byte})
  parent: EventStore.Transport.Tcp.Framing.IMessageFramer
  isExternal: true
  name: FrameData(ArraySegment<Byte>)
  nameWithType: IMessageFramer.FrameData(ArraySegment<Byte>)
  fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.FrameData(ArraySegment<System.Byte>)
  nameWithType.vb: IMessageFramer.FrameData(ArraySegment(Of Byte))
  fullName.vb: EventStore.Transport.Tcp.Framing.IMessageFramer.FrameData(ArraySegment(Of System.Byte))
  name.vb: FrameData(ArraySegment(Of Byte))
  spec.csharp:
  - uid: EventStore.Transport.Tcp.Framing.IMessageFramer.FrameData(ArraySegment{System.Byte})
    name: FrameData
    nameWithType: IMessageFramer.FrameData
    fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.FrameData
  - name: (
    nameWithType: (
    fullName: (
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Tcp.Framing.IMessageFramer.FrameData(ArraySegment{System.Byte})
    name: FrameData
    nameWithType: IMessageFramer.FrameData
    fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.FrameData
  - name: (
    nameWithType: (
    fullName: (
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.RegisterMessageArrivedCallback*
  commentId: Overload:EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.RegisterMessageArrivedCallback
  name: RegisterMessageArrivedCallback
  nameWithType: LengthPrefixMessageFramer.RegisterMessageArrivedCallback
  fullName: EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.RegisterMessageArrivedCallback
- uid: EventStore.Transport.Tcp.Framing.IMessageFramer.RegisterMessageArrivedCallback(Action{ArraySegment{System.Byte}})
  commentId: M:EventStore.Transport.Tcp.Framing.IMessageFramer.RegisterMessageArrivedCallback(Action{ArraySegment{System.Byte}})
  parent: EventStore.Transport.Tcp.Framing.IMessageFramer
  isExternal: true
  name: RegisterMessageArrivedCallback(Action<ArraySegment<Byte>>)
  nameWithType: IMessageFramer.RegisterMessageArrivedCallback(Action<ArraySegment<Byte>>)
  fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.RegisterMessageArrivedCallback(Action<ArraySegment<System.Byte>>)
  nameWithType.vb: IMessageFramer.RegisterMessageArrivedCallback(Action(Of ArraySegment(Of Byte)))
  fullName.vb: EventStore.Transport.Tcp.Framing.IMessageFramer.RegisterMessageArrivedCallback(Action(Of ArraySegment(Of System.Byte)))
  name.vb: RegisterMessageArrivedCallback(Action(Of ArraySegment(Of Byte)))
  spec.csharp:
  - uid: EventStore.Transport.Tcp.Framing.IMessageFramer.RegisterMessageArrivedCallback(Action{ArraySegment{System.Byte}})
    name: RegisterMessageArrivedCallback
    nameWithType: IMessageFramer.RegisterMessageArrivedCallback
    fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.RegisterMessageArrivedCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Tcp.Framing.IMessageFramer.RegisterMessageArrivedCallback(Action{ArraySegment{System.Byte}})
    name: RegisterMessageArrivedCallback
    nameWithType: IMessageFramer.RegisterMessageArrivedCallback
    fullName: EventStore.Transport.Tcp.Framing.IMessageFramer.RegisterMessageArrivedCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{ArraySegment{System.Byte}}
  commentId: '!:Action{ArraySegment{System.Byte}}'
  definition: Action`1
  name: Action<ArraySegment<Byte>>
  nameWithType: Action<ArraySegment<Byte>>
  fullName: Action<ArraySegment<System.Byte>>
  nameWithType.vb: Action(Of ArraySegment(Of Byte))
  fullName.vb: Action(Of ArraySegment(Of System.Byte))
  name.vb: Action(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

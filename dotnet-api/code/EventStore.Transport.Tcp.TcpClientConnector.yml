### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Tcp.TcpClientConnector
  commentId: T:EventStore.Transport.Tcp.TcpClientConnector
  id: TcpClientConnector
  parent: EventStore.Transport.Tcp
  children:
  - EventStore.Transport.Tcp.TcpClientConnector.#ctor
  - EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.String,System.Boolean,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)
  - EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)
  langs:
  - csharp
  - vb
  name: TcpClientConnector
  nameWithType: TcpClientConnector
  fullName: EventStore.Transport.Tcp.TcpClientConnector
  type: Class
  source:
    id: TcpClientConnector
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/TcpClientConnector.cs
    startLine: 9
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp
  syntax:
    content: public class TcpClientConnector
    content.vb: Public Class TcpClientConnector
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Tcp.TcpClientConnector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Tcp.TcpClientConnector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Transport.Tcp.TcpClientConnector.#ctor
  commentId: M:EventStore.Transport.Tcp.TcpClientConnector.#ctor
  id: '#ctor'
  parent: EventStore.Transport.Tcp.TcpClientConnector
  langs:
  - csharp
  - vb
  name: TcpClientConnector()
  nameWithType: TcpClientConnector.TcpClientConnector()
  fullName: EventStore.Transport.Tcp.TcpClientConnector.TcpClientConnector()
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/TcpClientConnector.cs
    startLine: 18
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp
  syntax:
    content: public TcpClientConnector()
    content.vb: Public Sub New
  overload: EventStore.Transport.Tcp.TcpClientConnector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)
  commentId: M:EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)
  id: ConnectTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)
  parent: EventStore.Transport.Tcp.TcpClientConnector
  langs:
  - csharp
  - vb
  name: ConnectTo(Guid, IPEndPoint, TimeSpan, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean)
  nameWithType: TcpClientConnector.ConnectTo(Guid, IPEndPoint, TimeSpan, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean)
  fullName: EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.Action<EventStore.Transport.Tcp.ITcpConnection>, System.Action<EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError>, System.Boolean)
  type: Method
  source:
    id: ConnectTo
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/TcpClientConnector.cs
    startLine: 33
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp
  syntax:
    content: public ITcpConnection ConnectTo(Guid connectionId, IPEndPoint remoteEndPoint, TimeSpan connectionTimeout, Action<ITcpConnection> onConnectionEstablished = null, Action<ITcpConnection, SocketError> onConnectionFailed = null, bool verbose = true)
    parameters:
    - id: connectionId
      type: System.Guid
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
    - id: connectionTimeout
      type: System.TimeSpan
    - id: onConnectionEstablished
      type: System.Action{EventStore.Transport.Tcp.ITcpConnection}
    - id: onConnectionFailed
      type: System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError}
    - id: verbose
      type: System.Boolean
    return:
      type: EventStore.Transport.Tcp.ITcpConnection
    content.vb: Public Function ConnectTo(connectionId As Guid, remoteEndPoint As IPEndPoint, connectionTimeout As TimeSpan, onConnectionEstablished As Action(Of ITcpConnection) = Nothing, onConnectionFailed As Action(Of ITcpConnection, SocketError) = Nothing, verbose As Boolean = True) As ITcpConnection
  overload: EventStore.Transport.Tcp.TcpClientConnector.ConnectTo*
  nameWithType.vb: TcpClientConnector.ConnectTo(Guid, IPEndPoint, TimeSpan, Action(Of ITcpConnection), Action(Of ITcpConnection, SocketError), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.Action(Of EventStore.Transport.Tcp.ITcpConnection), System.Action(Of EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError), System.Boolean)
  name.vb: ConnectTo(Guid, IPEndPoint, TimeSpan, Action(Of ITcpConnection), Action(Of ITcpConnection, SocketError), Boolean)
- uid: EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.String,System.Boolean,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)
  commentId: M:EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.String,System.Boolean,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)
  id: ConnectSslTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.String,System.Boolean,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)
  parent: EventStore.Transport.Tcp.TcpClientConnector
  langs:
  - csharp
  - vb
  name: ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean)
  nameWithType: TcpClientConnector.ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean)
  fullName: EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.String, System.Boolean, System.Action<EventStore.Transport.Tcp.ITcpConnection>, System.Action<EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError>, System.Boolean)
  type: Method
  source:
    id: ConnectSslTo
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/TcpClientConnector.cs
    startLine: 44
  assemblies:
  - EventStore.Transport.Tcp
  namespace: EventStore.Transport.Tcp
  syntax:
    content: public ITcpConnection ConnectSslTo(Guid connectionId, IPEndPoint remoteEndPoint, TimeSpan connectionTimeout, string targetHost, bool validateServer, Action<ITcpConnection> onConnectionEstablished = null, Action<ITcpConnection, SocketError> onConnectionFailed = null, bool verbose = true)
    parameters:
    - id: connectionId
      type: System.Guid
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
    - id: connectionTimeout
      type: System.TimeSpan
    - id: targetHost
      type: System.String
    - id: validateServer
      type: System.Boolean
    - id: onConnectionEstablished
      type: System.Action{EventStore.Transport.Tcp.ITcpConnection}
    - id: onConnectionFailed
      type: System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError}
    - id: verbose
      type: System.Boolean
    return:
      type: EventStore.Transport.Tcp.ITcpConnection
    content.vb: Public Function ConnectSslTo(connectionId As Guid, remoteEndPoint As IPEndPoint, connectionTimeout As TimeSpan, targetHost As String, validateServer As Boolean, onConnectionEstablished As Action(Of ITcpConnection) = Nothing, onConnectionFailed As Action(Of ITcpConnection, SocketError) = Nothing, verbose As Boolean = True) As ITcpConnection
  overload: EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo*
  nameWithType.vb: TcpClientConnector.ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action(Of ITcpConnection), Action(Of ITcpConnection, SocketError), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.String, System.Boolean, System.Action(Of EventStore.Transport.Tcp.ITcpConnection), System.Action(Of EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError), System.Boolean)
  name.vb: ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action(Of ITcpConnection), Action(Of ITcpConnection, SocketError), Boolean)
references:
- uid: EventStore.Transport.Tcp
  commentId: N:EventStore.Transport.Tcp
  name: EventStore.Transport.Tcp
  nameWithType: EventStore.Transport.Tcp
  fullName: EventStore.Transport.Tcp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Tcp.TcpClientConnector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientConnector>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientConnector>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Tcp.TcpClientConnector>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientConnector)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Tcp.TcpClientConnector)()
  name.vb: Serialize(Of TcpClientConnector)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientConnector>
    nameWithType: ProtobufExtensions.Serialize<TcpClientConnector>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Tcp.TcpClientConnector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientConnector)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientConnector)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Tcp.TcpClientConnector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Tcp.TcpClientConnector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientConnector>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientConnector>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Tcp.TcpClientConnector>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientConnector)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Tcp.TcpClientConnector)()
  name.vb: SerializeToArray(Of TcpClientConnector)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientConnector>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientConnector>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Tcp.TcpClientConnector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientConnector)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientConnector)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Tcp.TcpClientConnector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Transport.Tcp.TcpClientConnector.#ctor*
  commentId: Overload:EventStore.Transport.Tcp.TcpClientConnector.#ctor
  name: TcpClientConnector
  nameWithType: TcpClientConnector.TcpClientConnector
  fullName: EventStore.Transport.Tcp.TcpClientConnector.TcpClientConnector
- uid: EventStore.Transport.Tcp.TcpClientConnector.ConnectTo*
  commentId: Overload:EventStore.Transport.Tcp.TcpClientConnector.ConnectTo
  name: ConnectTo
  nameWithType: TcpClientConnector.ConnectTo
  fullName: EventStore.Transport.Tcp.TcpClientConnector.ConnectTo
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Action{EventStore.Transport.Tcp.ITcpConnection}
  commentId: T:System.Action{EventStore.Transport.Tcp.ITcpConnection}
  parent: System
  definition: System.Action`1
  name: Action<ITcpConnection>
  nameWithType: Action<ITcpConnection>
  fullName: System.Action<EventStore.Transport.Tcp.ITcpConnection>
  nameWithType.vb: Action(Of ITcpConnection)
  fullName.vb: System.Action(Of EventStore.Transport.Tcp.ITcpConnection)
  name.vb: Action(Of ITcpConnection)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Tcp.ITcpConnection
    name: ITcpConnection
    nameWithType: ITcpConnection
    fullName: EventStore.Transport.Tcp.ITcpConnection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Tcp.ITcpConnection
    name: ITcpConnection
    nameWithType: ITcpConnection
    fullName: EventStore.Transport.Tcp.ITcpConnection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError}
  commentId: T:System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError}
  parent: System
  definition: System.Action`2
  name: Action<ITcpConnection, SocketError>
  nameWithType: Action<ITcpConnection, SocketError>
  fullName: System.Action<EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError>
  nameWithType.vb: Action(Of ITcpConnection, SocketError)
  fullName.vb: System.Action(Of EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError)
  name.vb: Action(Of ITcpConnection, SocketError)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Tcp.ITcpConnection
    name: ITcpConnection
    nameWithType: ITcpConnection
    fullName: EventStore.Transport.Tcp.ITcpConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Sockets.SocketError
    name: SocketError
    nameWithType: SocketError
    fullName: System.Net.Sockets.SocketError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Tcp.ITcpConnection
    name: ITcpConnection
    nameWithType: ITcpConnection
    fullName: EventStore.Transport.Tcp.ITcpConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Sockets.SocketError
    name: SocketError
    nameWithType: SocketError
    fullName: System.Net.Sockets.SocketError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Transport.Tcp.ITcpConnection
  commentId: T:EventStore.Transport.Tcp.ITcpConnection
  parent: EventStore.Transport.Tcp
  name: ITcpConnection
  nameWithType: ITcpConnection
  fullName: EventStore.Transport.Tcp.ITcpConnection
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo*
  commentId: Overload:EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo
  name: ConnectSslTo
  nameWithType: TcpClientConnector.ConnectSslTo
  fullName: EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
